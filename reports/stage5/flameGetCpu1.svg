<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (643 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.93%)</title><rect x="10.0" y="979.0" width="11.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.16%)</title><rect x="10.0" y="963.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (5 samples, 0.78%)</title><rect x="11.8" y="963.0" width="9.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.8" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.16%)</title><rect x="11.8" y="947.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.8" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.16%)</title><rect x="11.8" y="931.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.8" y="942.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (2 samples, 0.31%)</title><rect x="13.7" y="947.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.7" y="958.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.31%)</title><rect x="17.3" y="947.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (549 samples, 85.38%)</title><rect x="21.0" y="979.0" width="1007.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.0" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (549 samples, 85.38%)</title><rect x="21.0" y="963.0" width="1007.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.0" y="974.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (549 samples, 85.38%)</title><rect x="21.0" y="947.0" width="1007.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.0" y="958.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.78%)</title><rect x="33.9" y="931.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.78%)</title><rect x="33.9" y="915.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.9" y="926.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.47%)</title><rect x="33.9" y="899.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="36.9" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="33.9" y="883.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.9" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.16%)</title><rect x="35.7" y="883.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="38.7" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.16%)</title><rect x="37.5" y="883.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="40.5" y="894.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.16%)</title><rect x="39.4" y="899.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="42.4" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.16%)</title><rect x="41.2" y="899.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="44.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.16%)</title><rect x="43.0" y="931.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.16%)</title><rect x="43.0" y="915.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.16%)</title><rect x="43.0" y="899.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.16%)</title><rect x="44.9" y="931.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.16%)</title><rect x="44.9" y="915.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.16%)</title><rect x="44.9" y="899.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.16%)</title><rect x="44.9" y="883.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.16%)</title><rect x="44.9" y="867.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (55 samples, 8.55%)</title><rect x="46.7" y="931.0" width="100.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.7" y="942.0">java/util/co..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.16%)</title><rect x="65.1" y="915.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.1" y="926.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.16%)</title><rect x="66.9" y="915.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="69.9" y="926.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.16%)</title><rect x="66.9" y="899.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="69.9" y="910.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.16%)</title><rect x="66.9" y="883.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="69.9" y="894.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.16%)</title><rect x="66.9" y="867.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="69.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (43 samples, 6.69%)</title><rect x="68.7" y="915.0" width="78.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.7" y="926.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 4.98%)</title><rect x="68.7" y="899.0" width="58.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.7" y="910.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 4.98%)</title><rect x="68.7" y="883.0" width="58.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.7" y="894.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 4.98%)</title><rect x="68.7" y="867.0" width="58.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.7" y="878.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park (11 samples, 1.71%)</title><rect x="68.7" y="851.0" width="20.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="71.7" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.47%)</title><rect x="70.6" y="835.0" width="5.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="73.6" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.31%)</title><rect x="72.4" y="819.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="75.4" y="830.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.16%)</title><rect x="76.1" y="835.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="79.1" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.16%)</title><rect x="77.9" y="835.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="80.9" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.47%)</title><rect x="79.7" y="835.0" width="5.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="82.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="79.7" y="819.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.47%)</title><rect x="79.7" y="803.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.47%)</title><rect x="79.7" y="787.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="82.7" y="798.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.47%)</title><rect x="79.7" y="771.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.7" y="782.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.31%)</title><rect x="79.7" y="755.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="82.7" y="766.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.16%)</title><rect x="83.4" y="755.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="86.4" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.16%)</title><rect x="85.2" y="835.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="88.2" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.16%)</title><rect x="87.1" y="835.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="90.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 3.27%)</title><rect x="88.9" y="851.0" width="38.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="91.9" y="862.0">[un..</text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.31%)</title><rect x="88.9" y="835.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="91.9" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.16%)</title><rect x="92.6" y="835.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="95.6" y="846.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (18 samples, 2.80%)</title><rect x="94.4" y="835.0" width="33.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="97.4" y="846.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 2.49%)</title><rect x="98.1" y="819.0" width="29.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.1" y="830.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.16%)</title><rect x="98.1" y="803.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 2.33%)</title><rect x="99.9" y="803.0" width="27.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="102.9" y="814.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 2.33%)</title><rect x="99.9" y="787.0" width="27.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.9" y="798.0">_..</text>
</g>
<g>
<title>do_futex (11 samples, 1.71%)</title><rect x="105.4" y="771.0" width="20.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="108.4" y="782.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 1.09%)</title><rect x="112.8" y="755.0" width="12.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.8" y="766.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.16%)</title><rect x="118.3" y="739.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="121.3" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.47%)</title><rect x="120.1" y="739.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="123.1" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.16%)</title><rect x="121.9" y="723.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="124.9" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.16%)</title><rect x="121.9" y="707.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="124.9" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="123.8" y="723.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="126.8" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="123.8" y="707.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.8" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.16%)</title><rect x="123.8" y="691.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="126.8" y="702.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.16%)</title><rect x="125.6" y="771.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="128.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.16%)</title><rect x="127.4" y="899.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.16%)</title><rect x="127.4" y="883.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 1.56%)</title><rect x="129.3" y="899.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 1.56%)</title><rect x="129.3" y="883.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 1.56%)</title><rect x="129.3" y="867.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 1.56%)</title><rect x="129.3" y="851.0" width="18.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 1.56%)</title><rect x="129.3" y="835.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.3" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="129.3" y="819.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="132.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.47%)</title><rect x="131.1" y="819.0" width="5.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="134.1" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.47%)</title><rect x="131.1" y="803.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.1" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.93%)</title><rect x="136.6" y="819.0" width="11.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="139.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.78%)</title><rect x="138.5" y="803.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="141.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.78%)</title><rect x="138.5" y="787.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.78%)</title><rect x="138.5" y="771.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="141.5" y="782.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.78%)</title><rect x="138.5" y="755.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.5" y="766.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.78%)</title><rect x="138.5" y="739.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="141.5" y="750.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.62%)</title><rect x="140.3" y="723.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.3" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.62%)</title><rect x="140.3" y="707.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="143.3" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.62%)</title><rect x="140.3" y="691.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="143.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$80/407135064.run (480 samples, 74.65%)</title><rect x="147.6" y="931.0" width="880.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.6" y="942.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$80/407135064.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1 (479 samples, 74.49%)</title><rect x="149.5" y="915.0" width="879.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.5" y="926.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.16%)</title><rect x="149.5" y="899.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.16%)</title><rect x="149.5" y="883.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get$Lambda (1 samples, 0.16%)</title><rect x="149.5" y="867.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.&lt;init&gt; (1 samples, 0.16%)</title><rect x="149.5" y="851.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (478 samples, 74.34%)</title><rect x="151.3" y="899.0" width="877.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.3" y="910.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (98 samples, 15.24%)</title><rect x="153.1" y="883.0" width="179.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.1" y="894.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.31%)</title><rect x="153.1" y="867.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.31%)</title><rect x="153.1" y="851.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.31%)</title><rect x="153.1" y="835.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.16%)</title><rect x="155.0" y="819.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (95 samples, 14.77%)</title><rect x="156.8" y="867.0" width="174.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.8" y="878.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 14.77%)</title><rect x="156.8" y="851.0" width="174.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.8" y="862.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 14.77%)</title><rect x="156.8" y="835.0" width="174.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.8" y="846.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (95 samples, 14.77%)</title><rect x="156.8" y="819.0" width="174.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="159.8" y="830.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (94 samples, 14.62%)</title><rect x="158.6" y="803.0" width="172.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="161.6" y="814.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.62%)</title><rect x="160.5" y="787.0" width="7.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="163.5" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.31%)</title><rect x="164.2" y="771.0" width="3.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="167.2" y="782.0"></text>
</g>
<g>
<title>__libc_send (89 samples, 13.84%)</title><rect x="167.8" y="787.0" width="163.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="170.8" y="798.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 13.53%)</title><rect x="171.5" y="771.0" width="159.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.5" y="782.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (87 samples, 13.53%)</title><rect x="171.5" y="755.0" width="159.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.5" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.16%)</title><rect x="173.3" y="739.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_sendto (83 samples, 12.91%)</title><rect x="175.2" y="739.0" width="152.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="178.2" y="750.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (82 samples, 12.75%)</title><rect x="175.2" y="723.0" width="150.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="178.2" y="734.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (77 samples, 11.98%)</title><rect x="175.2" y="707.0" width="141.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="178.2" y="718.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (75 samples, 11.66%)</title><rect x="177.0" y="691.0" width="137.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="180.0" y="702.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (75 samples, 11.66%)</title><rect x="177.0" y="675.0" width="137.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.0" y="686.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.16%)</title><rect x="177.0" y="659.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.0" y="670.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.16%)</title><rect x="178.8" y="659.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.8" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (73 samples, 11.35%)</title><rect x="180.7" y="659.0" width="133.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="183.7" y="670.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="182.5" y="643.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.5" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.16%)</title><rect x="184.3" y="643.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.3" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.16%)</title><rect x="184.3" y="627.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="187.3" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.16%)</title><rect x="184.3" y="611.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.3" y="622.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.16%)</title><rect x="186.2" y="643.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.2" y="654.0"></text>
</g>
<g>
<title>tcp_push (68 samples, 10.58%)</title><rect x="188.0" y="643.0" width="124.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="191.0" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (68 samples, 10.58%)</title><rect x="188.0" y="627.0" width="124.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="191.0" y="638.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_write_xmit (67 samples, 10.42%)</title><rect x="189.8" y="611.0" width="123.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="192.8" y="622.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.16%)</title><rect x="189.8" y="595.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.8" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (64 samples, 9.95%)</title><rect x="191.7" y="595.0" width="117.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="194.7" y="606.0">__tcp_transmit..</text>
</g>
<g>
<title>ip_queue_xmit (62 samples, 9.64%)</title><rect x="193.5" y="579.0" width="113.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.5" y="590.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (61 samples, 9.49%)</title><rect x="193.5" y="563.0" width="112.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.5" y="574.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (61 samples, 9.49%)</title><rect x="193.5" y="547.0" width="112.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="196.5" y="558.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (13 samples, 2.02%)</title><rect x="193.5" y="531.0" width="23.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="196.5" y="542.0">_..</text>
</g>
<g>
<title>nf_hook_slow (12 samples, 1.87%)</title><rect x="195.3" y="515.0" width="22.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="198.3" y="526.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.62%)</title><rect x="197.2" y="499.0" width="7.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.2" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.47%)</title><rect x="199.0" y="483.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.0" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 1.09%)</title><rect x="204.5" y="499.0" width="12.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="207.5" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.93%)</title><rect x="204.5" y="483.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.5" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (4 samples, 0.62%)</title><rect x="206.4" y="467.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="209.4" y="478.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.16%)</title><rect x="213.7" y="467.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="216.7" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.16%)</title><rect x="215.5" y="483.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="218.5" y="494.0"></text>
</g>
<g>
<title>ip_output (48 samples, 7.47%)</title><rect x="217.4" y="531.0" width="88.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="220.4" y="542.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (48 samples, 7.47%)</title><rect x="217.4" y="515.0" width="88.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.4" y="526.0">ip_finish_..</text>
</g>
<g>
<title>__ip_finish_output (47 samples, 7.31%)</title><rect x="217.4" y="499.0" width="86.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.4" y="510.0">__ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 7.15%)</title><rect x="219.2" y="483.0" width="84.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.2" y="494.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (42 samples, 6.53%)</title><rect x="224.7" y="467.0" width="77.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="227.7" y="478.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.20 (42 samples, 6.53%)</title><rect x="224.7" y="451.0" width="77.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="227.7" y="462.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (41 samples, 6.38%)</title><rect x="226.5" y="435.0" width="75.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="229.5" y="446.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (41 samples, 6.38%)</title><rect x="226.5" y="419.0" width="75.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="229.5" y="430.0">__softir..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.16%)</title><rect x="228.4" y="403.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="231.4" y="414.0"></text>
</g>
<g>
<title>net_rx_action (39 samples, 6.07%)</title><rect x="230.2" y="403.0" width="71.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="233.2" y="414.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (39 samples, 6.07%)</title><rect x="230.2" y="387.0" width="71.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.2" y="398.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (37 samples, 5.75%)</title><rect x="232.1" y="371.0" width="67.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.1" y="382.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (37 samples, 5.75%)</title><rect x="232.1" y="355.0" width="67.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.1" y="366.0">__netif..</text>
</g>
<g>
<title>ip_rcv (37 samples, 5.75%)</title><rect x="232.1" y="339.0" width="67.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.1" y="350.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (37 samples, 5.75%)</title><rect x="232.1" y="323.0" width="67.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.1" y="334.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (37 samples, 5.75%)</title><rect x="232.1" y="307.0" width="67.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.1" y="318.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 5.60%)</title><rect x="232.1" y="291.0" width="66.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="235.1" y="302.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (36 samples, 5.60%)</title><rect x="232.1" y="275.0" width="66.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.1" y="286.0">ip_prot..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.16%)</title><rect x="232.1" y="259.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="235.1" y="270.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.16%)</title><rect x="233.9" y="259.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (34 samples, 5.29%)</title><rect x="235.7" y="259.0" width="62.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="238.7" y="270.0">tcp_v4..</text>
</g>
<g>
<title>tcp_v4_do_rcv (33 samples, 5.13%)</title><rect x="235.7" y="243.0" width="60.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="238.7" y="254.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (33 samples, 5.13%)</title><rect x="235.7" y="227.0" width="60.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.7" y="238.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.31%)</title><rect x="237.6" y="211.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="240.6" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.31%)</title><rect x="237.6" y="195.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="240.6" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.31%)</title><rect x="237.6" y="179.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.6" y="190.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.31%)</title><rect x="237.6" y="163.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="240.6" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.31%)</title><rect x="237.6" y="147.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="240.6" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.16%)</title><rect x="241.2" y="211.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="244.2" y="222.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 1.40%)</title><rect x="243.1" y="211.0" width="16.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.1" y="222.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.31%)</title><rect x="244.9" y="195.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="247.9" y="206.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.93%)</title><rect x="248.6" y="195.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="251.6" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.62%)</title><rect x="252.2" y="179.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.2" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.16%)</title><rect x="252.2" y="163.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="255.2" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.16%)</title><rect x="252.2" y="147.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.2" y="158.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.47%)</title><rect x="254.1" y="163.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.1" y="174.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.47%)</title><rect x="254.1" y="147.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="257.1" y="158.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.16%)</title><rect x="255.9" y="131.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="258.9" y="142.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.16%)</title><rect x="257.7" y="131.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.7" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.16%)</title><rect x="257.7" y="115.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.7" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.16%)</title><rect x="259.6" y="211.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="262.6" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (17 samples, 2.64%)</title><rect x="261.4" y="211.0" width="31.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.4" y="222.0">tc..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.16%)</title><rect x="261.4" y="195.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.4" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 2.49%)</title><rect x="263.3" y="195.0" width="29.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="266.3" y="206.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 2.49%)</title><rect x="263.3" y="179.0" width="29.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="266.3" y="190.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 2.49%)</title><rect x="263.3" y="163.0" width="29.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="266.3" y="174.0">__..</text>
</g>
<g>
<title>__lock_text_start (16 samples, 2.49%)</title><rect x="263.3" y="147.0" width="29.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.3" y="158.0">__..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.16%)</title><rect x="292.6" y="211.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.6" y="222.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.16%)</title><rect x="292.6" y="195.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="295.6" y="206.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="294.4" y="211.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.16%)</title><rect x="296.3" y="243.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="299.3" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="298.1" y="291.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.1" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="298.1" y="275.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.1" y="286.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="298.1" y="259.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="301.1" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.16%)</title><rect x="300.0" y="371.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="303.0" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.16%)</title><rect x="301.8" y="467.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="304.8" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="301.8" y="451.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.16%)</title><rect x="303.6" y="499.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.6" y="510.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.16%)</title><rect x="305.5" y="563.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="308.5" y="574.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.16%)</title><rect x="307.3" y="579.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="310.3" y="590.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.16%)</title><rect x="307.3" y="563.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="310.3" y="574.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.16%)</title><rect x="309.1" y="595.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="312.1" y="606.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.16%)</title><rect x="311.0" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.0" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.16%)</title><rect x="312.8" y="643.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="315.8" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.16%)</title><rect x="312.8" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="315.8" y="638.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.16%)</title><rect x="314.6" y="691.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.6" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.16%)</title><rect x="314.6" y="675.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="317.6" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.16%)</title><rect x="314.6" y="659.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="317.6" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.16%)</title><rect x="314.6" y="643.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="317.6" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.16%)</title><rect x="314.6" y="627.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.6" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.78%)</title><rect x="316.5" y="707.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.5" y="718.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.62%)</title><rect x="316.5" y="691.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.62%)</title><rect x="316.5" y="675.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="319.5" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.62%)</title><rect x="316.5" y="659.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="319.5" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="323.8" y="691.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.8" y="702.0"></text>
</g>
<g>
<title>fput (1 samples, 0.16%)</title><rect x="325.6" y="723.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="328.6" y="734.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="327.5" y="739.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="330.5" y="750.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="329.3" y="739.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="332.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="331.2" y="867.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get (1 samples, 0.16%)</title><rect x="333.0" y="883.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2 (1 samples, 0.16%)</title><rect x="333.0" y="867.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (1 samples, 0.16%)</title><rect x="333.0" y="851.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (1 samples, 0.16%)</title><rect x="333.0" y="835.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (1 samples, 0.16%)</title><rect x="333.0" y="819.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1 samples, 0.16%)</title><rect x="333.0" y="803.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.16%)</title><rect x="333.0" y="787.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get (1 samples, 0.16%)</title><rect x="333.0" y="771.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get (378 samples, 58.79%)</title><rect x="334.8" y="883.0" width="693.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.8" y="894.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (378 samples, 58.79%)</title><rect x="334.8" y="867.0" width="693.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="337.8" y="878.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas (378 samples, 58.79%)</title><rect x="334.8" y="851.0" width="693.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.8" y="862.0">ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.47%)</title><rect x="334.8" y="835.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.47%)</title><rect x="334.8" y="819.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.31%)</title><rect x="336.7" y="803.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.16%)</title><rect x="338.5" y="787.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.5" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="338.5" y="771.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="341.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (239 samples, 37.17%)</title><rect x="340.3" y="835.0" width="438.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.3" y="846.0">ru/mail/polis/service/stasyanoi/server/CustomServer.getRespo..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.31%)</title><rect x="340.3" y="819.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.31%)</title><rect x="340.3" y="803.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="343.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.31%)</title><rect x="340.3" y="787.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.3" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.31%)</title><rect x="340.3" y="771.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (232 samples, 36.08%)</title><rect x="344.0" y="819.0" width="425.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="347.0" y="830.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.16%)</title><rect x="344.0" y="803.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.16%)</title><rect x="344.0" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.16%)</title><rect x="344.0" y="771.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.0" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (229 samples, 35.61%)</title><rect x="345.8" y="803.0" width="420.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.8" y="814.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (228 samples, 35.46%)</title><rect x="347.7" y="787.0" width="418.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.7" y="798.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.31%)</title><rect x="347.7" y="771.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.7" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (160 samples, 24.88%)</title><rect x="351.3" y="771.0" width="293.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="354.3" y="782.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>__libc_free (1 samples, 0.16%)</title><rect x="351.3" y="755.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="354.3" y="766.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.16%)</title><rect x="353.2" y="755.0" width="1.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="356.2" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (158 samples, 24.57%)</title><rect x="355.0" y="755.0" width="290.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="358.0" y="766.0">rocksdb_get_helper(JNIEnv_*, rocksdb::D..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="355.0" y="739.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="358.0" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.47%)</title><rect x="356.8" y="739.0" width="5.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="359.8" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.31%)</title><rect x="356.8" y="723.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="359.8" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="360.5" y="723.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="363.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (154 samples, 23.95%)</title><rect x="362.3" y="739.0" width="282.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="365.3" y="750.0">rocksdb::DB::Get(rocksdb::ReadOptions ..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (153 samples, 23.79%)</title><rect x="362.3" y="723.0" width="280.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="365.3" y="734.0">rocksdb::DB::Get(rocksdb::ReadOptions ..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (153 samples, 23.79%)</title><rect x="362.3" y="707.0" width="280.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="365.3" y="718.0">rocksdb::DBImpl::Get(rocksdb::ReadOpti..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.16%)</title><rect x="362.3" y="691.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="365.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (149 samples, 23.17%)</title><rect x="364.2" y="691.0" width="273.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="367.2" y="702.0">rocksdb::DBImpl::GetImpl(rocksdb::Rea..</text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.16%)</title><rect x="371.5" y="675.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="374.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.16%)</title><rect x="373.4" y="675.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="376.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.16%)</title><rect x="375.2" y="675.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="378.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.16%)</title><rect x="375.2" y="659.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="378.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.16%)</title><rect x="375.2" y="643.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="378.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (140 samples, 21.77%)</title><rect x="377.0" y="675.0" width="257.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="380.0" y="686.0">rocksdb::MemTable::Get(rocksdb::Lo..</text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (138 samples, 21.46%)</title><rect x="377.0" y="659.0" width="253.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="380.0" y="670.0">/tmp/librocksdbjni2848219993914949..</text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (9 samples, 1.40%)</title><rect x="378.9" y="643.0" width="16.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="381.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 1.24%)</title><rect x="380.7" y="627.0" width="14.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="383.7" y="638.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.62%)</title><rect x="380.7" y="611.0" width="7.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="383.7" y="622.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.62%)</title><rect x="380.7" y="595.0" width="7.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="383.7" y="606.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.62%)</title><rect x="380.7" y="579.0" width="7.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="383.7" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.62%)</title><rect x="380.7" y="563.0" width="7.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="383.7" y="574.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.16%)</title><rect x="382.5" y="547.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="385.5" y="558.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.16%)</title><rect x="384.4" y="547.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="387.4" y="558.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.16%)</title><rect x="386.2" y="547.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="389.2" y="558.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.31%)</title><rect x="388.0" y="611.0" width="3.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="391.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.31%)</title><rect x="388.0" y="595.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="391.0" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.31%)</title><rect x="388.0" y="579.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="391.0" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.31%)</title><rect x="388.0" y="563.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.0" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.16%)</title><rect x="389.9" y="547.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.9" y="558.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.16%)</title><rect x="391.7" y="611.0" width="1.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="394.7" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="391.7" y="595.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.7" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.16%)</title><rect x="391.7" y="579.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="394.7" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.16%)</title><rect x="391.7" y="563.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.7" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.16%)</title><rect x="391.7" y="547.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.7" y="558.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.16%)</title><rect x="391.7" y="531.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.7" y="542.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.16%)</title><rect x="391.7" y="515.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.7" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.16%)</title><rect x="391.7" y="499.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="394.7" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.16%)</title><rect x="391.7" y="483.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.7" y="494.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.16%)</title><rect x="393.5" y="611.0" width="1.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="396.5" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="393.5" y="595.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="396.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (128 samples, 19.91%)</title><rect x="395.4" y="643.0" width="234.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="398.4" y="654.0">rocksdb::InlineSkipList&lt;rocksdb..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.31%)</title><rect x="400.9" y="627.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="403.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (123 samples, 19.13%)</title><rect x="404.6" y="627.0" width="225.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="407.6" y="638.0">rocksdb::MemTable::KeyComparat..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.16%)</title><rect x="404.6" y="611.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="407.6" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.31%)</title><rect x="406.4" y="611.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="409.4" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.47%)</title><rect x="410.1" y="611.0" width="5.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="413.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (114 samples, 17.73%)</title><rect x="415.6" y="611.0" width="209.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="418.6" y="622.0">rocksdb::BaseComparatorJniC..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (25 samples, 3.89%)</title><rect x="424.7" y="595.0" width="45.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="427.7" y="606.0">JNIE..</text>
</g>
<g>
<title>jni_CallIntMethodV (23 samples, 3.58%)</title><rect x="428.4" y="579.0" width="42.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="431.4" y="590.0">jni_..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.16%)</title><rect x="432.1" y="563.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="435.1" y="574.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.16%)</title><rect x="433.9" y="563.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="436.9" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.31%)</title><rect x="435.8" y="563.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="438.8" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.31%)</title><rect x="439.4" y="563.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="442.4" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (15 samples, 2.33%)</title><rect x="443.1" y="563.0" width="27.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="446.1" y="574.0">j..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.16%)</title><rect x="452.3" y="547.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="455.3" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 1.40%)</title><rect x="454.1" y="547.0" width="16.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="457.1" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.31%)</title><rect x="457.8" y="531.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="460.8" y="542.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.62%)</title><rect x="461.4" y="531.0" width="7.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="464.4" y="542.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.16%)</title><rect x="468.8" y="531.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="471.8" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (44 samples, 6.84%)</title><rect x="470.6" y="595.0" width="80.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="473.6" y="606.0">JNIEnv_::..</text>
</g>
<g>
<title>jni_CallVoidMethodV (42 samples, 6.53%)</title><rect x="474.3" y="579.0" width="77.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="477.3" y="590.0">jni_CallV..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="474.3" y="563.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="477.3" y="574.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.31%)</title><rect x="476.1" y="563.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="479.1" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.16%)</title><rect x="479.8" y="563.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="482.8" y="574.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (2 samples, 0.31%)</title><rect x="481.6" y="563.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="484.6" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="485.3" y="563.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="488.3" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="487.1" y="563.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="490.1" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (32 samples, 4.98%)</title><rect x="489.0" y="563.0" width="58.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="492.0" y="574.0">jni_in..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.16%)</title><rect x="503.7" y="547.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="506.7" y="558.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.31%)</title><rect x="505.5" y="547.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="508.5" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (17 samples, 2.64%)</title><rect x="509.2" y="547.0" width="31.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="512.2" y="558.0">Ja..</text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.16%)</title><rect x="514.7" y="531.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="517.7" y="542.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.16%)</title><rect x="516.5" y="531.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="519.5" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.47%)</title><rect x="518.3" y="531.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="521.3" y="542.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (8 samples, 1.24%)</title><rect x="523.8" y="531.0" width="14.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="526.8" y="542.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.31%)</title><rect x="531.2" y="515.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="534.2" y="526.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.31%)</title><rect x="534.9" y="515.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="537.9" y="526.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.16%)</title><rect x="538.5" y="531.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="541.5" y="542.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.16%)</title><rect x="540.4" y="547.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="543.4" y="558.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (3 samples, 0.47%)</title><rect x="542.2" y="547.0" width="5.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="545.2" y="558.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.16%)</title><rect x="547.7" y="563.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="550.7" y="574.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.16%)</title><rect x="549.5" y="563.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="552.5" y="574.0"></text>
</g>
<g>
<title>__lll_lock_wait (10 samples, 1.56%)</title><rect x="551.4" y="595.0" width="18.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="554.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.09%)</title><rect x="556.9" y="579.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="559.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.09%)</title><rect x="556.9" y="563.0" width="12.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="559.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.78%)</title><rect x="556.9" y="547.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="559.9" y="558.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.78%)</title><rect x="556.9" y="531.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="559.9" y="542.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.78%)</title><rect x="556.9" y="515.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="559.9" y="526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.31%)</title><rect x="558.7" y="499.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="561.7" y="510.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.31%)</title><rect x="558.7" y="483.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="561.7" y="494.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="560.5" y="467.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.5" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.16%)</title><rect x="560.5" y="451.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.5" y="462.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.31%)</title><rect x="562.4" y="499.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.4" y="510.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.16%)</title><rect x="564.2" y="483.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="567.2" y="494.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="566.0" y="547.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="569.0" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="566.0" y="531.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="569.0" y="542.0"></text>
</g>
<g>
<title>dput (1 samples, 0.16%)</title><rect x="566.0" y="515.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="569.0" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="567.9" y="547.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.9" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="567.9" y="531.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.9" y="542.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 2.95%)</title><rect x="569.7" y="595.0" width="34.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="572.7" y="606.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 2.95%)</title><rect x="569.7" y="579.0" width="34.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="572.7" y="590.0">en..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 2.95%)</title><rect x="569.7" y="563.0" width="34.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.7" y="574.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 2.95%)</title><rect x="569.7" y="547.0" width="34.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="572.7" y="558.0">__..</text>
</g>
<g>
<title>do_futex (19 samples, 2.95%)</title><rect x="569.7" y="531.0" width="34.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="572.7" y="542.0">do..</text>
</g>
<g>
<title>futex_wake (19 samples, 2.95%)</title><rect x="569.7" y="515.0" width="34.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="572.7" y="526.0">fu..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="571.6" y="499.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.6" y="510.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.47%)</title><rect x="573.4" y="499.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="576.4" y="510.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (2 samples, 0.31%)</title><rect x="575.2" y="483.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.2" y="494.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.16%)</title><rect x="578.9" y="499.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="581.9" y="510.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.16%)</title><rect x="578.9" y="483.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.9" y="494.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 2.02%)</title><rect x="580.7" y="499.0" width="23.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.7" y="510.0">w..</text>
</g>
<g>
<title>try_to_wake_up (13 samples, 2.02%)</title><rect x="580.7" y="483.0" width="23.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.7" y="494.0">t..</text>
</g>
<g>
<title>__lock_text_start (13 samples, 2.02%)</title><rect x="580.7" y="467.0" width="23.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="583.7" y="478.0">_..</text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.16%)</title><rect x="604.6" y="595.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="607.6" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.78%)</title><rect x="606.4" y="595.0" width="9.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="609.4" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.47%)</title><rect x="608.3" y="579.0" width="5.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="611.3" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="613.8" y="579.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="616.8" y="590.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.16%)</title><rect x="615.6" y="595.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="618.6" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.47%)</title><rect x="617.4" y="595.0" width="5.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="620.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.16%)</title><rect x="622.9" y="595.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.9" y="606.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.16%)</title><rect x="622.9" y="579.0" width="1.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="625.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.16%)</title><rect x="624.8" y="611.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="627.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (1 samples, 0.16%)</title><rect x="626.6" y="611.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="629.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.16%)</title><rect x="628.4" y="611.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="631.4" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="630.3" y="659.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="633.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.16%)</title><rect x="632.1" y="659.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="635.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.16%)</title><rect x="634.0" y="675.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="637.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.16%)</title><rect x="635.8" y="675.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="638.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.16%)</title><rect x="637.6" y="691.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="640.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) [clone .plt] (1 samples, 0.16%)</title><rect x="639.5" y="691.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="642.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.16%)</title><rect x="641.3" y="691.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="644.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.16%)</title><rect x="643.1" y="723.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="646.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="645.0" y="771.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="648.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="645.0" y="755.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="648.0" y="766.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.16%)</title><rect x="645.0" y="739.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="648.0" y="750.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.16%)</title><rect x="646.8" y="771.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="649.8" y="782.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.47%)</title><rect x="648.6" y="771.0" width="5.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="651.6" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (4 samples, 0.62%)</title><rect x="654.1" y="771.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.47%)</title><rect x="661.5" y="771.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="664.5" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.16%)</title><rect x="667.0" y="771.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="670.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (52 samples, 8.09%)</title><rect x="668.8" y="771.0" width="95.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.8" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (50 samples, 7.78%)</title><rect x="672.5" y="755.0" width="91.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.5" y="766.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.16%)</title><rect x="676.2" y="739.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.16%)</title><rect x="676.2" y="723.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.2" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (47 samples, 7.31%)</title><rect x="678.0" y="739.0" width="86.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.0" y="750.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (2 samples, 0.31%)</title><rect x="678.0" y="723.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="681.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (45 samples, 7.00%)</title><rect x="681.7" y="723.0" width="82.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.7" y="734.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (43 samples, 6.69%)</title><rect x="685.3" y="707.0" width="78.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.3" y="718.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (40 samples, 6.22%)</title><rect x="689.0" y="691.0" width="73.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="692.0" y="702.0">Java_org..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="689.0" y="675.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="692.0" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="690.8" y="675.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="693.8" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="692.7" y="675.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="695.7" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.62%)</title><rect x="694.5" y="675.0" width="7.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="697.5" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.47%)</title><rect x="694.5" y="659.0" width="5.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="697.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="700.0" y="659.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="703.0" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (23 samples, 3.58%)</title><rect x="701.9" y="675.0" width="42.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="704.9" y="686.0">jni_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.31%)</title><rect x="707.4" y="659.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="710.4" y="670.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.16%)</title><rect x="711.0" y="659.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="714.0" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.31%)</title><rect x="712.9" y="659.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="715.9" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.62%)</title><rect x="716.5" y="659.0" width="7.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="719.5" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 1.71%)</title><rect x="723.9" y="659.0" width="20.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="726.9" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 1.40%)</title><rect x="727.5" y="643.0" width="16.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="730.5" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 1.40%)</title><rect x="727.5" y="627.0" width="16.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="730.5" y="638.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.16%)</title><rect x="729.4" y="611.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.4" y="622.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.16%)</title><rect x="729.4" y="595.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="732.4" y="606.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.16%)</title><rect x="731.2" y="611.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="734.2" y="622.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.16%)</title><rect x="733.0" y="611.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="736.0" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.31%)</title><rect x="734.9" y="611.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.9" y="622.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.16%)</title><rect x="738.6" y="611.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="741.6" y="622.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.31%)</title><rect x="740.4" y="611.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="743.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 1.24%)</title><rect x="744.1" y="675.0" width="14.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="747.1" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="747.7" y="659.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="750.7" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.62%)</title><rect x="749.6" y="659.0" width="7.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="752.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="756.9" y="659.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="759.9" y="670.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.31%)</title><rect x="758.7" y="675.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="761.7" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="762.4" y="691.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="765.4" y="702.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.16%)</title><rect x="764.2" y="771.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (2 samples, 0.31%)</title><rect x="766.1" y="803.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.1" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.31%)</title><rect x="766.1" y="787.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.31%)</title><rect x="766.1" y="771.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="766.1" y="755.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="766.1" y="739.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.1" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.31%)</title><rect x="766.1" y="723.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="769.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.31%)</title><rect x="766.1" y="707.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.31%)</title><rect x="766.1" y="691.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.31%)</title><rect x="766.1" y="675.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithTimestamp (5 samples, 0.78%)</title><rect x="769.8" y="819.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (3 samples, 0.47%)</title><rect x="769.8" y="803.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.47%)</title><rect x="769.8" y="787.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.47%)</title><rect x="769.8" y="771.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.8" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.16%)</title><rect x="769.8" y="755.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.8" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.16%)</title><rect x="771.6" y="755.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="774.6" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="773.4" y="755.0" width="1.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="776.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.&lt;init&gt; (2 samples, 0.31%)</title><rect x="775.3" y="803.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.3" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="775.3" y="787.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="778.3" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="777.1" y="787.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="780.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicateGet (97 samples, 15.09%)</title><rect x="778.9" y="835.0" width="178.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.9" y="846.0">ru/mail/polis/service/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetResponses (1 samples, 0.16%)</title><rect x="778.9" y="819.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetInternal (1 samples, 0.16%)</title><rect x="778.9" y="803.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.9" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (1 samples, 0.16%)</title><rect x="778.9" y="787.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.9" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.16%)</title><rect x="778.9" y="771.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.9" y="782.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.16%)</title><rect x="778.9" y="755.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.9" y="766.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (1 samples, 0.16%)</title><rect x="778.9" y="739.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.9" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$88/637423267.compare (1 samples, 0.16%)</title><rect x="778.9" y="723.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.9" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.16%)</title><rect x="778.9" y="707.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (96 samples, 14.93%)</title><rect x="780.8" y="819.0" width="176.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.8" y="830.0">ru/mail/polis/service/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (95 samples, 14.77%)</title><rect x="782.6" y="803.0" width="174.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="785.6" y="814.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.16%)</title><rect x="788.1" y="787.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.1" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.16%)</title><rect x="788.1" y="771.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.1" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.16%)</title><rect x="788.1" y="755.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.16%)</title><rect x="788.1" y="739.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.1" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.16%)</title><rect x="788.1" y="723.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (91 samples, 14.15%)</title><rect x="789.9" y="787.0" width="167.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.9" y="798.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.31%)</title><rect x="789.9" y="771.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="792.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (2 samples, 0.31%)</title><rect x="789.9" y="755.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1347523408.invoke (2 samples, 0.31%)</title><rect x="789.9" y="739.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.31%)</title><rect x="789.9" y="723.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.16%)</title><rect x="789.9" y="707.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.16%)</title><rect x="789.9" y="691.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.9" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="789.9" y="675.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="792.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.16%)</title><rect x="791.8" y="707.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.16%)</title><rect x="791.8" y="691.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="794.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (88 samples, 13.69%)</title><rect x="793.6" y="771.0" width="161.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.6" y="782.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (88 samples, 13.69%)</title><rect x="793.6" y="755.0" width="161.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.6" y="766.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (88 samples, 13.69%)</title><rect x="793.6" y="739.0" width="161.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.6" y="750.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.31%)</title><rect x="793.6" y="723.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.31%)</title><rect x="793.6" y="707.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.31%)</title><rect x="793.6" y="691.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.16%)</title><rect x="795.4" y="675.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.16%)</title><rect x="795.4" y="659.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.4" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.16%)</title><rect x="795.4" y="643.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (29 samples, 4.51%)</title><rect x="797.3" y="723.0" width="53.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.3" y="734.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="797.3" y="707.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="800.3" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.16%)</title><rect x="797.3" y="691.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="800.3" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="797.3" y="675.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="800.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.16%)</title><rect x="797.3" y="659.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="800.3" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.16%)</title><rect x="797.3" y="643.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="800.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (28 samples, 4.35%)</title><rect x="799.1" y="707.0" width="51.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.1" y="718.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.31%)</title><rect x="800.9" y="691.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="803.9" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.31%)</title><rect x="800.9" y="675.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="803.9" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="802.8" y="659.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.8" y="670.0"></text>
</g>
<g>
<title>__GI___recv (24 samples, 3.73%)</title><rect x="804.6" y="691.0" width="44.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="807.6" y="702.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 3.58%)</title><rect x="806.5" y="675.0" width="42.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="809.5" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (23 samples, 3.58%)</title><rect x="806.5" y="659.0" width="42.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="809.5" y="670.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 3.42%)</title><rect x="806.5" y="643.0" width="40.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="809.5" y="654.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (22 samples, 3.42%)</title><rect x="806.5" y="627.0" width="40.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="809.5" y="638.0">__s..</text>
</g>
<g>
<title>sock_recvmsg (21 samples, 3.27%)</title><rect x="808.3" y="611.0" width="38.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="811.3" y="622.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (21 samples, 3.27%)</title><rect x="808.3" y="595.0" width="38.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.3" y="606.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 3.27%)</title><rect x="808.3" y="579.0" width="38.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.3" y="590.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.16%)</title><rect x="808.3" y="563.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.3" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.16%)</title><rect x="808.3" y="547.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="811.3" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (3 samples, 0.47%)</title><rect x="810.1" y="563.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.1" y="574.0"></text>
</g>
<g>
<title>wait_woken (3 samples, 0.47%)</title><rect x="810.1" y="547.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="813.1" y="558.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.16%)</title><rect x="810.1" y="531.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.1" y="542.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.31%)</title><rect x="812.0" y="531.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="815.0" y="542.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.16%)</title><rect x="812.0" y="515.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="815.0" y="526.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.16%)</title><rect x="812.0" y="499.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="815.0" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="813.8" y="515.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="816.8" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="813.8" y="499.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="816.8" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.31%)</title><rect x="815.6" y="563.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.6" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.31%)</title><rect x="815.6" y="547.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.6" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.31%)</title><rect x="815.6" y="531.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="818.6" y="542.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.16%)</title><rect x="815.6" y="515.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.6" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.16%)</title><rect x="817.5" y="515.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.5" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.16%)</title><rect x="817.5" y="499.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="820.5" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (15 samples, 2.33%)</title><rect x="819.3" y="563.0" width="27.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="822.3" y="574.0">t..</text>
</g>
<g>
<title>tcp_send_ack (14 samples, 2.18%)</title><rect x="821.1" y="547.0" width="25.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.1" y="558.0">t..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.16%)</title><rect x="821.1" y="531.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.1" y="542.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (13 samples, 2.02%)</title><rect x="823.0" y="531.0" width="23.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.0" y="542.0">_..</text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 2.02%)</title><rect x="823.0" y="515.0" width="23.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="826.0" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (11 samples, 1.71%)</title><rect x="826.6" y="499.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="829.6" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (11 samples, 1.71%)</title><rect x="826.6" y="483.0" width="20.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (11 samples, 1.71%)</title><rect x="826.6" y="467.0" width="20.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.6" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.16%)</title><rect x="828.5" y="451.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.5" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="828.5" y="435.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="831.5" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="828.5" y="419.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="831.5" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="828.5" y="403.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="831.5" y="414.0"></text>
</g>
<g>
<title>ip_output (9 samples, 1.40%)</title><rect x="830.3" y="451.0" width="16.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="833.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 1.40%)</title><rect x="830.3" y="435.0" width="16.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="833.3" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (8 samples, 1.24%)</title><rect x="830.3" y="419.0" width="14.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 1.24%)</title><rect x="830.3" y="403.0" width="14.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.3" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.93%)</title><rect x="832.1" y="387.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="835.1" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 0.78%)</title><rect x="834.0" y="371.0" width="9.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="837.0" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.78%)</title><rect x="834.0" y="355.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.0" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.78%)</title><rect x="834.0" y="339.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.0" y="350.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.78%)</title><rect x="834.0" y="323.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="837.0" y="334.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.78%)</title><rect x="834.0" y="307.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="837.0" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.78%)</title><rect x="834.0" y="291.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="837.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.78%)</title><rect x="834.0" y="275.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.78%)</title><rect x="834.0" y="259.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.78%)</title><rect x="834.0" y="243.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="837.0" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.78%)</title><rect x="834.0" y="227.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.78%)</title><rect x="834.0" y="211.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="837.0" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.78%)</title><rect x="834.0" y="195.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="837.0" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.16%)</title><rect x="834.0" y="179.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="837.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.62%)</title><rect x="835.8" y="179.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="838.8" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="835.8" y="163.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.47%)</title><rect x="837.7" y="163.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.47%)</title><rect x="837.7" y="147.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="840.7" y="158.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.47%)</title><rect x="837.7" y="131.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.7" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.16%)</title><rect x="837.7" y="115.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.7" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.31%)</title><rect x="839.5" y="115.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="842.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.16%)</title><rect x="839.5" y="99.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="842.5" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.16%)</title><rect x="839.5" y="83.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="842.5" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.16%)</title><rect x="839.5" y="67.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.5" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.16%)</title><rect x="841.3" y="99.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.3" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.16%)</title><rect x="843.2" y="387.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="846.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="843.2" y="371.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.2" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.16%)</title><rect x="843.2" y="355.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.16%)</title><rect x="843.2" y="339.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.16%)</title><rect x="845.0" y="419.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="848.0" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="846.8" y="643.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="849.8" y="654.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.16%)</title><rect x="846.8" y="627.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="849.8" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.16%)</title><rect x="848.7" y="691.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="851.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.47%)</title><rect x="850.5" y="723.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.16%)</title><rect x="850.5" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="850.5" y="691.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="850.5" y="675.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.16%)</title><rect x="852.3" y="707.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.16%)</title><rect x="852.3" y="691.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.16%)</title><rect x="854.2" y="707.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.16%)</title><rect x="856.0" y="723.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (9 samples, 1.40%)</title><rect x="857.8" y="723.0" width="16.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.8" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (8 samples, 1.24%)</title><rect x="859.7" y="707.0" width="14.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="862.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.09%)</title><rect x="861.5" y="691.0" width="12.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.09%)</title><rect x="861.5" y="675.0" width="12.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="864.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (5 samples, 0.78%)</title><rect x="863.3" y="659.0" width="9.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.3" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (5 samples, 0.78%)</title><rect x="863.3" y="643.0" width="9.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="866.3" y="654.0"></text>
</g>
<g>
<title>security_socket_setsockopt (2 samples, 0.31%)</title><rect x="863.3" y="627.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="866.3" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (2 samples, 0.31%)</title><rect x="863.3" y="611.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="866.3" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (2 samples, 0.31%)</title><rect x="863.3" y="595.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.3" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.31%)</title><rect x="863.3" y="579.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="866.3" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.16%)</title><rect x="865.2" y="563.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="868.2" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.16%)</title><rect x="865.2" y="547.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="868.2" y="558.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.31%)</title><rect x="867.0" y="627.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="870.0" y="638.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.31%)</title><rect x="867.0" y="611.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.0" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.16%)</title><rect x="868.8" y="595.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="871.8" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="870.7" y="627.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="873.7" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="870.7" y="611.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="873.7" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="870.7" y="595.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.7" y="606.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="872.5" y="659.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="875.5" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="872.5" y="643.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="875.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (42 samples, 6.53%)</title><rect x="874.4" y="723.0" width="77.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.4" y="734.0">one/nio/n..</text>
</g>
<g>
<title>__libc_send (42 samples, 6.53%)</title><rect x="874.4" y="707.0" width="77.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="877.4" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 6.38%)</title><rect x="876.2" y="691.0" width="75.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="879.2" y="702.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (41 samples, 6.38%)</title><rect x="876.2" y="675.0" width="75.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="879.2" y="686.0">do_sysca..</text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="878.0" y="659.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="881.0" y="670.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.16%)</title><rect x="879.9" y="659.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="882.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (38 samples, 5.91%)</title><rect x="881.7" y="659.0" width="69.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="884.7" y="670.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (38 samples, 5.91%)</title><rect x="881.7" y="643.0" width="69.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="884.7" y="654.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (37 samples, 5.75%)</title><rect x="883.5" y="627.0" width="67.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="886.5" y="638.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (37 samples, 5.75%)</title><rect x="883.5" y="611.0" width="67.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="886.5" y="622.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (37 samples, 5.75%)</title><rect x="883.5" y="595.0" width="67.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="886.5" y="606.0">tcp_sen..</text>
</g>
<g>
<title>tcp_push (1 samples, 0.16%)</title><rect x="885.4" y="579.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (35 samples, 5.44%)</title><rect x="887.2" y="579.0" width="64.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="890.2" y="590.0">tcp_sen..</text>
</g>
<g>
<title>tcp_push (35 samples, 5.44%)</title><rect x="887.2" y="563.0" width="64.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="890.2" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (35 samples, 5.44%)</title><rect x="887.2" y="547.0" width="64.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.2" y="558.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (35 samples, 5.44%)</title><rect x="887.2" y="531.0" width="64.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="890.2" y="542.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (31 samples, 4.82%)</title><rect x="889.0" y="515.0" width="56.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="892.0" y="526.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (30 samples, 4.67%)</title><rect x="890.9" y="499.0" width="55.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.9" y="510.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 4.67%)</title><rect x="890.9" y="483.0" width="55.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="893.9" y="494.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (29 samples, 4.51%)</title><rect x="890.9" y="467.0" width="53.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="893.9" y="478.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.47%)</title><rect x="890.9" y="451.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="893.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.47%)</title><rect x="890.9" y="435.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="893.9" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.47%)</title><rect x="890.9" y="419.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.9" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.47%)</title><rect x="890.9" y="403.0" width="5.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="893.9" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.47%)</title><rect x="890.9" y="387.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.9" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.16%)</title><rect x="890.9" y="371.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.9" y="382.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.31%)</title><rect x="892.7" y="371.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="895.7" y="382.0"></text>
</g>
<g>
<title>ip_output (26 samples, 4.04%)</title><rect x="896.4" y="451.0" width="47.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.4" y="462.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (26 samples, 4.04%)</title><rect x="896.4" y="435.0" width="47.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="899.4" y="446.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="898.2" y="419.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="901.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (24 samples, 3.73%)</title><rect x="900.0" y="419.0" width="44.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="903.0" y="430.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (24 samples, 3.73%)</title><rect x="900.0" y="403.0" width="44.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="903.0" y="414.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (22 samples, 3.42%)</title><rect x="901.9" y="387.0" width="40.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="904.9" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (22 samples, 3.42%)</title><rect x="901.9" y="371.0" width="40.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="904.9" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (21 samples, 3.27%)</title><rect x="903.7" y="355.0" width="38.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="906.7" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (21 samples, 3.27%)</title><rect x="903.7" y="339.0" width="38.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="906.7" y="350.0">__s..</text>
</g>
<g>
<title>net_rx_action (20 samples, 3.11%)</title><rect x="905.6" y="323.0" width="36.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="908.6" y="334.0">net..</text>
</g>
<g>
<title>process_backlog (20 samples, 3.11%)</title><rect x="905.6" y="307.0" width="36.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.6" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (20 samples, 3.11%)</title><rect x="905.6" y="291.0" width="36.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="908.6" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (20 samples, 3.11%)</title><rect x="905.6" y="275.0" width="36.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="908.6" y="286.0">__n..</text>
</g>
<g>
<title>ip_rcv (19 samples, 2.95%)</title><rect x="907.4" y="259.0" width="34.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.4" y="270.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (19 samples, 2.95%)</title><rect x="907.4" y="243.0" width="34.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="910.4" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (18 samples, 2.80%)</title><rect x="907.4" y="227.0" width="33.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="910.4" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 2.64%)</title><rect x="907.4" y="211.0" width="31.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="910.4" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (17 samples, 2.64%)</title><rect x="907.4" y="195.0" width="31.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.4" y="206.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 2.64%)</title><rect x="907.4" y="179.0" width="31.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.4" y="190.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.16%)</title><rect x="907.4" y="163.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="910.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 2.49%)</title><rect x="909.2" y="163.0" width="29.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.2" y="174.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 2.49%)</title><rect x="909.2" y="147.0" width="29.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.2" y="158.0">tc..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.47%)</title><rect x="909.2" y="131.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.31%)</title><rect x="911.1" y="115.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.1" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.16%)</title><rect x="911.1" y="99.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="914.1" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.16%)</title><rect x="911.1" y="83.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.16%)</title><rect x="911.1" y="67.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.16%)</title><rect x="911.1" y="51.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.1" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.16%)</title><rect x="911.1" y="35.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.1" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.16%)</title><rect x="912.9" y="99.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.9" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (12 samples, 1.87%)</title><rect x="914.7" y="131.0" width="22.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="917.7" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (12 samples, 1.87%)</title><rect x="914.7" y="115.0" width="22.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="917.7" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 1.87%)</title><rect x="914.7" y="99.0" width="22.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="917.7" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 1.87%)</title><rect x="914.7" y="83.0" width="22.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="917.7" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (12 samples, 1.87%)</title><rect x="914.7" y="67.0" width="22.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.7" y="78.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.16%)</title><rect x="936.7" y="131.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="939.7" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="938.6" y="211.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.6" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="938.6" y="195.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.6" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="938.6" y="179.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="941.6" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="940.4" y="227.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.4" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.16%)</title><rect x="942.3" y="387.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="942.3" y="371.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.3" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.16%)</title><rect x="944.1" y="467.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.1" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.31%)</title><rect x="945.9" y="515.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.16%)</title><rect x="947.8" y="499.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.8" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.16%)</title><rect x="949.6" y="515.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="952.6" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.16%)</title><rect x="949.6" y="499.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.16%)</title><rect x="949.6" y="483.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.6" y="494.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.31%)</title><rect x="951.4" y="723.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.4" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (2 samples, 0.31%)</title><rect x="951.4" y="707.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.4" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (2 samples, 0.31%)</title><rect x="951.4" y="691.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.16%)</title><rect x="955.1" y="771.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="955.1" y="755.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.1" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.16%)</title><rect x="955.1" y="739.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="958.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (39 samples, 6.07%)</title><rect x="956.9" y="835.0" width="71.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="959.9" y="846.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (39 samples, 6.07%)</title><rect x="956.9" y="819.0" width="71.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.9" y="830.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.16%)</title><rect x="956.9" y="803.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (1 samples, 0.16%)</title><rect x="956.9" y="787.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.16%)</title><rect x="956.9" y="771.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (38 samples, 5.91%)</title><rect x="958.8" y="803.0" width="69.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.8" y="814.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (38 samples, 5.91%)</title><rect x="958.8" y="787.0" width="69.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.8" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (38 samples, 5.91%)</title><rect x="958.8" y="771.0" width="69.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.8" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (10 samples, 1.56%)</title><rect x="958.8" y="755.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="961.8" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="958.8" y="739.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="961.8" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.16%)</title><rect x="958.8" y="723.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="961.8" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.16%)</title><rect x="958.8" y="707.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="961.8" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.16%)</title><rect x="958.8" y="691.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="961.8" y="702.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.16%)</title><rect x="958.8" y="675.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="961.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 1.40%)</title><rect x="960.6" y="739.0" width="16.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.6" y="750.0"></text>
</g>
<g>
<title>__GI___recv (9 samples, 1.40%)</title><rect x="960.6" y="723.0" width="16.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="963.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.40%)</title><rect x="960.6" y="707.0" width="16.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.40%)</title><rect x="960.6" y="691.0" width="16.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="963.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 1.40%)</title><rect x="960.6" y="675.0" width="16.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="963.6" y="686.0"></text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 1.40%)</title><rect x="960.6" y="659.0" width="16.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.6" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (9 samples, 1.40%)</title><rect x="960.6" y="643.0" width="16.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.6" y="654.0"></text>
</g>
<g>
<title>inet6_recvmsg (9 samples, 1.40%)</title><rect x="960.6" y="627.0" width="16.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="963.6" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 1.40%)</title><rect x="960.6" y="611.0" width="16.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="963.6" y="622.0"></text>
</g>
<g>
<title>sk_wait_data (2 samples, 0.31%)</title><rect x="960.6" y="595.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="963.6" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.16%)</title><rect x="960.6" y="579.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="960.6" y="563.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="963.6" y="574.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.16%)</title><rect x="962.4" y="579.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.4" y="590.0"></text>
</g>
<g>
<title>del_timer_sync (1 samples, 0.16%)</title><rect x="962.4" y="563.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="965.4" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 1.09%)</title><rect x="964.3" y="595.0" width="12.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.3" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 1.09%)</title><rect x="964.3" y="579.0" width="12.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="967.3" y="590.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (7 samples, 1.09%)</title><rect x="964.3" y="563.0" width="12.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="967.3" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 1.09%)</title><rect x="964.3" y="547.0" width="12.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="967.3" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 1.09%)</title><rect x="964.3" y="531.0" width="12.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="967.3" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 1.09%)</title><rect x="964.3" y="515.0" width="12.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="967.3" y="526.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 1.09%)</title><rect x="964.3" y="499.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="967.3" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.31%)</title><rect x="964.3" y="483.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.3" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.31%)</title><rect x="964.3" y="467.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.3" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="964.3" y="451.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="967.3" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="964.3" y="435.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.16%)</title><rect x="966.1" y="451.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.1" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.16%)</title><rect x="966.1" y="435.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.1" y="446.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.16%)</title><rect x="966.1" y="419.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="969.1" y="430.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.62%)</title><rect x="967.9" y="483.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.9" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.62%)</title><rect x="967.9" y="467.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.9" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (4 samples, 0.62%)</title><rect x="967.9" y="451.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.9" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (4 samples, 0.62%)</title><rect x="967.9" y="435.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="970.9" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.62%)</title><rect x="967.9" y="419.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="970.9" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (4 samples, 0.62%)</title><rect x="967.9" y="403.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="970.9" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.62%)</title><rect x="967.9" y="387.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="970.9" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.62%)</title><rect x="967.9" y="371.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="970.9" y="382.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.62%)</title><rect x="967.9" y="355.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="970.9" y="366.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.62%)</title><rect x="967.9" y="339.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.62%)</title><rect x="967.9" y="323.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="970.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.62%)</title><rect x="967.9" y="307.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="970.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.62%)</title><rect x="967.9" y="291.0" width="7.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="970.9" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.16%)</title><rect x="967.9" y="275.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="970.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.47%)</title><rect x="969.8" y="275.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.8" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.47%)</title><rect x="969.8" y="259.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="972.8" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.31%)</title><rect x="969.8" y="243.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.8" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.31%)</title><rect x="969.8" y="227.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.31%)</title><rect x="969.8" y="211.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="972.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.31%)</title><rect x="969.8" y="195.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="972.8" y="206.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.16%)</title><rect x="969.8" y="179.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="972.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.16%)</title><rect x="971.6" y="179.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="974.6" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.16%)</title><rect x="971.6" y="163.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="974.6" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.16%)</title><rect x="971.6" y="147.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="974.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.16%)</title><rect x="971.6" y="131.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="974.6" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="973.5" y="243.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="976.5" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="973.5" y="227.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.5" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="973.5" y="211.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.5" y="222.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.16%)</title><rect x="975.3" y="483.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 1.09%)</title><rect x="977.1" y="755.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="980.8" y="739.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.16%)</title><rect x="980.8" y="723.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.16%)</title><rect x="980.8" y="707.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="983.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.16%)</title><rect x="982.6" y="739.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="985.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="982.6" y="723.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="982.6" y="707.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.16%)</title><rect x="984.5" y="739.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.31%)</title><rect x="986.3" y="739.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.62%)</title><rect x="990.0" y="755.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.0" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.47%)</title><rect x="990.0" y="739.0" width="5.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="993.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="990.0" y="723.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.47%)</title><rect x="990.0" y="707.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.47%)</title><rect x="990.0" y="691.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.0" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.47%)</title><rect x="990.0" y="675.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="993.0" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.16%)</title><rect x="990.0" y="659.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="993.0" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.16%)</title><rect x="990.0" y="643.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.0" y="654.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.16%)</title><rect x="990.0" y="627.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="993.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.16%)</title><rect x="990.0" y="611.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="993.0" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.16%)</title><rect x="990.0" y="595.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="993.0" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.31%)</title><rect x="991.8" y="659.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="994.8" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="991.8" y="643.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="994.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="991.8" y="627.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="994.8" y="638.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.16%)</title><rect x="991.8" y="611.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="993.6" y="643.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="996.6" y="654.0"></text>
</g>
<g>
<title>setsockopt@plt (1 samples, 0.16%)</title><rect x="995.5" y="739.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="998.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (16 samples, 2.49%)</title><rect x="997.3" y="755.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.3" y="766.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.16%)</title><rect x="999.1" y="739.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1002.1" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.16%)</title><rect x="999.1" y="723.0" width="1.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1002.1" y="734.0"></text>
</g>
<g>
<title>__libc_send (14 samples, 2.18%)</title><rect x="1001.0" y="739.0" width="25.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1004.0" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 2.18%)</title><rect x="1001.0" y="723.0" width="25.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1004.0" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 2.18%)</title><rect x="1001.0" y="707.0" width="25.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.0" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (14 samples, 2.18%)</title><rect x="1001.0" y="691.0" width="25.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1004.0" y="702.0">_..</text>
</g>
<g>
<title>__sys_sendto (14 samples, 2.18%)</title><rect x="1001.0" y="675.0" width="25.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.0" y="686.0">_..</text>
</g>
<g>
<title>sock_sendmsg (14 samples, 2.18%)</title><rect x="1001.0" y="659.0" width="25.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1004.0" y="670.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (14 samples, 2.18%)</title><rect x="1001.0" y="643.0" width="25.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1004.0" y="654.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (14 samples, 2.18%)</title><rect x="1001.0" y="627.0" width="25.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1004.0" y="638.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 2.18%)</title><rect x="1001.0" y="611.0" width="25.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1004.0" y="622.0">t..</text>
</g>
<g>
<title>tcp_push (14 samples, 2.18%)</title><rect x="1001.0" y="595.0" width="25.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.0" y="606.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (14 samples, 2.18%)</title><rect x="1001.0" y="579.0" width="25.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1004.0" y="590.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (14 samples, 2.18%)</title><rect x="1001.0" y="563.0" width="25.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1004.0" y="574.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (12 samples, 1.87%)</title><rect x="1001.0" y="547.0" width="22.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1004.0" y="558.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (11 samples, 1.71%)</title><rect x="1002.8" y="531.0" width="20.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.8" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (11 samples, 1.71%)</title><rect x="1002.8" y="515.0" width="20.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.8" y="526.0"></text>
</g>
<g>
<title>ip_local_out (11 samples, 1.71%)</title><rect x="1002.8" y="499.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1005.8" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.16%)</title><rect x="1002.8" y="483.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1005.8" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="1002.8" y="467.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1005.8" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="1002.8" y="451.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1005.8" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="1002.8" y="435.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.8" y="446.0"></text>
</g>
<g>
<title>ip_output (10 samples, 1.56%)</title><rect x="1004.7" y="483.0" width="18.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.7" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 1.56%)</title><rect x="1004.7" y="467.0" width="18.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1007.7" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (10 samples, 1.56%)</title><rect x="1004.7" y="451.0" width="18.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 1.56%)</title><rect x="1004.7" y="435.0" width="18.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1007.7" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (9 samples, 1.40%)</title><rect x="1004.7" y="419.0" width="16.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.7" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (9 samples, 1.40%)</title><rect x="1004.7" y="403.0" width="16.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1007.7" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (9 samples, 1.40%)</title><rect x="1004.7" y="387.0" width="16.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1007.7" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 1.40%)</title><rect x="1004.7" y="371.0" width="16.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1007.7" y="382.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 1.24%)</title><rect x="1006.5" y="355.0" width="14.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1009.5" y="366.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.16%)</title><rect x="1006.5" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.5" y="350.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 1.09%)</title><rect x="1008.3" y="339.0" width="12.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1011.3" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (7 samples, 1.09%)</title><rect x="1008.3" y="323.0" width="12.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1011.3" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (7 samples, 1.09%)</title><rect x="1008.3" y="307.0" width="12.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1011.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.16%)</title><rect x="1008.3" y="291.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1011.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.93%)</title><rect x="1010.2" y="291.0" width="11.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1013.2" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 0.93%)</title><rect x="1010.2" y="275.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1013.2" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.93%)</title><rect x="1010.2" y="259.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.2" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 0.93%)</title><rect x="1010.2" y="243.0" width="11.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1013.2" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 0.93%)</title><rect x="1010.2" y="227.0" width="11.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.2" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.78%)</title><rect x="1012.0" y="211.0" width="9.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1015.0" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.16%)</title><rect x="1012.0" y="195.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1015.0" y="206.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.16%)</title><rect x="1012.0" y="179.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1015.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.62%)</title><rect x="1013.8" y="195.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.8" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.62%)</title><rect x="1013.8" y="179.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1016.8" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.16%)</title><rect x="1013.8" y="163.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.8" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.47%)</title><rect x="1015.7" y="163.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.7" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.47%)</title><rect x="1015.7" y="147.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1018.7" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.47%)</title><rect x="1015.7" y="131.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1018.7" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.47%)</title><rect x="1015.7" y="115.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1018.7" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.47%)</title><rect x="1015.7" y="99.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1018.7" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.16%)</title><rect x="1021.2" y="419.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1024.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.16%)</title><rect x="1021.2" y="403.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.2" y="414.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.16%)</title><rect x="1021.2" y="387.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.2" y="398.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.16%)</title><rect x="1023.0" y="547.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.0" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.16%)</title><rect x="1024.8" y="547.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1027.8" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.16%)</title><rect x="1026.7" y="755.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.7" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (86 samples, 13.37%)</title><rect x="1028.5" y="979.0" width="157.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.5" y="990.0">one/nio/server/Selec..</text>
</g>
<g>
<title>Interpreter (1 samples, 0.16%)</title><rect x="1030.3" y="963.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1033.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (15 samples, 2.33%)</title><rect x="1032.2" y="963.0" width="27.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.2" y="974.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 2.33%)</title><rect x="1032.2" y="947.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.2" y="958.0">o..</text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.47%)</title><rect x="1035.8" y="931.0" width="5.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1038.8" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.16%)</title><rect x="1035.8" y="915.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1038.8" y="926.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.31%)</title><rect x="1037.7" y="915.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1040.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.31%)</title><rect x="1037.7" y="899.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1040.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.31%)</title><rect x="1037.7" y="883.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.31%)</title><rect x="1037.7" y="867.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1040.7" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.31%)</title><rect x="1037.7" y="851.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1040.7" y="862.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.16%)</title><rect x="1037.7" y="835.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.7" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.16%)</title><rect x="1037.7" y="819.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.7" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.16%)</title><rect x="1037.7" y="803.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1040.7" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.16%)</title><rect x="1037.7" y="787.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1040.7" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.16%)</title><rect x="1039.5" y="835.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.5" y="846.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.16%)</title><rect x="1039.5" y="819.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.40%)</title><rect x="1041.4" y="931.0" width="16.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1044.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="1041.4" y="915.0" width="1.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1044.4" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.16%)</title><rect x="1041.4" y="899.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1044.4" y="910.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.16%)</title><rect x="1043.2" y="915.0" width="1.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1046.2" y="926.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 1.09%)</title><rect x="1045.0" y="915.0" width="12.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1048.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.78%)</title><rect x="1048.7" y="899.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1051.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.78%)</title><rect x="1048.7" y="883.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1051.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.78%)</title><rect x="1048.7" y="867.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.7" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.78%)</title><rect x="1048.7" y="851.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.7" y="862.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.62%)</title><rect x="1048.7" y="835.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1051.7" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 0.31%)</title><rect x="1050.5" y="819.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1053.5" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.16%)</title><rect x="1054.2" y="819.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.2" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.16%)</title><rect x="1054.2" y="803.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1057.2" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="1054.2" y="787.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1057.2" y="798.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.16%)</title><rect x="1054.2" y="771.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1057.2" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.16%)</title><rect x="1054.2" y="755.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1057.2" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.16%)</title><rect x="1056.0" y="835.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1059.0" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.16%)</title><rect x="1057.9" y="931.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1060.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (69 samples, 10.73%)</title><rect x="1059.7" y="963.0" width="126.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.7" y="974.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (67 samples, 10.42%)</title><rect x="1061.5" y="947.0" width="123.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.5" y="958.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 6.69%)</title><rect x="1063.4" y="931.0" width="78.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.4" y="942.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 4.51%)</title><rect x="1067.0" y="915.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.0" y="926.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 4.20%)</title><rect x="1070.7" y="899.0" width="49.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.7" y="910.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (25 samples, 3.89%)</title><rect x="1070.7" y="883.0" width="45.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.7" y="894.0">Requ..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (25 samples, 3.89%)</title><rect x="1070.7" y="867.0" width="45.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.7" y="878.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.16%)</title><rect x="1070.7" y="851.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.16%)</title><rect x="1070.7" y="835.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1073.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$80/407135064.get$Lambda (1 samples, 0.16%)</title><rect x="1070.7" y="819.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1073.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 3.73%)</title><rect x="1072.6" y="851.0" width="44.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.6" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 3.73%)</title><rect x="1072.6" y="835.0" width="44.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.6" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (22 samples, 3.42%)</title><rect x="1072.6" y="819.0" width="40.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1075.6" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 3.42%)</title><rect x="1072.6" y="803.0" width="40.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.6" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 3.42%)</title><rect x="1072.6" y="787.0" width="40.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1075.6" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 3.42%)</title><rect x="1072.6" y="771.0" width="40.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.6" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 3.42%)</title><rect x="1072.6" y="755.0" width="40.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.6" y="766.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 3.42%)</title><rect x="1072.6" y="739.0" width="40.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.6" y="750.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.93%)</title><rect x="1072.6" y="723.0" width="11.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1075.6" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="1072.6" y="707.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="1074.4" y="707.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1077.4" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.16%)</title><rect x="1076.2" y="707.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.2" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.16%)</title><rect x="1078.1" y="707.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1081.1" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.31%)</title><rect x="1079.9" y="707.0" width="3.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1082.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 2.33%)</title><rect x="1083.6" y="723.0" width="27.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1086.6" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 2.33%)</title><rect x="1083.6" y="707.0" width="27.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1086.6" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 2.33%)</title><rect x="1083.6" y="691.0" width="27.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1086.6" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 2.18%)</title><rect x="1083.6" y="675.0" width="25.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1086.6" y="686.0">_..</text>
</g>
<g>
<title>do_futex (14 samples, 2.18%)</title><rect x="1083.6" y="659.0" width="25.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1086.6" y="670.0">d..</text>
</g>
<g>
<title>futex_wake (13 samples, 2.02%)</title><rect x="1083.6" y="643.0" width="23.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1086.6" y="654.0">f..</text>
</g>
<g>
<title>wake_up_q (13 samples, 2.02%)</title><rect x="1083.6" y="627.0" width="23.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1086.6" y="638.0">w..</text>
</g>
<g>
<title>try_to_wake_up (13 samples, 2.02%)</title><rect x="1083.6" y="611.0" width="23.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1086.6" y="622.0">t..</text>
</g>
<g>
<title>__lock_text_start (13 samples, 2.02%)</title><rect x="1083.6" y="595.0" width="23.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.6" y="606.0">_..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.16%)</title><rect x="1107.4" y="643.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1110.4" y="654.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="1109.3" y="675.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1112.3" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="1111.1" y="723.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1114.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.31%)</title><rect x="1112.9" y="819.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1115.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.31%)</title><rect x="1112.9" y="803.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.31%)</title><rect x="1112.9" y="787.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.31%)</title><rect x="1112.9" y="771.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.31%)</title><rect x="1116.6" y="883.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1119.6" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.31%)</title><rect x="1116.6" y="867.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.6" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.16%)</title><rect x="1116.6" y="851.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.16%)</title><rect x="1118.4" y="851.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.16%)</title><rect x="1118.4" y="835.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.16%)</title><rect x="1118.4" y="819.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.4" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.16%)</title><rect x="1118.4" y="803.0" width="1.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1121.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 1.09%)</title><rect x="1120.3" y="915.0" width="12.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.3" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1123.9" y="899.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.9" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.16%)</title><rect x="1123.9" y="883.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1126.9" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.16%)</title><rect x="1123.9" y="867.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1126.9" y="878.0"></text>
</g>
<g>
<title>ObjArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.16%)</title><rect x="1123.9" y="851.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1126.9" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1125.8" y="899.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1128.8" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.31%)</title><rect x="1125.8" y="883.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.8" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.16%)</title><rect x="1127.6" y="867.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1130.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.31%)</title><rect x="1129.4" y="899.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.4" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.31%)</title><rect x="1133.1" y="915.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1136.1" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.47%)</title><rect x="1136.8" y="915.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.8" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.47%)</title><rect x="1136.8" y="899.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.8" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (23 samples, 3.58%)</title><rect x="1142.3" y="931.0" width="42.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.3" y="942.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 3.58%)</title><rect x="1142.3" y="915.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.3" y="926.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.78%)</title><rect x="1144.1" y="899.0" width="9.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1147.1" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="1146.0" y="883.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1149.0" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.47%)</title><rect x="1147.8" y="883.0" width="5.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1150.8" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="1147.8" y="867.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.8" y="878.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.16%)</title><rect x="1149.6" y="867.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.6" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="1151.5" y="867.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.5" y="878.0"></text>
</g>
<g>
<title>__GI___recv (17 samples, 2.64%)</title><rect x="1153.3" y="899.0" width="31.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1156.3" y="910.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 2.49%)</title><rect x="1155.1" y="883.0" width="29.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.1" y="894.0">en..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 2.49%)</title><rect x="1155.1" y="867.0" width="29.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.1" y="878.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 2.18%)</title><rect x="1157.0" y="851.0" width="25.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.0" y="862.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 2.18%)</title><rect x="1157.0" y="835.0" width="25.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1160.0" y="846.0">_..</text>
</g>
<g>
<title>sock_recvmsg (14 samples, 2.18%)</title><rect x="1157.0" y="819.0" width="25.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.0" y="830.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 2.02%)</title><rect x="1157.0" y="803.0" width="23.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.0" y="814.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 2.02%)</title><rect x="1157.0" y="787.0" width="23.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1160.0" y="798.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.16%)</title><rect x="1160.6" y="771.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.6" y="782.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.16%)</title><rect x="1160.6" y="755.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.6" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.16%)</title><rect x="1160.6" y="739.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.6" y="750.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.16%)</title><rect x="1160.6" y="723.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.6" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.31%)</title><rect x="1162.5" y="771.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.5" y="782.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.78%)</title><rect x="1166.1" y="771.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1169.1" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.78%)</title><rect x="1166.1" y="755.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.1" y="766.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.78%)</title><rect x="1166.1" y="739.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1169.1" y="750.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.31%)</title><rect x="1166.1" y="723.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.1" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.31%)</title><rect x="1169.8" y="723.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1172.8" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.16%)</title><rect x="1171.6" y="707.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1174.6" y="718.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.16%)</title><rect x="1173.5" y="723.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.5" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.16%)</title><rect x="1175.3" y="771.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1178.3" y="782.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.16%)</title><rect x="1177.2" y="771.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.2" y="782.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.16%)</title><rect x="1179.0" y="771.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.0" y="782.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.16%)</title><rect x="1180.8" y="803.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.16%)</title><rect x="1180.8" y="787.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.16%)</title><rect x="1180.8" y="771.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.8" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.16%)</title><rect x="1180.8" y="755.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.8" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.16%)</title><rect x="1180.8" y="739.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1183.8" y="750.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.16%)</title><rect x="1180.8" y="723.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.8" y="734.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="1182.7" y="851.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1185.7" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="1182.7" y="835.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1185.7" y="846.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.16%)</title><rect x="1182.7" y="819.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="1184.5" y="947.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.5" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.16%)</title><rect x="1184.5" y="931.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1187.5" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.16%)</title><rect x="1184.5" y="915.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1187.5" y="926.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.31%)</title><rect x="1186.3" y="979.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.3" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.31%)</title><rect x="1186.3" y="963.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1189.3" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.31%)</title><rect x="1186.3" y="947.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.31%)</title><rect x="1186.3" y="931.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="942.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.31%)</title><rect x="1186.3" y="915.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.3" y="926.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.31%)</title><rect x="1186.3" y="899.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="910.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.31%)</title><rect x="1186.3" y="883.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="894.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.31%)</title><rect x="1186.3" y="867.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.16%)</title><rect x="1186.3" y="851.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.3" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.16%)</title><rect x="1186.3" y="835.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.16%)</title><rect x="1186.3" y="819.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="830.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.16%)</title><rect x="1186.3" y="803.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.16%)</title><rect x="1188.2" y="851.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="862.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.16%)</title><rect x="1188.2" y="835.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.16%)</title><rect x="1188.2" y="819.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.2" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.16%)</title><rect x="1188.2" y="803.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.16%)</title><rect x="1188.2" y="787.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.16%)</title><rect x="1188.2" y="771.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>ProjNode::hash() const (1 samples, 0.16%)</title><rect x="1188.2" y="755.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
</g>
</svg>
