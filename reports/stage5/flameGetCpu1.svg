<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (771 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (659 samples, 85.47%)</title><rect x="10.0" y="979.0" width="1008.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (659 samples, 85.47%)</title><rect x="10.0" y="963.0" width="1008.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="974.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (659 samples, 85.47%)</title><rect x="10.0" y="947.0" width="1008.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="958.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.13%)</title><rect x="22.2" y="931.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.26%)</title><rect x="23.8" y="931.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.26%)</title><rect x="23.8" y="915.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.8" y="926.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.13%)</title><rect x="23.8" y="899.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="26.8" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.13%)</title><rect x="23.8" y="883.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.8" y="894.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.13%)</title><rect x="25.3" y="899.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="28.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.13%)</title><rect x="26.8" y="931.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.13%)</title><rect x="26.8" y="915.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.13%)</title><rect x="26.8" y="899.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.13%)</title><rect x="26.8" y="883.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.13%)</title><rect x="26.8" y="867.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.13%)</title><rect x="26.8" y="851.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.13%)</title><rect x="26.8" y="835.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (44 samples, 5.71%)</title><rect x="28.4" y="931.0" width="67.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.4" y="942.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 5.71%)</title><rect x="28.4" y="915.0" width="67.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.4" y="926.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 4.15%)</title><rect x="29.9" y="899.0" width="49.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.9" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.13%)</title><rect x="29.9" y="883.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.13%)</title><rect x="29.9" y="867.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.13%)</title><rect x="29.9" y="851.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.39%)</title><rect x="31.4" y="883.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (3 samples, 0.39%)</title><rect x="31.4" y="867.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 3.63%)</title><rect x="36.0" y="883.0" width="42.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.0" y="894.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 3.50%)</title><rect x="36.0" y="867.0" width="41.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.0" y="878.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.91%)</title><rect x="36.0" y="851.0" width="10.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="39.0" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.26%)</title><rect x="36.0" y="835.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="39.0" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="37.5" y="819.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="40.5" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.26%)</title><rect x="39.1" y="835.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="42.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.26%)</title><rect x="39.1" y="819.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="42.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.26%)</title><rect x="39.1" y="803.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="42.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.13%)</title><rect x="40.6" y="787.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.6" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.13%)</title><rect x="40.6" y="771.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.6" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.13%)</title><rect x="40.6" y="755.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.6" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="42.1" y="835.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="45.1" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.13%)</title><rect x="43.7" y="835.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="46.7" y="846.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.13%)</title><rect x="45.2" y="835.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="48.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 2.59%)</title><rect x="46.7" y="851.0" width="30.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="49.7" y="862.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.13%)</title><rect x="46.7" y="835.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="49.7" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.13%)</title><rect x="48.3" y="835.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="51.3" y="846.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (18 samples, 2.33%)</title><rect x="49.8" y="835.0" width="27.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.8" y="846.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.69%)</title><rect x="57.4" y="819.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.4" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.69%)</title><rect x="57.4" y="803.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="60.4" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 1.43%)</title><rect x="60.5" y="787.0" width="16.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.5" y="798.0"></text>
</g>
<g>
<title>do_futex (11 samples, 1.43%)</title><rect x="60.5" y="771.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.5" y="782.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 1.17%)</title><rect x="63.6" y="755.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="66.6" y="766.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.13%)</title><rect x="66.6" y="739.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.6" y="750.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.52%)</title><rect x="68.2" y="739.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.2" y="750.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.39%)</title><rect x="69.7" y="723.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="72.7" y="734.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.26%)</title><rect x="71.2" y="707.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="74.2" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.26%)</title><rect x="71.2" y="691.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.2" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.13%)</title><rect x="74.3" y="739.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="77.3" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.13%)</title><rect x="74.3" y="723.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.3" y="734.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.13%)</title><rect x="75.8" y="739.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (1 samples, 0.13%)</title><rect x="77.3" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.13%)</title><rect x="77.3" y="851.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 1.43%)</title><rect x="78.9" y="899.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 1.43%)</title><rect x="78.9" y="883.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 1.43%)</title><rect x="78.9" y="867.0" width="16.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 1.43%)</title><rect x="78.9" y="851.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 1.43%)</title><rect x="78.9" y="835.0" width="16.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.39%)</title><rect x="78.9" y="819.0" width="4.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="81.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.13%)</title><rect x="78.9" y="803.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="81.9" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.13%)</title><rect x="80.4" y="803.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="83.4" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.13%)</title><rect x="81.9" y="803.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="84.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 1.04%)</title><rect x="83.5" y="819.0" width="12.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="86.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.04%)</title><rect x="83.5" y="803.0" width="12.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="86.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.04%)</title><rect x="83.5" y="787.0" width="12.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="86.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 1.04%)</title><rect x="83.5" y="771.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.5" y="782.0"></text>
</g>
<g>
<title>do_futex (8 samples, 1.04%)</title><rect x="83.5" y="755.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="86.5" y="766.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 1.04%)</title><rect x="83.5" y="739.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.5" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.13%)</title><rect x="83.5" y="723.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="86.5" y="734.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.13%)</title><rect x="83.5" y="707.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="86.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.91%)</title><rect x="85.0" y="723.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.0" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.91%)</title><rect x="85.0" y="707.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="88.0" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.91%)</title><rect x="85.0" y="691.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$91/1922510451.run (331 samples, 42.93%)</title><rect x="95.7" y="931.0" width="506.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.7" y="942.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$91/1922510..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1 (331 samples, 42.93%)</title><rect x="95.7" y="915.0" width="506.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.7" y="926.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.13%)</title><rect x="95.7" y="899.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.13%)</title><rect x="95.7" y="883.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$92/525290010.get$Lambda (1 samples, 0.13%)</title><rect x="95.7" y="867.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$92/525290010.&lt;init&gt; (1 samples, 0.13%)</title><rect x="95.7" y="851.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (1 samples, 0.13%)</title><rect x="95.7" y="835.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="98.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (330 samples, 42.80%)</title><rect x="97.2" y="899.0" width="505.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.2" y="910.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 7.52%)</title><rect x="97.2" y="883.0" width="88.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.2" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.13%)</title><rect x="97.2" y="867.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.13%)</title><rect x="97.2" y="851.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.13%)</title><rect x="97.2" y="835.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.2" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.13%)</title><rect x="97.2" y="819.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="100.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (57 samples, 7.39%)</title><rect x="98.8" y="867.0" width="87.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.8" y="878.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.13%)</title><rect x="98.8" y="851.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.8" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.13%)</title><rect x="98.8" y="835.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 7.26%)</title><rect x="100.3" y="851.0" width="85.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.3" y="862.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 7.26%)</title><rect x="100.3" y="835.0" width="85.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.3" y="846.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (56 samples, 7.26%)</title><rect x="100.3" y="819.0" width="85.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.3" y="830.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (56 samples, 7.26%)</title><rect x="100.3" y="803.0" width="85.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.3" y="814.0">one/nio/ne..</text>
</g>
<g>
<title>__libc_send (55 samples, 7.13%)</title><rect x="101.8" y="787.0" width="84.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="104.8" y="798.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 6.74%)</title><rect x="106.4" y="771.0" width="79.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="109.4" y="782.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (52 samples, 6.74%)</title><rect x="106.4" y="755.0" width="79.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.4" y="766.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (52 samples, 6.74%)</title><rect x="106.4" y="739.0" width="79.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.4" y="750.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (52 samples, 6.74%)</title><rect x="106.4" y="723.0" width="79.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.4" y="734.0">__sys_sen..</text>
</g>
<g>
<title>fput (1 samples, 0.13%)</title><rect x="106.4" y="707.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="109.4" y="718.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.13%)</title><rect x="106.4" y="691.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.4" y="702.0"></text>
</g>
<g>
<title>sock_sendmsg (50 samples, 6.49%)</title><rect x="108.0" y="707.0" width="76.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="111.0" y="718.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (50 samples, 6.49%)</title><rect x="108.0" y="691.0" width="76.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="111.0" y="702.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (50 samples, 6.49%)</title><rect x="108.0" y="675.0" width="76.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.0" y="686.0">tcp_send..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="109.5" y="659.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="112.5" y="670.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.13%)</title><rect x="111.0" y="659.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.0" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (47 samples, 6.10%)</title><rect x="112.5" y="659.0" width="72.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.5" y="670.0">tcp_send..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="112.5" y="643.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="115.5" y="654.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.39%)</title><rect x="114.1" y="643.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.1" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.26%)</title><rect x="115.6" y="627.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.6" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.13%)</title><rect x="115.6" y="611.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.6" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="115.6" y="595.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.6" y="606.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.13%)</title><rect x="117.1" y="611.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="120.1" y="622.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.13%)</title><rect x="118.7" y="643.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="121.7" y="654.0"></text>
</g>
<g>
<title>tcp_push (41 samples, 5.32%)</title><rect x="120.2" y="643.0" width="62.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="123.2" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (41 samples, 5.32%)</title><rect x="120.2" y="627.0" width="62.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="123.2" y="638.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (41 samples, 5.32%)</title><rect x="120.2" y="611.0" width="62.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.2" y="622.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (37 samples, 4.80%)</title><rect x="121.7" y="595.0" width="56.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="124.7" y="606.0">__tcp_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.13%)</title><rect x="123.3" y="579.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="126.3" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (35 samples, 4.54%)</title><rect x="124.8" y="579.0" width="53.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.8" y="590.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (35 samples, 4.54%)</title><rect x="124.8" y="563.0" width="53.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.8" y="574.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (34 samples, 4.41%)</title><rect x="124.8" y="547.0" width="52.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="127.8" y="558.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.52%)</title><rect x="124.8" y="531.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.8" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.13%)</title><rect x="124.8" y="515.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="127.8" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.39%)</title><rect x="126.3" y="515.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="129.3" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.13%)</title><rect x="126.3" y="499.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="129.3" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.13%)</title><rect x="126.3" y="483.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="129.3" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.26%)</title><rect x="127.8" y="499.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.8" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.26%)</title><rect x="127.8" y="483.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.8" y="494.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.13%)</title><rect x="127.8" y="467.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="130.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.13%)</title><rect x="129.4" y="467.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.4" y="478.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.13%)</title><rect x="129.4" y="451.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.4" y="462.0"></text>
</g>
<g>
<title>ip_output (30 samples, 3.89%)</title><rect x="130.9" y="531.0" width="45.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.9" y="542.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (30 samples, 3.89%)</title><rect x="130.9" y="515.0" width="45.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="133.9" y="526.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="132.4" y="499.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.4" y="510.0"></text>
</g>
<g>
<title>__ip_finish_output (28 samples, 3.63%)</title><rect x="134.0" y="499.0" width="42.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.0" y="510.0">__ip..</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.13%)</title><rect x="134.0" y="483.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="137.0" y="494.0"></text>
</g>
<g>
<title>ip_finish_output2 (27 samples, 3.50%)</title><rect x="135.5" y="483.0" width="41.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.5" y="494.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (21 samples, 2.72%)</title><rect x="137.0" y="467.0" width="32.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="140.0" y="478.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (21 samples, 2.72%)</title><rect x="137.0" y="451.0" width="32.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="140.0" y="462.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (21 samples, 2.72%)</title><rect x="137.0" y="435.0" width="32.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.0" y="446.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (21 samples, 2.72%)</title><rect x="137.0" y="419.0" width="32.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="140.0" y="430.0">__..</text>
</g>
<g>
<title>net_rx_action (20 samples, 2.59%)</title><rect x="138.6" y="403.0" width="30.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.6" y="414.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.13%)</title><rect x="138.6" y="387.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="141.6" y="398.0"></text>
</g>
<g>
<title>process_backlog (19 samples, 2.46%)</title><rect x="140.1" y="387.0" width="29.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.1" y="398.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (19 samples, 2.46%)</title><rect x="140.1" y="371.0" width="29.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.1" y="382.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (19 samples, 2.46%)</title><rect x="140.1" y="355.0" width="29.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.1" y="366.0">__..</text>
</g>
<g>
<title>ip_rcv (19 samples, 2.46%)</title><rect x="140.1" y="339.0" width="29.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="143.1" y="350.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (18 samples, 2.33%)</title><rect x="140.1" y="323.0" width="27.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.1" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver (17 samples, 2.20%)</title><rect x="140.1" y="307.0" width="26.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="143.1" y="318.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 2.08%)</title><rect x="140.1" y="291.0" width="24.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="143.1" y="302.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 2.08%)</title><rect x="140.1" y="275.0" width="24.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.1" y="286.0">i..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.13%)</title><rect x="141.6" y="259.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="144.6" y="270.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.13%)</title><rect x="143.2" y="259.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.2" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 1.69%)</title><rect x="144.7" y="259.0" width="19.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="147.7" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 1.43%)</title><rect x="147.7" y="243.0" width="16.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="150.7" y="254.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 1.43%)</title><rect x="147.7" y="227.0" width="16.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="150.7" y="238.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.26%)</title><rect x="147.7" y="211.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="150.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.26%)</title><rect x="147.7" y="195.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="150.7" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.26%)</title><rect x="147.7" y="179.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="150.7" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.13%)</title><rect x="147.7" y="163.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="150.7" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.13%)</title><rect x="147.7" y="147.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.7" y="158.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.13%)</title><rect x="149.3" y="163.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.3" y="174.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.13%)</title><rect x="149.3" y="147.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="152.3" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.13%)</title><rect x="150.8" y="211.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="153.8" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (8 samples, 1.04%)</title><rect x="152.3" y="211.0" width="12.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.3" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 1.04%)</title><rect x="152.3" y="195.0" width="12.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="155.3" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 1.04%)</title><rect x="152.3" y="179.0" width="12.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="155.3" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 1.04%)</title><rect x="152.3" y="163.0" width="12.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="155.3" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 1.04%)</title><rect x="152.3" y="147.0" width="12.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="164.6" y="291.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="167.6" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.13%)</title><rect x="164.6" y="275.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="167.6" y="286.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.13%)</title><rect x="164.6" y="259.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="167.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.13%)</title><rect x="166.1" y="307.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="169.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="167.6" y="323.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="170.6" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.13%)</title><rect x="167.6" y="307.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.6" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.13%)</title><rect x="167.6" y="291.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="170.6" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.65%)</title><rect x="169.2" y="467.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="172.2" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.65%)</title><rect x="169.2" y="451.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="172.2" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="170.7" y="435.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="173.7" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.26%)</title><rect x="172.2" y="435.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="175.2" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.13%)</title><rect x="172.2" y="419.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.2" y="430.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.13%)</title><rect x="172.2" y="403.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.2" y="414.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.13%)</title><rect x="173.8" y="419.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.8" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.13%)</title><rect x="175.3" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.3" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.13%)</title><rect x="176.8" y="547.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.8" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.13%)</title><rect x="178.4" y="595.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="181.4" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.13%)</title><rect x="178.4" y="579.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.4" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.26%)</title><rect x="179.9" y="595.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.9" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.13%)</title><rect x="181.4" y="579.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="184.4" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="181.4" y="563.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.4" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="181.4" y="547.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.4" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="181.4" y="531.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.4" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.13%)</title><rect x="182.9" y="643.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.9" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.13%)</title><rect x="182.9" y="627.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="185.9" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="184.5" y="707.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.5" y="718.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.13%)</title><rect x="184.5" y="691.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.13%)</title><rect x="184.5" y="675.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="187.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$92/525290010.get (272 samples, 35.28%)</title><rect x="186.0" y="883.0" width="416.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.0" y="894.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lamb..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (272 samples, 35.28%)</title><rect x="186.0" y="867.0" width="416.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.0" y="878.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambd..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas (272 samples, 35.28%)</title><rect x="186.0" y="851.0" width="416.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="189.0" y="862.0">ru/mail/polis/service/stasyanoi/server/CustomServer.getRe..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.13%)</title><rect x="186.0" y="835.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.13%)</title><rect x="186.0" y="819.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.13%)</title><rect x="186.0" y="803.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.13%)</title><rect x="186.0" y="787.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="186.0" y="771.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="189.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (106 samples, 13.75%)</title><rect x="187.5" y="835.0" width="162.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.5" y="846.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (102 samples, 13.23%)</title><rect x="187.5" y="819.0" width="156.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.5" y="830.0">ru/mail/polis/dao/st..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (102 samples, 13.23%)</title><rect x="187.5" y="803.0" width="156.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.5" y="814.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (102 samples, 13.23%)</title><rect x="187.5" y="787.0" width="156.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.5" y="798.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (77 samples, 9.99%)</title><rect x="187.5" y="771.0" width="117.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="190.5" y="782.0">Java_org_rocks..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.13%)</title><rect x="187.5" y="755.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="190.5" y="766.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (76 samples, 9.86%)</title><rect x="189.1" y="755.0" width="116.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="192.1" y="766.0">rocksdb_get_he..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="189.1" y="739.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="192.1" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.26%)</title><rect x="190.6" y="739.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="193.6" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.13%)</title><rect x="192.1" y="723.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="195.1" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.13%)</title><rect x="192.1" y="707.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="195.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (73 samples, 9.47%)</title><rect x="193.7" y="739.0" width="111.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="196.7" y="750.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.13%)</title><rect x="193.7" y="723.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="196.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (72 samples, 9.34%)</title><rect x="195.2" y="723.0" width="110.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="198.2" y="734.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (72 samples, 9.34%)</title><rect x="195.2" y="707.0" width="110.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="198.2" y="718.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (69 samples, 8.95%)</title><rect x="195.2" y="691.0" width="105.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="198.2" y="702.0">rocksdb::DBIm..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="195.2" y="675.0" width="1.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="198.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.26%)</title><rect x="196.7" y="675.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="199.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.26%)</title><rect x="196.7" y="659.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="199.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.13%)</title><rect x="196.7" y="643.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="199.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.13%)</title><rect x="196.7" y="627.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="199.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.13%)</title><rect x="198.2" y="643.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="201.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (65 samples, 8.43%)</title><rect x="199.8" y="675.0" width="99.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="202.8" y="686.0">rocksdb::Mem..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (63 samples, 8.17%)</title><rect x="202.8" y="659.0" width="96.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="205.8" y="670.0">/tmp/libroc..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.13%)</title><rect x="202.8" y="643.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="205.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.13%)</title><rect x="202.8" y="627.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="205.8" y="638.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.13%)</title><rect x="202.8" y="611.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="205.8" y="622.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.13%)</title><rect x="202.8" y="595.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="205.8" y="606.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.13%)</title><rect x="202.8" y="579.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="205.8" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.13%)</title><rect x="202.8" y="563.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="205.8" y="574.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.13%)</title><rect x="202.8" y="547.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="205.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (62 samples, 8.04%)</title><rect x="204.4" y="643.0" width="94.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="207.4" y="654.0">rocksdb::In..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.26%)</title><rect x="205.9" y="627.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="208.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.13%)</title><rect x="209.0" y="627.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="212.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (58 samples, 7.52%)</title><rect x="210.5" y="627.0" width="88.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="213.5" y="638.0">rocksdb::M..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (57 samples, 7.39%)</title><rect x="210.5" y="611.0" width="87.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="213.5" y="622.0">rocksdb::B..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (11 samples, 1.43%)</title><rect x="212.0" y="595.0" width="16.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="215.0" y="606.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.13%)</title><rect x="212.0" y="579.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="215.0" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (10 samples, 1.30%)</title><rect x="213.6" y="579.0" width="15.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="216.6" y="590.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.13%)</title><rect x="218.1" y="563.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="221.1" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="219.7" y="563.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="222.7" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.52%)</title><rect x="221.2" y="563.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="224.2" y="574.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.13%)</title><rect x="221.2" y="547.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="224.2" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.26%)</title><rect x="222.7" y="547.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="225.7" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.26%)</title><rect x="222.7" y="531.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="225.7" y="542.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.13%)</title><rect x="225.8" y="547.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="228.8" y="558.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.13%)</title><rect x="227.3" y="563.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="230.3" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (23 samples, 2.98%)</title><rect x="228.9" y="595.0" width="35.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="231.9" y="606.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (22 samples, 2.85%)</title><rect x="230.4" y="579.0" width="33.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="233.4" y="590.0">jn..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.13%)</title><rect x="230.4" y="563.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="233.4" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.13%)</title><rect x="231.9" y="563.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="234.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="233.5" y="563.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="236.5" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (19 samples, 2.46%)</title><rect x="235.0" y="563.0" width="29.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="238.0" y="574.0">jn..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.26%)</title><rect x="238.0" y="547.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="241.0" y="558.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.13%)</title><rect x="241.1" y="547.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="244.1" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (12 samples, 1.56%)</title><rect x="242.6" y="547.0" width="18.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="245.6" y="558.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.13%)</title><rect x="250.3" y="531.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="253.3" y="542.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.13%)</title><rect x="251.8" y="531.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="254.8" y="542.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.39%)</title><rect x="253.3" y="531.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="256.3" y="542.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.13%)</title><rect x="257.9" y="531.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="260.9" y="542.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.13%)</title><rect x="259.5" y="531.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="262.5" y="542.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.26%)</title><rect x="261.0" y="547.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="264.0" y="558.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.39%)</title><rect x="264.1" y="595.0" width="4.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="267.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.39%)</title><rect x="264.1" y="579.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.39%)</title><rect x="264.1" y="563.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.1" y="574.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.26%)</title><rect x="265.6" y="547.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.6" y="558.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 1.17%)</title><rect x="268.7" y="595.0" width="13.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="271.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.17%)</title><rect x="268.7" y="579.0" width="13.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.17%)</title><rect x="268.7" y="563.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 1.04%)</title><rect x="270.2" y="547.0" width="12.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.2" y="558.0"></text>
</g>
<g>
<title>do_futex (8 samples, 1.04%)</title><rect x="270.2" y="531.0" width="12.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.2" y="542.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.91%)</title><rect x="270.2" y="515.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.2" y="526.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.91%)</title><rect x="270.2" y="499.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="273.2" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.91%)</title><rect x="270.2" y="483.0" width="10.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.2" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.91%)</title><rect x="270.2" y="467.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="273.2" y="478.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.13%)</title><rect x="280.9" y="515.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="283.9" y="526.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.91%)</title><rect x="282.4" y="595.0" width="10.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="285.4" y="606.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.13%)</title><rect x="282.4" y="579.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="285.4" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.39%)</title><rect x="284.0" y="579.0" width="4.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="287.0" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.39%)</title><rect x="288.5" y="579.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="291.5" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.13%)</title><rect x="293.1" y="595.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="296.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.13%)</title><rect x="294.7" y="595.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="297.7" y="606.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.13%)</title><rect x="294.7" y="579.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="297.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.13%)</title><rect x="296.2" y="595.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="299.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.13%)</title><rect x="297.7" y="611.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="300.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.13%)</title><rect x="299.3" y="675.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="302.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.13%)</title><rect x="300.8" y="691.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="303.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.13%)</title><rect x="302.3" y="691.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="305.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.13%)</title><rect x="303.9" y="691.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="306.9" y="702.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.26%)</title><rect x="305.4" y="771.0" width="3.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="308.4" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (4 samples, 0.52%)</title><rect x="308.4" y="771.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (19 samples, 2.46%)</title><rect x="314.6" y="771.0" width="29.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.6" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (19 samples, 2.46%)</title><rect x="314.6" y="755.0" width="29.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.6" y="766.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (19 samples, 2.46%)</title><rect x="314.6" y="739.0" width="29.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.6" y="750.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.13%)</title><rect x="314.6" y="723.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.6" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (18 samples, 2.33%)</title><rect x="316.1" y="723.0" width="27.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.1" y="734.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (16 samples, 2.08%)</title><rect x="319.2" y="707.0" width="24.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.2" y="718.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (12 samples, 1.56%)</title><rect x="320.7" y="691.0" width="18.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="323.7" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="320.7" y="675.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="323.7" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="322.2" y="675.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="325.2" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.26%)</title><rect x="323.7" y="675.0" width="3.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="326.7" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="323.7" y="659.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="326.7" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 0.65%)</title><rect x="326.8" y="675.0" width="7.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="329.8" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.13%)</title><rect x="328.3" y="659.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="331.3" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.13%)</title><rect x="329.9" y="659.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="332.9" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="331.4" y="659.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="334.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.39%)</title><rect x="334.5" y="675.0" width="4.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="337.5" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="336.0" y="659.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="339.0" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.13%)</title><rect x="339.1" y="691.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="342.1" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.13%)</title><rect x="340.6" y="691.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="343.6" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.13%)</title><rect x="342.1" y="691.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="345.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithTimestamp (4 samples, 0.52%)</title><rect x="343.6" y="819.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeader (1 samples, 0.13%)</title><rect x="343.6" y="803.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.13%)</title><rect x="343.6" y="787.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="346.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1511785794.invoke (1 samples, 0.13%)</title><rect x="343.6" y="771.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="346.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.13%)</title><rect x="343.6" y="755.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.13%)</title><rect x="343.6" y="739.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.6" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.13%)</title><rect x="343.6" y="723.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="346.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.&lt;init&gt; (3 samples, 0.39%)</title><rect x="345.2" y="803.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.39%)</title><rect x="345.2" y="787.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.2" y="798.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.13%)</title><rect x="345.2" y="771.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="348.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.26%)</title><rect x="346.7" y="771.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicateGet (122 samples, 15.82%)</title><rect x="349.8" y="835.0" width="186.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.8" y="846.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.mergeGetResponses (3 samples, 0.39%)</title><rect x="349.8" y="819.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.8" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (3 samples, 0.39%)</title><rect x="349.8" y="803.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.8" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (3 samples, 0.39%)</title><rect x="349.8" y="787.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.8" y="798.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (3 samples, 0.39%)</title><rect x="349.8" y="771.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.8" y="782.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (2 samples, 0.26%)</title><rect x="349.8" y="755.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.8" y="766.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/600625621.compare (2 samples, 0.26%)</title><rect x="349.8" y="739.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.8" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (2 samples, 0.26%)</title><rect x="349.8" y="723.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger$$Lambda$99/1706362217.applyAsLong (2 samples, 0.26%)</title><rect x="349.8" y="707.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.lambda$mergeGetResponses$0 (2 samples, 0.26%)</title><rect x="349.8" y="691.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.13%)</title><rect x="349.8" y="675.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.13%)</title><rect x="349.8" y="659.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.13%)</title><rect x="351.3" y="675.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.13%)</title><rect x="351.3" y="659.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.13%)</title><rect x="351.3" y="643.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.3" y="654.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (1 samples, 0.13%)</title><rect x="352.8" y="755.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.8" y="766.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$103/600625621.compare (1 samples, 0.13%)</title><rect x="352.8" y="739.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.8" y="750.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.13%)</title><rect x="352.8" y="723.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger$$Lambda$99/1706362217.applyAsLong (1 samples, 0.13%)</title><rect x="352.8" y="707.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.lambda$mergeGetResponses$0 (1 samples, 0.13%)</title><rect x="352.8" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.13%)</title><rect x="352.8" y="675.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.13%)</title><rect x="352.8" y="659.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.13%)</title><rect x="352.8" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="355.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.13%)</title><rect x="352.8" y="627.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (119 samples, 15.43%)</title><rect x="354.4" y="819.0" width="182.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.4" y="830.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (119 samples, 15.43%)</title><rect x="354.4" y="803.0" width="182.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.4" y="814.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.13%)</title><rect x="354.4" y="787.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.4" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.13%)</title><rect x="354.4" y="771.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (1 samples, 0.13%)</title><rect x="354.4" y="755.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="357.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.13%)</title><rect x="355.9" y="787.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.13%)</title><rect x="355.9" y="771.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestToReplicas (117 samples, 15.18%)</title><rect x="357.4" y="787.0" width="179.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.4" y="798.0">ru/mail/polis/service/s..</text>
</g>
<g>
<title>one/nio/http/HttpClient.get (114 samples, 14.79%)</title><rect x="357.4" y="771.0" width="174.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.4" y="782.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (114 samples, 14.79%)</title><rect x="357.4" y="755.0" width="174.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.4" y="766.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (114 samples, 14.79%)</title><rect x="357.4" y="739.0" width="174.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.4" y="750.0">one/nio/http/HttpClien..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.13%)</title><rect x="363.5" y="723.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.13%)</title><rect x="363.5" y="707.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (29 samples, 3.76%)</title><rect x="365.1" y="723.0" width="44.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.1" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (29 samples, 3.76%)</title><rect x="365.1" y="707.0" width="44.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.1" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.26%)</title><rect x="365.1" y="691.0" width="3.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="368.1" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="365.1" y="675.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="368.1" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.13%)</title><rect x="366.6" y="675.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="369.6" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.13%)</title><rect x="366.6" y="659.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="369.6" y="670.0"></text>
</g>
<g>
<title>__GI___recv (27 samples, 3.50%)</title><rect x="368.1" y="691.0" width="41.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="371.1" y="702.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 3.24%)</title><rect x="371.2" y="675.0" width="38.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="374.2" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (25 samples, 3.24%)</title><rect x="371.2" y="659.0" width="38.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.2" y="670.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 3.11%)</title><rect x="371.2" y="643.0" width="36.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.2" y="654.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (24 samples, 3.11%)</title><rect x="371.2" y="627.0" width="36.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="374.2" y="638.0">__s..</text>
</g>
<g>
<title>sock_recvmsg (22 samples, 2.85%)</title><rect x="371.2" y="611.0" width="33.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.2" y="622.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (22 samples, 2.85%)</title><rect x="371.2" y="595.0" width="33.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="374.2" y="606.0">in..</text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.13%)</title><rect x="371.2" y="579.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="374.2" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 2.72%)</title><rect x="372.7" y="579.0" width="32.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.7" y="590.0">tc..</text>
</g>
<g>
<title>sk_wait_data (9 samples, 1.17%)</title><rect x="372.7" y="563.0" width="13.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="375.7" y="574.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.13%)</title><rect x="374.3" y="547.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="377.3" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="374.3" y="531.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="377.3" y="542.0"></text>
</g>
<g>
<title>wait_woken (7 samples, 0.91%)</title><rect x="375.8" y="547.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="378.8" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (7 samples, 0.91%)</title><rect x="375.8" y="531.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="378.8" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.26%)</title><rect x="375.8" y="515.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="378.8" y="526.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.26%)</title><rect x="378.8" y="515.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.8" y="526.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (2 samples, 0.26%)</title><rect x="378.8" y="499.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.8" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.26%)</title><rect x="378.8" y="483.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="381.8" y="494.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.26%)</title><rect x="381.9" y="515.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.9" y="526.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.26%)</title><rect x="381.9" y="499.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.9" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.26%)</title><rect x="381.9" y="483.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.9" y="494.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.13%)</title><rect x="385.0" y="515.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.0" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.26%)</title><rect x="386.5" y="563.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.5" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.26%)</title><rect x="386.5" y="547.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.5" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.26%)</title><rect x="386.5" y="531.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.5" y="542.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.26%)</title><rect x="386.5" y="515.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="389.5" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (10 samples, 1.30%)</title><rect x="389.6" y="563.0" width="15.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="392.6" y="574.0"></text>
</g>
<g>
<title>tcp_send_ack (10 samples, 1.30%)</title><rect x="389.6" y="547.0" width="15.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="392.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.13%)</title><rect x="389.6" y="531.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.6" y="542.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (9 samples, 1.17%)</title><rect x="391.1" y="531.0" width="13.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="394.1" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.13%)</title><rect x="391.1" y="515.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="394.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="391.1" y="499.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="394.1" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (8 samples, 1.04%)</title><rect x="392.6" y="515.0" width="12.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.6" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (8 samples, 1.04%)</title><rect x="392.6" y="499.0" width="12.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="395.6" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (8 samples, 1.04%)</title><rect x="392.6" y="483.0" width="12.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.6" y="494.0"></text>
</g>
<g>
<title>ip_local_out (8 samples, 1.04%)</title><rect x="392.6" y="467.0" width="12.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.6" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.13%)</title><rect x="392.6" y="451.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.6" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="392.6" y="435.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.6" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.13%)</title><rect x="392.6" y="419.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="395.6" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.13%)</title><rect x="392.6" y="403.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.6" y="414.0"></text>
</g>
<g>
<title>ip_output (7 samples, 0.91%)</title><rect x="394.2" y="451.0" width="10.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="397.2" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.78%)</title><rect x="394.2" y="435.0" width="9.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="397.2" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.78%)</title><rect x="394.2" y="419.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.78%)</title><rect x="394.2" y="403.0" width="9.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="397.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.65%)</title><rect x="394.2" y="387.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="397.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 0.65%)</title><rect x="394.2" y="371.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.2" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.52%)</title><rect x="395.7" y="355.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="398.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.52%)</title><rect x="395.7" y="339.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="398.7" y="350.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.52%)</title><rect x="395.7" y="323.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="398.7" y="334.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.52%)</title><rect x="395.7" y="307.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.7" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.52%)</title><rect x="395.7" y="291.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="398.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.52%)</title><rect x="395.7" y="275.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="398.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.52%)</title><rect x="395.7" y="259.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.52%)</title><rect x="395.7" y="243.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="398.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.52%)</title><rect x="395.7" y="227.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="398.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.52%)</title><rect x="395.7" y="211.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="398.7" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.52%)</title><rect x="395.7" y="195.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.52%)</title><rect x="395.7" y="179.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="398.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.52%)</title><rect x="395.7" y="163.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="398.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.52%)</title><rect x="395.7" y="147.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.7" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.13%)</title><rect x="395.7" y="131.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.7" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.13%)</title><rect x="395.7" y="115.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="398.7" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.13%)</title><rect x="395.7" y="99.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="398.7" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.13%)</title><rect x="395.7" y="83.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="398.7" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.13%)</title><rect x="395.7" y="67.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.7" y="78.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.26%)</title><rect x="397.2" y="131.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.26%)</title><rect x="397.2" y="115.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.13%)</title><rect x="398.7" y="99.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="401.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.13%)</title><rect x="398.7" y="83.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="401.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.13%)</title><rect x="398.7" y="67.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="401.7" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.13%)</title><rect x="398.7" y="51.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="401.7" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.13%)</title><rect x="398.7" y="35.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="401.7" y="46.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.13%)</title><rect x="400.3" y="131.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="403.3" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.13%)</title><rect x="401.8" y="387.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="404.8" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.13%)</title><rect x="401.8" y="371.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="404.8" y="382.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.13%)</title><rect x="401.8" y="355.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="404.8" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="403.3" y="435.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.3" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.13%)</title><rect x="403.3" y="419.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.3" y="430.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.13%)</title><rect x="403.3" y="403.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="406.3" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.26%)</title><rect x="404.9" y="611.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="407.9" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.26%)</title><rect x="404.9" y="595.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.9" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.26%)</title><rect x="404.9" y="579.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="407.9" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.13%)</title><rect x="406.4" y="563.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.4" y="574.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="407.9" y="643.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.9" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="407.9" y="627.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="410.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 0.65%)</title><rect x="409.5" y="723.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.13%)</title><rect x="409.5" y="707.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.13%)</title><rect x="409.5" y="691.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.13%)</title><rect x="411.0" y="707.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="414.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.13%)</title><rect x="411.0" y="691.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.13%)</title><rect x="412.5" y="707.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.13%)</title><rect x="412.5" y="691.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.13%)</title><rect x="412.5" y="675.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.26%)</title><rect x="414.0" y="707.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.26%)</title><rect x="414.0" y="691.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.13%)</title><rect x="415.6" y="675.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (8 samples, 1.04%)</title><rect x="417.1" y="723.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.13%)</title><rect x="417.1" y="707.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.13%)</title><rect x="418.6" y="707.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.78%)</title><rect x="420.2" y="707.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.78%)</title><rect x="420.2" y="691.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.78%)</title><rect x="420.2" y="675.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.2" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="420.2" y="659.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="423.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.65%)</title><rect x="421.7" y="659.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.13%)</title><rect x="427.8" y="643.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (10 samples, 1.30%)</title><rect x="429.4" y="723.0" width="15.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.4" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (9 samples, 1.17%)</title><rect x="430.9" y="707.0" width="13.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="433.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.17%)</title><rect x="430.9" y="691.0" width="13.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.17%)</title><rect x="430.9" y="675.0" width="13.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="433.9" y="686.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.13%)</title><rect x="432.4" y="659.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="435.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (5 samples, 0.65%)</title><rect x="433.9" y="659.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="436.9" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.52%)</title><rect x="433.9" y="643.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.9" y="654.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.13%)</title><rect x="433.9" y="627.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.9" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.13%)</title><rect x="435.5" y="627.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.5" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.13%)</title><rect x="435.5" y="611.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="438.5" y="622.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.13%)</title><rect x="435.5" y="595.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="438.5" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.13%)</title><rect x="435.5" y="579.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.5" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.26%)</title><rect x="437.0" y="627.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.0" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.26%)</title><rect x="437.0" y="611.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.26%)</title><rect x="437.0" y="595.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.0" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.13%)</title><rect x="438.5" y="579.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.5" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="440.1" y="643.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.1" y="654.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="441.6" y="659.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="444.6" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="441.6" y="643.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="444.6" y="654.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.13%)</title><rect x="441.6" y="627.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.6" y="638.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="443.1" y="659.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="446.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (56 samples, 7.26%)</title><rect x="444.7" y="723.0" width="85.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.7" y="734.0">one/nio/ne..</text>
</g>
<g>
<title>__libc_send (56 samples, 7.26%)</title><rect x="444.7" y="707.0" width="85.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="447.7" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 7.26%)</title><rect x="444.7" y="691.0" width="85.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="447.7" y="702.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.13%)</title><rect x="444.7" y="675.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="447.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 7.13%)</title><rect x="446.2" y="675.0" width="84.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.2" y="686.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (55 samples, 7.13%)</title><rect x="446.2" y="659.0" width="84.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="449.2" y="670.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (55 samples, 7.13%)</title><rect x="446.2" y="643.0" width="84.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="449.2" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (54 samples, 7.00%)</title><rect x="447.7" y="627.0" width="82.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="450.7" y="638.0">sock_send..</text>
</g>
<g>
<title>inet6_sendmsg (53 samples, 6.87%)</title><rect x="447.7" y="611.0" width="81.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.7" y="622.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (53 samples, 6.87%)</title><rect x="447.7" y="595.0" width="81.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="450.7" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.13%)</title><rect x="447.7" y="579.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (52 samples, 6.74%)</title><rect x="449.2" y="579.0" width="79.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.2" y="590.0">tcp_sendm..</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.39%)</title><rect x="450.8" y="563.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.8" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.39%)</title><rect x="450.8" y="547.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="453.8" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.13%)</title><rect x="450.8" y="531.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.8" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="452.3" y="531.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.3" y="542.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.13%)</title><rect x="453.8" y="531.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="456.8" y="542.0"></text>
</g>
<g>
<title>tcp_push (46 samples, 5.97%)</title><rect x="455.4" y="563.0" width="70.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="458.4" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (46 samples, 5.97%)</title><rect x="455.4" y="547.0" width="70.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="458.4" y="558.0">__tcp_pu..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.13%)</title><rect x="455.4" y="531.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="458.4" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 5.84%)</title><rect x="456.9" y="531.0" width="68.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.9" y="542.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (42 samples, 5.45%)</title><rect x="456.9" y="515.0" width="64.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.9" y="526.0">__tcp_t..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.13%)</title><rect x="456.9" y="499.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="459.9" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (40 samples, 5.19%)</title><rect x="458.4" y="499.0" width="61.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="461.4" y="510.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (40 samples, 5.19%)</title><rect x="458.4" y="483.0" width="61.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.4" y="494.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (39 samples, 5.06%)</title><rect x="460.0" y="467.0" width="59.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.0" y="478.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.39%)</title><rect x="463.0" y="451.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.0" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.39%)</title><rect x="463.0" y="435.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.39%)</title><rect x="463.0" y="419.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="466.0" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.13%)</title><rect x="463.0" y="403.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.26%)</title><rect x="464.6" y="403.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="467.6" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.13%)</title><rect x="464.6" y="387.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.13%)</title><rect x="466.1" y="387.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="469.1" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.13%)</title><rect x="466.1" y="371.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="469.1" y="382.0"></text>
</g>
<g>
<title>ip_output (34 samples, 4.41%)</title><rect x="467.6" y="451.0" width="52.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.6" y="462.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (34 samples, 4.41%)</title><rect x="467.6" y="435.0" width="52.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="470.6" y="446.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (34 samples, 4.41%)</title><rect x="467.6" y="419.0" width="52.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="470.6" y="430.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (33 samples, 4.28%)</title><rect x="469.1" y="403.0" width="50.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.1" y="414.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 3.89%)</title><rect x="469.1" y="387.0" width="46.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.1" y="398.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.20 (30 samples, 3.89%)</title><rect x="469.1" y="371.0" width="46.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.1" y="382.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 3.89%)</title><rect x="469.1" y="355.0" width="46.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.1" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 3.89%)</title><rect x="469.1" y="339.0" width="46.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.1" y="350.0">__so..</text>
</g>
<g>
<title>net_rx_action (28 samples, 3.63%)</title><rect x="470.7" y="323.0" width="42.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.7" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (27 samples, 3.50%)</title><rect x="472.2" y="307.0" width="41.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="475.2" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (27 samples, 3.50%)</title><rect x="472.2" y="291.0" width="41.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="475.2" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (27 samples, 3.50%)</title><rect x="472.2" y="275.0" width="41.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.2" y="286.0">__n..</text>
</g>
<g>
<title>ip_rcv (25 samples, 3.24%)</title><rect x="472.2" y="259.0" width="38.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="475.2" y="270.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (24 samples, 3.11%)</title><rect x="472.2" y="243.0" width="36.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="475.2" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (24 samples, 3.11%)</title><rect x="472.2" y="227.0" width="36.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="475.2" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 3.11%)</title><rect x="472.2" y="211.0" width="36.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.2" y="222.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 3.11%)</title><rect x="472.2" y="195.0" width="36.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.2" y="206.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (24 samples, 3.11%)</title><rect x="472.2" y="179.0" width="36.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.2" y="190.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="473.7" y="163.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.7" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.26%)</title><rect x="475.3" y="163.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="478.3" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.13%)</title><rect x="476.8" y="147.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="479.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 2.46%)</title><rect x="478.3" y="163.0" width="29.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="481.3" y="174.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 2.46%)</title><rect x="478.3" y="147.0" width="29.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.3" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.13%)</title><rect x="479.9" y="131.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="482.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.13%)</title><rect x="479.9" y="115.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="479.9" y="99.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.39%)</title><rect x="481.4" y="131.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.4" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.13%)</title><rect x="482.9" y="115.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="485.9" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.13%)</title><rect x="484.4" y="115.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.4" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (14 samples, 1.82%)</title><rect x="486.0" y="131.0" width="21.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="489.0" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (14 samples, 1.82%)</title><rect x="486.0" y="115.0" width="21.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.0" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 1.82%)</title><rect x="486.0" y="99.0" width="21.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="489.0" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 1.82%)</title><rect x="486.0" y="83.0" width="21.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.0" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (14 samples, 1.82%)</title><rect x="486.0" y="67.0" width="21.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="489.0" y="78.0">_..</text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.13%)</title><rect x="507.4" y="163.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.4" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.13%)</title><rect x="507.4" y="147.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.4" y="158.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.13%)</title><rect x="508.9" y="243.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="511.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.13%)</title><rect x="510.5" y="259.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="513.5" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="512.0" y="259.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.0" y="270.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.13%)</title><rect x="513.5" y="323.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.5" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.39%)</title><rect x="515.1" y="387.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="518.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.39%)</title><rect x="515.1" y="371.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.39%)</title><rect x="515.1" y="355.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.13%)</title><rect x="516.6" y="339.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="519.6" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.13%)</title><rect x="516.6" y="323.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="519.6" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.13%)</title><rect x="518.1" y="339.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.1" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.13%)</title><rect x="519.6" y="499.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.6" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.13%)</title><rect x="519.6" y="483.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="522.6" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.39%)</title><rect x="521.2" y="515.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.2" y="526.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.13%)</title><rect x="522.7" y="499.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="525.7" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.13%)</title><rect x="524.2" y="499.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="527.2" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="524.2" y="483.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="527.2" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="524.2" y="467.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="527.2" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="524.2" y="451.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="527.2" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.26%)</title><rect x="525.8" y="563.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.8" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.13%)</title><rect x="525.8" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="528.8" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.13%)</title><rect x="527.3" y="547.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="530.3" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.13%)</title><rect x="528.8" y="611.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="531.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.13%)</title><rect x="528.8" y="595.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="531.8" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.13%)</title><rect x="528.8" y="579.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.8" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.13%)</title><rect x="528.8" y="563.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.8" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.13%)</title><rect x="528.8" y="547.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="531.8" y="558.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.13%)</title><rect x="528.8" y="531.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="531.8" y="542.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (1 samples, 0.13%)</title><rect x="530.4" y="723.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.13%)</title><rect x="531.9" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.13%)</title><rect x="531.9" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.13%)</title><rect x="531.9" y="739.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.13%)</title><rect x="531.9" y="723.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (2 samples, 0.26%)</title><rect x="533.4" y="771.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.26%)</title><rect x="533.4" y="755.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.13%)</title><rect x="535.0" y="739.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="538.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.13%)</title><rect x="535.0" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.13%)</title><rect x="535.0" y="707.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="538.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (43 samples, 5.58%)</title><rect x="536.5" y="835.0" width="65.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.5" y="846.0">ru/mail..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.13%)</title><rect x="538.0" y="819.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.0" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (1 samples, 0.13%)</title><rect x="538.0" y="803.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.13%)</title><rect x="539.5" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="542.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.13%)</title><rect x="539.5" y="803.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="542.5" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="541.1" y="819.0" width="1.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="544.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestToRemote (39 samples, 5.06%)</title><rect x="542.6" y="819.0" width="59.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.6" y="830.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.13%)</title><rect x="542.6" y="803.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.13%)</title><rect x="542.6" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (37 samples, 4.80%)</title><rect x="544.1" y="803.0" width="56.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.1" y="814.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (37 samples, 4.80%)</title><rect x="544.1" y="787.0" width="56.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.1" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (37 samples, 4.80%)</title><rect x="544.1" y="771.0" width="56.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.1" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (12 samples, 1.56%)</title><rect x="544.1" y="755.0" width="18.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 1.56%)</title><rect x="544.1" y="739.0" width="18.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.1" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.39%)</title><rect x="544.1" y="723.0" width="4.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="547.1" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.26%)</title><rect x="545.7" y="707.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="548.7" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.13%)</title><rect x="547.2" y="691.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="550.2" y="702.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 1.04%)</title><rect x="548.7" y="723.0" width="12.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="551.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.91%)</title><rect x="550.3" y="707.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="553.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.91%)</title><rect x="550.3" y="691.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="553.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.91%)</title><rect x="550.3" y="675.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="553.3" y="686.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.91%)</title><rect x="550.3" y="659.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="553.3" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.91%)</title><rect x="550.3" y="643.0" width="10.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.3" y="654.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.91%)</title><rect x="550.3" y="627.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.3" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.78%)</title><rect x="551.8" y="611.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="554.8" y="622.0"></text>
</g>
<g>
<title>sk_wait_data (3 samples, 0.39%)</title><rect x="553.3" y="595.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="556.3" y="606.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.13%)</title><rect x="553.3" y="579.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="553.3" y="563.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="556.3" y="574.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.26%)</title><rect x="554.9" y="579.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="557.9" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.26%)</title><rect x="554.9" y="563.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.9" y="574.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.26%)</title><rect x="554.9" y="547.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="557.9" y="558.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.26%)</title><rect x="554.9" y="531.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="557.9" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.26%)</title><rect x="554.9" y="515.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="557.9" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.26%)</title><rect x="557.9" y="595.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.26%)</title><rect x="557.9" y="579.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.9" y="590.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.26%)</title><rect x="557.9" y="563.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="560.9" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.26%)</title><rect x="557.9" y="547.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.9" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.26%)</title><rect x="557.9" y="531.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="560.9" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.26%)</title><rect x="557.9" y="515.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.9" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.26%)</title><rect x="557.9" y="499.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="560.9" y="510.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.26%)</title><rect x="557.9" y="483.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="560.9" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.26%)</title><rect x="557.9" y="467.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.9" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.26%)</title><rect x="557.9" y="451.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="560.9" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.26%)</title><rect x="557.9" y="435.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.9" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="559.4" y="419.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="562.4" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.13%)</title><rect x="559.4" y="403.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.4" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.13%)</title><rect x="559.4" y="387.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.4" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.13%)</title><rect x="559.4" y="371.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.4" y="382.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.13%)</title><rect x="561.0" y="723.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="564.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.13%)</title><rect x="562.5" y="755.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.13%)</title><rect x="562.5" y="739.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.13%)</title><rect x="562.5" y="723.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.5" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="562.5" y="707.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="565.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.39%)</title><rect x="564.0" y="755.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.26%)</title><rect x="565.6" y="739.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.13%)</title><rect x="565.6" y="723.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.13%)</title><rect x="565.6" y="707.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.13%)</title><rect x="567.1" y="723.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.13%)</title><rect x="567.1" y="707.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.13%)</title><rect x="567.1" y="691.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.52%)</title><rect x="568.6" y="755.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.6" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (4 samples, 0.52%)</title><rect x="568.6" y="739.0" width="6.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="571.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.52%)</title><rect x="568.6" y="723.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.52%)</title><rect x="568.6" y="707.0" width="6.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.52%)</title><rect x="568.6" y="691.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.6" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.52%)</title><rect x="568.6" y="675.0" width="6.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="571.6" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.13%)</title><rect x="568.6" y="659.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="571.6" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.13%)</title><rect x="570.2" y="659.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="573.2" y="670.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.26%)</title><rect x="571.7" y="659.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="574.7" y="670.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.13%)</title><rect x="571.7" y="643.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.7" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.13%)</title><rect x="573.2" y="643.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="576.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (16 samples, 2.08%)</title><rect x="574.7" y="755.0" width="24.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.7" y="766.0">o..</text>
</g>
<g>
<title>__libc_send (16 samples, 2.08%)</title><rect x="574.7" y="739.0" width="24.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="577.7" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 2.08%)</title><rect x="574.7" y="723.0" width="24.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="577.7" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 2.08%)</title><rect x="574.7" y="707.0" width="24.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="577.7" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (16 samples, 2.08%)</title><rect x="574.7" y="691.0" width="24.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.7" y="702.0">_..</text>
</g>
<g>
<title>__sys_sendto (16 samples, 2.08%)</title><rect x="574.7" y="675.0" width="24.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.7" y="686.0">_..</text>
</g>
<g>
<title>sock_sendmsg (16 samples, 2.08%)</title><rect x="574.7" y="659.0" width="24.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.7" y="670.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (15 samples, 1.95%)</title><rect x="576.3" y="643.0" width="22.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="579.3" y="654.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (15 samples, 1.95%)</title><rect x="576.3" y="627.0" width="22.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="579.3" y="638.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (15 samples, 1.95%)</title><rect x="576.3" y="611.0" width="22.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="579.3" y="622.0">t..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.13%)</title><rect x="576.3" y="595.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="579.3" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.13%)</title><rect x="576.3" y="579.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="579.3" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.13%)</title><rect x="576.3" y="563.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.3" y="574.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.13%)</title><rect x="576.3" y="547.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.3" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.13%)</title><rect x="577.8" y="595.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="580.8" y="606.0"></text>
</g>
<g>
<title>tcp_push (13 samples, 1.69%)</title><rect x="579.3" y="595.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="582.3" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 1.69%)</title><rect x="579.3" y="579.0" width="19.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="582.3" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 1.69%)</title><rect x="579.3" y="563.0" width="19.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.3" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 1.69%)</title><rect x="579.3" y="547.0" width="19.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.3" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (13 samples, 1.69%)</title><rect x="579.3" y="531.0" width="19.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.3" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 1.69%)</title><rect x="579.3" y="515.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="582.3" y="526.0"></text>
</g>
<g>
<title>ip_local_out (13 samples, 1.69%)</title><rect x="579.3" y="499.0" width="19.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.3" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.26%)</title><rect x="579.3" y="483.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="582.3" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.13%)</title><rect x="580.9" y="467.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.9" y="478.0"></text>
</g>
<g>
<title>ip_output (11 samples, 1.43%)</title><rect x="582.4" y="483.0" width="16.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.4" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (11 samples, 1.43%)</title><rect x="582.4" y="467.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.4" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (11 samples, 1.43%)</title><rect x="582.4" y="451.0" width="16.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="585.4" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 1.43%)</title><rect x="582.4" y="435.0" width="16.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="585.4" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 1.30%)</title><rect x="582.4" y="419.0" width="15.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="585.4" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (10 samples, 1.30%)</title><rect x="582.4" y="403.0" width="15.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.4" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 1.30%)</title><rect x="582.4" y="387.0" width="15.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="585.4" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 1.30%)</title><rect x="582.4" y="371.0" width="15.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="585.4" y="382.0"></text>
</g>
<g>
<title>net_rx_action (10 samples, 1.30%)</title><rect x="582.4" y="355.0" width="15.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="585.4" y="366.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.13%)</title><rect x="582.4" y="339.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.4" y="350.0"></text>
</g>
<g>
<title>process_backlog (9 samples, 1.17%)</title><rect x="583.9" y="339.0" width="13.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.9" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (9 samples, 1.17%)</title><rect x="583.9" y="323.0" width="13.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.9" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (9 samples, 1.17%)</title><rect x="583.9" y="307.0" width="13.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.9" y="318.0"></text>
</g>
<g>
<title>ip_rcv (8 samples, 1.04%)</title><rect x="585.5" y="291.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.5" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.91%)</title><rect x="585.5" y="275.0" width="10.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="588.5" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.91%)</title><rect x="585.5" y="259.0" width="10.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="588.5" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.65%)</title><rect x="585.5" y="243.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.5" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.65%)</title><rect x="585.5" y="227.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.65%)</title><rect x="585.5" y="211.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.65%)</title><rect x="585.5" y="195.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="588.5" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.65%)</title><rect x="585.5" y="179.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.5" y="190.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.13%)</title><rect x="587.0" y="163.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.0" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.13%)</title><rect x="587.0" y="147.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="590.0" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="587.0" y="131.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="590.0" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="587.0" y="115.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="590.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="587.0" y="99.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.13%)</title><rect x="588.5" y="163.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.5" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.13%)</title><rect x="588.5" y="147.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.5" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.13%)</title><rect x="588.5" y="131.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.5" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.13%)</title><rect x="588.5" y="115.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.5" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.13%)</title><rect x="588.5" y="99.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="591.5" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.13%)</title><rect x="588.5" y="83.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.5" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.13%)</title><rect x="588.5" y="67.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="591.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.13%)</title><rect x="590.1" y="163.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="593.1" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.13%)</title><rect x="591.6" y="163.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.6" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.13%)</title><rect x="591.6" y="147.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="594.6" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.13%)</title><rect x="591.6" y="131.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="594.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.13%)</title><rect x="591.6" y="115.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="591.6" y="99.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.6" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.26%)</title><rect x="593.1" y="243.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.1" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.26%)</title><rect x="593.1" y="227.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.1" y="238.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.26%)</title><rect x="593.1" y="211.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.1" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.13%)</title><rect x="596.2" y="275.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.2" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.13%)</title><rect x="597.7" y="419.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.13%)</title><rect x="597.7" y="403.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.7" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.13%)</title><rect x="597.7" y="387.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.7" y="398.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.13%)</title><rect x="599.2" y="755.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.2" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.13%)</title><rect x="599.2" y="739.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.13%)</title><rect x="599.2" y="723.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.2" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.13%)</title><rect x="600.8" y="803.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.13%)</title><rect x="600.8" y="787.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.13%)</title><rect x="600.8" y="771.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.8" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.13%)</title><rect x="600.8" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$94/1004033355.run (272 samples, 35.28%)</title><rect x="602.3" y="931.0" width="416.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="942.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lamb..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$getReplication$3 (272 samples, 35.28%)</title><rect x="602.3" y="915.0" width="416.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.3" y="926.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.13%)</title><rect x="602.3" y="899.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.13%)</title><rect x="602.3" y="883.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$96/1650792299.get$Lambda (1 samples, 0.13%)</title><rect x="602.3" y="867.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$96/1650792299.&lt;init&gt; (1 samples, 0.13%)</title><rect x="602.3" y="851.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (271 samples, 35.15%)</title><rect x="603.8" y="899.0" width="414.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.8" y="910.0">ru/mail/polis/service/stasyanoi/server/CustomServer.inter..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (56 samples, 7.26%)</title><rect x="603.8" y="883.0" width="85.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.8" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.26%)</title><rect x="603.8" y="867.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.26%)</title><rect x="603.8" y="851.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.13%)</title><rect x="603.8" y="835.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.13%)</title><rect x="605.4" y="835.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="608.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.13%)</title><rect x="605.4" y="819.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.4" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="605.4" y="803.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="608.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (54 samples, 7.00%)</title><rect x="606.9" y="867.0" width="82.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.9" y="878.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 7.00%)</title><rect x="606.9" y="851.0" width="82.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.9" y="862.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (53 samples, 6.87%)</title><rect x="608.4" y="835.0" width="81.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.4" y="846.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (53 samples, 6.87%)</title><rect x="608.4" y="819.0" width="81.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.4" y="830.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (53 samples, 6.87%)</title><rect x="608.4" y="803.0" width="81.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.4" y="814.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.13%)</title><rect x="608.4" y="787.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="611.4" y="798.0"></text>
</g>
<g>
<title>__libc_send (52 samples, 6.74%)</title><rect x="609.9" y="787.0" width="79.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="612.9" y="798.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (52 samples, 6.74%)</title><rect x="609.9" y="771.0" width="79.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.9" y="782.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (52 samples, 6.74%)</title><rect x="609.9" y="755.0" width="79.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.9" y="766.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (52 samples, 6.74%)</title><rect x="609.9" y="739.0" width="79.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="612.9" y="750.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (52 samples, 6.74%)</title><rect x="609.9" y="723.0" width="79.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="612.9" y="734.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (52 samples, 6.74%)</title><rect x="609.9" y="707.0" width="79.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="612.9" y="718.0">sock_send..</text>
</g>
<g>
<title>inet6_sendmsg (51 samples, 6.61%)</title><rect x="609.9" y="691.0" width="78.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.9" y="702.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (51 samples, 6.61%)</title><rect x="609.9" y="675.0" width="78.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="612.9" y="686.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.13%)</title><rect x="609.9" y="659.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.9" y="670.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.13%)</title><rect x="611.5" y="659.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.5" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (49 samples, 6.36%)</title><rect x="613.0" y="659.0" width="75.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="616.0" y="670.0">tcp_send..</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.26%)</title><rect x="613.0" y="643.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.0" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.26%)</title><rect x="613.0" y="627.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="616.0" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.13%)</title><rect x="613.0" y="611.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.0" y="622.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.13%)</title><rect x="614.5" y="611.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="617.5" y="622.0"></text>
</g>
<g>
<title>tcp_push (47 samples, 6.10%)</title><rect x="616.1" y="643.0" width="71.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="619.1" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (47 samples, 6.10%)</title><rect x="616.1" y="627.0" width="71.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="619.1" y="638.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.13%)</title><rect x="616.1" y="611.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="619.1" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (46 samples, 5.97%)</title><rect x="617.6" y="611.0" width="70.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="620.6" y="622.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (45 samples, 5.84%)</title><rect x="617.6" y="595.0" width="68.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="620.6" y="606.0">__tcp_t..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.13%)</title><rect x="619.1" y="579.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.1" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (41 samples, 5.32%)</title><rect x="620.7" y="579.0" width="62.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.7" y="590.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 5.32%)</title><rect x="620.7" y="563.0" width="62.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="623.7" y="574.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (41 samples, 5.32%)</title><rect x="620.7" y="547.0" width="62.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.7" y="558.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (10 samples, 1.30%)</title><rect x="620.7" y="531.0" width="15.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="623.7" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.13%)</title><rect x="620.7" y="515.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.7" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.26%)</title><rect x="622.2" y="515.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="625.2" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.91%)</title><rect x="625.3" y="515.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="628.3" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.26%)</title><rect x="626.8" y="499.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="629.8" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.26%)</title><rect x="626.8" y="483.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="629.8" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.52%)</title><rect x="629.8" y="499.0" width="6.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="632.8" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.52%)</title><rect x="629.8" y="483.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="632.8" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.13%)</title><rect x="629.8" y="467.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="632.8" y="478.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.13%)</title><rect x="631.4" y="467.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.4" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.26%)</title><rect x="632.9" y="467.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="635.9" y="478.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.13%)</title><rect x="634.4" y="451.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="637.4" y="462.0"></text>
</g>
<g>
<title>ip_output (31 samples, 4.02%)</title><rect x="636.0" y="531.0" width="47.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.0" y="542.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (30 samples, 3.89%)</title><rect x="637.5" y="515.0" width="45.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.5" y="526.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (30 samples, 3.89%)</title><rect x="637.5" y="499.0" width="45.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="640.5" y="510.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 3.89%)</title><rect x="637.5" y="483.0" width="45.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="640.5" y="494.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 3.24%)</title><rect x="640.6" y="467.0" width="38.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.6" y="478.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (25 samples, 3.24%)</title><rect x="640.6" y="451.0" width="38.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="643.6" y="462.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 3.24%)</title><rect x="640.6" y="435.0" width="38.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="643.6" y="446.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 3.24%)</title><rect x="640.6" y="419.0" width="38.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="643.6" y="430.0">__s..</text>
</g>
<g>
<title>net_rx_action (25 samples, 3.24%)</title><rect x="640.6" y="403.0" width="38.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="643.6" y="414.0">net..</text>
</g>
<g>
<title>process_backlog (24 samples, 3.11%)</title><rect x="642.1" y="387.0" width="36.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="645.1" y="398.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (24 samples, 3.11%)</title><rect x="642.1" y="371.0" width="36.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="645.1" y="382.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 3.11%)</title><rect x="642.1" y="355.0" width="36.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="645.1" y="366.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="642.1" y="339.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="645.1" y="350.0"></text>
</g>
<g>
<title>ip_rcv (23 samples, 2.98%)</title><rect x="643.6" y="339.0" width="35.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="646.6" y="350.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 2.98%)</title><rect x="643.6" y="323.0" width="35.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="646.6" y="334.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 2.98%)</title><rect x="643.6" y="307.0" width="35.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="646.6" y="318.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 2.85%)</title><rect x="643.6" y="291.0" width="33.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="646.6" y="302.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (22 samples, 2.85%)</title><rect x="643.6" y="275.0" width="33.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.6" y="286.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (22 samples, 2.85%)</title><rect x="643.6" y="259.0" width="33.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="646.6" y="270.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="643.6" y="243.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.6" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 2.72%)</title><rect x="645.1" y="243.0" width="32.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.1" y="254.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 2.72%)</title><rect x="645.1" y="227.0" width="32.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="648.1" y="238.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.26%)</title><rect x="646.7" y="211.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.7" y="222.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.13%)</title><rect x="648.2" y="195.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.2" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="648.2" y="179.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="651.2" y="190.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="648.2" y="163.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="651.2" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="648.2" y="147.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.78%)</title><rect x="649.7" y="211.0" width="9.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="652.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.65%)</title><rect x="651.3" y="195.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="654.3" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.52%)</title><rect x="652.8" y="179.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="655.8" y="190.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.52%)</title><rect x="652.8" y="163.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.8" y="174.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.52%)</title><rect x="652.8" y="147.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="655.8" y="158.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.26%)</title><rect x="655.9" y="131.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="658.9" y="142.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.26%)</title><rect x="655.9" y="115.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="658.9" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.13%)</title><rect x="657.4" y="99.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="660.4" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (11 samples, 1.43%)</title><rect x="658.9" y="211.0" width="16.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.9" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 1.43%)</title><rect x="658.9" y="195.0" width="16.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.9" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 1.43%)</title><rect x="658.9" y="179.0" width="16.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="661.9" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 1.43%)</title><rect x="658.9" y="163.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.9" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 1.43%)</title><rect x="658.9" y="147.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.9" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.13%)</title><rect x="675.8" y="211.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="678.8" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="677.3" y="291.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.3" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.13%)</title><rect x="677.3" y="275.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.3" y="286.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.13%)</title><rect x="677.3" y="259.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="680.3" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.39%)</title><rect x="678.8" y="467.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="681.8" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.39%)</title><rect x="678.8" y="451.0" width="4.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="681.8" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.13%)</title><rect x="681.9" y="435.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.9" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.13%)</title><rect x="681.9" y="419.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.9" y="430.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.13%)</title><rect x="681.9" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.9" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.13%)</title><rect x="681.9" y="387.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="684.9" y="398.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.26%)</title><rect x="683.4" y="579.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="686.4" y="590.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.26%)</title><rect x="683.4" y="563.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="686.4" y="574.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.26%)</title><rect x="683.4" y="547.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.4" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.13%)</title><rect x="686.5" y="595.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.5" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.13%)</title><rect x="688.0" y="691.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="691.0" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.13%)</title><rect x="688.0" y="675.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="691.0" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.13%)</title><rect x="688.0" y="659.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="691.0" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.13%)</title><rect x="688.0" y="643.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="691.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$96/1650792299.get (215 samples, 27.89%)</title><rect x="689.5" y="883.0" width="329.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.5" y="894.0">ru/mail/polis/service/stasyanoi/server/Custom..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$getReplication$2 (215 samples, 27.89%)</title><rect x="689.5" y="867.0" width="329.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.5" y="878.0">ru/mail/polis/service/stasyanoi/server/Custom..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (215 samples, 27.89%)</title><rect x="689.5" y="851.0" width="329.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.5" y="862.0">ru/mail/polis/service/stasyanoi/server/Custom..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.13%)</title><rect x="689.5" y="835.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.13%)</title><rect x="689.5" y="819.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.13%)</title><rect x="689.5" y="803.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.5" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.13%)</title><rect x="689.5" y="787.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (212 samples, 27.50%)</title><rect x="691.1" y="835.0" width="324.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.1" y="846.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (211 samples, 27.37%)</title><rect x="691.1" y="819.0" width="322.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.1" y="830.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (211 samples, 27.37%)</title><rect x="691.1" y="803.0" width="322.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.1" y="814.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (142 samples, 18.42%)</title><rect x="692.6" y="787.0" width="217.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="695.6" y="798.0">Java_org_rocksdb_RocksDB_get_..</text>
</g>
<g>
<title>__malloc (1 samples, 0.13%)</title><rect x="695.7" y="771.0" width="1.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="698.7" y="782.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (139 samples, 18.03%)</title><rect x="697.2" y="771.0" width="212.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="700.2" y="782.0">rocksdb_get_helper(JNIEnv_*,..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.13%)</title><rect x="697.2" y="755.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="700.2" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.13%)</title><rect x="698.7" y="755.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="701.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (136 samples, 17.64%)</title><rect x="700.2" y="755.0" width="208.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="703.2" y="766.0">rocksdb::DB::Get(rocksdb::R..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.13%)</title><rect x="700.2" y="739.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="703.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (135 samples, 17.51%)</title><rect x="701.8" y="739.0" width="206.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="704.8" y="750.0">rocksdb::DB::Get(rocksdb::R..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (135 samples, 17.51%)</title><rect x="701.8" y="723.0" width="206.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="704.8" y="734.0">rocksdb::DBImpl::Get(rocksd..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.13%)</title><rect x="701.8" y="707.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="704.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (134 samples, 17.38%)</title><rect x="703.3" y="707.0" width="205.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="706.3" y="718.0">rocksdb::DBImpl::GetImpl(ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.13%)</title><rect x="703.3" y="691.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="706.3" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="704.8" y="691.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="707.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.13%)</title><rect x="706.4" y="691.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="709.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.13%)</title><rect x="706.4" y="675.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="709.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.13%)</title><rect x="707.9" y="691.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="710.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.13%)</title><rect x="707.9" y="675.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="710.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.13%)</title><rect x="709.4" y="691.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="712.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (126 samples, 16.34%)</title><rect x="711.0" y="691.0" width="192.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="714.0" y="702.0">rocksdb::MemTable::Get(ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (126 samples, 16.34%)</title><rect x="711.0" y="675.0" width="192.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="714.0" y="686.0">/tmp/librocksdbjni1657677..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (2 samples, 0.26%)</title><rect x="711.0" y="659.0" width="3.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="714.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.13%)</title><rect x="712.5" y="643.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="715.5" y="654.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.13%)</title><rect x="712.5" y="627.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="715.5" y="638.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.13%)</title><rect x="712.5" y="611.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="715.5" y="622.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.13%)</title><rect x="712.5" y="595.0" width="1.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="715.5" y="606.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.13%)</title><rect x="712.5" y="579.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="715.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (124 samples, 16.08%)</title><rect x="714.0" y="659.0" width="189.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="717.0" y="670.0">rocksdb::InlineSkipList&lt;r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (118 samples, 15.30%)</title><rect x="723.2" y="643.0" width="180.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="726.2" y="654.0">rocksdb::MemTable::KeyC..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.13%)</title><rect x="724.7" y="627.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="727.7" y="638.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.26%)</title><rect x="726.3" y="627.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="729.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (109 samples, 14.14%)</title><rect x="729.3" y="627.0" width="166.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="732.3" y="638.0">rocksdb::BaseComparat..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (17 samples, 2.20%)</title><rect x="737.0" y="611.0" width="26.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="740.0" y="622.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (16 samples, 2.08%)</title><rect x="737.0" y="595.0" width="24.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="740.0" y="606.0">j..</text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.13%)</title><rect x="741.6" y="579.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="744.6" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="743.1" y="579.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="746.1" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (11 samples, 1.43%)</title><rect x="744.6" y="579.0" width="16.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="747.6" y="590.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.13%)</title><rect x="749.2" y="563.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="752.2" y="574.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.13%)</title><rect x="750.8" y="563.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="753.8" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.78%)</title><rect x="752.3" y="563.0" width="9.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="755.3" y="574.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.13%)</title><rect x="755.3" y="547.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="758.3" y="558.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.13%)</title><rect x="756.9" y="547.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="759.9" y="558.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.13%)</title><rect x="756.9" y="531.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="759.9" y="542.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.26%)</title><rect x="758.4" y="547.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="761.4" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.13%)</title><rect x="761.5" y="595.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="764.5" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (30 samples, 3.89%)</title><rect x="763.0" y="611.0" width="45.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="766.0" y="622.0">JNIE..</text>
</g>
<g>
<title>jni_CallVoidMethodV (29 samples, 3.76%)</title><rect x="764.5" y="595.0" width="44.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="767.5" y="606.0">jni_..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.13%)</title><rect x="769.1" y="579.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="772.1" y="590.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.13%)</title><rect x="770.6" y="579.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="773.6" y="590.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.13%)</title><rect x="772.2" y="579.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.2" y="590.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.13%)</title><rect x="773.7" y="579.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="776.7" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.13%)</title><rect x="775.2" y="579.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="778.2" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="776.8" y="579.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="779.8" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (19 samples, 2.46%)</title><rect x="778.3" y="579.0" width="29.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="781.3" y="590.0">jn..</text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.26%)</title><rect x="786.0" y="563.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="789.0" y="574.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.13%)</title><rect x="789.0" y="563.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="792.0" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.91%)</title><rect x="790.5" y="563.0" width="10.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="793.5" y="574.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.13%)</title><rect x="795.1" y="547.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="798.1" y="558.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.39%)</title><rect x="796.7" y="547.0" width="4.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.13%)</title><rect x="799.7" y="531.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="802.7" y="542.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.13%)</title><rect x="801.3" y="563.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="804.3" y="574.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.26%)</title><rect x="802.8" y="563.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="805.8" y="574.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.13%)</title><rect x="805.8" y="563.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="808.8" y="574.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.13%)</title><rect x="807.4" y="579.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="810.4" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="808.9" y="611.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="811.9" y="622.0"></text>
</g>
<g>
<title>__lll_lock_wait (16 samples, 2.08%)</title><rect x="810.4" y="611.0" width="24.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="813.4" y="622.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.69%)</title><rect x="815.0" y="595.0" width="19.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="818.0" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.69%)</title><rect x="815.0" y="579.0" width="19.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="818.0" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.91%)</title><rect x="818.1" y="563.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.1" y="574.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.65%)</title><rect x="821.2" y="547.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="824.2" y="558.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.52%)</title><rect x="822.7" y="531.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="825.7" y="542.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.26%)</title><rect x="824.2" y="515.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.2" y="526.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.26%)</title><rect x="824.2" y="499.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="827.2" y="510.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (2 samples, 0.26%)</title><rect x="824.2" y="483.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.2" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.13%)</title><rect x="827.3" y="515.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.3" y="526.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.52%)</title><rect x="828.8" y="563.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="831.8" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.39%)</title><rect x="830.3" y="547.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="833.3" y="558.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.13%)</title><rect x="833.4" y="531.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.4" y="542.0"></text>
</g>
<g>
<title>__lll_unlock_wake (22 samples, 2.85%)</title><rect x="834.9" y="611.0" width="33.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="837.9" y="622.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 2.85%)</title><rect x="834.9" y="595.0" width="33.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="837.9" y="606.0">en..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 2.85%)</title><rect x="834.9" y="579.0" width="33.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.9" y="590.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 2.46%)</title><rect x="838.0" y="563.0" width="29.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="841.0" y="574.0">__..</text>
</g>
<g>
<title>do_futex (19 samples, 2.46%)</title><rect x="838.0" y="547.0" width="29.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="841.0" y="558.0">do..</text>
</g>
<g>
<title>futex_wake (19 samples, 2.46%)</title><rect x="838.0" y="531.0" width="29.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="841.0" y="542.0">fu..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="838.0" y="515.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="841.0" y="526.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.13%)</title><rect x="839.5" y="515.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="842.5" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.13%)</title><rect x="841.1" y="515.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="844.1" y="526.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 2.08%)</title><rect x="842.6" y="515.0" width="24.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="845.6" y="526.0">w..</text>
</g>
<g>
<title>try_to_wake_up (16 samples, 2.08%)</title><rect x="842.6" y="499.0" width="24.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="845.6" y="510.0">t..</text>
</g>
<g>
<title>__lock_text_start (16 samples, 2.08%)</title><rect x="842.6" y="483.0" width="24.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="845.6" y="494.0">_..</text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="867.1" y="563.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.1" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.13%)</title><rect x="868.6" y="611.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="871.6" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (9 samples, 1.17%)</title><rect x="870.1" y="611.0" width="13.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="873.1" y="622.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.13%)</title><rect x="871.7" y="595.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="874.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.91%)</title><rect x="873.2" y="595.0" width="10.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="876.2" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.13%)</title><rect x="883.9" y="611.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="886.9" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.65%)</title><rect x="885.4" y="611.0" width="7.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="888.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.26%)</title><rect x="893.1" y="611.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.1" y="622.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.13%)</title><rect x="893.1" y="595.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="896.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="894.6" y="595.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.26%)</title><rect x="896.1" y="627.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="899.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (2 samples, 0.26%)</title><rect x="899.2" y="627.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.13%)</title><rect x="902.3" y="627.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="905.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.13%)</title><rect x="903.8" y="691.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="906.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.13%)</title><rect x="905.3" y="691.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="908.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.13%)</title><rect x="906.9" y="691.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="909.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.13%)</title><rect x="908.4" y="755.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="911.4" y="766.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.13%)</title><rect x="908.4" y="739.0" width="1.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="911.4" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.13%)</title><rect x="908.4" y="723.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="911.4" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.13%)</title><rect x="908.4" y="707.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="911.4" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.13%)</title><rect x="908.4" y="691.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="911.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.13%)</title><rect x="908.4" y="675.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="911.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.13%)</title><rect x="909.9" y="787.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="912.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.13%)</title><rect x="909.9" y="771.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="912.9" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="909.9" y="755.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="912.9" y="766.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.13%)</title><rect x="911.5" y="787.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="914.5" y="798.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.52%)</title><rect x="913.0" y="787.0" width="6.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="916.0" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (8 samples, 1.04%)</title><rect x="919.1" y="787.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (54 samples, 7.00%)</title><rect x="931.3" y="787.0" width="82.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.3" y="798.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (53 samples, 6.87%)</title><rect x="932.9" y="771.0" width="81.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.9" y="782.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.13%)</title><rect x="932.9" y="755.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.9" y="766.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.13%)</title><rect x="932.9" y="739.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.9" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (52 samples, 6.74%)</title><rect x="934.4" y="755.0" width="79.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.4" y="766.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (4 samples, 0.52%)</title><rect x="934.4" y="739.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.4" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (48 samples, 6.23%)</title><rect x="940.5" y="739.0" width="73.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.5" y="750.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (46 samples, 5.97%)</title><rect x="943.6" y="723.0" width="70.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.6" y="734.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (39 samples, 5.06%)</title><rect x="951.2" y="707.0" width="59.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="954.2" y="718.0">Java_o..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.39%)</title><rect x="952.8" y="691.0" width="4.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="955.8" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.52%)</title><rect x="957.4" y="691.0" width="6.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="960.4" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="958.9" y="675.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="961.9" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="962.0" y="675.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.0" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (18 samples, 2.33%)</title><rect x="963.5" y="691.0" width="27.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="966.5" y="702.0">j..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.13%)</title><rect x="965.0" y="675.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="968.0" y="686.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.39%)</title><rect x="966.5" y="675.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="969.5" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="971.1" y="675.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="974.1" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (11 samples, 1.43%)</title><rect x="974.2" y="675.0" width="16.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.2" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 1.17%)</title><rect x="977.3" y="659.0" width="13.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="980.3" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 1.17%)</title><rect x="977.3" y="643.0" width="13.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="980.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.13%)</title><rect x="978.8" y="627.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="981.8" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.13%)</title><rect x="980.3" y="627.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="983.3" y="638.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (3 samples, 0.39%)</title><rect x="981.9" y="627.0" width="4.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="984.9" y="638.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (3 samples, 0.39%)</title><rect x="986.4" y="627.0" width="4.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="989.4" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 1.56%)</title><rect x="991.0" y="691.0" width="18.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="994.0" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.13%)</title><rect x="997.2" y="675.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1000.2" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="998.7" y="675.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1001.7" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.65%)</title><rect x="1001.8" y="675.0" width="7.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1004.8" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.13%)</title><rect x="1009.4" y="691.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1012.4" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.13%)</title><rect x="1010.9" y="707.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1013.9" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.13%)</title><rect x="1012.5" y="707.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1015.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (1 samples, 0.13%)</title><rect x="1014.0" y="819.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.13%)</title><rect x="1014.0" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1017.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.13%)</title><rect x="1014.0" y="787.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="1014.0" y="771.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1017.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithTimestamp (2 samples, 0.26%)</title><rect x="1015.5" y="835.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.&lt;init&gt; (2 samples, 0.26%)</title><rect x="1015.5" y="819.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.13%)</title><rect x="1015.5" y="803.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.13%)</title><rect x="1015.5" y="787.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.13%)</title><rect x="1015.5" y="771.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeader (1 samples, 0.13%)</title><rect x="1017.1" y="803.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.1" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (110 samples, 14.27%)</title><rect x="1018.6" y="979.0" width="168.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.6" y="990.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.26%)</title><rect x="1020.1" y="963.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.13%)</title><rect x="1021.6" y="947.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (29 samples, 3.76%)</title><rect x="1023.2" y="963.0" width="44.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.2" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.13%)</title><rect x="1024.7" y="947.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.13%)</title><rect x="1024.7" y="931.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (27 samples, 3.50%)</title><rect x="1026.2" y="947.0" width="41.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.2" y="958.0">one..</text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.26%)</title><rect x="1026.2" y="931.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1029.2" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.13%)</title><rect x="1026.2" y="915.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1029.2" y="926.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.13%)</title><rect x="1027.8" y="915.0" width="1.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1030.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.13%)</title><rect x="1027.8" y="899.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1030.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.13%)</title><rect x="1027.8" y="883.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1030.8" y="894.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="1027.8" y="867.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1030.8" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.39%)</title><rect x="1029.3" y="931.0" width="4.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1032.3" y="942.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.39%)</title><rect x="1029.3" y="915.0" width="4.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1032.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.39%)</title><rect x="1029.3" y="899.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.39%)</title><rect x="1029.3" y="883.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.3" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.13%)</title><rect x="1029.3" y="867.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1032.3" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.13%)</title><rect x="1029.3" y="851.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1032.3" y="862.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.13%)</title><rect x="1029.3" y="835.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.3" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.13%)</title><rect x="1029.3" y="819.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.3" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.13%)</title><rect x="1029.3" y="803.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.3" y="814.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.26%)</title><rect x="1030.8" y="867.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1033.8" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="1032.4" y="851.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1035.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 2.59%)</title><rect x="1033.9" y="931.0" width="30.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1036.9" y="942.0">[u..</text>
</g>
<g>
<title>epoll_wait (20 samples, 2.59%)</title><rect x="1033.9" y="915.0" width="30.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1036.9" y="926.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 2.33%)</title><rect x="1037.0" y="899.0" width="27.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1040.0" y="910.0">e..</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 2.33%)</title><rect x="1037.0" y="883.0" width="27.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1040.0" y="894.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 1.95%)</title><rect x="1037.0" y="867.0" width="22.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.0" y="878.0">_..</text>
</g>
<g>
<title>do_epoll_wait (15 samples, 1.95%)</title><rect x="1037.0" y="851.0" width="22.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1040.0" y="862.0">d..</text>
</g>
<g>
<title>ep_poll (14 samples, 1.82%)</title><rect x="1038.5" y="835.0" width="21.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1041.5" y="846.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (8 samples, 1.04%)</title><rect x="1041.5" y="819.0" width="12.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1044.5" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.65%)</title><rect x="1044.6" y="803.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1047.6" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.65%)</title><rect x="1044.6" y="787.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1047.6" y="798.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.52%)</title><rect x="1046.1" y="771.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1049.1" y="782.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.26%)</title><rect x="1046.1" y="755.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.1" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.26%)</title><rect x="1049.2" y="755.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1052.2" y="766.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.13%)</title><rect x="1052.3" y="803.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.3" y="814.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.13%)</title><rect x="1053.8" y="819.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1056.8" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.39%)</title><rect x="1055.3" y="819.0" width="4.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1058.3" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.39%)</title><rect x="1055.3" y="803.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1058.3" y="814.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.39%)</title><rect x="1055.3" y="787.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1058.3" y="798.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.39%)</title><rect x="1055.3" y="771.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1058.3" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.39%)</title><rect x="1055.3" y="755.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1058.3" y="766.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="1059.9" y="867.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1062.9" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="1059.9" y="851.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1062.9" y="862.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.26%)</title><rect x="1061.4" y="867.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1064.4" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.26%)</title><rect x="1061.4" y="851.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1064.4" y="862.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.13%)</title><rect x="1063.0" y="835.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.0" y="846.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.26%)</title><rect x="1064.5" y="931.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1067.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (78 samples, 10.12%)</title><rect x="1067.6" y="963.0" width="119.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.6" y="974.0">one/nio/net/Ses..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.26%)</title><rect x="1067.6" y="947.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1070.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (76 samples, 9.86%)</title><rect x="1070.6" y="947.0" width="116.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.6" y="958.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 5.58%)</title><rect x="1070.6" y="931.0" width="65.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1073.6" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 4.15%)</title><rect x="1076.7" y="915.0" width="49.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.7" y="926.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 4.15%)</title><rect x="1076.7" y="899.0" width="49.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.7" y="910.0">one/..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (12 samples, 1.56%)</title><rect x="1078.3" y="883.0" width="18.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.13%)</title><rect x="1078.3" y="867.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.13%)</title><rect x="1078.3" y="851.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (11 samples, 1.43%)</title><rect x="1079.8" y="867.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1082.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 1.30%)</title><rect x="1079.8" y="851.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 1.30%)</title><rect x="1079.8" y="835.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 1.04%)</title><rect x="1081.3" y="819.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 1.04%)</title><rect x="1081.3" y="803.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 1.04%)</title><rect x="1081.3" y="787.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 1.04%)</title><rect x="1081.3" y="771.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1084.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 1.04%)</title><rect x="1081.3" y="755.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1084.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.91%)</title><rect x="1082.9" y="739.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.9" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.26%)</title><rect x="1082.9" y="723.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1085.9" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.13%)</title><rect x="1082.9" y="707.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1085.9" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.13%)</title><rect x="1084.4" y="707.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1087.4" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.65%)</title><rect x="1085.9" y="723.0" width="7.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1088.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.65%)</title><rect x="1085.9" y="707.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1088.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.65%)</title><rect x="1085.9" y="691.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1088.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.65%)</title><rect x="1085.9" y="675.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1088.9" y="686.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.52%)</title><rect x="1085.9" y="659.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1088.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.52%)</title><rect x="1085.9" y="643.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1088.9" y="654.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.52%)</title><rect x="1085.9" y="627.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1088.9" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.52%)</title><rect x="1085.9" y="611.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1088.9" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.52%)</title><rect x="1085.9" y="595.0" width="6.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1088.9" y="606.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.13%)</title><rect x="1092.0" y="659.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1095.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.13%)</title><rect x="1093.6" y="819.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.13%)</title><rect x="1093.6" y="803.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.13%)</title><rect x="1093.6" y="787.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.13%)</title><rect x="1093.6" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$91/1922510451.&lt;init&gt; (1 samples, 0.13%)</title><rect x="1095.1" y="851.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.1" y="862.0"></text>
</g>
<g>
<title>RequestHandler4_getReplication.handleRequest (19 samples, 2.46%)</title><rect x="1096.6" y="883.0" width="29.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.6" y="894.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.13%)</title><rect x="1096.6" y="867.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplication (18 samples, 2.33%)</title><rect x="1098.2" y="867.0" width="27.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.2" y="878.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.13%)</title><rect x="1098.2" y="851.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.13%)</title><rect x="1098.2" y="835.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$94/1004033355.get$Lambda (1 samples, 0.13%)</title><rect x="1098.2" y="819.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 2.08%)</title><rect x="1099.7" y="851.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.7" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 2.08%)</title><rect x="1099.7" y="835.0" width="24.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.7" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 2.08%)</title><rect x="1099.7" y="819.0" width="24.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.7" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 2.08%)</title><rect x="1099.7" y="803.0" width="24.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.7" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 2.08%)</title><rect x="1099.7" y="787.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.7" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 2.08%)</title><rect x="1099.7" y="771.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.7" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 2.08%)</title><rect x="1099.7" y="755.0" width="24.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.7" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 2.08%)</title><rect x="1099.7" y="739.0" width="24.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.7" y="750.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.39%)</title><rect x="1099.7" y="723.0" width="4.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1102.7" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.13%)</title><rect x="1099.7" y="707.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1102.7" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.13%)</title><rect x="1101.2" y="707.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1104.2" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.13%)</title><rect x="1102.8" y="707.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 1.43%)</title><rect x="1104.3" y="723.0" width="16.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1107.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.43%)</title><rect x="1104.3" y="707.0" width="16.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1107.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.43%)</title><rect x="1104.3" y="691.0" width="16.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 1.43%)</title><rect x="1104.3" y="675.0" width="16.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.3" y="686.0"></text>
</g>
<g>
<title>do_futex (11 samples, 1.43%)</title><rect x="1104.3" y="659.0" width="16.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1107.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 1.30%)</title><rect x="1104.3" y="643.0" width="15.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1107.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 1.30%)</title><rect x="1104.3" y="627.0" width="15.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.3" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 1.30%)</title><rect x="1104.3" y="611.0" width="15.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1107.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 1.30%)</title><rect x="1104.3" y="595.0" width="15.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1107.3" y="606.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.13%)</title><rect x="1119.6" y="643.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1122.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="1121.1" y="723.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1124.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.13%)</title><rect x="1122.7" y="723.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1125.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.13%)</title><rect x="1124.2" y="851.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1127.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.65%)</title><rect x="1125.7" y="915.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.7" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.39%)</title><rect x="1125.7" y="899.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.39%)</title><rect x="1125.7" y="883.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1128.7" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.13%)</title><rect x="1127.3" y="867.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.13%)</title><rect x="1128.8" y="867.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.13%)</title><rect x="1128.8" y="851.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.13%)</title><rect x="1128.8" y="835.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.13%)</title><rect x="1128.8" y="819.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1131.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.26%)</title><rect x="1130.3" y="899.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.13%)</title><rect x="1131.8" y="883.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.8" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.26%)</title><rect x="1133.4" y="915.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 4.28%)</title><rect x="1136.4" y="931.0" width="50.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1139.4" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (32 samples, 4.15%)</title><rect x="1138.0" y="915.0" width="48.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1141.0" y="926.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 1.04%)</title><rect x="1139.5" y="899.0" width="12.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1142.5" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.13%)</title><rect x="1141.0" y="883.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.0" y="894.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="1142.6" y="883.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1145.6" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.65%)</title><rect x="1144.1" y="883.0" width="7.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1147.1" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.26%)</title><rect x="1144.1" y="867.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.1" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="1147.1" y="867.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1150.1" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.26%)</title><rect x="1148.7" y="867.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1151.7" y="878.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 2.85%)</title><rect x="1151.7" y="899.0" width="33.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1154.7" y="910.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 2.59%)</title><rect x="1154.8" y="883.0" width="30.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1157.8" y="894.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.13%)</title><rect x="1154.8" y="867.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 2.33%)</title><rect x="1156.3" y="867.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1159.3" y="878.0">d..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.13%)</title><rect x="1157.9" y="851.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 2.08%)</title><rect x="1159.4" y="851.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.4" y="862.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 2.08%)</title><rect x="1159.4" y="835.0" width="24.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.4" y="846.0">_..</text>
</g>
<g>
<title>sock_recvmsg (14 samples, 1.82%)</title><rect x="1159.4" y="819.0" width="21.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1162.4" y="830.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 1.43%)</title><rect x="1159.4" y="803.0" width="16.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.4" y="814.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 1.43%)</title><rect x="1159.4" y="787.0" width="16.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.4" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.52%)</title><rect x="1160.9" y="771.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1163.9" y="782.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.52%)</title><rect x="1160.9" y="755.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1163.9" y="766.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.13%)</title><rect x="1160.9" y="739.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1163.9" y="750.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.39%)</title><rect x="1162.5" y="739.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1165.5" y="750.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.26%)</title><rect x="1162.5" y="723.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1165.5" y="734.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.13%)</title><rect x="1165.5" y="723.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1168.5" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.13%)</title><rect x="1167.0" y="771.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1170.0" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.13%)</title><rect x="1167.0" y="755.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1170.0" y="766.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.13%)</title><rect x="1168.6" y="771.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.6" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.13%)</title><rect x="1168.6" y="755.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.6" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.13%)</title><rect x="1168.6" y="739.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.6" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.52%)</title><rect x="1170.1" y="771.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1173.1" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.52%)</title><rect x="1170.1" y="755.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1173.1" y="766.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.52%)</title><rect x="1170.1" y="739.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.1" y="750.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.26%)</title><rect x="1170.1" y="723.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1173.1" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.26%)</title><rect x="1173.2" y="723.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.2" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.39%)</title><rect x="1176.2" y="803.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.2" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.39%)</title><rect x="1176.2" y="787.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1179.2" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.39%)</title><rect x="1176.2" y="771.0" width="4.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.39%)</title><rect x="1176.2" y="755.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1179.2" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.26%)</title><rect x="1177.8" y="739.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.8" y="750.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.26%)</title><rect x="1177.8" y="723.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.26%)</title><rect x="1180.8" y="819.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1183.8" y="830.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.26%)</title><rect x="1180.8" y="803.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1183.8" y="814.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.26%)</title><rect x="1180.8" y="787.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1183.8" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.13%)</title><rect x="1182.3" y="771.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.3" y="782.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="1183.9" y="867.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.9" y="878.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.13%)</title><rect x="1185.4" y="899.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1188.4" y="910.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.26%)</title><rect x="1186.9" y="979.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1189.9" y="990.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.26%)</title><rect x="1186.9" y="963.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1189.9" y="974.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.26%)</title><rect x="1186.9" y="947.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.9" y="958.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.26%)</title><rect x="1186.9" y="931.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="942.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.26%)</title><rect x="1186.9" y="915.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.9" y="926.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.26%)</title><rect x="1186.9" y="899.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.9" y="910.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.26%)</title><rect x="1186.9" y="883.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.9" y="894.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.26%)</title><rect x="1186.9" y="867.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.13%)</title><rect x="1186.9" y="851.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.13%)</title><rect x="1186.9" y="835.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.9" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.13%)</title><rect x="1186.9" y="819.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.9" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.13%)</title><rect x="1188.5" y="851.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.13%)</title><rect x="1188.5" y="835.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>SubNode::Value(PhaseGVN*) const (1 samples, 0.13%)</title><rect x="1188.5" y="819.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
</g>
</svg>
