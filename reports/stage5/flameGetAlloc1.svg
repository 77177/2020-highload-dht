<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (29,074 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (11,124 samples, 38.26%)</title><rect x="10.0" y="563.0" width="451.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,124 samples, 38.26%)</title><rect x="10.0" y="547.0" width="451.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,124 samples, 38.26%)</title><rect x="10.0" y="531.0" width="451.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (73 samples, 0.25%)</title><rect x="10.0" y="515.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (73 samples, 0.25%)</title><rect x="10.0" y="499.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (73 samples, 0.25%)</title><rect x="10.0" y="483.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (73 samples, 0.25%)</title><rect x="10.0" y="467.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (73 samples, 0.25%)</title><rect x="10.0" y="451.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$124/796037653.run (6,778 samples, 23.31%)</title><rect x="13.0" y="515.0" width="275.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.0" y="526.0">ru/mail/polis/service/stasyanoi/Custo..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0 (6,778 samples, 23.31%)</title><rect x="13.0" y="499.0" width="275.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="16.0" y="510.0">ru/mail/polis/service/stasyanoi/Custo..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getInternal (6,778 samples, 23.31%)</title><rect x="13.0" y="483.0" width="275.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.0" y="494.0">ru/mail/polis/service/stasyanoi/Custo..</text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.31%)</title><rect x="13.0" y="467.0" width="3.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="16.0" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (84 samples, 0.29%)</title><rect x="16.7" y="467.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.7" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (84 samples, 0.29%)</title><rect x="16.7" y="451.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (17 samples, 0.06%)</title><rect x="16.7" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (17 samples, 0.06%)</title><rect x="16.7" y="419.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="19.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (67 samples, 0.23%)</title><rect x="17.3" y="435.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.3" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (67 samples, 0.23%)</title><rect x="17.3" y="419.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.3" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (20 samples, 0.07%)</title><rect x="17.3" y="403.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="20.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (47 samples, 0.16%)</title><rect x="18.2" y="403.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.2" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.16%)</title><rect x="18.2" y="387.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="21.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (127 samples, 0.44%)</title><rect x="20.1" y="467.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (117 samples, 0.40%)</title><rect x="20.1" y="451.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (85 samples, 0.29%)</title><rect x="20.1" y="435.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (85 samples, 0.29%)</title><rect x="20.1" y="419.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.1" y="430.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.29%)</title><rect x="20.1" y="403.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.11%)</title><rect x="23.5" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.5" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (32 samples, 0.11%)</title><rect x="23.5" y="419.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="26.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (10 samples, 0.03%)</title><rect x="24.8" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.03%)</title><rect x="24.8" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.03%)</title><rect x="24.8" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="27.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getResponseGet (6,476 samples, 22.27%)</title><rect x="25.2" y="467.0" width="262.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.2" y="478.0">ru/mail/polis/service/stasyanoi/Cus..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.03%)</title><rect x="25.2" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.03%)</title><rect x="25.2" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (9 samples, 0.03%)</title><rect x="25.2" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (9 samples, 0.03%)</title><rect x="25.2" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.2" y="414.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="25.2" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="28.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (33 samples, 0.11%)</title><rect x="25.6" y="451.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.11%)</title><rect x="25.6" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.11%)</title><rect x="25.6" y="419.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.11%)</title><rect x="25.6" y="403.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getProxy (2,647 samples, 9.10%)</title><rect x="26.9" y="451.0" width="107.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.9" y="462.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getResponseIfIdNotNull (1,993 samples, 6.85%)</title><rect x="26.9" y="435.0" width="80.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.9" y="446.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/Response.ok (68 samples, 0.23%)</title><rect x="26.9" y="419.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.9" y="430.0"></text>
</g>
<g>
<title>one.nio.http.Response (11 samples, 0.04%)</title><rect x="26.9" y="403.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="29.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (57 samples, 0.20%)</title><rect x="27.4" y="403.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.4" y="414.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.08%)</title><rect x="27.4" y="387.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="30.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.06%)</title><rect x="28.3" y="387.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="31.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.06%)</title><rect x="29.0" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="32.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (787 samples, 2.71%)</title><rect x="29.7" y="419.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.7" y="430.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (772 samples, 2.66%)</title><rect x="29.7" y="403.0" width="31.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.7" y="414.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (772 samples, 2.66%)</title><rect x="29.7" y="387.0" width="31.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="32.7" y="398.0">or..</text>
</g>
<g>
<title>byte[] (25 samples, 0.09%)</title><rect x="29.7" y="371.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="32.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (747 samples, 2.57%)</title><rect x="30.7" y="371.0" width="30.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.7" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (747 samples, 2.57%)</title><rect x="30.7" y="355.0" width="30.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.7" y="366.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (747 samples, 2.57%)</title><rect x="30.7" y="339.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.7" y="350.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (747 samples, 2.57%)</title><rect x="30.7" y="323.0" width="30.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.7" y="334.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (747 samples, 2.57%)</title><rect x="30.7" y="307.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.7" y="318.0">or..</text>
</g>
<g>
<title>byte[] (747 samples, 2.57%)</title><rect x="30.7" y="291.0" width="30.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="33.7" y="302.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (15 samples, 0.05%)</title><rect x="61.0" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.0" y="414.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="61.0" y="387.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (16 samples, 0.06%)</title><rect x="61.6" y="419.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.6" y="430.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.06%)</title><rect x="61.6" y="403.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="64.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeader (1,048 samples, 3.60%)</title><rect x="62.3" y="419.0" width="42.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.3" y="430.0">ru/m..</text>
</g>
<g>
<title>com/google/common/primitives/Bytes.asList (10 samples, 0.03%)</title><rect x="62.3" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.3" y="414.0"></text>
</g>
<g>
<title>com.google.common.primitives.Bytes$ByteArrayAsList (10 samples, 0.03%)</title><rect x="62.3" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.14%)</title><rect x="62.7" y="403.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/280744458.invoke (40 samples, 0.14%)</title><rect x="62.7" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.14%)</title><rect x="62.7" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.06%)</title><rect x="62.7" y="355.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.7" y="366.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.06%)</title><rect x="62.7" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="65.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.08%)</title><rect x="63.3" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.08%)</title><rect x="63.3" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.3" y="350.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.08%)</title><rect x="63.3" y="323.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="66.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (42 samples, 0.14%)</title><rect x="64.3" y="403.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (42 samples, 0.14%)</title><rect x="64.3" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (17 samples, 0.06%)</title><rect x="64.3" y="371.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.3" y="382.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (17 samples, 0.06%)</title><rect x="64.3" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.3" y="366.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (17 samples, 0.06%)</title><rect x="64.3" y="339.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="67.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (25 samples, 0.09%)</title><rect x="65.0" y="371.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (25 samples, 0.09%)</title><rect x="65.0" y="355.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="68.0" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (48 samples, 0.17%)</title><rect x="66.0" y="403.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.0" y="414.0"></text>
</g>
<g>
<title>java/util/List.spliterator (22 samples, 0.08%)</title><rect x="66.0" y="387.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.0" y="398.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (22 samples, 0.08%)</title><rect x="66.0" y="371.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="69.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (26 samples, 0.09%)</title><rect x="66.9" y="387.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.9" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (26 samples, 0.09%)</title><rect x="66.9" y="371.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="69.9" y="382.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (12 samples, 0.04%)</title><rect x="68.0" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.0" y="414.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (12 samples, 0.04%)</title><rect x="68.0" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="71.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.mapToObj (46 samples, 0.16%)</title><rect x="68.4" y="403.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.mapToObj (46 samples, 0.16%)</title><rect x="68.4" y="387.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.4" y="398.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$1 (46 samples, 0.16%)</title><rect x="68.4" y="371.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="71.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (658 samples, 2.26%)</title><rect x="70.3" y="403.0" width="26.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (607 samples, 2.09%)</title><rect x="70.3" y="387.0" width="24.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (607 samples, 2.09%)</title><rect x="70.3" y="371.0" width="24.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.3" y="382.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (596 samples, 2.05%)</title><rect x="70.3" y="355.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.3" y="366.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (557 samples, 1.92%)</title><rect x="70.3" y="339.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (528 samples, 1.82%)</title><rect x="70.3" y="323.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$4$1.accept (528 samples, 1.82%)</title><rect x="70.3" y="307.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.3" y="318.0">j..</text>
</g>
<g>
<title>java/util/stream/IntPipeline$1$1.accept (528 samples, 1.82%)</title><rect x="70.3" y="291.0" width="21.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.3" y="302.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (528 samples, 1.82%)</title><rect x="70.3" y="275.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.3" y="286.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$147/1846082377.apply (528 samples, 1.82%)</title><rect x="70.3" y="259.0" width="21.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.3" y="270.0">r..</text>
</g>
<g>
<title>java/lang/String.valueOf (528 samples, 1.82%)</title><rect x="70.3" y="243.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.3" y="254.0">j..</text>
</g>
<g>
<title>java/lang/Character.toString (528 samples, 1.82%)</title><rect x="70.3" y="227.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.3" y="238.0">j..</text>
</g>
<g>
<title>char[] (155 samples, 0.53%)</title><rect x="70.3" y="211.0" width="6.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="73.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (373 samples, 1.28%)</title><rect x="76.6" y="211.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (193 samples, 0.66%)</title><rect x="76.6" y="195.0" width="7.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (180 samples, 0.62%)</title><rect x="84.4" y="195.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (180 samples, 0.62%)</title><rect x="84.4" y="179.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (180 samples, 0.62%)</title><rect x="84.4" y="163.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.4" y="174.0"></text>
</g>
<g>
<title>byte[] (180 samples, 0.62%)</title><rect x="84.4" y="147.0" width="7.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="87.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (29 samples, 0.10%)</title><rect x="91.7" y="323.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedInt.begin (29 samples, 0.10%)</title><rect x="91.7" y="307.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (29 samples, 0.10%)</title><rect x="91.7" y="291.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (29 samples, 0.10%)</title><rect x="91.7" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$153/664749301.get (29 samples, 0.10%)</title><rect x="91.7" y="259.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.7" y="270.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.05%)</title><rect x="91.7" y="243.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="94.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.05%)</title><rect x="92.3" y="243.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.05%)</title><rect x="92.3" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.3" y="238.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="92.3" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="95.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (39 samples, 0.13%)</title><rect x="92.9" y="339.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$1.opWrapSink (19 samples, 0.07%)</title><rect x="92.9" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.9" y="334.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$1$1 (19 samples, 0.07%)</title><rect x="92.9" y="307.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="95.9" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (11 samples, 0.04%)</title><rect x="93.7" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (11 samples, 0.04%)</title><rect x="93.7" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="96.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$4.opWrapSink (9 samples, 0.03%)</title><rect x="94.1" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.1" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$4$1 (9 samples, 0.03%)</title><rect x="94.1" y="307.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="97.1" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (11 samples, 0.04%)</title><rect x="94.5" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (11 samples, 0.04%)</title><rect x="94.5" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.5" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (11 samples, 0.04%)</title><rect x="94.5" y="323.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="97.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$172/1670118227.apply (32 samples, 0.11%)</title><rect x="94.9" y="387.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (32 samples, 0.11%)</title><rect x="94.9" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="94.9" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.9" y="366.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.06%)</title><rect x="94.9" y="339.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="97.9" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.05%)</title><rect x="95.6" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.6" y="350.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="95.6" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="98.6" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (19 samples, 0.07%)</title><rect x="96.2" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.2" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (19 samples, 0.07%)</title><rect x="96.2" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="99.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (75 samples, 0.26%)</title><rect x="97.0" y="403.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.0" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (75 samples, 0.26%)</title><rect x="97.0" y="387.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="100.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToInt (38 samples, 0.13%)</title><rect x="100.1" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$4 (38 samples, 0.13%)</title><rect x="100.1" y="387.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="103.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.toArray (79 samples, 0.27%)</title><rect x="101.6" y="403.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (79 samples, 0.27%)</title><rect x="101.6" y="387.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (79 samples, 0.27%)</title><rect x="101.6" y="371.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.06%)</title><rect x="101.6" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (18 samples, 0.06%)</title><rect x="101.6" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (18 samples, 0.06%)</title><rect x="101.6" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.6" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (18 samples, 0.06%)</title><rect x="101.6" y="307.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="104.6" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.makeNodeBuilder (61 samples, 0.21%)</title><rect x="102.3" y="355.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.builder (61 samples, 0.21%)</title><rect x="102.3" y="339.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$FixedNodeBuilder (14 samples, 0.05%)</title><rect x="102.3" y="323.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="105.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$FixedNodeBuilder.&lt;init&gt; (47 samples, 0.16%)</title><rect x="102.9" y="323.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$ArrayNode.&lt;init&gt; (47 samples, 0.16%)</title><rect x="102.9" y="307.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$130/1343016251.apply (47 samples, 0.16%)</title><rect x="102.9" y="291.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$addTimestampHeader$3 (47 samples, 0.16%)</title><rect x="102.9" y="275.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.9" y="286.0"></text>
</g>
<g>
<title>java.lang.Integer[] (47 samples, 0.16%)</title><rect x="102.9" y="259.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="105.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestamp (74 samples, 0.25%)</title><rect x="104.8" y="419.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.8" y="430.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.12%)</title><rect x="104.8" y="403.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="107.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (21 samples, 0.07%)</title><rect x="106.2" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.2" y="414.0"></text>
</g>
<g>
<title>java/lang/Long.toString (21 samples, 0.07%)</title><rect x="106.2" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.2" y="398.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.07%)</title><rect x="106.2" y="371.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="109.2" y="382.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (18 samples, 0.06%)</title><rect x="107.1" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.1" y="414.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (14 samples, 0.05%)</title><rect x="107.2" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (14 samples, 0.05%)</title><rect x="107.2" y="371.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (14 samples, 0.05%)</title><rect x="107.2" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="110.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.routeRequest (654 samples, 2.25%)</title><rect x="107.8" y="435.0" width="26.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.8" y="446.0">r..</text>
</g>
<g>
<title>one.nio.http.HttpClient (9 samples, 0.03%)</title><rect x="107.8" y="419.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="110.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.&lt;init&gt; (12 samples, 0.04%)</title><rect x="108.3" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (580 samples, 1.99%)</title><rect x="108.8" y="419.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.8" y="430.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (580 samples, 1.99%)</title><rect x="108.8" y="403.0" width="23.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.8" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (519 samples, 1.79%)</title><rect x="108.9" y="387.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.9" y="398.0">o..</text>
</g>
<g>
<title>byte[] (170 samples, 0.58%)</title><rect x="108.9" y="371.0" width="6.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="111.9" y="382.0"></text>
</g>
<g>
<title>byte[] (349 samples, 1.20%)</title><rect x="115.8" y="371.0" width="14.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (42 samples, 0.14%)</title><rect x="130.0" y="387.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (36 samples, 0.12%)</title><rect x="130.1" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.1" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.12%)</title><rect x="130.1" y="355.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.1" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.12%)</title><rect x="130.1" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.1" y="350.0"></text>
</g>
<g>
<title>char[] (17 samples, 0.06%)</title><rect x="130.1" y="323.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="133.1" y="334.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="130.7" y="323.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="133.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.04%)</title><rect x="131.0" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.04%)</title><rect x="131.0" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.04%)</title><rect x="131.0" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.0" y="302.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="131.0" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="134.0" y="286.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (49 samples, 0.17%)</title><rect x="132.4" y="419.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.4" y="430.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (49 samples, 0.17%)</title><rect x="132.4" y="403.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.10%)</title><rect x="132.4" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.10%)</title><rect x="132.4" y="371.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.07%)</title><rect x="132.4" y="355.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="135.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="133.2" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.2" y="366.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="133.2" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (21 samples, 0.07%)</title><rect x="133.5" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.5" y="398.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (21 samples, 0.07%)</title><rect x="133.5" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.5" y="382.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (11 samples, 0.04%)</title><rect x="133.5" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="136.5" y="366.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (10 samples, 0.03%)</title><rect x="133.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.9" y="366.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.03%)</title><rect x="133.9" y="339.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="136.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getNoRepRequest (465 samples, 1.60%)</title><rect x="134.4" y="451.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.20%)</title><rect x="134.4" y="435.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/95359731.invoke (59 samples, 0.20%)</title><rect x="134.4" y="419.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2060170340.invoke (59 samples, 0.20%)</title><rect x="134.4" y="403.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.20%)</title><rect x="134.4" y="387.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.06%)</title><rect x="134.4" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.06%)</title><rect x="134.4" y="355.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="137.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (43 samples, 0.15%)</title><rect x="135.0" y="371.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (43 samples, 0.15%)</title><rect x="135.0" y="355.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.0" y="366.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.15%)</title><rect x="135.0" y="339.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="138.0" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (36 samples, 0.12%)</title><rect x="136.8" y="435.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.12%)</title><rect x="136.8" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.12%)</title><rect x="136.8" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.06%)</title><rect x="136.8" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="139.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.07%)</title><rect x="137.4" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.4" y="398.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.07%)</title><rect x="137.4" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="140.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (39 samples, 0.13%)</title><rect x="138.2" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.13%)</title><rect x="138.2" y="419.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="141.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.13%)</title><rect x="138.2" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.07%)</title><rect x="138.2" y="387.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="141.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.07%)</title><rect x="139.0" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.0" y="398.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.07%)</title><rect x="139.0" y="371.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getCloneRequest (331 samples, 1.14%)</title><rect x="139.8" y="435.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.17%)</title><rect x="139.8" y="419.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="139.8" y="403.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$85/2069209318.get$Lambda (18 samples, 0.06%)</title><rect x="139.8" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.GetHelper$$Lambda$85 (18 samples, 0.06%)</title><rect x="139.8" y="371.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="142.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/925858445.invoke (31 samples, 0.11%)</title><rect x="140.5" y="403.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.11%)</title><rect x="140.5" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (15 samples, 0.05%)</title><rect x="140.5" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.5" y="382.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.05%)</title><rect x="140.5" y="355.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="143.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.06%)</title><rect x="141.1" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.06%)</title><rect x="141.1" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.1" y="366.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.06%)</title><rect x="141.1" y="339.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="144.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (70 samples, 0.24%)</title><rect x="141.8" y="419.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (70 samples, 0.24%)</title><rect x="141.8" y="403.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (29 samples, 0.10%)</title><rect x="141.8" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.8" y="398.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (29 samples, 0.10%)</title><rect x="141.8" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.8" y="382.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (29 samples, 0.10%)</title><rect x="141.8" y="355.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="144.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (41 samples, 0.14%)</title><rect x="143.0" y="387.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.0" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (41 samples, 0.14%)</title><rect x="143.0" y="371.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="146.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (83 samples, 0.29%)</title><rect x="144.6" y="419.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.6" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (83 samples, 0.29%)</title><rect x="144.6" y="403.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="147.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (44 samples, 0.15%)</title><rect x="148.0" y="419.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.08%)</title><rect x="148.0" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (22 samples, 0.08%)</title><rect x="148.0" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (22 samples, 0.08%)</title><rect x="148.0" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (22 samples, 0.08%)</title><rect x="148.0" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (22 samples, 0.08%)</title><rect x="148.0" y="339.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (22 samples, 0.08%)</title><rect x="148.0" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.0" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (22 samples, 0.08%)</title><rect x="148.0" y="307.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="151.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (22 samples, 0.08%)</title><rect x="148.9" y="403.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (22 samples, 0.08%)</title><rect x="148.9" y="387.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="151.9" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (31 samples, 0.11%)</title><rect x="149.8" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="152.8" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (54 samples, 0.19%)</title><rect x="151.0" y="419.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (54 samples, 0.19%)</title><rect x="151.0" y="403.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="154.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getReplicaGetResponse (3,322 samples, 11.43%)</title><rect x="153.2" y="451.0" width="134.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.2" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.08%)</title><rect x="153.2" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.08%)</title><rect x="153.2" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.08%)</title><rect x="153.2" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.08%)</title><rect x="153.2" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="153.2" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="156.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.05%)</title><rect x="153.6" y="371.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.6" y="382.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="153.6" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="156.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getResponsesInternal (2,843 samples, 9.78%)</title><rect x="154.2" y="435.0" width="115.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.2" y="446.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.04%)</title><rect x="154.2" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.2" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.spliterator (7 samples, 0.02%)</title><rect x="154.2" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="157.2" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySpliterator (7 samples, 0.02%)</title><rect x="154.2" y="387.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="157.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2,788 samples, 9.59%)</title><rect x="155.0" y="419.0" width="113.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.0" y="430.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,786 samples, 9.58%)</title><rect x="155.0" y="403.0" width="113.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.0" y="414.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,786 samples, 9.58%)</title><rect x="155.0" y="387.0" width="113.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.0" y="398.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,781 samples, 9.57%)</title><rect x="155.0" y="371.0" width="112.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.0" y="382.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2,770 samples, 9.53%)</title><rect x="155.0" y="355.0" width="112.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.0" y="366.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2,770 samples, 9.53%)</title><rect x="155.0" y="339.0" width="112.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.0" y="350.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2,764 samples, 9.51%)</title><rect x="155.0" y="323.0" width="112.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.0" y="334.0">java/util/stre..</text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.tryAdvance (2,764 samples, 9.51%)</title><rect x="155.0" y="307.0" width="112.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.0" y="318.0">java/util/Tree..</text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (2,764 samples, 9.51%)</title><rect x="155.0" y="291.0" width="112.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.0" y="302.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,764 samples, 9.51%)</title><rect x="155.0" y="275.0" width="112.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.0" y="286.0">java/util/stre..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,387 samples, 8.21%)</title><rect x="155.0" y="259.0" width="96.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.0" y="270.0">java/util/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$101/2119133134.apply (2,382 samples, 8.19%)</title><rect x="155.2" y="243.0" width="96.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.2" y="254.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.lambda$getResponsesInternal$1 (2,382 samples, 8.19%)</title><rect x="155.2" y="227.0" width="96.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.2" y="238.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,382 samples, 8.19%)</title><rect x="155.2" y="211.0" width="96.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.2" y="222.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,382 samples, 8.19%)</title><rect x="155.2" y="195.0" width="96.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.2" y="206.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (16 samples, 0.06%)</title><rect x="155.2" y="179.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="158.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,164 samples, 7.44%)</title><rect x="155.8" y="179.0" width="87.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.8" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (723 samples, 2.49%)</title><rect x="155.8" y="163.0" width="29.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="158.8" y="174.0">by..</text>
</g>
<g>
<title>byte[] (1,441 samples, 4.96%)</title><rect x="185.2" y="163.0" width="58.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.2" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (138 samples, 0.47%)</title><rect x="243.7" y="179.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (111 samples, 0.38%)</title><rect x="244.3" y="163.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 0.38%)</title><rect x="244.3" y="147.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (111 samples, 0.38%)</title><rect x="244.3" y="131.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.3" y="142.0"></text>
</g>
<g>
<title>char[] (68 samples, 0.23%)</title><rect x="244.3" y="115.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.06%)</title><rect x="247.1" y="115.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="250.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.09%)</title><rect x="247.8" y="115.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (25 samples, 0.09%)</title><rect x="247.8" y="99.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (25 samples, 0.09%)</title><rect x="247.8" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.8" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.09%)</title><rect x="247.8" y="67.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="250.8" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (31 samples, 0.11%)</title><rect x="249.3" y="179.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.3" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (31 samples, 0.11%)</title><rect x="249.3" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.3" y="174.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.11%)</title><rect x="249.3" y="147.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="252.3" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (23 samples, 0.08%)</title><rect x="250.7" y="179.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.7" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (23 samples, 0.08%)</title><rect x="250.7" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="253.7" y="174.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (23 samples, 0.08%)</title><rect x="250.7" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.7" y="158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (21 samples, 0.07%)</title><rect x="250.7" y="131.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.7" y="142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.toNativeAddr (21 samples, 0.07%)</title><rect x="250.7" y="115.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.7" y="126.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getAddress (11 samples, 0.04%)</title><rect x="250.7" y="99.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.7" y="110.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="250.7" y="83.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="253.7" y="94.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.03%)</title><rect x="251.2" y="99.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.2" y="110.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.03%)</title><rect x="251.2" y="83.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="254.2" y="94.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.03%)</title><rect x="251.2" y="67.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.2" y="78.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (10 samples, 0.03%)</title><rect x="251.2" y="51.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.2" y="62.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (10 samples, 0.03%)</title><rect x="251.2" y="35.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="254.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$97/1579238551.apply (377 samples, 1.30%)</title><rect x="251.9" y="259.0" width="15.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.lambda$getResponsesInternal$0 (377 samples, 1.30%)</title><rect x="251.9" y="243.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.9" y="254.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (21 samples, 0.07%)</title><rect x="251.9" y="227.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="254.9" y="238.0"></text>
</g>
<g>
<title>one.nio.net.ConnectionString (9 samples, 0.03%)</title><rect x="252.7" y="227.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="255.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.&lt;init&gt; (17 samples, 0.06%)</title><rect x="253.1" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.1" y="238.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="253.1" y="211.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="256.1" y="222.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (112 samples, 0.39%)</title><rect x="253.8" y="227.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.8" y="238.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (112 samples, 0.39%)</title><rect x="253.8" y="211.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 0.22%)</title><rect x="253.8" y="195.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.22%)</title><rect x="253.8" y="179.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.11%)</title><rect x="253.8" y="163.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="256.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.10%)</title><rect x="255.1" y="163.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.1" y="174.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.10%)</title><rect x="255.1" y="147.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="258.1" y="158.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (49 samples, 0.17%)</title><rect x="256.3" y="195.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.3" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (49 samples, 0.17%)</title><rect x="256.3" y="179.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.3" y="190.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (18 samples, 0.06%)</title><rect x="256.3" y="163.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="259.3" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (31 samples, 0.11%)</title><rect x="257.0" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.0" y="174.0"></text>
</g>
<g>
<title>int[] (23 samples, 0.08%)</title><rect x="257.0" y="147.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="260.0" y="158.0"></text>
</g>
<g>
<title>java.util.regex.IntHashSet[] (8 samples, 0.03%)</title><rect x="258.0" y="147.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="261.0" y="158.0"></text>
</g>
<g>
<title>org.javatuples.Pair (11 samples, 0.04%)</title><rect x="258.3" y="227.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="261.3" y="238.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (17 samples, 0.06%)</title><rect x="258.8" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="258.8" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="261.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getNewRequest (190 samples, 0.65%)</title><rect x="259.4" y="227.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.06%)</title><rect x="259.4" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (17 samples, 0.06%)</title><rect x="259.4" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (17 samples, 0.06%)</title><rect x="259.4" y="179.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.06%)</title><rect x="259.4" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.02%)</title><rect x="259.4" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="259.4" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="262.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.03%)</title><rect x="259.7" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.03%)</title><rect x="259.7" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.7" y="142.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="259.7" y="115.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="262.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (13 samples, 0.04%)</title><rect x="260.1" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.04%)</title><rect x="260.1" y="195.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title><rect x="260.1" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.03%)</title><rect x="260.3" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.3" y="174.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="260.3" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="263.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (10 samples, 0.03%)</title><rect x="260.7" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="263.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.03%)</title><rect x="260.7" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.03%)</title><rect x="260.7" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="260.7" y="163.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="263.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getCloneRequest (150 samples, 0.52%)</title><rect x="261.1" y="211.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.11%)</title><rect x="261.1" y="195.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="261.1" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$85/2069209318.get$Lambda (8 samples, 0.03%)</title><rect x="261.1" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.GetHelper$$Lambda$85 (8 samples, 0.03%)</title><rect x="261.1" y="147.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="264.1" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/925858445.invoke (25 samples, 0.09%)</title><rect x="261.4" y="179.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.09%)</title><rect x="261.4" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="264.4" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.03%)</title><rect x="261.4" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.4" y="158.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="261.4" y="131.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="264.4" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.06%)</title><rect x="261.7" y="147.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.06%)</title><rect x="261.7" y="131.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.7" y="142.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.06%)</title><rect x="261.7" y="115.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="264.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (19 samples, 0.07%)</title><rect x="262.4" y="195.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (19 samples, 0.07%)</title><rect x="262.4" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (7 samples, 0.02%)</title><rect x="262.4" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="265.4" y="174.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (7 samples, 0.02%)</title><rect x="262.4" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.4" y="158.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (7 samples, 0.02%)</title><rect x="262.4" y="131.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="265.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.04%)</title><rect x="262.7" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.7" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.04%)</title><rect x="262.7" y="147.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="265.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (36 samples, 0.12%)</title><rect x="263.2" y="195.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.2" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (36 samples, 0.12%)</title><rect x="263.2" y="179.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="266.2" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (34 samples, 0.12%)</title><rect x="264.6" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (24 samples, 0.08%)</title><rect x="264.6" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (24 samples, 0.08%)</title><rect x="264.6" y="163.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (24 samples, 0.08%)</title><rect x="264.6" y="147.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (24 samples, 0.08%)</title><rect x="264.6" y="131.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (24 samples, 0.08%)</title><rect x="264.6" y="115.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (24 samples, 0.08%)</title><rect x="264.6" y="99.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.6" y="110.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (24 samples, 0.08%)</title><rect x="264.6" y="83.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="267.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (10 samples, 0.03%)</title><rect x="265.6" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.6" y="190.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (10 samples, 0.03%)</title><rect x="265.6" y="163.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="268.6" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Request (10 samples, 0.03%)</title><rect x="266.0" y="195.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="269.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.06%)</title><rect x="266.4" y="195.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.06%)</title><rect x="266.4" y="179.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="269.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.04%)</title><rect x="267.4" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (12 samples, 0.04%)</title><rect x="268.1" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (12 samples, 0.04%)</title><rect x="268.1" y="403.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.1" y="414.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (12 samples, 0.04%)</title><rect x="268.1" y="387.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="271.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (23 samples, 0.08%)</title><rect x="268.6" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.6" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (23 samples, 0.08%)</title><rect x="268.6" y="403.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="271.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.getEndResponseGet (357 samples, 1.23%)</title><rect x="269.5" y="435.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.02%)</title><rect x="269.8" y="419.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="272.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (30 samples, 0.10%)</title><rect x="270.2" y="419.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.2" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="270.2" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="273.2" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (22 samples, 0.08%)</title><rect x="270.5" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="270.5" y="387.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="273.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (13 samples, 0.04%)</title><rect x="270.9" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (13 samples, 0.04%)</title><rect x="270.9" y="371.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="273.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.12%)</title><rect x="271.4" y="419.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger$$Lambda$196/1801993892.accept (36 samples, 0.12%)</title><rect x="271.4" y="403.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.lambda$getEndResponseGet$4 (36 samples, 0.12%)</title><rect x="271.4" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (36 samples, 0.12%)</title><rect x="271.4" y="371.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.4" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (36 samples, 0.12%)</title><rect x="271.4" y="355.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="274.4" y="366.0"></text>
</g>
<g>
<title>java/util/Collection.stream (23 samples, 0.08%)</title><rect x="272.9" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (7 samples, 0.02%)</title><rect x="272.9" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.9" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (7 samples, 0.02%)</title><rect x="272.9" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="275.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.06%)</title><rect x="273.2" y="403.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.06%)</title><rect x="273.2" y="387.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="276.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (223 samples, 0.77%)</title><rect x="274.1" y="419.0" width="9.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (217 samples, 0.75%)</title><rect x="274.1" y="403.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (217 samples, 0.75%)</title><rect x="274.1" y="387.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (204 samples, 0.70%)</title><rect x="274.1" y="371.0" width="8.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (189 samples, 0.65%)</title><rect x="274.1" y="355.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Streams$ConcatSpliterator.forEachRemaining (178 samples, 0.61%)</title><rect x="274.5" y="339.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (178 samples, 0.61%)</title><rect x="274.5" y="323.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (178 samples, 0.61%)</title><rect x="274.5" y="307.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (136 samples, 0.47%)</title><rect x="274.5" y="291.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (15 samples, 0.05%)</title><rect x="274.5" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.5" y="286.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$112/920646907.accept (15 samples, 0.05%)</title><rect x="274.5" y="259.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (15 samples, 0.05%)</title><rect x="274.5" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.5" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (15 samples, 0.05%)</title><rect x="274.5" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.5" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (15 samples, 0.05%)</title><rect x="274.5" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.5" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (15 samples, 0.05%)</title><rect x="274.5" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (15 samples, 0.05%)</title><rect x="274.5" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.5" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.05%)</title><rect x="274.5" y="163.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="277.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger$$Lambda$193/24334735.apply (121 samples, 0.42%)</title><rect x="275.1" y="275.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.lambda$getEndResponseGet$3 (121 samples, 0.42%)</title><rect x="275.1" y="259.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.1" y="270.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (20 samples, 0.07%)</title><rect x="275.1" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Long (20 samples, 0.07%)</title><rect x="275.1" y="227.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="278.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (41 samples, 0.14%)</title><rect x="276.0" y="243.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.14%)</title><rect x="276.0" y="227.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.14%)</title><rect x="276.0" y="211.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.0" y="222.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.05%)</title><rect x="276.0" y="195.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="279.0" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.09%)</title><rect x="276.6" y="195.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.6" y="206.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.09%)</title><rect x="276.6" y="179.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="279.6" y="190.0"></text>
</g>
<g>
<title>org.javatuples.Pair (24 samples, 0.08%)</title><rect x="277.6" y="243.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="280.6" y="254.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (36 samples, 0.12%)</title><rect x="278.6" y="243.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.06%)</title><rect x="278.6" y="227.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="281.6" y="238.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (18 samples, 0.06%)</title><rect x="279.3" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.3" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (18 samples, 0.06%)</title><rect x="279.3" y="211.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.3" y="222.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (18 samples, 0.06%)</title><rect x="279.3" y="195.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="282.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger$$Lambda$191/1450139046.test (42 samples, 0.14%)</title><rect x="280.1" y="291.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.lambda$getEndResponseGet$2 (42 samples, 0.14%)</title><rect x="280.1" y="275.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (42 samples, 0.14%)</title><rect x="280.1" y="259.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.14%)</title><rect x="280.1" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.14%)</title><rect x="280.1" y="227.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.06%)</title><rect x="280.1" y="211.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="283.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.09%)</title><rect x="280.7" y="211.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.7" y="222.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.09%)</title><rect x="280.7" y="195.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="283.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (15 samples, 0.05%)</title><rect x="281.8" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (10 samples, 0.03%)</title><rect x="281.8" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (10 samples, 0.03%)</title><rect x="281.8" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="284.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (13 samples, 0.04%)</title><rect x="282.4" y="371.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (13 samples, 0.04%)</title><rect x="282.4" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.4" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (13 samples, 0.04%)</title><rect x="282.4" y="339.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="285.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (11 samples, 0.04%)</title><rect x="283.1" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.1" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (11 samples, 0.04%)</title><rect x="283.1" y="403.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="286.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Stream.concat (9 samples, 0.03%)</title><rect x="283.7" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getAckFrom (99 samples, 0.34%)</title><rect x="284.0" y="435.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.0" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.02%)</title><rect x="284.2" y="419.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (72 samples, 0.25%)</title><rect x="284.4" y="419.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (72 samples, 0.25%)</title><rect x="284.4" y="403.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="287.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (72 samples, 0.25%)</title><rect x="284.4" y="387.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (70 samples, 0.24%)</title><rect x="284.4" y="371.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (65 samples, 0.22%)</title><rect x="284.4" y="355.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (65 samples, 0.22%)</title><rect x="284.4" y="339.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (65 samples, 0.22%)</title><rect x="284.4" y="323.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.4" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.tryAdvance (65 samples, 0.22%)</title><rect x="284.4" y="307.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (65 samples, 0.22%)</title><rect x="284.4" y="291.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$89/13554038.apply (65 samples, 0.22%)</title><rect x="284.4" y="275.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getAckFrom$0 (65 samples, 0.22%)</title><rect x="284.4" y="259.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.split (65 samples, 0.22%)</title><rect x="284.4" y="243.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.split (65 samples, 0.22%)</title><rect x="284.4" y="227.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.4" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (7 samples, 0.02%)</title><rect x="284.4" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="287.4" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="284.7" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="287.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.11%)</title><rect x="285.1" y="211.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="285.1" y="195.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="285.1" y="179.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="288.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.06%)</title><rect x="285.7" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.7" y="190.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="285.7" y="163.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="288.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.06%)</title><rect x="286.4" y="211.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (16 samples, 0.06%)</title><rect x="286.4" y="195.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.4" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.06%)</title><rect x="286.4" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (16 samples, 0.06%)</title><rect x="286.4" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.06%)</title><rect x="286.4" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.06%)</title><rect x="286.4" y="131.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="289.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (8 samples, 0.03%)</title><rect x="287.4" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.4" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (8 samples, 0.03%)</title><rect x="287.4" y="403.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="290.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$176/682397796.run (4,273 samples, 14.70%)</title><rect x="288.1" y="515.0" width="173.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.1" y="526.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$getRep$1 (4,273 samples, 14.70%)</title><rect x="288.1" y="499.0" width="173.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.1" y="510.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getRepInternal (4,273 samples, 14.70%)</title><rect x="288.1" y="483.0" width="173.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.1" y="494.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (164 samples, 0.56%)</title><rect x="288.1" y="467.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.1" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (164 samples, 0.56%)</title><rect x="288.1" y="451.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (117 samples, 0.40%)</title><rect x="288.1" y="435.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="291.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (117 samples, 0.40%)</title><rect x="288.1" y="419.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.1" y="430.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.40%)</title><rect x="288.1" y="403.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="291.1" y="414.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 0.16%)</title><rect x="292.8" y="435.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.8" y="446.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (47 samples, 0.16%)</title><rect x="292.8" y="419.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="295.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getResponseIfIdNotNull (3,954 samples, 13.60%)</title><rect x="294.7" y="467.0" width="160.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.7" y="478.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/Response.ok (145 samples, 0.50%)</title><rect x="294.7" y="451.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.7" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Response (26 samples, 0.09%)</title><rect x="294.7" y="435.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="297.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (119 samples, 0.41%)</title><rect x="295.8" y="435.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.8" y="446.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.16%)</title><rect x="295.8" y="419.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="298.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (46 samples, 0.16%)</title><rect x="297.7" y="419.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="300.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.09%)</title><rect x="299.5" y="419.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="302.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (1,376 samples, 4.73%)</title><rect x="300.6" y="451.0" width="55.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.6" y="462.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,358 samples, 4.67%)</title><rect x="300.6" y="435.0" width="55.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.6" y="446.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,358 samples, 4.67%)</title><rect x="300.6" y="419.0" width="55.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.6" y="430.0">org/r..</text>
</g>
<g>
<title>byte[] (40 samples, 0.14%)</title><rect x="300.6" y="403.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="303.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,318 samples, 4.53%)</title><rect x="302.2" y="403.0" width="53.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.2" y="414.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,318 samples, 4.53%)</title><rect x="302.2" y="387.0" width="53.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.2" y="398.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1,318 samples, 4.53%)</title><rect x="302.2" y="371.0" width="53.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.2" y="382.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,318 samples, 4.53%)</title><rect x="302.2" y="355.0" width="53.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.2" y="366.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,318 samples, 4.53%)</title><rect x="302.2" y="339.0" width="53.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="305.2" y="350.0">org/r..</text>
</g>
<g>
<title>byte[] (1,318 samples, 4.53%)</title><rect x="302.2" y="323.0" width="53.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="305.2" y="334.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (18 samples, 0.06%)</title><rect x="355.7" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.7" y="446.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="355.7" y="419.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="358.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (39 samples, 0.13%)</title><rect x="356.4" y="451.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="359.4" y="462.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.13%)</title><rect x="356.4" y="435.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="359.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeader (2,238 samples, 7.70%)</title><rect x="358.0" y="451.0" width="90.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.0" y="462.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/primitives/Bytes.asList (37 samples, 0.13%)</title><rect x="358.0" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.0" y="446.0"></text>
</g>
<g>
<title>com.google.common.primitives.Bytes$ByteArrayAsList (37 samples, 0.13%)</title><rect x="358.0" y="419.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="361.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.23%)</title><rect x="359.5" y="435.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/280744458.invoke (67 samples, 0.23%)</title><rect x="359.5" y="419.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.23%)</title><rect x="359.5" y="403.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (29 samples, 0.10%)</title><rect x="359.5" y="387.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.5" y="398.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.10%)</title><rect x="359.5" y="371.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="362.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (38 samples, 0.13%)</title><rect x="360.7" y="387.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (38 samples, 0.13%)</title><rect x="360.7" y="371.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.7" y="382.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.13%)</title><rect x="360.7" y="355.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="363.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (83 samples, 0.29%)</title><rect x="362.2" y="435.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (83 samples, 0.29%)</title><rect x="362.2" y="419.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (37 samples, 0.13%)</title><rect x="362.2" y="403.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.2" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (37 samples, 0.13%)</title><rect x="362.2" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.2" y="398.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (37 samples, 0.13%)</title><rect x="362.2" y="371.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="365.2" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (46 samples, 0.16%)</title><rect x="363.7" y="403.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.7" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (46 samples, 0.16%)</title><rect x="363.7" y="387.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="366.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (112 samples, 0.39%)</title><rect x="365.6" y="435.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.6" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (34 samples, 0.12%)</title><rect x="365.6" y="419.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.6" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (34 samples, 0.12%)</title><rect x="365.6" y="403.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="368.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (78 samples, 0.27%)</title><rect x="367.0" y="419.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.0" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (78 samples, 0.27%)</title><rect x="367.0" y="403.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="370.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.joining (42 samples, 0.14%)</title><rect x="370.2" y="435.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.2" y="446.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (42 samples, 0.14%)</title><rect x="370.2" y="419.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="373.2" y="430.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.mapToObj (86 samples, 0.30%)</title><rect x="371.9" y="435.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.9" y="446.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.mapToObj (86 samples, 0.30%)</title><rect x="371.9" y="419.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.9" y="430.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$1 (86 samples, 0.30%)</title><rect x="371.9" y="403.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="374.9" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1,455 samples, 5.00%)</title><rect x="375.4" y="435.0" width="59.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.4" y="446.0">java/u..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,354 samples, 4.66%)</title><rect x="375.4" y="419.0" width="54.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.4" y="430.0">java/..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1,354 samples, 4.66%)</title><rect x="375.4" y="403.0" width="54.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.4" y="414.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,317 samples, 4.53%)</title><rect x="375.4" y="387.0" width="53.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.4" y="398.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1,238 samples, 4.26%)</title><rect x="375.4" y="371.0" width="50.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.4" y="382.0">java/..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (1,173 samples, 4.03%)</title><rect x="375.4" y="355.0" width="47.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.4" y="366.0">java..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$4$1.accept (1,173 samples, 4.03%)</title><rect x="375.4" y="339.0" width="47.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.4" y="350.0">java..</text>
</g>
<g>
<title>java/util/stream/IntPipeline$1$1.accept (1,173 samples, 4.03%)</title><rect x="375.4" y="323.0" width="47.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.4" y="334.0">java..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,173 samples, 4.03%)</title><rect x="375.4" y="307.0" width="47.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.4" y="318.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$147/1846082377.apply (1,173 samples, 4.03%)</title><rect x="375.4" y="291.0" width="47.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="378.4" y="302.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.valueOf (1,173 samples, 4.03%)</title><rect x="375.4" y="275.0" width="47.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.4" y="286.0">java..</text>
</g>
<g>
<title>java/lang/Character.toString (1,173 samples, 4.03%)</title><rect x="375.4" y="259.0" width="47.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="378.4" y="270.0">java..</text>
</g>
<g>
<title>char[] (382 samples, 1.31%)</title><rect x="375.4" y="243.0" width="15.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="378.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (791 samples, 2.72%)</title><rect x="390.9" y="243.0" width="32.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.9" y="254.0">ja..</text>
</g>
<g>
<title>java.lang.String (383 samples, 1.32%)</title><rect x="390.9" y="227.0" width="15.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="393.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (408 samples, 1.40%)</title><rect x="406.4" y="227.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (408 samples, 1.40%)</title><rect x="406.4" y="211.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="409.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (408 samples, 1.40%)</title><rect x="406.4" y="195.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.4" y="206.0"></text>
</g>
<g>
<title>byte[] (408 samples, 1.40%)</title><rect x="406.4" y="179.0" width="16.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="409.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (65 samples, 0.22%)</title><rect x="423.0" y="355.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedInt.begin (65 samples, 0.22%)</title><rect x="423.0" y="339.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (65 samples, 0.22%)</title><rect x="423.0" y="323.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (65 samples, 0.22%)</title><rect x="423.0" y="307.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$153/664749301.get (65 samples, 0.22%)</title><rect x="423.0" y="291.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.0" y="302.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (28 samples, 0.10%)</title><rect x="423.0" y="275.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="426.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (37 samples, 0.13%)</title><rect x="424.1" y="275.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (37 samples, 0.13%)</title><rect x="424.1" y="259.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.1" y="270.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.13%)</title><rect x="424.1" y="243.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="427.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (79 samples, 0.27%)</title><rect x="425.6" y="371.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$1.opWrapSink (12 samples, 0.04%)</title><rect x="425.6" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$1$1 (12 samples, 0.04%)</title><rect x="425.6" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="428.6" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (36 samples, 0.12%)</title><rect x="426.1" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (36 samples, 0.12%)</title><rect x="426.1" y="339.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="429.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$4.opWrapSink (31 samples, 0.11%)</title><rect x="427.5" y="355.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$4$1 (31 samples, 0.11%)</title><rect x="427.5" y="339.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="430.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (37 samples, 0.13%)</title><rect x="428.8" y="387.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (37 samples, 0.13%)</title><rect x="428.8" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.8" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (37 samples, 0.13%)</title><rect x="428.8" y="355.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="431.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$172/1670118227.apply (66 samples, 0.23%)</title><rect x="430.3" y="419.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="433.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (66 samples, 0.23%)</title><rect x="430.3" y="403.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 0.23%)</title><rect x="430.3" y="387.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.08%)</title><rect x="430.3" y="371.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="433.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (42 samples, 0.14%)</title><rect x="431.3" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.3" y="382.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.14%)</title><rect x="431.3" y="355.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="434.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (35 samples, 0.12%)</title><rect x="433.0" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.0" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (35 samples, 0.12%)</title><rect x="433.0" y="403.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="436.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (163 samples, 0.56%)</title><rect x="434.4" y="435.0" width="6.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.4" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (163 samples, 0.56%)</title><rect x="434.4" y="419.0" width="6.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="437.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToInt (76 samples, 0.26%)</title><rect x="441.0" y="435.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="444.0" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$4 (76 samples, 0.26%)</title><rect x="441.0" y="419.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="444.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.toArray (117 samples, 0.40%)</title><rect x="444.1" y="435.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.1" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (117 samples, 0.40%)</title><rect x="444.1" y="419.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (117 samples, 0.40%)</title><rect x="444.1" y="403.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (22 samples, 0.08%)</title><rect x="444.1" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (22 samples, 0.08%)</title><rect x="444.1" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (22 samples, 0.08%)</title><rect x="444.1" y="355.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.1" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (22 samples, 0.08%)</title><rect x="444.1" y="339.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="447.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.makeNodeBuilder (95 samples, 0.33%)</title><rect x="445.0" y="387.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.builder (95 samples, 0.33%)</title><rect x="445.0" y="371.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$FixedNodeBuilder (25 samples, 0.09%)</title><rect x="445.0" y="355.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="448.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$FixedNodeBuilder.&lt;init&gt; (70 samples, 0.24%)</title><rect x="446.0" y="355.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$ArrayNode.&lt;init&gt; (70 samples, 0.24%)</title><rect x="446.0" y="339.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$130/1343016251.apply (70 samples, 0.24%)</title><rect x="446.0" y="323.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$addTimestampHeader$3 (70 samples, 0.24%)</title><rect x="446.0" y="307.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Integer[] (70 samples, 0.24%)</title><rect x="446.0" y="291.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="449.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestamp (156 samples, 0.54%)</title><rect x="448.9" y="451.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.9" y="462.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.23%)</title><rect x="448.9" y="435.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="451.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (27 samples, 0.09%)</title><rect x="451.6" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="454.6" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.toString (27 samples, 0.09%)</title><rect x="451.6" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.6" y="430.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.09%)</title><rect x="451.6" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="454.6" y="414.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (61 samples, 0.21%)</title><rect x="452.7" y="435.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.08%)</title><rect x="452.7" y="419.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="455.7" y="430.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (39 samples, 0.13%)</title><rect x="453.6" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (39 samples, 0.13%)</title><rect x="453.6" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.6" y="414.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (39 samples, 0.13%)</title><rect x="453.6" y="387.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="456.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (155 samples, 0.53%)</title><rect x="455.2" y="467.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (107 samples, 0.37%)</title><rect x="455.2" y="451.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (107 samples, 0.37%)</title><rect x="455.2" y="435.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (107 samples, 0.37%)</title><rect x="455.2" y="419.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="458.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (107 samples, 0.37%)</title><rect x="455.2" y="403.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.2" y="414.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.37%)</title><rect x="455.2" y="387.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="458.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (48 samples, 0.17%)</title><rect x="459.5" y="451.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.5" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.17%)</title><rect x="459.5" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (48 samples, 0.17%)</title><rect x="459.5" y="419.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (48 samples, 0.17%)</title><rect x="459.5" y="403.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="462.5" y="414.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (5,416 samples, 18.63%)</title><rect x="461.5" y="563.0" width="219.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.5" y="574.0">one/nio/server/AcceptorThread..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (5,387 samples, 18.53%)</title><rect x="461.5" y="547.0" width="218.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.5" y="558.0">one/nio/http/HttpServer.creat..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (5,387 samples, 18.53%)</title><rect x="461.5" y="531.0" width="218.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.5" y="542.0">one/nio/http/HttpServer.creat..</text>
</g>
<g>
<title>one.nio.http.HttpSession (54 samples, 0.19%)</title><rect x="461.5" y="515.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="464.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (5,333 samples, 18.34%)</title><rect x="463.7" y="515.0" width="216.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.7" y="526.0">one/nio/http/HttpSession.&lt;in..</text>
</g>
<g>
<title>byte[] (845 samples, 2.91%)</title><rect x="463.7" y="499.0" width="34.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="466.7" y="510.0">by..</text>
</g>
<g>
<title>byte[] (4,476 samples, 15.40%)</title><rect x="498.0" y="499.0" width="181.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="501.0" y="510.0">byte[]</text>
</g>
<g>
<title>java.util.LinkedList (12 samples, 0.04%)</title><rect x="679.6" y="499.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="682.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (29 samples, 0.10%)</title><rect x="680.1" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="683.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (29 samples, 0.10%)</title><rect x="680.1" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.1" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (29 samples, 0.10%)</title><rect x="680.1" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="683.1" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (12,534 samples, 43.11%)</title><rect x="681.3" y="563.0" width="508.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.3" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (404 samples, 1.39%)</title><rect x="681.3" y="547.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.3" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (404 samples, 1.39%)</title><rect x="681.3" y="531.0" width="16.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="684.3" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (12,130 samples, 41.72%)</title><rect x="697.7" y="547.0" width="492.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.7" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (12,130 samples, 41.72%)</title><rect x="697.7" y="531.0" width="492.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.7" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,648 samples, 26.31%)</title><rect x="697.7" y="515.0" width="310.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.7" y="526.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,247 samples, 4.29%)</title><rect x="697.7" y="499.0" width="50.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.7" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,247 samples, 4.29%)</title><rect x="697.7" y="483.0" width="50.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.7" y="494.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (409 samples, 1.41%)</title><rect x="697.7" y="467.0" width="16.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (217 samples, 0.75%)</title><rect x="697.7" y="451.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (217 samples, 0.75%)</title><rect x="697.7" y="435.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (217 samples, 0.75%)</title><rect x="697.7" y="419.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.40%)</title><rect x="697.7" y="403.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="700.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (102 samples, 0.35%)</title><rect x="702.4" y="403.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.4" y="414.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.35%)</title><rect x="702.4" y="387.0" width="4.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="705.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (192 samples, 0.66%)</title><rect x="706.5" y="451.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.37%)</title><rect x="706.5" y="435.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.37%)</title><rect x="706.5" y="419.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$124/796037653.get$Lambda (108 samples, 0.37%)</title><rect x="706.5" y="403.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.5" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.CustomServer$$Lambda$124 (108 samples, 0.37%)</title><rect x="706.5" y="387.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="709.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.29%)</title><rect x="710.9" y="435.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (84 samples, 0.29%)</title><rect x="710.9" y="419.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (81 samples, 0.28%)</title><rect x="710.9" y="403.0" width="3.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="713.9" y="414.0"></text>
</g>
<g>
<title>RequestHandler4_getRep.handleRequest (421 samples, 1.45%)</title><rect x="714.3" y="467.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (205 samples, 0.71%)</title><rect x="714.3" y="451.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (205 samples, 0.71%)</title><rect x="714.3" y="435.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (205 samples, 0.71%)</title><rect x="714.3" y="419.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (108 samples, 0.37%)</title><rect x="714.3" y="403.0" width="4.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="717.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (97 samples, 0.33%)</title><rect x="718.7" y="403.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.7" y="414.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.33%)</title><rect x="718.7" y="387.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="721.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getRep (216 samples, 0.74%)</title><rect x="722.6" y="451.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.37%)</title><rect x="722.6" y="435.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.37%)</title><rect x="722.6" y="419.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$176/682397796.get$Lambda (109 samples, 0.37%)</title><rect x="722.6" y="403.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.6" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.CustomServer$$Lambda$176 (109 samples, 0.37%)</title><rect x="722.6" y="387.0" width="4.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="725.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (107 samples, 0.37%)</title><rect x="727.0" y="435.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (107 samples, 0.37%)</title><rect x="727.0" y="419.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="730.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (107 samples, 0.37%)</title><rect x="727.0" y="403.0" width="4.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="730.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (417 samples, 1.43%)</title><rect x="731.4" y="467.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (417 samples, 1.43%)</title><rect x="731.4" y="451.0" width="16.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (417 samples, 1.43%)</title><rect x="731.4" y="435.0" width="16.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (183 samples, 0.63%)</title><rect x="731.4" y="419.0" width="7.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="734.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (234 samples, 0.80%)</title><rect x="738.8" y="419.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="741.8" y="430.0"></text>
</g>
<g>
<title>byte[] (234 samples, 0.80%)</title><rect x="738.8" y="403.0" width="9.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,164 samples, 17.76%)</title><rect x="748.3" y="499.0" width="209.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.3" y="510.0">one/nio/http/HttpSession.pa..</text>
</g>
<g>
<title>one.nio.http.Request (944 samples, 3.25%)</title><rect x="748.3" y="483.0" width="38.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="751.3" y="494.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,634 samples, 5.62%)</title><rect x="786.6" y="483.0" width="66.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.6" y="494.0">one/nio..</text>
</g>
<g>
<title>java.lang.String[] (1,569 samples, 5.40%)</title><rect x="786.6" y="467.0" width="63.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="789.6" y="478.0">java.la..</text>
</g>
<g>
<title>java.lang.String[] (65 samples, 0.22%)</title><rect x="850.3" y="467.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="853.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,586 samples, 8.89%)</title><rect x="852.9" y="483.0" width="105.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.9" y="494.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,586 samples, 8.89%)</title><rect x="852.9" y="467.0" width="105.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.9" y="478.0">one/nio/util..</text>
</g>
<g>
<title>char[] (1,170 samples, 4.02%)</title><rect x="852.9" y="451.0" width="47.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.9" y="462.0">char[]</text>
</g>
<g>
<title>char[] (16 samples, 0.06%)</title><rect x="900.4" y="451.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (472 samples, 1.62%)</title><rect x="901.1" y="451.0" width="19.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="904.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (928 samples, 3.19%)</title><rect x="920.2" y="451.0" width="37.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.2" y="462.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (928 samples, 3.19%)</title><rect x="920.2" y="435.0" width="37.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="923.2" y="446.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (928 samples, 3.19%)</title><rect x="920.2" y="419.0" width="37.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.2" y="430.0">jav..</text>
</g>
<g>
<title>byte[] (928 samples, 3.19%)</title><rect x="920.2" y="403.0" width="37.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.2" y="414.0">byt..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,237 samples, 4.25%)</title><rect x="957.9" y="499.0" width="50.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="960.9" y="510.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,237 samples, 4.25%)</title><rect x="957.9" y="483.0" width="50.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.9" y="494.0">one/n..</text>
</g>
<g>
<title>char[] (629 samples, 2.16%)</title><rect x="957.9" y="467.0" width="25.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="960.9" y="478.0">c..</text>
</g>
<g>
<title>java.lang.String (268 samples, 0.92%)</title><rect x="983.4" y="467.0" width="10.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="986.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (340 samples, 1.17%)</title><rect x="994.3" y="467.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (340 samples, 1.17%)</title><rect x="994.3" y="451.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (340 samples, 1.17%)</title><rect x="994.3" y="435.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="997.3" y="446.0"></text>
</g>
<g>
<title>byte[] (340 samples, 1.17%)</title><rect x="994.3" y="419.0" width="13.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="997.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4,482 samples, 15.42%)</title><rect x="1008.1" y="515.0" width="181.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.1" y="526.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4,482 samples, 15.42%)</title><rect x="1008.1" y="499.0" width="181.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1011.1" y="510.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>byte[] (145 samples, 0.50%)</title><rect x="1008.1" y="483.0" width="5.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1011.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.35%)</title><rect x="1014.0" y="483.0" width="4.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1017.0" y="494.0"></text>
</g>
<g>
<title>one.nio.net.SocketClosedException (230 samples, 0.79%)</title><rect x="1018.2" y="483.0" width="9.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1021.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (4,004 samples, 13.77%)</title><rect x="1027.5" y="483.0" width="162.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.5" y="494.0">one/nio/net/SocketClo..</text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (4,004 samples, 13.77%)</title><rect x="1027.5" y="467.0" width="162.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.5" y="478.0">java/net/SocketExcept..</text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (4,004 samples, 13.77%)</title><rect x="1027.5" y="451.0" width="162.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.5" y="462.0">java/io/IOException.&lt;..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4,004 samples, 13.77%)</title><rect x="1027.5" y="435.0" width="162.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.5" y="446.0">java/lang/Exception.&lt;..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4,004 samples, 13.77%)</title><rect x="1027.5" y="419.0" width="162.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.5" y="430.0">java/lang/Throwable.&lt;..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4,004 samples, 13.77%)</title><rect x="1027.5" y="403.0" width="162.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.5" y="414.0">java/lang/Throwable.f..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4,004 samples, 13.77%)</title><rect x="1027.5" y="387.0" width="162.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.5" y="398.0">java/lang/Throwable.f..</text>
</g>
<g>
<title>int[] (274 samples, 0.94%)</title><rect x="1027.5" y="371.0" width="11.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1030.5" y="382.0"></text>
</g>
<g>
<title>int[] (188 samples, 0.65%)</title><rect x="1038.6" y="371.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1041.6" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (559 samples, 1.92%)</title><rect x="1046.2" y="371.0" width="22.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1049.2" y="382.0">j..</text>
</g>
<g>
<title>java.lang.Object[] (315 samples, 1.08%)</title><rect x="1068.9" y="371.0" width="12.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1071.9" y="382.0"></text>
</g>
<g>
<title>long[] (514 samples, 1.77%)</title><rect x="1081.7" y="371.0" width="20.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1084.7" y="382.0"></text>
</g>
<g>
<title>long[] (1,855 samples, 6.38%)</title><rect x="1102.6" y="371.0" width="75.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1105.6" y="382.0">long[]</text>
</g>
<g>
<title>short[] (283 samples, 0.97%)</title><rect x="1177.9" y="371.0" width="11.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1180.9" y="382.0"></text>
</g>
<g>
<title>short[] (16 samples, 0.06%)</title><rect x="1189.4" y="371.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1192.4" y="382.0"></text>
</g>
</g>
</svg>
