<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="469"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="469"> </text>
<g id="frames">
<g>
<title>all (12,483 samples, 100.00%)</title><rect x="10.0" y="435.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="446.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (8,003 samples, 64.11%)</title><rect x="10.0" y="419.0" width="756.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="430.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,003 samples, 64.11%)</title><rect x="10.0" y="403.0" width="756.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="414.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,003 samples, 64.11%)</title><rect x="10.0" y="387.0" width="756.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="398.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (59 samples, 0.47%)</title><rect x="10.0" y="371.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (59 samples, 0.47%)</title><rect x="10.0" y="355.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.47%)</title><rect x="10.0" y="339.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (59 samples, 0.47%)</title><rect x="10.0" y="323.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (59 samples, 0.47%)</title><rect x="10.0" y="307.0" width="5.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$80/407135064.run (7,944 samples, 63.64%)</title><rect x="15.6" y="371.0" width="750.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.6" y="382.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$80/407135064.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1 (7,944 samples, 63.64%)</title><rect x="15.6" y="355.0" width="750.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="366.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (148 samples, 1.19%)</title><rect x="15.6" y="339.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (148 samples, 1.19%)</title><rect x="15.6" y="323.0" width="14.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get$Lambda (148 samples, 1.19%)</title><rect x="15.6" y="307.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$83 (148 samples, 1.19%)</title><rect x="15.6" y="291.0" width="14.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="18.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (7,796 samples, 62.45%)</title><rect x="29.6" y="339.0" width="736.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.6" y="350.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (420 samples, 3.36%)</title><rect x="29.6" y="323.0" width="39.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.6" y="334.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (300 samples, 2.40%)</title><rect x="29.6" y="307.0" width="28.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.6" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (235 samples, 1.88%)</title><rect x="29.6" y="291.0" width="22.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.6" y="302.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (235 samples, 1.88%)</title><rect x="29.6" y="275.0" width="22.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.6" y="286.0">o..</text>
</g>
<g>
<title>byte[] (235 samples, 1.88%)</title><rect x="29.6" y="259.0" width="22.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="32.6" y="270.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 0.52%)</title><rect x="51.8" y="291.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.8" y="302.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (65 samples, 0.52%)</title><rect x="51.8" y="275.0" width="6.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="54.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (117 samples, 0.94%)</title><rect x="57.9" y="307.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (117 samples, 0.94%)</title><rect x="57.9" y="291.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (117 samples, 0.94%)</title><rect x="57.9" y="275.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.40%)</title><rect x="57.9" y="259.0" width="4.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.54%)</title><rect x="62.7" y="259.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.7" y="270.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.54%)</title><rect x="62.7" y="243.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (3 samples, 0.02%)</title><rect x="69.0" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.02%)</title><rect x="69.0" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.02%)</title><rect x="69.0" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="72.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get (7,376 samples, 59.09%)</title><rect x="69.3" y="323.0" width="697.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.3" y="334.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$83/1173763183.get</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (7,376 samples, 59.09%)</title><rect x="69.3" y="307.0" width="697.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.3" y="318.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas (7,376 samples, 59.09%)</title><rect x="69.3" y="291.0" width="697.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.3" y="302.0">ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (92 samples, 0.74%)</title><rect x="69.3" y="275.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (92 samples, 0.74%)</title><rect x="69.3" y="259.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (92 samples, 0.74%)</title><rect x="69.3" y="243.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (92 samples, 0.74%)</title><rect x="69.3" y="227.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.38%)</title><rect x="69.3" y="211.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="72.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (44 samples, 0.35%)</title><rect x="73.8" y="211.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.8" y="222.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.35%)</title><rect x="73.8" y="195.0" width="4.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="76.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNode (5 samples, 0.04%)</title><rect x="78.0" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.04%)</title><rect x="78.0" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 0.04%)</title><rect x="78.0" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 0.04%)</title><rect x="78.0" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.0" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.04%)</title><rect x="78.0" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.0" y="222.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="78.0" y="195.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="81.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (3,861 samples, 30.93%)</title><rect x="78.4" y="275.0" width="365.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.4" y="286.0">ru/mail/polis/service/stasyanoi/server/CustomServe..</text>
</g>
<g>
<title>java/lang/String.getBytes (37 samples, 0.30%)</title><rect x="78.4" y="259.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (37 samples, 0.30%)</title><rect x="78.4" y="243.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (37 samples, 0.30%)</title><rect x="78.4" y="227.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.30%)</title><rect x="78.4" y="211.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.4" y="222.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.30%)</title><rect x="78.4" y="195.0" width="3.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (2,748 samples, 22.01%)</title><rect x="81.9" y="259.0" width="259.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.9" y="270.0">ru/mail/polis/dao/stasyanoi/DAOImpl..</text>
</g>
<g>
<title>java/lang/String.valueOf (112 samples, 0.90%)</title><rect x="81.9" y="243.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="254.0"></text>
</g>
<g>
<title>java/lang/Long.toString (112 samples, 0.90%)</title><rect x="81.9" y="227.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.9" y="238.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.46%)</title><rect x="81.9" y="211.0" width="5.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="84.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.44%)</title><rect x="87.3" y="211.0" width="5.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="90.3" y="222.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2,491 samples, 19.96%)</title><rect x="92.5" y="243.0" width="235.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.5" y="254.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2,491 samples, 19.96%)</title><rect x="92.5" y="227.0" width="235.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.5" y="238.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>byte[] (92 samples, 0.74%)</title><rect x="92.5" y="211.0" width="8.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="95.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2,399 samples, 19.22%)</title><rect x="101.2" y="211.0" width="226.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.2" y="222.0">ru/mail/polis/dao/stasyanoi/Co..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2,399 samples, 19.22%)</title><rect x="101.2" y="195.0" width="226.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.2" y="206.0">ru/mail/polis/dao/stasyanoi/Co..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2,399 samples, 19.22%)</title><rect x="101.2" y="179.0" width="226.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.2" y="190.0">org/rocksdb/AbstractSlice.data</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2,399 samples, 19.22%)</title><rect x="101.2" y="163.0" width="226.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.2" y="174.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2,399 samples, 19.22%)</title><rect x="101.2" y="147.0" width="226.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.2" y="158.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (2,399 samples, 19.22%)</title><rect x="101.2" y="131.0" width="226.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="104.2" y="142.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (98 samples, 0.79%)</title><rect x="328.0" y="243.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (98 samples, 0.79%)</title><rect x="328.0" y="227.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (98 samples, 0.79%)</title><rect x="328.0" y="211.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (98 samples, 0.79%)</title><rect x="328.0" y="195.0" width="9.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="331.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (47 samples, 0.38%)</title><rect x="337.3" y="243.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.3" y="254.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.38%)</title><rect x="337.3" y="227.0" width="4.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="340.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithTimestamp (1,076 samples, 8.62%)</title><rect x="341.7" y="259.0" width="101.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.7" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/Response.ok (220 samples, 1.76%)</title><rect x="341.7" y="243.0" width="20.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.7" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (36 samples, 0.29%)</title><rect x="341.7" y="227.0" width="3.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="344.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (184 samples, 1.47%)</title><rect x="345.1" y="227.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.1" y="238.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.62%)</title><rect x="345.1" y="211.0" width="7.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="348.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (56 samples, 0.45%)</title><rect x="352.4" y="211.0" width="5.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="355.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.41%)</title><rect x="357.7" y="211.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="360.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (113 samples, 0.91%)</title><rect x="362.5" y="243.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.5" y="254.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.91%)</title><rect x="362.5" y="227.0" width="10.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="365.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeaderToResponse (356 samples, 2.85%)</title><rect x="373.2" y="243.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.2" y="254.0">ru..</text>
</g>
<g>
<title>java.lang.StringBuilder (50 samples, 0.40%)</title><rect x="373.2" y="227.0" width="4.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="376.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (71 samples, 0.57%)</title><rect x="377.9" y="227.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.9" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (71 samples, 0.57%)</title><rect x="377.9" y="211.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.9" y="222.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.57%)</title><rect x="377.9" y="195.0" width="6.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="380.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (235 samples, 1.88%)</title><rect x="384.6" y="227.0" width="22.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.6" y="238.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1511785794.invoke (235 samples, 1.88%)</title><rect x="384.6" y="211.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.6" y="222.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.96%)</title><rect x="384.6" y="195.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (48 samples, 0.38%)</title><rect x="384.6" y="179.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="387.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.38%)</title><rect x="384.6" y="163.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="387.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (72 samples, 0.58%)</title><rect x="389.2" y="179.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="392.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (72 samples, 0.58%)</title><rect x="389.2" y="163.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.2" y="174.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.58%)</title><rect x="389.2" y="147.0" width="6.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="392.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/796684896.invoke (115 samples, 0.92%)</title><rect x="396.0" y="195.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.92%)</title><rect x="396.0" y="179.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (115 samples, 0.92%)</title><rect x="396.0" y="163.0" width="10.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (115 samples, 0.92%)</title><rect x="396.0" y="147.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 0.92%)</title><rect x="396.0" y="131.0" width="10.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.42%)</title><rect x="396.0" y="115.0" width="4.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="399.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.50%)</title><rect x="400.9" y="115.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="403.9" y="126.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.50%)</title><rect x="400.9" y="99.0" width="5.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="403.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.&lt;init&gt; (243 samples, 1.95%)</title><rect x="406.8" y="243.0" width="23.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.8" y="254.0">r..</text>
</g>
<g>
<title>byte[] (132 samples, 1.06%)</title><rect x="406.8" y="227.0" width="12.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="409.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (111 samples, 0.89%)</title><rect x="419.3" y="227.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.3" y="238.0"></text>
</g>
<g>
<title>java/lang/Long.toString (111 samples, 0.89%)</title><rect x="419.3" y="211.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.3" y="222.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.56%)</title><rect x="419.3" y="195.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="422.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.33%)</title><rect x="425.9" y="195.0" width="3.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="428.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.getPureBody (71 samples, 0.57%)</title><rect x="429.8" y="243.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (71 samples, 0.57%)</title><rect x="429.8" y="227.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.8" y="238.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.57%)</title><rect x="429.8" y="211.0" width="6.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="432.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.getTimestamp (73 samples, 0.58%)</title><rect x="436.5" y="243.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (73 samples, 0.58%)</title><rect x="436.5" y="227.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="439.5" y="238.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.58%)</title><rect x="436.5" y="211.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="439.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicateGet (2,548 samples, 20.41%)</title><rect x="443.4" y="275.0" width="240.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.4" y="286.0">ru/mail/polis/service/stasyanoi/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetResponses (44 samples, 0.35%)</title><rect x="443.4" y="259.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.04%)</title><rect x="443.4" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.04%)</title><rect x="443.4" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.4" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.04%)</title><rect x="443.4" y="211.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="446.4" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.04%)</title><rect x="443.4" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.04%)</title><rect x="443.4" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.4" y="190.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.04%)</title><rect x="443.4" y="163.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="446.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (18 samples, 0.14%)</title><rect x="443.9" y="243.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.14%)</title><rect x="443.9" y="227.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="446.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.14%)</title><rect x="443.9" y="211.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.05%)</title><rect x="443.9" y="195.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="446.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.10%)</title><rect x="444.5" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.5" y="206.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.10%)</title><rect x="444.5" y="179.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="447.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetInternal (21 samples, 0.17%)</title><rect x="445.6" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.6" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (21 samples, 0.17%)</title><rect x="445.6" y="227.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.6" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (21 samples, 0.17%)</title><rect x="445.6" y="211.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.6" y="222.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (21 samples, 0.17%)</title><rect x="445.6" y="195.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.6" y="206.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (4 samples, 0.03%)</title><rect x="445.6" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$88/637423267.compare (4 samples, 0.03%)</title><rect x="445.6" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (4 samples, 0.03%)</title><rect x="445.6" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="448.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger$$Lambda$84/60175443.applyAsLong (4 samples, 0.03%)</title><rect x="445.6" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.lambda$mergeGetInternal$0 (4 samples, 0.03%)</title><rect x="445.6" y="115.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.03%)</title><rect x="445.6" y="99.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.6" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="445.6" y="83.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="445.6" y="67.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.6" y="78.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (17 samples, 0.14%)</title><rect x="446.0" y="179.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$88/637423267.compare (17 samples, 0.14%)</title><rect x="446.0" y="163.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (17 samples, 0.14%)</title><rect x="446.0" y="147.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger$$Lambda$84/60175443.applyAsLong (17 samples, 0.14%)</title><rect x="446.0" y="131.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.lambda$mergeGetInternal$0 (17 samples, 0.14%)</title><rect x="446.0" y="115.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.0" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (17 samples, 0.14%)</title><rect x="446.0" y="99.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.14%)</title><rect x="446.0" y="83.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.14%)</title><rect x="446.0" y="67.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.03%)</title><rect x="446.0" y="51.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="449.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.10%)</title><rect x="446.3" y="51.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.3" y="62.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.10%)</title><rect x="446.3" y="35.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="449.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (2,504 samples, 20.06%)</title><rect x="447.6" y="259.0" width="236.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.6" y="270.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (15 samples, 0.12%)</title><rect x="447.8" y="243.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (15 samples, 0.12%)</title><rect x="447.8" y="227.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (7 samples, 0.06%)</title><rect x="447.8" y="211.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (7 samples, 0.06%)</title><rect x="447.8" y="195.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="450.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (8 samples, 0.06%)</title><rect x="448.4" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.4" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (8 samples, 0.06%)</title><rect x="448.4" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.4" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (3 samples, 0.02%)</title><rect x="448.4" y="179.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="451.4" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (5 samples, 0.04%)</title><rect x="448.7" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.7" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.04%)</title><rect x="448.7" y="163.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="451.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (2,487 samples, 19.92%)</title><rect x="449.2" y="243.0" width="235.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.2" y="254.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.06%)</title><rect x="449.2" y="227.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="452.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.iterator (4 samples, 0.03%)</title><rect x="449.8" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.8" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.03%)</title><rect x="449.8" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.listIterator (4 samples, 0.03%)</title><rect x="449.8" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.8" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList$1 (4 samples, 0.03%)</title><rect x="449.8" y="179.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="452.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (17 samples, 0.14%)</title><rect x="450.2" y="227.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.2" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.05%)</title><rect x="450.2" y="211.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="453.2" y="222.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (11 samples, 0.09%)</title><rect x="450.8" y="211.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.8" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="450.8" y="195.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="453.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (8 samples, 0.06%)</title><rect x="451.1" y="195.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="454.1" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (8 samples, 0.06%)</title><rect x="451.1" y="179.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="454.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="451.8" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.03%)</title><rect x="451.8" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="451.8" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.03%)</title><rect x="451.8" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="451.8" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.03%)</title><rect x="451.8" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="454.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (5 samples, 0.04%)</title><rect x="452.2" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.2" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (5 samples, 0.04%)</title><rect x="452.2" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="455.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (2,450 samples, 19.63%)</title><rect x="452.7" y="227.0" width="231.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.7" y="238.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.03%)</title><rect x="452.7" y="211.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="455.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.10%)</title><rect x="453.1" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (12 samples, 0.10%)</title><rect x="453.1" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="456.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1347523408.invoke (12 samples, 0.10%)</title><rect x="453.1" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.10%)</title><rect x="453.1" y="163.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.09%)</title><rect x="453.1" y="147.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.09%)</title><rect x="453.1" y="131.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.1" y="142.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.09%)</title><rect x="453.1" y="115.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="456.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (2,412 samples, 19.32%)</title><rect x="454.2" y="211.0" width="228.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.2" y="222.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (18 samples, 0.14%)</title><rect x="454.2" y="195.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.2" y="206.0"></text>
</g>
<g>
<title>one.nio.http.Request (3 samples, 0.02%)</title><rect x="454.2" y="179.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="457.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.12%)</title><rect x="454.5" y="179.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.12%)</title><rect x="454.5" y="163.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="457.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,394 samples, 19.18%)</title><rect x="455.9" y="195.0" width="226.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.9" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,394 samples, 19.18%)</title><rect x="455.9" y="179.0" width="226.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.9" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (12 samples, 0.10%)</title><rect x="455.9" y="163.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="458.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,241 samples, 17.95%)</title><rect x="457.0" y="163.0" width="211.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.0" y="174.0">one/nio/http/HttpClient$Resp..</text>
</g>
<g>
<title>byte[] (769 samples, 6.16%)</title><rect x="457.0" y="147.0" width="72.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="460.0" y="158.0">byte[]</text>
</g>
<g>
<title>byte[] (1,472 samples, 11.79%)</title><rect x="529.7" y="147.0" width="139.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="532.7" y="158.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (117 samples, 0.94%)</title><rect x="668.9" y="163.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="669.0" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="669.0" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.0" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.02%)</title><rect x="669.3" y="147.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="672.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (98 samples, 0.79%)</title><rect x="669.6" y="147.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 0.79%)</title><rect x="669.6" y="131.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (98 samples, 0.79%)</title><rect x="669.6" y="115.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.6" y="126.0"></text>
</g>
<g>
<title>char[] (57 samples, 0.46%)</title><rect x="669.6" y="99.0" width="5.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="672.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.12%)</title><rect x="675.0" y="99.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="678.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.21%)</title><rect x="676.4" y="99.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.21%)</title><rect x="676.4" y="83.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (26 samples, 0.21%)</title><rect x="676.4" y="67.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.4" y="78.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.21%)</title><rect x="676.4" y="51.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="679.4" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.03%)</title><rect x="678.9" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.03%)</title><rect x="678.9" y="131.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="681.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.06%)</title><rect x="679.3" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.06%)</title><rect x="679.3" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.06%)</title><rect x="679.3" y="115.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="679.3" y="99.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="682.3" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="679.5" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.5" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="679.5" y="83.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="682.5" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (13 samples, 0.10%)</title><rect x="679.9" y="163.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="682.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (13 samples, 0.10%)</title><rect x="679.9" y="147.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.9" y="158.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.10%)</title><rect x="679.9" y="131.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="682.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.05%)</title><rect x="681.2" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.2" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.05%)</title><rect x="681.2" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.2" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.05%)</title><rect x="681.2" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="681.3" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.3" y="126.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="681.3" y="99.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="684.3" y="110.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (5 samples, 0.04%)</title><rect x="681.7" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.7" y="174.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (5 samples, 0.04%)</title><rect x="681.7" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.7" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (5 samples, 0.04%)</title><rect x="681.7" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.7" y="142.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.04%)</title><rect x="681.7" y="115.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="684.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.06%)</title><rect x="682.2" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="685.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.06%)</title><rect x="682.2" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.06%)</title><rect x="682.2" y="179.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.03%)</title><rect x="682.2" y="163.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="685.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.02%)</title><rect x="682.6" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.6" y="174.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.02%)</title><rect x="682.6" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="685.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (15 samples, 0.12%)</title><rect x="682.9" y="211.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.12%)</title><rect x="682.9" y="195.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.12%)</title><rect x="682.9" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.07%)</title><rect x="682.9" y="163.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="685.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.05%)</title><rect x="683.7" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.7" y="174.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.05%)</title><rect x="683.7" y="147.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="686.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (870 samples, 6.97%)</title><rect x="684.3" y="275.0" width="82.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.3" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (870 samples, 6.97%)</title><rect x="684.3" y="259.0" width="82.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.3" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="684.5" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (4 samples, 0.03%)</title><rect x="684.5" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1347523408.invoke (4 samples, 0.03%)</title><rect x="684.5" y="211.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="684.5" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (843 samples, 6.75%)</title><rect x="684.8" y="243.0" width="79.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.8" y="254.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (15 samples, 0.12%)</title><rect x="684.8" y="227.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.8" y="238.0"></text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 0.05%)</title><rect x="684.8" y="211.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="687.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.07%)</title><rect x="685.4" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (9 samples, 0.07%)</title><rect x="685.4" y="195.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="688.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (828 samples, 6.63%)</title><rect x="686.3" y="227.0" width="78.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.3" y="238.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (828 samples, 6.63%)</title><rect x="686.3" y="211.0" width="78.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.3" y="222.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (4 samples, 0.03%)</title><rect x="686.3" y="195.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="689.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (773 samples, 6.19%)</title><rect x="686.6" y="195.0" width="73.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.6" y="206.0">one/nio/..</text>
</g>
<g>
<title>byte[] (341 samples, 2.73%)</title><rect x="686.6" y="179.0" width="32.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="689.6" y="190.0">by..</text>
</g>
<g>
<title>byte[] (432 samples, 3.46%)</title><rect x="718.9" y="179.0" width="40.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="721.9" y="190.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (37 samples, 0.30%)</title><rect x="759.7" y="195.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="759.8" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="759.8" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (29 samples, 0.23%)</title><rect x="760.1" y="179.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.1" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.23%)</title><rect x="760.1" y="163.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.23%)</title><rect x="760.1" y="147.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.1" y="158.0"></text>
</g>
<g>
<title>char[] (14 samples, 0.11%)</title><rect x="760.1" y="131.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="763.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.05%)</title><rect x="761.4" y="131.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="764.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.07%)</title><rect x="762.0" y="131.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.07%)</title><rect x="762.0" y="115.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="765.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 0.07%)</title><rect x="762.0" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.0" y="110.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="762.0" y="83.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="765.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (10 samples, 0.08%)</title><rect x="763.2" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.08%)</title><rect x="763.2" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.2" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.08%)</title><rect x="763.2" y="163.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="766.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.02%)</title><rect x="764.1" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.02%)</title><rect x="764.1" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.02%)</title><rect x="764.1" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.07%)</title><rect x="764.5" y="243.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.07%)</title><rect x="764.5" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.07%)</title><rect x="764.5" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.04%)</title><rect x="764.5" y="195.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="767.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.03%)</title><rect x="765.0" y="195.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.0" y="206.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.03%)</title><rect x="765.0" y="179.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="768.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (12 samples, 0.10%)</title><rect x="765.4" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.10%)</title><rect x="765.4" y="227.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.10%)</title><rect x="765.4" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.02%)</title><rect x="765.4" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="768.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.07%)</title><rect x="765.7" y="195.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.7" y="206.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.07%)</title><rect x="765.7" y="179.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="768.7" y="190.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,480 samples, 35.89%)</title><rect x="766.5" y="419.0" width="423.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.5" y="430.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (232 samples, 1.86%)</title><rect x="766.5" y="403.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.5" y="414.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (232 samples, 1.86%)</title><rect x="766.5" y="387.0" width="21.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="769.5" y="398.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (4,248 samples, 34.03%)</title><rect x="788.4" y="403.0" width="401.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.4" y="414.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,248 samples, 34.03%)</title><rect x="788.4" y="387.0" width="401.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.4" y="398.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,248 samples, 34.03%)</title><rect x="788.4" y="371.0" width="401.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.4" y="382.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (990 samples, 7.93%)</title><rect x="788.4" y="355.0" width="93.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.4" y="366.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (990 samples, 7.93%)</title><rect x="788.4" y="339.0" width="93.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.4" y="350.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (674 samples, 5.40%)</title><rect x="788.4" y="323.0" width="63.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.4" y="334.0">Request..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (293 samples, 2.35%)</title><rect x="788.4" y="307.0" width="27.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.4" y="318.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (293 samples, 2.35%)</title><rect x="788.4" y="291.0" width="27.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.4" y="302.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (293 samples, 2.35%)</title><rect x="788.4" y="275.0" width="27.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.4" y="286.0">j..</text>
</g>
<g>
<title>java.lang.String (108 samples, 0.87%)</title><rect x="788.4" y="259.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="791.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (185 samples, 1.48%)</title><rect x="798.7" y="259.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.7" y="270.0"></text>
</g>
<g>
<title>byte[] (185 samples, 1.48%)</title><rect x="798.7" y="243.0" width="17.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="801.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (381 samples, 3.05%)</title><rect x="816.1" y="307.0" width="36.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.1" y="318.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (232 samples, 1.86%)</title><rect x="816.1" y="291.0" width="22.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.1" y="302.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (232 samples, 1.86%)</title><rect x="816.1" y="275.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.1" y="286.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$80/407135064.get$Lambda (232 samples, 1.86%)</title><rect x="816.1" y="259.0" width="22.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.1" y="270.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$80 (232 samples, 1.86%)</title><rect x="816.1" y="243.0" width="22.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="819.1" y="254.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (149 samples, 1.19%)</title><rect x="838.1" y="291.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="841.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (149 samples, 1.19%)</title><rect x="838.1" y="275.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (149 samples, 1.19%)</title><rect x="838.1" y="259.0" width="14.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="841.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (316 samples, 2.53%)</title><rect x="852.2" y="323.0" width="29.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.2" y="334.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (316 samples, 2.53%)</title><rect x="852.2" y="307.0" width="29.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.2" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (316 samples, 2.53%)</title><rect x="852.2" y="291.0" width="29.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.2" y="302.0">ja..</text>
</g>
<g>
<title>java.lang.String (109 samples, 0.87%)</title><rect x="852.2" y="275.0" width="10.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="855.2" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (207 samples, 1.66%)</title><rect x="862.5" y="275.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.5" y="286.0"></text>
</g>
<g>
<title>byte[] (207 samples, 1.66%)</title><rect x="862.5" y="259.0" width="19.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="865.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,926 samples, 15.43%)</title><rect x="882.0" y="355.0" width="182.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.0" y="366.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one.nio.http.Request (225 samples, 1.80%)</title><rect x="882.0" y="339.0" width="21.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="885.0" y="350.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (591 samples, 4.73%)</title><rect x="903.3" y="339.0" width="55.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.3" y="350.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (571 samples, 4.57%)</title><rect x="903.3" y="323.0" width="54.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="906.3" y="334.0">java...</text>
</g>
<g>
<title>java.lang.String[] (20 samples, 0.16%)</title><rect x="957.3" y="323.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="960.3" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,110 samples, 8.89%)</title><rect x="959.2" y="339.0" width="104.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.2" y="350.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,110 samples, 8.89%)</title><rect x="959.2" y="323.0" width="104.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.2" y="334.0">one/nio/util..</text>
</g>
<g>
<title>char[] (588 samples, 4.71%)</title><rect x="959.2" y="307.0" width="55.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="962.2" y="318.0">char[]</text>
</g>
<g>
<title>char[] (31 samples, 0.25%)</title><rect x="1014.7" y="307.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (177 samples, 1.42%)</title><rect x="1017.7" y="307.0" width="16.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1020.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (314 samples, 2.52%)</title><rect x="1034.4" y="307.0" width="29.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.4" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (314 samples, 2.52%)</title><rect x="1034.4" y="291.0" width="29.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.4" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (314 samples, 2.52%)</title><rect x="1034.4" y="275.0" width="29.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.4" y="286.0">ja..</text>
</g>
<g>
<title>byte[] (314 samples, 2.52%)</title><rect x="1034.4" y="259.0" width="29.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1037.4" y="270.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,332 samples, 10.67%)</title><rect x="1064.1" y="355.0" width="125.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.1" y="366.0">one/nio/util/Ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,332 samples, 10.67%)</title><rect x="1064.1" y="339.0" width="125.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.1" y="350.0">one/nio/util/Ut..</text>
</g>
<g>
<title>char[] (636 samples, 5.09%)</title><rect x="1064.1" y="323.0" width="60.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1067.1" y="334.0">char[]</text>
</g>
<g>
<title>char[] (12 samples, 0.10%)</title><rect x="1124.2" y="323.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1127.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (236 samples, 1.89%)</title><rect x="1125.3" y="323.0" width="22.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1128.3" y="334.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (448 samples, 3.59%)</title><rect x="1147.7" y="323.0" width="42.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.7" y="334.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (448 samples, 3.59%)</title><rect x="1147.7" y="307.0" width="42.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.7" y="318.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (448 samples, 3.59%)</title><rect x="1147.7" y="291.0" width="42.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.7" y="302.0">java..</text>
</g>
<g>
<title>byte[] (448 samples, 3.59%)</title><rect x="1147.7" y="275.0" width="42.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1150.7" y="286.0">byte[]</text>
</g>
</g>
</svg>
