<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (808 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.12%)</title><rect x="10.0" y="979.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.12%)</title><rect x="10.0" y="963.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="10.0" y="947.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="10.0" y="931.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="10.0" y="915.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.12%)</title><rect x="10.0" y="899.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.12%)</title><rect x="10.0" y="883.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.12%)</title><rect x="10.0" y="867.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.12%)</title><rect x="10.0" y="851.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="10.0" y="835.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="10.0" y="819.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.12%)</title><rect x="10.0" y="803.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.12%)</title><rect x="10.0" y="787.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.12%)</title><rect x="10.0" y="771.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (1 samples, 0.12%)</title><rect x="10.0" y="755.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (1 samples, 0.12%)</title><rect x="10.0" y="739.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="10.0" y="723.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="10.0" y="707.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.12%)</title><rect x="10.0" y="691.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.12%)</title><rect x="10.0" y="675.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.12%)</title><rect x="10.0" y="659.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.12%)</title><rect x="10.0" y="643.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.12%)</title><rect x="11.5" y="979.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.5" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.12%)</title><rect x="11.5" y="963.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.5" y="974.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 1.11%)</title><rect x="12.9" y="979.0" width="13.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.9" y="990.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (9 samples, 1.11%)</title><rect x="12.9" y="963.0" width="13.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="15.9" y="974.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 1.11%)</title><rect x="12.9" y="947.0" width="13.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.11%)</title><rect x="12.9" y="931.0" width="13.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.11%)</title><rect x="12.9" y="915.0" width="13.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.11%)</title><rect x="12.9" y="899.0" width="13.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (9 samples, 1.11%)</title><rect x="12.9" y="883.0" width="13.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (9 samples, 1.11%)</title><rect x="12.9" y="867.0" width="13.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 1.11%)</title><rect x="12.9" y="851.0" width="13.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 1.11%)</title><rect x="12.9" y="835.0" width="13.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 1.11%)</title><rect x="12.9" y="819.0" width="13.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.11%)</title><rect x="12.9" y="803.0" width="13.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 1.11%)</title><rect x="12.9" y="787.0" width="13.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 1.11%)</title><rect x="12.9" y="771.0" width="13.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.9" y="782.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 1.11%)</title><rect x="12.9" y="755.0" width="13.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.9" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (9 samples, 1.11%)</title><rect x="12.9" y="739.0" width="13.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="15.9" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (9 samples, 1.11%)</title><rect x="12.9" y="723.0" width="13.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 1.11%)</title><rect x="12.9" y="707.0" width="13.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 1.11%)</title><rect x="12.9" y="691.0" width="13.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.9" y="702.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (6 samples, 0.74%)</title><rect x="12.9" y="675.0" width="8.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.9" y="686.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (6 samples, 0.74%)</title><rect x="12.9" y="659.0" width="8.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="15.9" y="670.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (6 samples, 0.74%)</title><rect x="12.9" y="643.0" width="8.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="15.9" y="654.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.12%)</title><rect x="12.9" y="627.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.9" y="638.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.62%)</title><rect x="14.4" y="627.0" width="7.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.4" y="638.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.12%)</title><rect x="15.8" y="611.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.8" y="622.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.25%)</title><rect x="17.3" y="611.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.3" y="622.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.12%)</title><rect x="20.2" y="611.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.2" y="622.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.12%)</title><rect x="20.2" y="595.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.2" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.37%)</title><rect x="21.7" y="675.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="24.7" y="686.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.37%)</title><rect x="21.7" y="659.0" width="4.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="24.7" y="670.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.37%)</title><rect x="21.7" y="643.0" width="4.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="24.7" y="654.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.12%)</title><rect x="21.7" y="627.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.7" y="638.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.12%)</title><rect x="23.1" y="627.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.1" y="638.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.12%)</title><rect x="24.6" y="627.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (654 samples, 80.94%)</title><rect x="26.1" y="979.0" width="955.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.1" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (654 samples, 80.94%)</title><rect x="26.1" y="963.0" width="955.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.1" y="974.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (654 samples, 80.94%)</title><rect x="26.1" y="947.0" width="955.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.1" y="958.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.37%)</title><rect x="52.4" y="931.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.50%)</title><rect x="56.7" y="931.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.37%)</title><rect x="58.2" y="915.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.2" y="926.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.25%)</title><rect x="58.2" y="899.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="61.2" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="58.2" y="883.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="61.2" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.12%)</title><rect x="59.7" y="883.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="62.7" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.12%)</title><rect x="61.1" y="899.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="64.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (55 samples, 6.81%)</title><rect x="62.6" y="931.0" width="80.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.6" y="942.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (55 samples, 6.81%)</title><rect x="62.6" y="915.0" width="80.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.6" y="926.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (40 samples, 4.95%)</title><rect x="68.4" y="899.0" width="58.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.4" y="910.0">java/u..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.12%)</title><rect x="71.3" y="883.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.12%)</title><rect x="72.8" y="883.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.12%)</title><rect x="72.8" y="867.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (36 samples, 4.46%)</title><rect x="74.3" y="883.0" width="52.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.3" y="894.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (36 samples, 4.46%)</title><rect x="74.3" y="867.0" width="52.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.3" y="878.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.25%)</title><rect x="77.2" y="851.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="80.2" y="862.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 1.73%)</title><rect x="80.1" y="851.0" width="20.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="83.1" y="862.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.12%)</title><rect x="80.1" y="835.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="83.1" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.12%)</title><rect x="81.6" y="835.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.6" y="846.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.12%)</title><rect x="83.0" y="835.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="86.0" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="84.5" y="835.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="87.5" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.50%)</title><rect x="85.9" y="835.0" width="5.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="88.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.50%)</title><rect x="85.9" y="819.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="88.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.50%)</title><rect x="85.9" y="803.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.9" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="87.4" y="787.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.25%)</title><rect x="88.9" y="787.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.9" y="798.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.25%)</title><rect x="88.9" y="771.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.9" y="782.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.25%)</title><rect x="88.9" y="755.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.9" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.12%)</title><rect x="90.3" y="739.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.3" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.12%)</title><rect x="90.3" y="723.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.3" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.12%)</title><rect x="91.8" y="835.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.8" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.25%)</title><rect x="93.2" y="835.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="96.2" y="846.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.12%)</title><rect x="96.2" y="835.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="99.2" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.25%)</title><rect x="97.6" y="835.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="100.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 2.10%)</title><rect x="100.5" y="851.0" width="24.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="103.5" y="862.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.12%)</title><rect x="100.5" y="835.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="103.5" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.12%)</title><rect x="102.0" y="835.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="105.0" y="846.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.25%)</title><rect x="103.5" y="835.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="106.5" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="106.4" y="835.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.4" y="846.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (12 samples, 1.49%)</title><rect x="107.8" y="835.0" width="17.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="110.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.11%)</title><rect x="112.2" y="819.0" width="13.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="115.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.11%)</title><rect x="112.2" y="803.0" width="13.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.2" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.87%)</title><rect x="112.2" y="787.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.2" y="798.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.87%)</title><rect x="112.2" y="771.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="115.2" y="782.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.87%)</title><rect x="112.2" y="755.0" width="10.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.2" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.74%)</title><rect x="112.2" y="739.0" width="8.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.2" y="750.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.12%)</title><rect x="113.7" y="723.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="116.7" y="734.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.50%)</title><rect x="115.1" y="723.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.1" y="734.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.50%)</title><rect x="115.1" y="707.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.1" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.37%)</title><rect x="116.6" y="691.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="119.6" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.12%)</title><rect x="121.0" y="739.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="124.0" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.25%)</title><rect x="122.5" y="787.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.5" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.25%)</title><rect x="122.5" y="771.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="125.5" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.12%)</title><rect x="125.4" y="851.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="128.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 1.36%)</title><rect x="126.8" y="899.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 1.36%)</title><rect x="126.8" y="883.0" width="16.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 1.36%)</title><rect x="126.8" y="867.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 1.36%)</title><rect x="126.8" y="851.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 1.11%)</title><rect x="128.3" y="835.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.3" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.37%)</title><rect x="128.3" y="819.0" width="4.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="131.3" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="128.3" y="803.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="131.3" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.12%)</title><rect x="129.8" y="803.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="132.8" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.12%)</title><rect x="131.2" y="803.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.74%)</title><rect x="132.7" y="819.0" width="8.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="135.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.62%)</title><rect x="134.1" y="803.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="137.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.62%)</title><rect x="134.1" y="787.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.1" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.62%)</title><rect x="134.1" y="771.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="137.1" y="782.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.62%)</title><rect x="134.1" y="755.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.1" y="766.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.62%)</title><rect x="134.1" y="739.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="137.1" y="750.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.12%)</title><rect x="134.1" y="723.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.1" y="734.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.50%)</title><rect x="135.6" y="723.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.6" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.50%)</title><rect x="135.6" y="707.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.6" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.50%)</title><rect x="135.6" y="691.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.6" y="702.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.12%)</title><rect x="141.4" y="835.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="144.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.12%)</title><rect x="142.9" y="931.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.25%)</title><rect x="144.4" y="931.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="147.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$75/447253676.run (571 samples, 70.67%)</title><rect x="147.3" y="931.0" width="833.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.3" y="942.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$75/447253676.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3 (570 samples, 70.54%)</title><rect x="148.7" y="915.0" width="832.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.7" y="926.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.12%)</title><rect x="150.2" y="899.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="150.2" y="883.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get$Lambda (1 samples, 0.12%)</title><rect x="150.2" y="867.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (1 samples, 0.12%)</title><rect x="150.2" y="851.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (568 samples, 70.30%)</title><rect x="151.7" y="899.0" width="829.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.7" y="910.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (102 samples, 12.62%)</title><rect x="151.7" y="883.0" width="148.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="894.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.12%)</title><rect x="153.1" y="867.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="153.1" y="851.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="153.1" y="835.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.1" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="153.1" y="819.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="156.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (99 samples, 12.25%)</title><rect x="154.6" y="867.0" width="144.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.6" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.99%)</title><rect x="154.6" y="851.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.50%)</title><rect x="160.4" y="835.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.50%)</title><rect x="160.4" y="819.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.50%)</title><rect x="160.4" y="803.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (4 samples, 0.50%)</title><rect x="160.4" y="787.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (4 samples, 0.50%)</title><rect x="160.4" y="771.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="163.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 11.26%)</title><rect x="166.3" y="851.0" width="132.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.3" y="862.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (91 samples, 11.26%)</title><rect x="166.3" y="835.0" width="132.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.3" y="846.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (91 samples, 11.26%)</title><rect x="166.3" y="819.0" width="132.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.3" y="830.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (91 samples, 11.26%)</title><rect x="166.3" y="803.0" width="132.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="169.3" y="814.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.12%)</title><rect x="166.3" y="787.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="169.3" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="166.3" y="771.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="169.3" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="167.7" y="787.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="170.7" y="798.0"></text>
</g>
<g>
<title>__libc_send (89 samples, 11.01%)</title><rect x="169.2" y="787.0" width="130.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="172.2" y="798.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 10.64%)</title><rect x="173.6" y="771.0" width="125.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.6" y="782.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (86 samples, 10.64%)</title><rect x="173.6" y="755.0" width="125.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="176.6" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.12%)</title><rect x="173.6" y="739.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="176.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_sendto (85 samples, 10.52%)</title><rect x="175.0" y="739.0" width="124.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="178.0" y="750.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (85 samples, 10.52%)</title><rect x="175.0" y="723.0" width="124.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.0" y="734.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (83 samples, 10.27%)</title><rect x="177.9" y="707.0" width="121.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="180.9" y="718.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (81 samples, 10.02%)</title><rect x="177.9" y="691.0" width="118.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.9" y="702.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (80 samples, 9.90%)</title><rect x="177.9" y="675.0" width="116.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="180.9" y="686.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (80 samples, 9.90%)</title><rect x="177.9" y="659.0" width="116.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.9" y="670.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.25%)</title><rect x="179.4" y="643.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.4" y="654.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.25%)</title><rect x="179.4" y="627.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.4" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.74%)</title><rect x="182.3" y="643.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="185.3" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.62%)</title><rect x="183.8" y="627.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="186.8" y="638.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (4 samples, 0.50%)</title><rect x="183.8" y="611.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="186.8" y="622.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.50%)</title><rect x="183.8" y="595.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="186.8" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.12%)</title><rect x="189.6" y="611.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="192.6" y="622.0"></text>
</g>
<g>
<title>tcp_push (71 samples, 8.79%)</title><rect x="191.1" y="643.0" width="103.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="194.1" y="654.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (71 samples, 8.79%)</title><rect x="191.1" y="627.0" width="103.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.1" y="638.0">__tcp_push_p..</text>
</g>
<g>
<title>tcp_write_xmit (71 samples, 8.79%)</title><rect x="191.1" y="611.0" width="103.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="194.1" y="622.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (65 samples, 8.04%)</title><rect x="194.0" y="595.0" width="94.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.0" y="606.0">__tcp_trans..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.12%)</title><rect x="195.5" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="198.5" y="590.0"></text>
</g>
<g>
<title>ip_queue_xmit (61 samples, 7.55%)</title><rect x="196.9" y="579.0" width="89.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="199.9" y="590.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (61 samples, 7.55%)</title><rect x="196.9" y="563.0" width="89.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="199.9" y="574.0">__ip_queue..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.12%)</title><rect x="196.9" y="547.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="199.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (60 samples, 7.43%)</title><rect x="198.4" y="547.0" width="87.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="201.4" y="558.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (13 samples, 1.61%)</title><rect x="198.4" y="531.0" width="19.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="201.4" y="542.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.25%)</title><rect x="198.4" y="515.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="201.4" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.12%)</title><rect x="201.3" y="515.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.3" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 1.24%)</title><rect x="202.8" y="515.0" width="14.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.8" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="204.2" y="499.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.2" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="204.2" y="483.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.2" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (8 samples, 0.99%)</title><rect x="205.7" y="499.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="208.7" y="510.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.12%)</title><rect x="205.7" y="483.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="208.7" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.74%)</title><rect x="207.2" y="483.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="210.2" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.25%)</title><rect x="210.1" y="467.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.1" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.12%)</title><rect x="213.0" y="467.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="216.0" y="478.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.12%)</title><rect x="214.5" y="467.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.5" y="478.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.12%)</title><rect x="215.9" y="483.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="218.9" y="494.0"></text>
</g>
<g>
<title>ip_output (46 samples, 5.69%)</title><rect x="217.4" y="531.0" width="67.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="220.4" y="542.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (46 samples, 5.69%)</title><rect x="217.4" y="515.0" width="67.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.4" y="526.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (46 samples, 5.69%)</title><rect x="217.4" y="499.0" width="67.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="220.4" y="510.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (45 samples, 5.57%)</title><rect x="218.8" y="483.0" width="65.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="221.8" y="494.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (39 samples, 4.83%)</title><rect x="220.3" y="467.0" width="57.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.3" y="478.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (39 samples, 4.83%)</title><rect x="220.3" y="451.0" width="57.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="223.3" y="462.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (38 samples, 4.70%)</title><rect x="221.8" y="435.0" width="55.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="224.8" y="446.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 4.70%)</title><rect x="221.8" y="419.0" width="55.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.8" y="430.0">__sof..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.12%)</title><rect x="221.8" y="403.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="224.8" y="414.0"></text>
</g>
<g>
<title>net_rx_action (37 samples, 4.58%)</title><rect x="223.2" y="403.0" width="54.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="226.2" y="414.0">net_r..</text>
</g>
<g>
<title>process_backlog (37 samples, 4.58%)</title><rect x="223.2" y="387.0" width="54.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="226.2" y="398.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (36 samples, 4.46%)</title><rect x="223.2" y="371.0" width="52.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.2" y="382.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 4.21%)</title><rect x="224.7" y="355.0" width="49.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.7" y="366.0">__net..</text>
</g>
<g>
<title>ip_rcv (33 samples, 4.08%)</title><rect x="224.7" y="339.0" width="48.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.7" y="350.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.25%)</title><rect x="224.7" y="323.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="227.7" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish (31 samples, 3.84%)</title><rect x="227.6" y="323.0" width="45.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.6" y="334.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (31 samples, 3.84%)</title><rect x="227.6" y="307.0" width="45.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="230.6" y="318.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 3.47%)</title><rect x="227.6" y="291.0" width="40.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.6" y="302.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 3.47%)</title><rect x="227.6" y="275.0" width="40.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.6" y="286.0">ip_..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.12%)</title><rect x="229.1" y="259.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.1" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 3.22%)</title><rect x="230.5" y="259.0" width="38.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.5" y="270.0">tcp..</text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.12%)</title><rect x="232.0" y="243.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="235.0" y="254.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.12%)</title><rect x="233.4" y="243.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.4" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.37%)</title><rect x="234.9" y="243.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.9" y="254.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.25%)</title><rect x="234.9" y="227.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="237.9" y="238.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.12%)</title><rect x="237.8" y="227.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 2.48%)</title><rect x="239.3" y="243.0" width="29.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.3" y="254.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="239.3" y="227.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="242.3" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 2.35%)</title><rect x="240.7" y="227.0" width="27.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="243.7" y="238.0">t..</text>
</g>
<g>
<title>tcp_ack (4 samples, 0.50%)</title><rect x="240.7" y="211.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.7" y="222.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.37%)</title><rect x="242.2" y="195.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.2" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.25%)</title><rect x="242.2" y="179.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.2" y="190.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.25%)</title><rect x="242.2" y="163.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="245.2" y="174.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.25%)</title><rect x="242.2" y="147.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.2" y="158.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.12%)</title><rect x="243.7" y="131.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="246.7" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="243.7" y="115.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="246.7" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="245.1" y="179.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="248.1" y="190.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.12%)</title><rect x="246.6" y="211.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.6" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (13 samples, 1.61%)</title><rect x="248.0" y="211.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.0" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 1.61%)</title><rect x="248.0" y="195.0" width="19.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="251.0" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 1.61%)</title><rect x="248.0" y="179.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="251.0" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 1.61%)</title><rect x="248.0" y="163.0" width="19.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="251.0" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 1.61%)</title><rect x="248.0" y="147.0" width="19.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="251.0" y="158.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.12%)</title><rect x="267.0" y="211.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="270.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.37%)</title><rect x="268.5" y="291.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="271.5" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.25%)</title><rect x="270.0" y="275.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="273.0" y="286.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.25%)</title><rect x="270.0" y="259.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.0" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="272.9" y="339.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.9" y="350.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.12%)</title><rect x="274.3" y="355.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="277.3" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.12%)</title><rect x="275.8" y="371.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.8" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.62%)</title><rect x="277.3" y="467.0" width="7.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="280.3" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.62%)</title><rect x="277.3" y="451.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="280.3" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.25%)</title><rect x="278.7" y="435.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.7" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.25%)</title><rect x="278.7" y="419.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.7" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.12%)</title><rect x="278.7" y="403.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.7" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.12%)</title><rect x="280.2" y="403.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.2" y="414.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.12%)</title><rect x="280.2" y="387.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.2" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="281.6" y="435.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="284.6" y="446.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.12%)</title><rect x="283.1" y="435.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="286.1" y="446.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.12%)</title><rect x="283.1" y="419.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.1" y="430.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.12%)</title><rect x="284.6" y="531.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="287.6" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.12%)</title><rect x="286.0" y="579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="289.0" y="590.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.12%)</title><rect x="287.5" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="290.5" y="590.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.12%)</title><rect x="288.9" y="595.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.9" y="606.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.12%)</title><rect x="290.4" y="595.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.4" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.25%)</title><rect x="291.9" y="595.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="294.9" y="606.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.12%)</title><rect x="293.3" y="579.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.3" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="293.3" y="563.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="296.3" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="293.3" y="547.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="296.3" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.12%)</title><rect x="294.8" y="675.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="297.8" y="686.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.12%)</title><rect x="296.2" y="691.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.2" y="702.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.12%)</title><rect x="297.7" y="691.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.7" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.12%)</title><rect x="297.7" y="675.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="300.7" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.12%)</title><rect x="297.7" y="659.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.7" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.12%)</title><rect x="297.7" y="643.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="300.7" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.12%)</title><rect x="297.7" y="627.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="300.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="299.2" y="867.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get (466 samples, 57.67%)</title><rect x="300.6" y="883.0" width="680.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.6" y="894.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2 (466 samples, 57.67%)</title><rect x="300.6" y="867.0" width="680.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.6" y="878.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (466 samples, 57.67%)</title><rect x="300.6" y="851.0" width="680.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.6" y="862.0">ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.74%)</title><rect x="300.6" y="835.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.74%)</title><rect x="300.6" y="819.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="303.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.25%)</title><rect x="306.5" y="803.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.12%)</title><rect x="307.9" y="787.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="307.9" y="771.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="310.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (288 samples, 35.64%)</title><rect x="309.4" y="835.0" width="420.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.4" y="846.0">ru/mail/polis/service/stasyanoi/server/CustomServer.putInt..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (279 samples, 34.53%)</title><rect x="309.4" y="819.0" width="407.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.4" y="830.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (279 samples, 34.53%)</title><rect x="309.4" y="803.0" width="407.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.4" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (279 samples, 34.53%)</title><rect x="309.4" y="787.0" width="407.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.4" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.12%)</title><rect x="312.3" y="771.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.3" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (187 samples, 23.14%)</title><rect x="313.8" y="771.0" width="273.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="316.8" y="782.0">Java_org_rocksdb_RocksDB_put__J_3BII_..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.12%)</title><rect x="315.2" y="755.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="318.2" y="766.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.25%)</title><rect x="316.7" y="755.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="319.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.25%)</title><rect x="319.6" y="755.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="322.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.12%)</title><rect x="322.5" y="755.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="325.5" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (180 samples, 22.28%)</title><rect x="324.0" y="755.0" width="262.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="327.0" y="766.0">rocksdb_put_helper(JNIEnv_*, rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.25%)</title><rect x="325.4" y="739.0" width="3.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="328.4" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.25%)</title><rect x="325.4" y="723.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="328.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="328.4" y="739.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="331.4" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="328.4" y="723.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (175 samples, 21.66%)</title><rect x="329.8" y="739.0" width="255.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.8" y="750.0">rocksdb::DB::Put(rocksdb::WriteOpt..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.12%)</title><rect x="329.8" y="723.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="332.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (174 samples, 21.53%)</title><rect x="331.3" y="723.0" width="254.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="334.3" y="734.0">rocksdb::DBImpl::Put(rocksdb::Writ..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (171 samples, 21.16%)</title><rect x="331.3" y="707.0" width="249.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="334.3" y="718.0">rocksdb::DB::Put(rocksdb::WriteOp..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (165 samples, 20.42%)</title><rect x="331.3" y="691.0" width="241.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="334.3" y="702.0">rocksdb::DBImpl::Write(rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="331.3" y="675.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="334.3" y="686.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.12%)</title><rect x="332.7" y="675.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="335.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.12%)</title><rect x="334.2" y="675.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="337.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (158 samples, 19.55%)</title><rect x="335.7" y="675.0" width="230.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="338.7" y="686.0">rocksdb::DBImpl::WriteImpl(roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="350.3" y="659.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="353.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.12%)</title><rect x="351.7" y="659.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="354.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (12 samples, 1.49%)</title><rect x="353.2" y="659.0" width="17.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="356.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 1.24%)</title><rect x="353.2" y="643.0" width="14.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="356.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.12%)</title><rect x="353.2" y="627.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="356.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 1.11%)</title><rect x="354.7" y="627.0" width="13.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="357.7" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (2 samples, 0.25%)</title><rect x="356.1" y="611.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="359.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.62%)</title><rect x="359.0" y="611.0" width="7.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="362.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.12%)</title><rect x="359.0" y="595.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="362.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.50%)</title><rect x="360.5" y="595.0" width="5.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="363.5" y="606.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.12%)</title><rect x="364.9" y="579.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="367.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.12%)</title><rect x="366.3" y="611.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="369.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.12%)</title><rect x="366.3" y="595.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="369.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.12%)</title><rect x="367.8" y="643.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="370.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.12%)</title><rect x="369.3" y="643.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="372.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.12%)</title><rect x="370.7" y="659.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="373.7" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="370.7" y="643.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="373.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.12%)</title><rect x="372.2" y="659.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="375.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (94 samples, 11.63%)</title><rect x="373.6" y="659.0" width="137.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="376.6" y="670.0">rocksdb::WriteBat..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (91 samples, 11.26%)</title><rect x="376.6" y="643.0" width="132.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="379.6" y="654.0">rocksdb::WriteBa..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.25%)</title><rect x="376.6" y="627.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="379.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (89 samples, 11.01%)</title><rect x="379.5" y="627.0" width="130.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="382.5" y="638.0">rocksdb::WriteBa..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (87 samples, 10.77%)</title><rect x="382.4" y="611.0" width="127.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="385.4" y="622.0">rocksdb::MemTabl..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (87 samples, 10.77%)</title><rect x="382.4" y="595.0" width="127.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="385.4" y="606.0">rocksdb::MemTabl..</text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.12%)</title><rect x="383.9" y="579.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="386.9" y="590.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.12%)</title><rect x="383.9" y="563.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.9" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.12%)</title><rect x="383.9" y="547.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.9" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.12%)</title><rect x="383.9" y="531.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="386.9" y="542.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.12%)</title><rect x="383.9" y="515.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="386.9" y="526.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.12%)</title><rect x="383.9" y="499.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (85 samples, 10.52%)</title><rect x="385.3" y="579.0" width="124.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="388.3" y="590.0">rocksdb::MemTab..</text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (1 samples, 0.12%)</title><rect x="385.3" y="563.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="388.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.12%)</title><rect x="385.3" y="547.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.3" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (81 samples, 10.02%)</title><rect x="386.8" y="563.0" width="118.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="389.8" y="574.0">bool rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (74 samples, 9.16%)</title><rect x="388.2" y="547.0" width="108.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="391.2" y="558.0">/tmp/librocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (51 samples, 6.31%)</title><rect x="391.2" y="531.0" width="74.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="394.2" y="542.0">/tmp/lib..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (51 samples, 6.31%)</title><rect x="391.2" y="515.0" width="74.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="394.2" y="526.0">rocksdb:..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="392.6" y="499.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="395.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (49 samples, 6.06%)</title><rect x="394.1" y="499.0" width="71.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="397.1" y="510.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (14 samples, 1.73%)</title><rect x="395.5" y="483.0" width="20.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="398.5" y="494.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.12%)</title><rect x="395.5" y="467.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="398.5" y="478.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (13 samples, 1.61%)</title><rect x="397.0" y="467.0" width="19.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="400.0" y="478.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.12%)</title><rect x="399.9" y="451.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="402.9" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.25%)</title><rect x="401.4" y="451.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="404.4" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 0.87%)</title><rect x="404.3" y="451.0" width="10.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="407.3" y="462.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.12%)</title><rect x="405.8" y="435.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="408.8" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.62%)</title><rect x="407.2" y="435.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="410.2" y="446.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.12%)</title><rect x="407.2" y="419.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="410.2" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.25%)</title><rect x="408.7" y="419.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="411.7" y="430.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.25%)</title><rect x="411.6" y="419.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="414.6" y="430.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.12%)</title><rect x="413.1" y="403.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="416.1" y="414.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.12%)</title><rect x="414.5" y="451.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="417.5" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (26 samples, 3.22%)</title><rect x="416.0" y="483.0" width="38.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="419.0" y="494.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (26 samples, 3.22%)</title><rect x="416.0" y="467.0" width="38.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="419.0" y="478.0">jni..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.12%)</title><rect x="417.5" y="451.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="420.5" y="462.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (2 samples, 0.25%)</title><rect x="418.9" y="451.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="421.9" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="421.8" y="451.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="424.8" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (21 samples, 2.60%)</title><rect x="423.3" y="451.0" width="30.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="426.3" y="462.0">jn..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.12%)</title><rect x="432.1" y="435.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="435.1" y="446.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.25%)</title><rect x="433.5" y="435.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="436.5" y="446.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.25%)</title><rect x="436.4" y="435.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="439.4" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.87%)</title><rect x="439.4" y="435.0" width="10.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="442.4" y="446.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.12%)</title><rect x="440.8" y="419.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="443.8" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.62%)</title><rect x="442.3" y="419.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="445.3" y="430.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.12%)</title><rect x="448.1" y="403.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="451.1" y="414.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.12%)</title><rect x="449.6" y="435.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="452.6" y="446.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.12%)</title><rect x="451.0" y="435.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="454.0" y="446.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.12%)</title><rect x="452.5" y="435.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="455.5" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.50%)</title><rect x="454.0" y="483.0" width="5.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="457.0" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.25%)</title><rect x="454.0" y="467.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="457.0" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.25%)</title><rect x="456.9" y="467.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="459.9" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="459.8" y="483.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="462.8" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.25%)</title><rect x="461.3" y="483.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="464.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.12%)</title><rect x="464.2" y="483.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="467.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="465.6" y="531.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="468.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 2.48%)</title><rect x="467.1" y="531.0" width="29.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="470.1" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 2.48%)</title><rect x="467.1" y="515.0" width="29.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="470.1" y="526.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.37%)</title><rect x="467.1" y="499.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="470.1" y="510.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.37%)</title><rect x="467.1" y="483.0" width="4.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="470.1" y="494.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.12%)</title><rect x="470.0" y="467.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="473.0" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (13 samples, 1.61%)</title><rect x="471.5" y="499.0" width="19.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="474.5" y="510.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (13 samples, 1.61%)</title><rect x="471.5" y="483.0" width="19.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="474.5" y="494.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.25%)</title><rect x="472.9" y="467.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="475.9" y="478.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.12%)</title><rect x="475.9" y="467.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="478.9" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="477.3" y="467.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="480.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="478.8" y="467.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 0.87%)</title><rect x="480.2" y="467.0" width="10.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="483.2" y="478.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.25%)</title><rect x="483.2" y="451.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="486.2" y="462.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.12%)</title><rect x="486.1" y="451.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="489.1" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.25%)</title><rect x="487.5" y="451.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.5" y="462.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.25%)</title><rect x="487.5" y="435.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="490.5" y="446.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.12%)</title><rect x="489.0" y="419.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.0" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.25%)</title><rect x="490.5" y="499.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="493.5" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="490.5" y="483.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="493.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="491.9" y="483.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="494.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.25%)</title><rect x="493.4" y="499.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="496.4" y="510.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.12%)</title><rect x="493.4" y="483.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="496.4" y="494.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.12%)</title><rect x="494.9" y="483.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="497.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (6 samples, 0.74%)</title><rect x="496.3" y="547.0" width="8.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="499.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="497.8" y="531.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="500.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.50%)</title><rect x="499.2" y="531.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="502.2" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.12%)</title><rect x="499.2" y="515.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="502.2" y="526.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.12%)</title><rect x="499.2" y="499.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="502.2" y="510.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.12%)</title><rect x="499.2" y="483.0" width="1.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="502.2" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.12%)</title><rect x="499.2" y="467.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="502.2" y="478.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.12%)</title><rect x="499.2" y="451.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="502.2" y="462.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.12%)</title><rect x="499.2" y="435.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="502.2" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="500.7" y="515.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="503.7" y="526.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.12%)</title><rect x="502.2" y="515.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="505.2" y="526.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.12%)</title><rect x="503.6" y="515.0" width="1.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="506.6" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="503.6" y="499.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="506.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.37%)</title><rect x="505.1" y="563.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="508.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (3 samples, 0.37%)</title><rect x="505.1" y="547.0" width="4.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="508.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.12%)</title><rect x="509.5" y="643.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="512.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (11 samples, 1.36%)</title><rect x="510.9" y="659.0" width="16.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="513.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 1.36%)</title><rect x="510.9" y="643.0" width="16.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="513.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 1.36%)</title><rect x="510.9" y="627.0" width="16.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="513.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 1.36%)</title><rect x="510.9" y="611.0" width="16.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="513.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 1.36%)</title><rect x="510.9" y="595.0" width="16.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="513.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (10 samples, 1.24%)</title><rect x="510.9" y="579.0" width="14.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="513.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (10 samples, 1.24%)</title><rect x="510.9" y="563.0" width="14.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="513.9" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 1.24%)</title><rect x="510.9" y="547.0" width="14.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="513.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (10 samples, 1.24%)</title><rect x="510.9" y="531.0" width="14.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="513.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni284821999391494971.so (9 samples, 1.11%)</title><rect x="510.9" y="515.0" width="13.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="513.9" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.12%)</title><rect x="510.9" y="499.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.99%)</title><rect x="512.4" y="499.0" width="11.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="515.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.87%)</title><rect x="513.8" y="483.0" width="10.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="516.8" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.12%)</title><rect x="513.8" y="467.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="516.8" y="478.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.12%)</title><rect x="513.8" y="451.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="516.8" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.12%)</title><rect x="513.8" y="435.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="516.8" y="446.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.12%)</title><rect x="513.8" y="419.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="516.8" y="430.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.25%)</title><rect x="515.3" y="467.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="518.3" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.25%)</title><rect x="515.3" y="451.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="518.3" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.12%)</title><rect x="516.8" y="435.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="519.8" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.12%)</title><rect x="516.8" y="419.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="519.8" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.12%)</title><rect x="516.8" y="403.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="519.8" y="414.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.25%)</title><rect x="518.2" y="467.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="521.2" y="478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.12%)</title><rect x="521.1" y="467.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="524.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="521.1" y="451.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="521.1" y="435.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="524.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.12%)</title><rect x="521.1" y="419.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="524.1" y="430.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.12%)</title><rect x="521.1" y="403.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="524.1" y="414.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.12%)</title><rect x="521.1" y="387.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.1" y="398.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.12%)</title><rect x="521.1" y="371.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="524.1" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.12%)</title><rect x="521.1" y="355.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="524.1" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="521.1" y="339.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="524.1" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.12%)</title><rect x="522.6" y="467.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="525.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.12%)</title><rect x="524.1" y="515.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="527.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.12%)</title><rect x="525.5" y="579.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="528.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.12%)</title><rect x="527.0" y="659.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="530.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 1.61%)</title><rect x="528.4" y="659.0" width="19.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="531.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.25%)</title><rect x="547.4" y="659.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="550.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.12%)</title><rect x="547.4" y="643.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="550.4" y="654.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.12%)</title><rect x="548.9" y="643.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="551.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.12%)</title><rect x="548.9" y="627.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.12%)</title><rect x="548.9" y="611.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="551.9" y="622.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.12%)</title><rect x="548.9" y="595.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.9" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.12%)</title><rect x="548.9" y="579.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="551.9" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.12%)</title><rect x="548.9" y="563.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.9" y="574.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.12%)</title><rect x="548.9" y="547.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="551.9" y="558.0"></text>
</g>
<g>
<title>sched_yield (11 samples, 1.36%)</title><rect x="550.3" y="659.0" width="16.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="553.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.11%)</title><rect x="553.3" y="643.0" width="13.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="556.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.11%)</title><rect x="553.3" y="627.0" width="13.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (8 samples, 0.99%)</title><rect x="554.7" y="611.0" width="11.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.7" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (8 samples, 0.99%)</title><rect x="554.7" y="595.0" width="11.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.7" y="606.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.99%)</title><rect x="554.7" y="579.0" width="11.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="557.7" y="590.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.99%)</title><rect x="554.7" y="563.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="557.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.12%)</title><rect x="566.4" y="675.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="569.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.25%)</title><rect x="567.9" y="675.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="570.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.12%)</title><rect x="570.8" y="675.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="573.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.12%)</title><rect x="572.3" y="691.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="575.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.12%)</title><rect x="573.7" y="691.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.37%)</title><rect x="575.2" y="691.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="578.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.12%)</title><rect x="575.2" y="675.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="578.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.12%)</title><rect x="576.6" y="675.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="579.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.12%)</title><rect x="578.1" y="675.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="581.1" y="686.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.12%)</title><rect x="579.6" y="691.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.37%)</title><rect x="581.0" y="707.0" width="4.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="584.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.12%)</title><rect x="585.4" y="739.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="588.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 2.72%)</title><rect x="586.9" y="771.0" width="32.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="589.9" y="782.0">[u..</text>
</g>
<g>
<title>__GI_write (20 samples, 2.48%)</title><rect x="586.9" y="755.0" width="29.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="589.9" y="766.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 2.35%)</title><rect x="588.3" y="739.0" width="27.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="591.3" y="750.0">e..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 2.35%)</title><rect x="588.3" y="723.0" width="27.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="591.3" y="734.0">d..</text>
</g>
<g>
<title>__x64_sys_write (18 samples, 2.23%)</title><rect x="589.8" y="707.0" width="26.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.8" y="718.0">_..</text>
</g>
<g>
<title>ksys_write (18 samples, 2.23%)</title><rect x="589.8" y="691.0" width="26.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="592.8" y="702.0">k..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.12%)</title><rect x="589.8" y="675.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.8" y="686.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.12%)</title><rect x="589.8" y="659.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="592.8" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.50%)</title><rect x="591.2" y="675.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="594.2" y="686.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.50%)</title><rect x="591.2" y="659.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="594.2" y="670.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.37%)</title><rect x="592.7" y="643.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="595.7" y="654.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 1.61%)</title><rect x="597.1" y="675.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.1" y="686.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 1.24%)</title><rect x="598.5" y="659.0" width="14.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="601.5" y="670.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 1.24%)</title><rect x="598.5" y="643.0" width="14.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="601.5" y="654.0"></text>
</g>
<g>
<title>ext4_file_write_iter (10 samples, 1.24%)</title><rect x="598.5" y="627.0" width="14.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.5" y="638.0"></text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 1.11%)</title><rect x="600.0" y="611.0" width="13.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.25%)</title><rect x="600.0" y="595.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.0" y="606.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.12%)</title><rect x="600.0" y="579.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="603.0" y="590.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.12%)</title><rect x="600.0" y="563.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="603.0" y="574.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.12%)</title><rect x="601.5" y="579.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="604.5" y="590.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.12%)</title><rect x="601.5" y="563.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="604.5" y="574.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.12%)</title><rect x="601.5" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.5" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.12%)</title><rect x="601.5" y="531.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="604.5" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.12%)</title><rect x="601.5" y="515.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="604.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.12%)</title><rect x="601.5" y="499.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.5" y="510.0"></text>
</g>
<g>
<title>generic_perform_write (7 samples, 0.87%)</title><rect x="602.9" y="595.0" width="10.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.9" y="606.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.12%)</title><rect x="602.9" y="579.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="605.9" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.50%)</title><rect x="604.4" y="579.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.4" y="590.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.25%)</title><rect x="605.8" y="563.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="608.8" y="574.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.25%)</title><rect x="605.8" y="547.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="608.8" y="558.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.25%)</title><rect x="605.8" y="531.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.8" y="542.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.12%)</title><rect x="607.3" y="515.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.3" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.12%)</title><rect x="608.8" y="563.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="611.8" y="574.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.12%)</title><rect x="608.8" y="547.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="611.8" y="558.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.12%)</title><rect x="608.8" y="531.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.8" y="542.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.12%)</title><rect x="608.8" y="515.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.8" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.12%)</title><rect x="610.2" y="579.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="613.2" y="590.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.12%)</title><rect x="610.2" y="563.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.2" y="574.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.12%)</title><rect x="610.2" y="547.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.2" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.12%)</title><rect x="610.2" y="531.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="613.2" y="542.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.12%)</title><rect x="610.2" y="515.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="613.2" y="526.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.12%)</title><rect x="610.2" y="499.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.2" y="510.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.12%)</title><rect x="610.2" y="483.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="613.2" y="494.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.12%)</title><rect x="611.7" y="579.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.7" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.12%)</title><rect x="611.7" y="563.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="614.7" y="574.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.12%)</title><rect x="613.1" y="659.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.1" y="670.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.12%)</title><rect x="614.6" y="659.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="617.6" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="616.1" y="755.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="619.1" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="617.5" y="755.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="620.5" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="617.5" y="739.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="620.5" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="617.5" y="723.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="620.5" y="734.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.25%)</title><rect x="619.0" y="771.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="622.0" y="782.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.12%)</title><rect x="621.9" y="771.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="624.9" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (7 samples, 0.87%)</title><rect x="623.4" y="771.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (57 samples, 7.05%)</title><rect x="633.6" y="771.0" width="83.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.6" y="782.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (57 samples, 7.05%)</title><rect x="633.6" y="755.0" width="83.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.6" y="766.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.12%)</title><rect x="633.6" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.12%)</title><rect x="633.6" y="723.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.6" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (56 samples, 6.93%)</title><rect x="635.0" y="739.0" width="81.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.0" y="750.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (3 samples, 0.37%)</title><rect x="635.0" y="723.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (53 samples, 6.56%)</title><rect x="639.4" y="723.0" width="77.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.4" y="734.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (52 samples, 6.44%)</title><rect x="640.9" y="707.0" width="75.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.9" y="718.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (46 samples, 5.69%)</title><rect x="648.2" y="691.0" width="67.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="651.2" y="702.0">Java_or..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.12%)</title><rect x="648.2" y="675.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="651.2" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.25%)</title><rect x="649.7" y="675.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="652.7" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (10 samples, 1.24%)</title><rect x="652.6" y="675.0" width="14.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="655.6" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.37%)</title><rect x="652.6" y="659.0" width="4.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="655.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.87%)</title><rect x="657.0" y="659.0" width="10.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="660.0" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (22 samples, 2.72%)</title><rect x="667.2" y="675.0" width="32.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="670.2" y="686.0">jn..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.12%)</title><rect x="671.6" y="659.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="674.6" y="670.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.12%)</title><rect x="673.0" y="659.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="676.0" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.25%)</title><rect x="674.5" y="659.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="677.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.74%)</title><rect x="677.4" y="659.0" width="8.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="680.4" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 1.11%)</title><rect x="686.2" y="659.0" width="13.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.2" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.99%)</title><rect x="687.6" y="643.0" width="11.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.6" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.50%)</title><rect x="687.6" y="627.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="690.6" y="638.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.25%)</title><rect x="690.5" y="611.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="693.5" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.12%)</title><rect x="693.5" y="627.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="696.5" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.25%)</title><rect x="694.9" y="627.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="697.9" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.12%)</title><rect x="697.8" y="627.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="700.8" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 1.24%)</title><rect x="699.3" y="675.0" width="14.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="702.3" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.12%)</title><rect x="705.1" y="659.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="708.1" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.25%)</title><rect x="706.6" y="659.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="709.6" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.37%)</title><rect x="709.5" y="659.0" width="4.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="712.5" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.37%)</title><rect x="709.5" y="643.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="712.5" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.12%)</title><rect x="713.9" y="675.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="716.9" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.12%)</title><rect x="715.4" y="691.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="718.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampToBodyAndModifyEmptyBody (7 samples, 0.87%)</title><rect x="716.8" y="819.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (5 samples, 0.62%)</title><rect x="719.8" y="803.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.25%)</title><rect x="722.7" y="787.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.25%)</title><rect x="722.7" y="771.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.25%)</title><rect x="722.7" y="755.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.25%)</title><rect x="722.7" y="739.0" width="2.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="725.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.25%)</title><rect x="722.7" y="723.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="725.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (1 samples, 0.12%)</title><rect x="725.6" y="787.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (1 samples, 0.12%)</title><rect x="727.1" y="819.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.12%)</title><rect x="727.1" y="803.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.12%)</title><rect x="727.1" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.12%)</title><rect x="727.1" y="771.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (1 samples, 0.12%)</title><rect x="728.5" y="819.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="731.5" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.12%)</title><rect x="728.5" y="803.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="731.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicatePutOrDelete (140 samples, 17.33%)</title><rect x="730.0" y="835.0" width="204.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.0" y="846.0">ru/mail/polis/service/stasy..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergePutDeleteResponses (1 samples, 0.12%)</title><rect x="730.0" y="819.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="730.0" y="803.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.0" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="730.0" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="733.0" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="730.0" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.0" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="730.0" y="755.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.12%)</title><rect x="730.0" y="739.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (139 samples, 17.20%)</title><rect x="731.4" y="819.0" width="203.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.4" y="830.0">ru/mail/polis/service/stas..</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.37%)</title><rect x="731.4" y="803.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (3 samples, 0.37%)</title><rect x="731.4" y="787.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.25%)</title><rect x="731.4" y="771.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.25%)</title><rect x="731.4" y="755.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.12%)</title><rect x="734.4" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.12%)</title><rect x="734.4" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.12%)</title><rect x="734.4" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.4" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.12%)</title><rect x="734.4" y="723.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="737.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.12%)</title><rect x="734.4" y="707.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.12%)</title><rect x="734.4" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="737.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.12%)</title><rect x="734.4" y="675.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.4" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="735.8" y="803.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="738.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (135 samples, 16.71%)</title><rect x="737.3" y="803.0" width="197.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.3" y="814.0">ru/mail/polis/service/stas..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.12%)</title><rect x="738.7" y="787.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.7" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.12%)</title><rect x="738.7" y="771.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.7" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (1 samples, 0.12%)</title><rect x="738.7" y="755.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.12%)</title><rect x="738.7" y="739.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.12%)</title><rect x="738.7" y="723.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="740.2" y="787.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.2" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.12%)</title><rect x="740.2" y="771.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.2" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="740.2" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="743.2" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.12%)</title><rect x="740.2" y="739.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.2" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.12%)</title><rect x="740.2" y="723.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (132 samples, 16.34%)</title><rect x="741.7" y="787.0" width="192.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.7" y="798.0">ru/mail/polis/service/sta..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.62%)</title><rect x="743.1" y="771.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (5 samples, 0.62%)</title><rect x="743.1" y="755.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.1" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.12%)</title><rect x="743.1" y="739.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="746.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1347523408.invoke (4 samples, 0.50%)</title><rect x="744.6" y="739.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.37%)</title><rect x="744.6" y="723.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.25%)</title><rect x="746.0" y="707.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.12%)</title><rect x="747.5" y="691.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (1 samples, 0.12%)</title><rect x="749.0" y="723.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.12%)</title><rect x="749.0" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.12%)</title><rect x="749.0" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.12%)</title><rect x="749.0" y="675.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (124 samples, 15.35%)</title><rect x="750.4" y="771.0" width="181.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.4" y="782.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.12%)</title><rect x="750.4" y="755.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (1 samples, 0.12%)</title><rect x="751.9" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.9" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.12%)</title><rect x="751.9" y="739.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="754.9" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.12%)</title><rect x="751.9" y="723.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="754.9" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.12%)</title><rect x="751.9" y="707.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="754.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.12%)</title><rect x="751.9" y="691.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="754.9" y="702.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.12%)</title><rect x="751.9" y="675.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="754.9" y="686.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.12%)</title><rect x="751.9" y="659.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="754.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (122 samples, 15.10%)</title><rect x="753.3" y="755.0" width="178.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.3" y="766.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (122 samples, 15.10%)</title><rect x="753.3" y="739.0" width="178.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.3" y="750.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (38 samples, 4.70%)</title><rect x="753.3" y="723.0" width="55.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.3" y="734.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.25%)</title><rect x="757.7" y="707.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="760.7" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.25%)</title><rect x="757.7" y="691.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="760.7" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.25%)</title><rect x="757.7" y="675.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="760.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.25%)</title><rect x="757.7" y="659.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="760.7" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.12%)</title><rect x="759.2" y="643.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="762.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 4.08%)</title><rect x="760.6" y="707.0" width="48.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.6" y="718.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.62%)</title><rect x="760.6" y="691.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="763.6" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.12%)</title><rect x="760.6" y="675.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="763.6" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="762.1" y="675.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="765.1" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="763.6" y="675.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="766.6" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.25%)</title><rect x="765.0" y="675.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="768.0" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="766.5" y="659.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="769.5" y="670.0"></text>
</g>
<g>
<title>__GI___recv (27 samples, 3.34%)</title><rect x="767.9" y="691.0" width="39.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="770.9" y="702.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 3.09%)</title><rect x="770.9" y="675.0" width="36.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.9" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (25 samples, 3.09%)</title><rect x="770.9" y="659.0" width="36.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.9" y="670.0">do_..</text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="772.3" y="643.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="775.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 2.60%)</title><rect x="773.8" y="643.0" width="30.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.8" y="654.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (21 samples, 2.60%)</title><rect x="773.8" y="627.0" width="30.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="776.8" y="638.0">__..</text>
</g>
<g>
<title>sock_recvmsg (21 samples, 2.60%)</title><rect x="773.8" y="611.0" width="30.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="776.8" y="622.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (20 samples, 2.48%)</title><rect x="773.8" y="595.0" width="29.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="776.8" y="606.0">in..</text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="773.8" y="579.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.8" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 2.35%)</title><rect x="775.2" y="579.0" width="27.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="778.2" y="590.0">t..</text>
</g>
<g>
<title>release_sock (1 samples, 0.12%)</title><rect x="776.7" y="563.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="779.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="776.7" y="547.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="779.7" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (4 samples, 0.50%)</title><rect x="778.2" y="563.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.2" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.12%)</title><rect x="778.2" y="547.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="781.2" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.12%)</title><rect x="778.2" y="531.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.2" y="542.0"></text>
</g>
<g>
<title>wait_woken (3 samples, 0.37%)</title><rect x="779.6" y="547.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.6" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.37%)</title><rect x="779.6" y="531.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="782.6" y="542.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.37%)</title><rect x="779.6" y="515.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="782.6" y="526.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.25%)</title><rect x="781.1" y="499.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.1" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="782.5" y="483.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="785.5" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.25%)</title><rect x="784.0" y="563.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.0" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.12%)</title><rect x="785.5" y="547.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (11 samples, 1.36%)</title><rect x="786.9" y="563.0" width="16.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="789.9" y="574.0"></text>
</g>
<g>
<title>tcp_send_ack (11 samples, 1.36%)</title><rect x="786.9" y="547.0" width="16.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="789.9" y="558.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (11 samples, 1.36%)</title><rect x="786.9" y="531.0" width="16.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="789.9" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (11 samples, 1.36%)</title><rect x="786.9" y="515.0" width="16.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.9" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (11 samples, 1.36%)</title><rect x="786.9" y="499.0" width="16.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="789.9" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (11 samples, 1.36%)</title><rect x="786.9" y="483.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.9" y="494.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.12%)</title><rect x="786.9" y="467.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.9" y="478.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 1.24%)</title><rect x="788.4" y="467.0" width="14.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="791.4" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.62%)</title><rect x="788.4" y="451.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="791.4" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.12%)</title><rect x="788.4" y="435.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.4" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.50%)</title><rect x="789.9" y="435.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="792.9" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.50%)</title><rect x="789.9" y="419.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.9" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.50%)</title><rect x="789.9" y="403.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="792.9" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (4 samples, 0.50%)</title><rect x="789.9" y="387.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="792.9" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.25%)</title><rect x="792.8" y="371.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="795.8" y="382.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.62%)</title><rect x="795.7" y="451.0" width="7.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="798.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.62%)</title><rect x="795.7" y="435.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="798.7" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="795.7" y="419.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.7" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.37%)</title><rect x="797.2" y="419.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="800.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.37%)</title><rect x="797.2" y="403.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="800.2" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.25%)</title><rect x="797.2" y="387.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="800.2" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.25%)</title><rect x="797.2" y="371.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="800.2" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.25%)</title><rect x="797.2" y="355.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="800.2" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.25%)</title><rect x="797.2" y="339.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="800.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.25%)</title><rect x="797.2" y="323.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="800.2" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.25%)</title><rect x="797.2" y="307.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="800.2" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.25%)</title><rect x="797.2" y="291.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.2" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.25%)</title><rect x="797.2" y="275.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="800.2" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.25%)</title><rect x="797.2" y="259.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.25%)</title><rect x="797.2" y="243.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="800.2" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.25%)</title><rect x="797.2" y="227.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.2" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.25%)</title><rect x="797.2" y="211.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="800.2" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.25%)</title><rect x="797.2" y="195.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.25%)</title><rect x="797.2" y="179.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="800.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.25%)</title><rect x="797.2" y="163.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="800.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.25%)</title><rect x="797.2" y="147.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.2" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.12%)</title><rect x="798.6" y="131.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="801.6" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.12%)</title><rect x="798.6" y="115.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="801.6" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.12%)</title><rect x="800.1" y="387.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="803.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.12%)</title><rect x="800.1" y="371.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.1" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.12%)</title><rect x="801.5" y="419.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="804.5" y="430.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.12%)</title><rect x="803.0" y="595.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="806.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.12%)</title><rect x="803.0" y="579.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="806.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.12%)</title><rect x="803.0" y="563.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.12%)</title><rect x="803.0" y="547.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.0" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.25%)</title><rect x="804.5" y="643.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="807.5" y="654.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.12%)</title><rect x="805.9" y="627.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.9" y="638.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="807.4" y="691.0" width="1.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="810.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (14 samples, 1.73%)</title><rect x="808.8" y="723.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.12%)</title><rect x="811.8" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="814.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.50%)</title><rect x="813.2" y="707.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="816.1" y="691.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.1" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.25%)</title><rect x="816.1" y="675.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.74%)</title><rect x="819.1" y="707.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.25%)</title><rect x="824.9" y="691.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.25%)</title><rect x="824.9" y="675.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="826.4" y="659.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.12%)</title><rect x="827.8" y="707.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.12%)</title><rect x="827.8" y="691.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.12%)</title><rect x="827.8" y="675.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.12%)</title><rect x="827.8" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.12%)</title><rect x="827.8" y="643.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.25%)</title><rect x="829.3" y="723.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.25%)</title><rect x="829.3" y="707.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="832.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.25%)</title><rect x="829.3" y="691.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="832.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.25%)</title><rect x="829.3" y="675.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="832.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.25%)</title><rect x="829.3" y="659.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.25%)</title><rect x="829.3" y="643.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="832.3" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.12%)</title><rect x="830.7" y="627.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="833.7" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (7 samples, 0.87%)</title><rect x="832.2" y="723.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.2" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (7 samples, 0.87%)</title><rect x="832.2" y="707.0" width="10.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="835.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.87%)</title><rect x="832.2" y="691.0" width="10.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="835.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.74%)</title><rect x="832.2" y="675.0" width="8.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="835.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.50%)</title><rect x="833.7" y="659.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="836.7" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.50%)</title><rect x="833.7" y="643.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.7" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.25%)</title><rect x="833.7" y="627.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.7" y="638.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.12%)</title><rect x="835.1" y="611.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="835.1" y="595.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.25%)</title><rect x="836.6" y="627.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="839.6" y="638.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.25%)</title><rect x="836.6" y="611.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.25%)</title><rect x="836.6" y="595.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="839.6" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.25%)</title><rect x="836.6" y="579.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.6" y="590.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="839.5" y="659.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.5" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.12%)</title><rect x="839.5" y="643.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.5" y="654.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.12%)</title><rect x="841.0" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="844.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (60 samples, 7.43%)</title><rect x="842.4" y="723.0" width="87.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.4" y="734.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.25%)</title><rect x="842.4" y="707.0" width="2.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="845.4" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="843.9" y="691.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="846.9" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.12%)</title><rect x="845.3" y="707.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="848.3" y="718.0"></text>
</g>
<g>
<title>__libc_send (57 samples, 7.05%)</title><rect x="846.8" y="707.0" width="83.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="849.8" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 6.93%)</title><rect x="848.3" y="691.0" width="81.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="851.3" y="702.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (56 samples, 6.93%)</title><rect x="848.3" y="675.0" width="81.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="851.3" y="686.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (54 samples, 6.68%)</title><rect x="851.2" y="659.0" width="78.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="854.2" y="670.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (54 samples, 6.68%)</title><rect x="851.2" y="643.0" width="78.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="854.2" y="654.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (54 samples, 6.68%)</title><rect x="851.2" y="627.0" width="78.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="854.2" y="638.0">sock_send..</text>
</g>
<g>
<title>inet6_sendmsg (52 samples, 6.44%)</title><rect x="851.2" y="611.0" width="75.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.2" y="622.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (52 samples, 6.44%)</title><rect x="851.2" y="595.0" width="75.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.2" y="606.0">tcp_send..</text>
</g>
<g>
<title>tcp_sendmsg_locked (52 samples, 6.44%)</title><rect x="851.2" y="579.0" width="75.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="854.2" y="590.0">tcp_send..</text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.50%)</title><rect x="852.6" y="563.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.6" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.37%)</title><rect x="854.1" y="547.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.12%)</title><rect x="854.1" y="531.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="857.1" y="542.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.12%)</title><rect x="854.1" y="515.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.25%)</title><rect x="855.6" y="531.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="858.6" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.12%)</title><rect x="858.5" y="563.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (44 samples, 5.45%)</title><rect x="860.0" y="563.0" width="64.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="863.0" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (44 samples, 5.45%)</title><rect x="860.0" y="547.0" width="64.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.0" y="558.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (44 samples, 5.45%)</title><rect x="860.0" y="531.0" width="64.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.0" y="542.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (40 samples, 4.95%)</title><rect x="862.9" y="515.0" width="58.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.9" y="526.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (40 samples, 4.95%)</title><rect x="862.9" y="499.0" width="58.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="865.9" y="510.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (40 samples, 4.95%)</title><rect x="862.9" y="483.0" width="58.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="865.9" y="494.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (40 samples, 4.95%)</title><rect x="862.9" y="467.0" width="58.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="865.9" y="478.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.62%)</title><rect x="862.9" y="451.0" width="7.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.62%)</title><rect x="862.9" y="435.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="865.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.25%)</title><rect x="864.3" y="419.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="867.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.25%)</title><rect x="864.3" y="403.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.3" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.25%)</title><rect x="867.3" y="419.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="870.3" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="867.3" y="403.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.3" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.12%)</title><rect x="867.3" y="387.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.3" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.12%)</title><rect x="868.7" y="403.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="871.7" y="414.0"></text>
</g>
<g>
<title>ip_output (35 samples, 4.33%)</title><rect x="870.2" y="451.0" width="51.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.2" y="462.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (35 samples, 4.33%)</title><rect x="870.2" y="435.0" width="51.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.2" y="446.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.12%)</title><rect x="870.2" y="419.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.2" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (34 samples, 4.21%)</title><rect x="871.6" y="419.0" width="49.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="874.6" y="430.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 4.21%)</title><rect x="871.6" y="403.0" width="49.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.6" y="414.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 3.84%)</title><rect x="871.6" y="387.0" width="45.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="874.6" y="398.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.20 (31 samples, 3.84%)</title><rect x="871.6" y="371.0" width="45.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="874.6" y="382.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 3.84%)</title><rect x="871.6" y="355.0" width="45.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.6" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 3.84%)</title><rect x="871.6" y="339.0" width="45.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.6" y="350.0">__so..</text>
</g>
<g>
<title>net_rx_action (31 samples, 3.84%)</title><rect x="871.6" y="323.0" width="45.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.6" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (31 samples, 3.84%)</title><rect x="871.6" y="307.0" width="45.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="874.6" y="318.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (31 samples, 3.84%)</title><rect x="871.6" y="291.0" width="45.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.6" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (31 samples, 3.84%)</title><rect x="871.6" y="275.0" width="45.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.6" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.12%)</title><rect x="871.6" y="259.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (30 samples, 3.71%)</title><rect x="873.1" y="259.0" width="43.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 3.47%)</title><rect x="873.1" y="243.0" width="40.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="876.1" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (28 samples, 3.47%)</title><rect x="873.1" y="227.0" width="40.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.1" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 3.34%)</title><rect x="873.1" y="211.0" width="39.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="876.1" y="222.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (26 samples, 3.22%)</title><rect x="874.6" y="195.0" width="37.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.6" y="206.0">ip_..</text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.12%)</title><rect x="874.6" y="179.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (25 samples, 3.09%)</title><rect x="876.0" y="179.0" width="36.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.0" y="190.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.12%)</title><rect x="877.5" y="163.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="880.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 2.85%)</title><rect x="878.9" y="163.0" width="33.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="881.9" y="174.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (22 samples, 2.72%)</title><rect x="880.4" y="147.0" width="32.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.4" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.12%)</title><rect x="880.4" y="131.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.4" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.12%)</title><rect x="880.4" y="115.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="883.4" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.12%)</title><rect x="880.4" y="99.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.4" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.12%)</title><rect x="880.4" y="83.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="883.4" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.12%)</title><rect x="880.4" y="67.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.74%)</title><rect x="881.9" y="131.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.9" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.12%)</title><rect x="883.3" y="115.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.3" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.50%)</title><rect x="884.8" y="115.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="887.8" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.25%)</title><rect x="884.8" y="99.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.8" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.12%)</title><rect x="884.8" y="83.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="887.8" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.12%)</title><rect x="884.8" y="67.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="887.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.12%)</title><rect x="884.8" y="51.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="887.8" y="62.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="886.2" y="83.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="889.2" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="886.2" y="67.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="889.2" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.12%)</title><rect x="886.2" y="51.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="889.2" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="886.2" y="35.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.2" y="46.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.12%)</title><rect x="887.7" y="99.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="890.7" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.12%)</title><rect x="889.2" y="99.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.2" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (14 samples, 1.73%)</title><rect x="890.6" y="131.0" width="20.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.6" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 1.73%)</title><rect x="890.6" y="115.0" width="20.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="893.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 1.73%)</title><rect x="890.6" y="99.0" width="20.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 1.73%)</title><rect x="890.6" y="83.0" width="20.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.6" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 1.61%)</title><rect x="890.6" y="67.0" width="19.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="893.6" y="78.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.12%)</title><rect x="909.6" y="67.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.6" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.12%)</title><rect x="911.1" y="131.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.1" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="912.5" y="211.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.5" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="912.5" y="195.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="915.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="912.5" y="179.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="915.5" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.25%)</title><rect x="914.0" y="243.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.0" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (2 samples, 0.25%)</title><rect x="914.0" y="227.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.0" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.25%)</title><rect x="914.0" y="211.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="917.0" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.37%)</title><rect x="916.9" y="387.0" width="4.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="919.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.37%)</title><rect x="916.9" y="371.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="919.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.12%)</title><rect x="916.9" y="355.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="919.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.12%)</title><rect x="916.9" y="339.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.9" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.12%)</title><rect x="916.9" y="323.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="919.9" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.25%)</title><rect x="918.4" y="355.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="921.4" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.12%)</title><rect x="919.8" y="339.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.8" y="350.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.12%)</title><rect x="921.3" y="515.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.3" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.12%)</title><rect x="922.7" y="515.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="925.7" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.12%)</title><rect x="924.2" y="563.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.2" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.12%)</title><rect x="925.7" y="563.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.12%)</title><rect x="925.7" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.7" y="558.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.12%)</title><rect x="927.1" y="611.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="930.1" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.12%)</title><rect x="928.6" y="611.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.6" y="622.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.12%)</title><rect x="930.0" y="723.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethodName (1 samples, 0.12%)</title><rect x="931.5" y="771.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="934.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.12%)</title><rect x="931.5" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (1 samples, 0.12%)</title><rect x="933.0" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="936.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="933.0" y="755.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.12%)</title><rect x="933.0" y="739.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="936.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (32 samples, 3.96%)</title><rect x="934.4" y="835.0" width="46.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.4" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (32 samples, 3.96%)</title><rect x="934.4" y="819.0" width="46.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.4" y="830.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.put (31 samples, 3.84%)</title><rect x="934.4" y="803.0" width="45.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.4" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (1 samples, 0.12%)</title><rect x="934.4" y="787.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.12%)</title><rect x="934.4" y="771.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="937.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="934.4" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="934.4" y="739.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (30 samples, 3.71%)</title><rect x="935.9" y="787.0" width="43.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.9" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (30 samples, 3.71%)</title><rect x="935.9" y="771.0" width="43.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.9" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (7 samples, 0.87%)</title><rect x="937.4" y="755.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.74%)</title><rect x="938.8" y="739.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="941.8" y="750.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 0.50%)</title><rect x="938.8" y="723.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="941.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.50%)</title><rect x="938.8" y="707.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.50%)</title><rect x="938.8" y="691.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.50%)</title><rect x="938.8" y="675.0" width="5.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.8" y="686.0"></text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 0.50%)</title><rect x="938.8" y="659.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.8" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.50%)</title><rect x="938.8" y="643.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="941.8" y="654.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.50%)</title><rect x="938.8" y="627.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.8" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.50%)</title><rect x="938.8" y="611.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.8" y="622.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="938.8" y="595.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.8" y="606.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="938.8" y="579.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.8" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.12%)</title><rect x="938.8" y="563.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="941.8" y="574.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.12%)</title><rect x="938.8" y="547.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.8" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.12%)</title><rect x="940.3" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="943.3" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.12%)</title><rect x="940.3" y="579.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.3" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.25%)</title><rect x="941.7" y="595.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="944.7" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.25%)</title><rect x="941.7" y="579.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="944.7" y="590.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.25%)</title><rect x="941.7" y="563.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="944.7" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.25%)</title><rect x="941.7" y="547.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="944.7" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.25%)</title><rect x="941.7" y="531.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="944.7" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.25%)</title><rect x="941.7" y="515.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.7" y="526.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.25%)</title><rect x="941.7" y="499.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.7" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="941.7" y="483.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.7" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="941.7" y="467.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="944.7" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.12%)</title><rect x="941.7" y="451.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="944.7" y="462.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.12%)</title><rect x="941.7" y="435.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="944.7" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.12%)</title><rect x="943.2" y="483.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.2" y="494.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="944.7" y="723.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="947.7" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.12%)</title><rect x="946.1" y="723.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="949.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.25%)</title><rect x="947.6" y="755.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="947.6" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.12%)</title><rect x="947.6" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="950.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.12%)</title><rect x="949.0" y="739.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.50%)</title><rect x="950.5" y="755.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.5" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.37%)</title><rect x="952.0" y="739.0" width="4.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="955.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.25%)</title><rect x="953.4" y="723.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="956.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.25%)</title><rect x="953.4" y="707.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="956.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.12%)</title><rect x="954.9" y="691.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="957.9" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.12%)</title><rect x="954.9" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="957.9" y="686.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.12%)</title><rect x="954.9" y="659.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="957.9" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.12%)</title><rect x="954.9" y="643.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="957.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (14 samples, 1.73%)</title><rect x="956.3" y="755.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.3" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.12%)</title><rect x="957.8" y="739.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="960.8" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.12%)</title><rect x="957.8" y="723.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="960.8" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.12%)</title><rect x="957.8" y="707.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="960.8" y="718.0"></text>
</g>
<g>
<title>__libc_send (12 samples, 1.49%)</title><rect x="959.3" y="739.0" width="17.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="962.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 1.49%)</title><rect x="959.3" y="723.0" width="17.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 1.49%)</title><rect x="959.3" y="707.0" width="17.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="962.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (12 samples, 1.49%)</title><rect x="959.3" y="691.0" width="17.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.3" y="702.0"></text>
</g>
<g>
<title>__sys_sendto (12 samples, 1.49%)</title><rect x="959.3" y="675.0" width="17.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.3" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (12 samples, 1.49%)</title><rect x="959.3" y="659.0" width="17.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.3" y="670.0"></text>
</g>
<g>
<title>inet6_sendmsg (11 samples, 1.36%)</title><rect x="959.3" y="643.0" width="16.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.3" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (11 samples, 1.36%)</title><rect x="959.3" y="627.0" width="16.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.3" y="638.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (11 samples, 1.36%)</title><rect x="959.3" y="611.0" width="16.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.3" y="622.0"></text>
</g>
<g>
<title>tcp_push (11 samples, 1.36%)</title><rect x="959.3" y="595.0" width="16.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="962.3" y="606.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (11 samples, 1.36%)</title><rect x="959.3" y="579.0" width="16.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="962.3" y="590.0"></text>
</g>
<g>
<title>tcp_write_xmit (11 samples, 1.36%)</title><rect x="959.3" y="563.0" width="16.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="962.3" y="574.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 1.24%)</title><rect x="960.7" y="547.0" width="14.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="963.7" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (10 samples, 1.24%)</title><rect x="960.7" y="531.0" width="14.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="963.7" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 1.24%)</title><rect x="960.7" y="515.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="963.7" y="526.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 1.24%)</title><rect x="960.7" y="499.0" width="14.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.7" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.12%)</title><rect x="960.7" y="483.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="963.7" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.12%)</title><rect x="960.7" y="467.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="963.7" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.12%)</title><rect x="960.7" y="451.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="963.7" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.12%)</title><rect x="960.7" y="435.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.7" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.12%)</title><rect x="960.7" y="419.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.7" y="430.0"></text>
</g>
<g>
<title>ip_output (9 samples, 1.11%)</title><rect x="962.2" y="483.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="965.2" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 1.11%)</title><rect x="962.2" y="467.0" width="13.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="965.2" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (8 samples, 0.99%)</title><rect x="963.6" y="451.0" width="11.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="966.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 0.99%)</title><rect x="963.6" y="435.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="966.6" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 0.87%)</title><rect x="965.1" y="419.0" width="10.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.1" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (7 samples, 0.87%)</title><rect x="965.1" y="403.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.1" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 0.87%)</title><rect x="965.1" y="387.0" width="10.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.1" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.87%)</title><rect x="965.1" y="371.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.1" y="382.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.87%)</title><rect x="965.1" y="355.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.1" y="366.0"></text>
</g>
<g>
<title>process_backlog (7 samples, 0.87%)</title><rect x="965.1" y="339.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="968.1" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (7 samples, 0.87%)</title><rect x="965.1" y="323.0" width="10.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.1" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (7 samples, 0.87%)</title><rect x="965.1" y="307.0" width="10.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.1" y="318.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 0.87%)</title><rect x="965.1" y="291.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="968.1" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 0.74%)</title><rect x="966.6" y="275.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.6" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 0.74%)</title><rect x="966.6" y="259.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="969.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 0.74%)</title><rect x="966.6" y="243.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="969.6" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 0.74%)</title><rect x="966.6" y="227.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (6 samples, 0.74%)</title><rect x="966.6" y="211.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="969.6" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.12%)</title><rect x="966.6" y="195.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.62%)</title><rect x="968.0" y="195.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="971.0" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.62%)</title><rect x="968.0" y="179.0" width="7.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="971.0" y="190.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.25%)</title><rect x="968.0" y="163.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="971.0" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.25%)</title><rect x="968.0" y="147.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="971.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="968.0" y="131.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="971.0" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="968.0" y="115.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="971.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.12%)</title><rect x="968.0" y="99.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="971.0" y="110.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.12%)</title><rect x="968.0" y="83.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="971.0" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.12%)</title><rect x="968.0" y="67.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="971.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.12%)</title><rect x="969.5" y="131.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="972.5" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.37%)</title><rect x="970.9" y="163.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="973.9" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.37%)</title><rect x="970.9" y="147.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.9" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.37%)</title><rect x="970.9" y="131.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.9" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.37%)</title><rect x="970.9" y="115.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="973.9" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.37%)</title><rect x="970.9" y="99.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="973.9" y="110.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.12%)</title><rect x="975.3" y="643.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.3" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.12%)</title><rect x="975.3" y="627.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.3" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.12%)</title><rect x="975.3" y="611.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="978.3" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.12%)</title><rect x="975.3" y="595.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.3" y="606.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.12%)</title><rect x="975.3" y="579.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="978.3" y="590.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2 samples, 0.25%)</title><rect x="976.8" y="755.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="979.8" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (2 samples, 0.25%)</title><rect x="976.8" y="739.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (2 samples, 0.25%)</title><rect x="976.8" y="723.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (1 samples, 0.12%)</title><rect x="979.7" y="803.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.12%)</title><rect x="979.7" y="787.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="979.7" y="771.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.12%)</title><rect x="979.7" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.12%)</title><rect x="979.7" y="739.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="982.7" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (110 samples, 13.61%)</title><rect x="981.2" y="979.0" width="160.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.2" y="990.0">one/nio/server/Selec..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.12%)</title><rect x="991.4" y="963.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.12%)</title><rect x="992.8" y="963.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.8" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (2 samples, 0.25%)</title><rect x="994.3" y="963.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (25 samples, 3.09%)</title><rect x="997.2" y="963.0" width="36.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.2" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (24 samples, 2.97%)</title><rect x="998.7" y="947.0" width="35.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.7" y="958.0">one..</text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.99%)</title><rect x="1000.1" y="931.0" width="11.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1003.1" y="942.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.99%)</title><rect x="1000.1" y="915.0" width="11.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1003.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.99%)</title><rect x="1000.1" y="899.0" width="11.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.1" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.99%)</title><rect x="1000.1" y="883.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.1" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (8 samples, 0.99%)</title><rect x="1000.1" y="867.0" width="11.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.1" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (8 samples, 0.99%)</title><rect x="1000.1" y="851.0" width="11.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1003.1" y="862.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.87%)</title><rect x="1000.1" y="835.0" width="10.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1003.1" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (3 samples, 0.37%)</title><rect x="1000.1" y="819.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.1" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.25%)</title><rect x="1001.6" y="803.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.6" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.50%)</title><rect x="1004.5" y="819.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1007.5" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.50%)</title><rect x="1004.5" y="803.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1007.5" y="814.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.37%)</title><rect x="1006.0" y="787.0" width="4.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.0" y="798.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.37%)</title><rect x="1006.0" y="771.0" width="4.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.0" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.37%)</title><rect x="1006.0" y="755.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1009.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.12%)</title><rect x="1010.4" y="835.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1013.4" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.25%)</title><rect x="1011.8" y="931.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1014.8" y="942.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.25%)</title><rect x="1011.8" y="915.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1014.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.25%)</title><rect x="1011.8" y="899.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1014.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.25%)</title><rect x="1011.8" y="883.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.8" y="894.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.12%)</title><rect x="1011.8" y="867.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.12%)</title><rect x="1013.3" y="867.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.3" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.12%)</title><rect x="1013.3" y="851.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1016.3" y="862.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.12%)</title><rect x="1013.3" y="835.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1016.3" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.12%)</title><rect x="1013.3" y="819.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1016.3" y="830.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.12%)</title><rect x="1013.3" y="803.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1016.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 1.24%)</title><rect x="1014.8" y="931.0" width="14.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1017.8" y="942.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 1.24%)</title><rect x="1014.8" y="915.0" width="14.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1017.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.11%)</title><rect x="1016.2" y="899.0" width="13.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1019.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.11%)</title><rect x="1016.2" y="883.0" width="13.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1019.2" y="894.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 0.87%)</title><rect x="1017.7" y="867.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.7" y="878.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 0.87%)</title><rect x="1017.7" y="851.0" width="10.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1020.7" y="862.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.12%)</title><rect x="1017.7" y="835.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1020.7" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="1017.7" y="819.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.7" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.12%)</title><rect x="1017.7" y="803.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.7" y="814.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.74%)</title><rect x="1019.1" y="835.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.1" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (3 samples, 0.37%)</title><rect x="1020.6" y="819.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1023.6" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.12%)</title><rect x="1020.6" y="803.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1023.6" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.12%)</title><rect x="1020.6" y="787.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1023.6" y="798.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.12%)</title><rect x="1020.6" y="771.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1023.6" y="782.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.25%)</title><rect x="1022.1" y="803.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1025.1" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.25%)</title><rect x="1025.0" y="819.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1028.0" y="830.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.25%)</title><rect x="1025.0" y="803.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1028.0" y="814.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.25%)</title><rect x="1025.0" y="787.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1028.0" y="798.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.12%)</title><rect x="1026.4" y="771.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1029.4" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.12%)</title><rect x="1026.4" y="755.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1029.4" y="766.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.12%)</title><rect x="1027.9" y="867.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1030.9" y="878.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.12%)</title><rect x="1029.4" y="931.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1032.4" y="942.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.12%)</title><rect x="1030.8" y="931.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1033.8" y="942.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="1032.3" y="931.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.3" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.12%)</title><rect x="1032.3" y="915.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1035.3" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.12%)</title><rect x="1032.3" y="899.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1035.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (74 samples, 9.16%)</title><rect x="1033.7" y="963.0" width="108.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.7" y="974.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (72 samples, 8.91%)</title><rect x="1035.2" y="947.0" width="105.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.2" y="958.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (47 samples, 5.82%)</title><rect x="1035.2" y="931.0" width="68.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.2" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37 samples, 4.58%)</title><rect x="1035.2" y="915.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.2" y="926.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 4.46%)</title><rect x="1036.7" y="899.0" width="52.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.7" y="910.0">one/n..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (33 samples, 4.08%)</title><rect x="1036.7" y="883.0" width="48.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.7" y="894.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.99%)</title><rect x="1036.7" y="867.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1039.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (25 samples, 3.09%)</title><rect x="1048.3" y="867.0" width="36.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.3" y="878.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 3.09%)</title><rect x="1048.3" y="851.0" width="36.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1051.3" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 3.09%)</title><rect x="1048.3" y="835.0" width="36.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.3" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 2.97%)</title><rect x="1048.3" y="819.0" width="35.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.3" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 2.97%)</title><rect x="1048.3" y="803.0" width="35.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.3" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 2.97%)</title><rect x="1048.3" y="787.0" width="35.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.3" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 2.97%)</title><rect x="1048.3" y="771.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.3" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 2.97%)</title><rect x="1048.3" y="755.0" width="35.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.3" y="766.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 2.97%)</title><rect x="1048.3" y="739.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.3" y="750.0">jdk..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.37%)</title><rect x="1048.3" y="723.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1051.3" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.12%)</title><rect x="1048.3" y="707.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.3" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.25%)</title><rect x="1049.8" y="707.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1052.8" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 2.48%)</title><rect x="1052.7" y="723.0" width="29.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1055.7" y="734.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 2.48%)</title><rect x="1052.7" y="707.0" width="29.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1055.7" y="718.0">en..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 2.48%)</title><rect x="1052.7" y="691.0" width="29.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.7" y="702.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 2.48%)</title><rect x="1052.7" y="675.0" width="29.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.7" y="686.0">__..</text>
</g>
<g>
<title>do_futex (20 samples, 2.48%)</title><rect x="1052.7" y="659.0" width="29.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.7" y="670.0">do..</text>
</g>
<g>
<title>futex_wake (20 samples, 2.48%)</title><rect x="1052.7" y="643.0" width="29.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.7" y="654.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.25%)</title><rect x="1055.6" y="627.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.6" y="638.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.12%)</title><rect x="1057.1" y="611.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1060.1" y="622.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 1.98%)</title><rect x="1058.6" y="627.0" width="23.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1061.6" y="638.0">w..</text>
</g>
<g>
<title>try_to_wake_up (15 samples, 1.86%)</title><rect x="1060.0" y="611.0" width="21.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.0" y="622.0">t..</text>
</g>
<g>
<title>__lock_text_start (14 samples, 1.73%)</title><rect x="1061.5" y="595.0" width="20.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1064.5" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.12%)</title><rect x="1081.9" y="723.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1084.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.12%)</title><rect x="1083.4" y="819.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.12%)</title><rect x="1083.4" y="803.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.12%)</title><rect x="1083.4" y="787.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.12%)</title><rect x="1083.4" y="771.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.25%)</title><rect x="1084.9" y="883.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1087.9" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.25%)</title><rect x="1084.9" y="867.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.9" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.25%)</title><rect x="1084.9" y="851.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.25%)</title><rect x="1084.9" y="835.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.25%)</title><rect x="1084.9" y="819.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.9" y="830.0"></text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (1 samples, 0.12%)</title><rect x="1086.3" y="803.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.12%)</title><rect x="1087.8" y="883.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1090.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.12%)</title><rect x="1087.8" y="867.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.12%)</title><rect x="1087.8" y="851.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.8" y="862.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.12%)</title><rect x="1087.8" y="835.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1090.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.25%)</title><rect x="1089.2" y="915.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.2" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1089.2" y="899.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1092.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.12%)</title><rect x="1089.2" y="883.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.12%)</title><rect x="1090.7" y="899.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.12%)</title><rect x="1092.2" y="915.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.12%)</title><rect x="1092.2" y="899.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.12%)</title><rect x="1092.2" y="883.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.2" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.87%)</title><rect x="1093.6" y="915.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.6" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.37%)</title><rect x="1099.5" y="899.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 3.09%)</title><rect x="1103.8" y="931.0" width="36.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.8" y="942.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (25 samples, 3.09%)</title><rect x="1103.8" y="915.0" width="36.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.8" y="926.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.37%)</title><rect x="1103.8" y="899.0" width="4.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1106.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.12%)</title><rect x="1105.3" y="883.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1108.3" y="894.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="1106.8" y="883.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1109.8" y="894.0"></text>
</g>
<g>
<title>__GI___recv (21 samples, 2.60%)</title><rect x="1108.2" y="899.0" width="30.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1111.2" y="910.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 2.60%)</title><rect x="1108.2" y="883.0" width="30.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.2" y="894.0">en..</text>
</g>
<g>
<title>do_syscall_64 (21 samples, 2.60%)</title><rect x="1108.2" y="867.0" width="30.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1111.2" y="878.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (21 samples, 2.60%)</title><rect x="1108.2" y="851.0" width="30.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.2" y="862.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 2.48%)</title><rect x="1108.2" y="835.0" width="29.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.2" y="846.0">__..</text>
</g>
<g>
<title>sock_recvmsg (19 samples, 2.35%)</title><rect x="1108.2" y="819.0" width="27.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1111.2" y="830.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 1.86%)</title><rect x="1108.2" y="803.0" width="21.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.2" y="814.0">i..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.12%)</title><rect x="1108.2" y="787.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1111.2" y="798.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 1.73%)</title><rect x="1109.7" y="787.0" width="20.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1112.7" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.12%)</title><rect x="1114.1" y="771.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.1" y="782.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.12%)</title><rect x="1114.1" y="755.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.1" y="766.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.12%)</title><rect x="1114.1" y="739.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.1" y="750.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.12%)</title><rect x="1114.1" y="723.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1117.1" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.25%)</title><rect x="1115.5" y="771.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1118.5" y="782.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.12%)</title><rect x="1115.5" y="755.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.5" y="766.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.12%)</title><rect x="1115.5" y="739.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.12%)</title><rect x="1117.0" y="755.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1120.0" y="766.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.12%)</title><rect x="1117.0" y="739.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1120.0" y="750.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.25%)</title><rect x="1118.4" y="771.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.4" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.12%)</title><rect x="1119.9" y="755.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.9" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.74%)</title><rect x="1121.4" y="771.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1124.4" y="782.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.74%)</title><rect x="1121.4" y="755.0" width="8.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1124.4" y="766.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.50%)</title><rect x="1124.3" y="739.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1127.3" y="750.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.25%)</title><rect x="1124.3" y="723.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1127.3" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.12%)</title><rect x="1127.2" y="723.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.2" y="734.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.12%)</title><rect x="1128.7" y="723.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.7" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.12%)</title><rect x="1128.7" y="707.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.7" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.50%)</title><rect x="1130.1" y="803.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1133.1" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.25%)</title><rect x="1133.0" y="787.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1136.0" y="798.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.25%)</title><rect x="1133.0" y="771.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.0" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.25%)</title><rect x="1133.0" y="755.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1136.0" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.12%)</title><rect x="1136.0" y="819.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1139.0" y="830.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.12%)</title><rect x="1136.0" y="803.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1139.0" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.12%)</title><rect x="1136.0" y="787.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1139.0" y="798.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.12%)</title><rect x="1137.4" y="835.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.4" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.12%)</title><rect x="1138.9" y="899.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1141.9" y="910.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.12%)</title><rect x="1140.3" y="947.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.3" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.12%)</title><rect x="1140.3" y="931.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1143.3" y="942.0"></text>
</g>
<g>
<title>start_thread (33 samples, 4.08%)</title><rect x="1141.8" y="979.0" width="48.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1144.8" y="990.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (33 samples, 4.08%)</title><rect x="1141.8" y="963.0" width="48.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1144.8" y="974.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (33 samples, 4.08%)</title><rect x="1141.8" y="947.0" width="48.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.8" y="958.0">Thre..</text>
</g>
<g>
<title>JavaThread::run() (33 samples, 4.08%)</title><rect x="1141.8" y="931.0" width="48.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.8" y="942.0">Java..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (33 samples, 4.08%)</title><rect x="1141.8" y="915.0" width="48.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.8" y="926.0">Comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (33 samples, 4.08%)</title><rect x="1141.8" y="899.0" width="48.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.8" y="910.0">Comp..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (31 samples, 3.84%)</title><rect x="1141.8" y="883.0" width="45.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.8" y="894.0">C2Co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (31 samples, 3.84%)</title><rect x="1141.8" y="867.0" width="45.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.8" y="878.0">Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (18 samples, 2.23%)</title><rect x="1141.8" y="851.0" width="26.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1144.8" y="862.0">C..</text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.12%)</title><rect x="1141.8" y="835.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.8" y="846.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.12%)</title><rect x="1141.8" y="819.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.8" y="830.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.12%)</title><rect x="1141.8" y="803.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1144.8" y="814.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.12%)</title><rect x="1141.8" y="787.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.8" y="798.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.50%)</title><rect x="1143.3" y="835.0" width="5.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.3" y="846.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.12%)</title><rect x="1143.3" y="819.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.3" y="830.0"></text>
</g>
<g>
<title>StorePNode::Opcode() const (1 samples, 0.12%)</title><rect x="1143.3" y="803.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1146.3" y="814.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.37%)</title><rect x="1144.7" y="819.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1147.7" y="830.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.12%)</title><rect x="1144.7" y="803.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.7" y="814.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.25%)</title><rect x="1146.2" y="803.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.2" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.12%)</title><rect x="1146.2" y="787.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1149.2" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.12%)</title><rect x="1146.2" y="771.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.2" y="782.0"></text>
</g>
<g>
<title>Node::match_edge(unsigned int) const (1 samples, 0.12%)</title><rect x="1147.6" y="787.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1150.6" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.12%)</title><rect x="1149.1" y="835.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.1" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.12%)</title><rect x="1149.1" y="819.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.1" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.12%)</title><rect x="1149.1" y="803.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.1" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (12 samples, 1.49%)</title><rect x="1150.6" y="835.0" width="17.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.6" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.12%)</title><rect x="1150.6" y="819.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.6" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.25%)</title><rect x="1152.0" y="819.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.0" y="830.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.12%)</title><rect x="1153.5" y="803.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.5" y="814.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.12%)</title><rect x="1153.5" y="787.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.5" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.37%)</title><rect x="1155.0" y="819.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.0" y="830.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.12%)</title><rect x="1157.9" y="803.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.9" y="814.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.12%)</title><rect x="1159.3" y="819.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.3" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.12%)</title><rect x="1160.8" y="819.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.8" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.12%)</title><rect x="1162.3" y="819.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.3" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.12%)</title><rect x="1162.3" y="803.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.3" y="814.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.25%)</title><rect x="1163.7" y="819.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.7" y="830.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.12%)</title><rect x="1165.2" y="803.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.2" y="814.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.12%)</title><rect x="1166.6" y="819.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1169.6" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 1.11%)</title><rect x="1168.1" y="851.0" width="13.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.1" y="862.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.37%)</title><rect x="1168.1" y="835.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.1" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.37%)</title><rect x="1168.1" y="819.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.1" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.12%)</title><rect x="1168.1" y="803.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.1" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.12%)</title><rect x="1169.6" y="803.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.6" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.12%)</title><rect x="1169.6" y="787.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.6" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.12%)</title><rect x="1171.0" y="803.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.0" y="814.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.12%)</title><rect x="1172.5" y="835.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.5" y="846.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.12%)</title><rect x="1173.9" y="835.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.9" y="846.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.12%)</title><rect x="1173.9" y="819.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.9" y="830.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (1 samples, 0.12%)</title><rect x="1173.9" y="803.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.9" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.25%)</title><rect x="1175.4" y="835.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.12%)</title><rect x="1175.4" y="819.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.4" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.12%)</title><rect x="1176.9" y="819.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.9" y="830.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.12%)</title><rect x="1176.9" y="803.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.9" y="814.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="1176.9" y="787.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.9" y="798.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="1176.9" y="771.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.9" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.25%)</title><rect x="1178.3" y="835.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.3" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.25%)</title><rect x="1178.3" y="819.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.3" y="830.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.12%)</title><rect x="1178.3" y="803.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.3" y="814.0"></text>
</g>
<g>
<title>IfNode::search_identical(int) (1 samples, 0.12%)</title><rect x="1178.3" y="787.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.3" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.12%)</title><rect x="1179.8" y="803.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.50%)</title><rect x="1181.2" y="851.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.50%)</title><rect x="1181.2" y="835.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.50%)</title><rect x="1181.2" y="819.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.50%)</title><rect x="1181.2" y="803.0" width="5.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.50%)</title><rect x="1181.2" y="787.0" width="5.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.50%)</title><rect x="1181.2" y="771.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.50%)</title><rect x="1181.2" y="755.0" width="5.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.50%)</title><rect x="1181.2" y="739.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.50%)</title><rect x="1181.2" y="723.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.50%)</title><rect x="1181.2" y="707.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.50%)</title><rect x="1181.2" y="691.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.50%)</title><rect x="1181.2" y="675.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.12%)</title><rect x="1181.2" y="659.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.12%)</title><rect x="1181.2" y="643.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.2" y="654.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.12%)</title><rect x="1181.2" y="627.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.12%)</title><rect x="1181.2" y="611.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.2" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.12%)</title><rect x="1181.2" y="595.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.2" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1181.2" y="579.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.12%)</title><rect x="1181.2" y="563.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.2" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.12%)</title><rect x="1181.2" y="547.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.12%)</title><rect x="1181.2" y="531.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.2" y="542.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.12%)</title><rect x="1181.2" y="515.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.2" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.12%)</title><rect x="1181.2" y="499.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.2" y="510.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.12%)</title><rect x="1181.2" y="483.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.2" y="494.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.12%)</title><rect x="1181.2" y="467.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.2" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.37%)</title><rect x="1182.7" y="659.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.7" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.37%)</title><rect x="1182.7" y="643.0" width="4.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.37%)</title><rect x="1182.7" y="627.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.7" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.37%)</title><rect x="1182.7" y="611.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.7" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.37%)</title><rect x="1182.7" y="595.0" width="4.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.25%)</title><rect x="1182.7" y="579.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.7" y="590.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_arguments_for_speculation(ciMethod*, Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1182.7" y="563.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.2" y="563.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.2" y="547.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.2" y="531.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.2" y="515.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.2" y="499.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.2" y="483.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.2" y="467.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.2" y="451.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.2" y="435.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.2" y="419.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.2" y="403.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.2" y="387.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.2" y="371.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.2" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.2" y="355.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.2" y="339.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.2" y="323.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.2" y="307.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.2" y="291.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.2" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.2" y="275.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.12%)</title><rect x="1184.2" y="259.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.12%)</title><rect x="1184.2" y="243.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.12%)</title><rect x="1184.2" y="227.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.12%)</title><rect x="1184.2" y="211.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.12%)</title><rect x="1184.2" y="195.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="206.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.12%)</title><rect x="1184.2" y="179.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="190.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.12%)</title><rect x="1184.2" y="163.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="174.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_newArray(bool) (1 samples, 0.12%)</title><rect x="1184.2" y="147.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="158.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.12%)</title><rect x="1184.2" y="131.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.2" y="142.0"></text>
</g>
<g>
<title>AllocateNode::AllocateNode(Compile*, TypeFunc const*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.12%)</title><rect x="1184.2" y="115.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="126.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.12%)</title><rect x="1184.2" y="99.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="110.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.12%)</title><rect x="1184.2" y="83.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1187.2" y="94.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.12%)</title><rect x="1185.6" y="579.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.12%)</title><rect x="1185.6" y="563.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="574.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.12%)</title><rect x="1185.6" y="547.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.6" y="558.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.12%)</title><rect x="1185.6" y="531.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.6" y="542.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.12%)</title><rect x="1185.6" y="515.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.6" y="526.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.12%)</title><rect x="1185.6" y="499.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.6" y="510.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*, Node*) (1 samples, 0.12%)</title><rect x="1185.6" y="483.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.6" y="494.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.12%)</title><rect x="1185.6" y="467.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1188.6" y="478.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.25%)</title><rect x="1187.1" y="883.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.25%)</title><rect x="1187.1" y="867.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.25%)</title><rect x="1187.1" y="851.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.25%)</title><rect x="1187.1" y="835.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.12%)</title><rect x="1187.1" y="819.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.12%)</title><rect x="1187.1" y="803.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.12%)</title><rect x="1187.1" y="787.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.12%)</title><rect x="1187.1" y="771.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.1" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.12%)</title><rect x="1187.1" y="755.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.12%)</title><rect x="1187.1" y="739.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1187.1" y="723.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.12%)</title><rect x="1187.1" y="707.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.12%)</title><rect x="1187.1" y="691.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.12%)</title><rect x="1187.1" y="675.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.12%)</title><rect x="1187.1" y="659.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1187.1" y="643.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.12%)</title><rect x="1187.1" y="627.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.12%)</title><rect x="1187.1" y="611.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.12%)</title><rect x="1187.1" y="595.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.12%)</title><rect x="1187.1" y="579.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.12%)</title><rect x="1187.1" y="563.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.12%)</title><rect x="1187.1" y="547.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.12%)</title><rect x="1187.1" y="531.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.12%)</title><rect x="1187.1" y="515.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.1" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.12%)</title><rect x="1187.1" y="499.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::load_indexed(BasicType) (1 samples, 0.12%)</title><rect x="1187.1" y="483.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.12%)</title><rect x="1187.1" y="467.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="478.0"></text>
</g>
<g>
<title>Canonicalizer::do_LoadIndexed(LoadIndexed*) (1 samples, 0.12%)</title><rect x="1187.1" y="451.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="462.0"></text>
</g>
<g>
<title>ciArray::element_value(int) (1 samples, 0.12%)</title><rect x="1187.1" y="435.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.1" y="446.0"></text>
</g>
<g>
<title>ciObject::klass() (1 samples, 0.12%)</title><rect x="1187.1" y="419.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="430.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.12%)</title><rect x="1188.5" y="819.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.12%)</title><rect x="1188.5" y="803.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.12%)</title><rect x="1188.5" y="787.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.12%)</title><rect x="1188.5" y="771.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.5" y="782.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 0.12%)</title><rect x="1188.5" y="755.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 0.12%)</title><rect x="1188.5" y="739.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.12%)</title><rect x="1188.5" y="723.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
</g>
</svg>
