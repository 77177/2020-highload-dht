<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1285"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1285"> </text>
<g id="frames">
<g>
<title>all (1,608 samples, 100.00%)</title><rect x="10.0" y="1251.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="1262.0">all</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.06%)</title><rect x="10.0" y="1235.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.06%)</title><rect x="10.0" y="1219.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="10.0" y="1203.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="10.0" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="10.0" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.06%)</title><rect x="10.0" y="1155.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.06%)</title><rect x="10.0" y="1139.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.06%)</title><rect x="10.0" y="1123.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.06%)</title><rect x="10.0" y="1107.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="10.0" y="1091.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="10.0" y="1075.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.06%)</title><rect x="10.0" y="1059.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.06%)</title><rect x="10.0" y="1043.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.06%)</title><rect x="10.0" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (1 samples, 0.06%)</title><rect x="10.0" y="1011.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (1 samples, 0.06%)</title><rect x="10.0" y="995.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="10.0" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="10.0" y="963.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.06%)</title><rect x="10.0" y="947.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.06%)</title><rect x="10.0" y="931.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.06%)</title><rect x="10.0" y="915.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="10.0" y="899.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.06%)</title><rect x="10.7" y="1235.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.7" y="1246.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="10.7" y="1219.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.7" y="1230.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.06%)</title><rect x="10.7" y="1203.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.7" y="1214.0"></text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.06%)</title><rect x="11.5" y="1235.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.5" y="1246.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info(JavaThread*, int) (1 samples, 0.06%)</title><rect x="11.5" y="1219.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.5" y="1230.0"></text>
</g>
<g>
<title>Deoptimization::fetch_unroll_info_helper(JavaThread*, int) (1 samples, 0.06%)</title><rect x="11.5" y="1203.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.5" y="1214.0"></text>
</g>
<g>
<title>vframeArray::allocate(JavaThread*, int, GrowableArray&lt;compiledVFrame*&gt;*, RegisterMap*, frame, frame, frame, bool) (1 samples, 0.06%)</title><rect x="11.5" y="1187.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.5" y="1198.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.25%)</title><rect x="12.2" y="1235.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="15.2" y="1246.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.25%)</title><rect x="12.2" y="1219.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="15.2" y="1230.0"></text>
</g>
<g>
<title>[unknown_Java] (13 samples, 0.81%)</title><rect x="15.1" y="1235.0" width="9.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="18.1" y="1246.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (8 samples, 0.50%)</title><rect x="15.1" y="1219.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.1" y="1230.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (8 samples, 0.50%)</title><rect x="15.1" y="1203.0" width="5.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.1" y="1214.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.50%)</title><rect x="15.1" y="1187.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="18.1" y="1198.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.50%)</title><rect x="15.1" y="1171.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.1" y="1182.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.50%)</title><rect x="15.1" y="1155.0" width="5.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.1" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (8 samples, 0.50%)</title><rect x="15.1" y="1139.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.1" y="1150.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (8 samples, 0.50%)</title><rect x="15.1" y="1123.0" width="5.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.1" y="1134.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (8 samples, 0.50%)</title><rect x="15.1" y="1107.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.1" y="1118.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.50%)</title><rect x="15.1" y="1091.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.1" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 0.50%)</title><rect x="15.1" y="1075.0" width="5.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.1" y="1086.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.50%)</title><rect x="15.1" y="1059.0" width="5.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="1070.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.50%)</title><rect x="15.1" y="1043.0" width="5.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.1" y="1054.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.50%)</title><rect x="15.1" y="1027.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.1" y="1038.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.50%)</title><rect x="15.1" y="1011.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.1" y="1022.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (8 samples, 0.50%)</title><rect x="15.1" y="995.0" width="5.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="18.1" y="1006.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (6 samples, 0.37%)</title><rect x="15.1" y="979.0" width="4.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="18.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.37%)</title><rect x="15.1" y="963.0" width="4.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.37%)</title><rect x="15.1" y="947.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.1" y="958.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.12%)</title><rect x="15.1" y="931.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.1" y="942.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.12%)</title><rect x="15.1" y="915.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="18.1" y="926.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.12%)</title><rect x="15.1" y="899.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="18.1" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.12%)</title><rect x="15.1" y="883.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.1" y="894.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="15.9" y="867.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.9" y="878.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.25%)</title><rect x="16.6" y="931.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.6" y="942.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.25%)</title><rect x="16.6" y="915.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="19.6" y="926.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.25%)</title><rect x="16.6" y="899.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="19.6" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.25%)</title><rect x="16.6" y="883.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="19.6" y="894.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="17.3" y="867.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.3" y="878.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.12%)</title><rect x="18.1" y="867.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.1" y="878.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.06%)</title><rect x="18.8" y="851.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.12%)</title><rect x="19.5" y="979.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.12%)</title><rect x="19.5" y="963.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.5" y="974.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.12%)</title><rect x="19.5" y="947.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.5" y="958.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.12%)</title><rect x="19.5" y="931.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="22.5" y="942.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.12%)</title><rect x="19.5" y="915.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="22.5" y="926.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="19.5" y="899.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.5" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="20.3" y="899.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="23.3" y="910.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="20.3" y="883.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.19%)</title><rect x="21.0" y="1219.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="24.0" y="1230.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.19%)</title><rect x="21.0" y="1203.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="24.0" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="21.7" y="1187.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="24.7" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="22.5" y="1187.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="25.5" y="1198.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.06%)</title><rect x="23.2" y="1219.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="26.2" y="1230.0"></text>
</g>
<g>
<title>checkcast_arraycopy (1 samples, 0.06%)</title><rect x="23.9" y="1219.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="26.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,080 samples, 67.16%)</title><rect x="24.7" y="1235.0" width="792.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.7" y="1246.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,080 samples, 67.16%)</title><rect x="24.7" y="1219.0" width="792.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.7" y="1230.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,080 samples, 67.16%)</title><rect x="24.7" y="1203.0" width="792.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.7" y="1214.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.19%)</title><rect x="40.1" y="1187.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.19%)</title><rect x="42.3" y="1187.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.12%)</title><rect x="43.0" y="1171.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.06%)</title><rect x="43.8" y="1155.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.06%)</title><rect x="43.8" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.06%)</title><rect x="43.8" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="43.8" y="1107.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (59 samples, 3.67%)</title><rect x="44.5" y="1187.0" width="43.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.5" y="1198.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (58 samples, 3.61%)</title><rect x="44.5" y="1171.0" width="42.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.5" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 2.86%)</title><rect x="46.7" y="1155.0" width="33.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="1166.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 2.86%)</title><rect x="46.7" y="1139.0" width="33.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="1150.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 2.86%)</title><rect x="46.7" y="1123.0" width="33.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.7" y="1134.0">jd..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="46.7" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="49.7" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.75%)</title><rect x="47.4" y="1107.0" width="8.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="50.4" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.19%)</title><rect x="47.4" y="1091.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="50.4" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.25%)</title><rect x="49.6" y="1091.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.6" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.25%)</title><rect x="49.6" y="1075.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="49.6" y="1059.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="50.4" y="1059.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.4" y="1070.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.12%)</title><rect x="50.4" y="1043.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="53.4" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.06%)</title><rect x="51.1" y="1027.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.1" y="1038.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="51.8" y="1059.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.8" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="52.6" y="1091.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="55.6" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="53.3" y="1091.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="56.3" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.06%)</title><rect x="54.0" y="1091.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="57.0" y="1102.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="54.8" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="57.8" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.06%)</title><rect x="55.5" y="1091.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="58.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.93%)</title><rect x="56.2" y="1107.0" width="22.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="59.2" y="1118.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.06%)</title><rect x="56.2" y="1091.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="59.2" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (30 samples, 1.87%)</title><rect x="57.0" y="1091.0" width="22.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="60.0" y="1102.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 1.49%)</title><rect x="61.4" y="1075.0" width="17.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.4" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 1.49%)</title><rect x="61.4" y="1059.0" width="17.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.4" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 1.31%)</title><rect x="62.1" y="1043.0" width="15.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="65.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (20 samples, 1.24%)</title><rect x="62.8" y="1027.0" width="14.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="65.8" y="1038.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.06%)</title><rect x="64.3" y="1011.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="67.3" y="1022.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 1.06%)</title><rect x="65.0" y="1011.0" width="12.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="68.0" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.68%)</title><rect x="65.8" y="995.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="68.8" y="1006.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="66.5" y="979.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="69.5" y="990.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="66.5" y="963.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="69.5" y="974.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.56%)</title><rect x="67.2" y="979.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.2" y="990.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.56%)</title><rect x="67.2" y="963.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="70.2" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.44%)</title><rect x="68.7" y="947.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="71.7" y="958.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.25%)</title><rect x="73.8" y="995.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.8" y="1006.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="75.3" y="979.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="78.3" y="990.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.06%)</title><rect x="76.0" y="979.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="79.0" y="990.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="76.8" y="995.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="79.8" y="1006.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.12%)</title><rect x="77.5" y="1043.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.5" y="1054.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.06%)</title><rect x="78.2" y="1027.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.2" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.12%)</title><rect x="79.0" y="1107.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="82.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.12%)</title><rect x="80.4" y="1155.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.12%)</title><rect x="80.4" y="1139.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.06%)</title><rect x="81.2" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.06%)</title><rect x="81.2" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.44%)</title><rect x="81.9" y="1155.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.44%)</title><rect x="81.9" y="1139.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.44%)</title><rect x="81.9" y="1123.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.44%)</title><rect x="81.9" y="1107.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.44%)</title><rect x="81.9" y="1091.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.9" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="81.9" y="1075.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="84.9" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="81.9" y="1059.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="84.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.37%)</title><rect x="82.6" y="1075.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="85.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.37%)</title><rect x="82.6" y="1059.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="85.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.37%)</title><rect x="82.6" y="1043.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="85.6" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.37%)</title><rect x="82.6" y="1027.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.37%)</title><rect x="82.6" y="1011.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="85.6" y="1022.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.37%)</title><rect x="82.6" y="995.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.6" y="1006.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.12%)</title><rect x="82.6" y="979.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="85.6" y="990.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.25%)</title><rect x="84.1" y="979.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="87.1" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.25%)</title><rect x="84.1" y="963.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.1" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.25%)</title><rect x="84.1" y="947.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.06%)</title><rect x="87.1" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.12%)</title><rect x="87.8" y="1187.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.8" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$119/1785725247.run (338 samples, 21.02%)</title><rect x="89.3" y="1187.0" width="248.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.3" y="1198.0">ru/mail/polis/service/stasyanoi/C..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$putRep$3 (338 samples, 21.02%)</title><rect x="89.3" y="1171.0" width="248.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.3" y="1182.0">ru/mail/polis/service/stasyanoi/C..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putRepInternal (338 samples, 21.02%)</title><rect x="89.3" y="1155.0" width="248.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.3" y="1166.0">ru/mail/polis/service/stasyanoi/C..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (90 samples, 5.60%)</title><rect x="89.3" y="1139.0" width="66.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.3" y="1150.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.19%)</title><rect x="89.3" y="1123.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.19%)</title><rect x="89.3" y="1107.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.3" y="1118.0"></text>
</g>
<g>
<title>gettimeofday@plt (2 samples, 0.12%)</title><rect x="89.3" y="1091.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="92.3" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="90.7" y="1091.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="93.7" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="90.7" y="1075.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="93.7" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="90.7" y="1059.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="93.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (86 samples, 5.35%)</title><rect x="91.5" y="1123.0" width="63.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.5" y="1134.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.31%)</title><rect x="91.5" y="1107.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.5" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="91.5" y="1091.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="94.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.25%)</title><rect x="92.2" y="1091.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.06%)</title><rect x="92.2" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.19%)</title><rect x="92.9" y="1075.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.19%)</title><rect x="92.9" y="1059.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="92.9" y="1043.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="93.7" y="1043.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (81 samples, 5.04%)</title><rect x="95.1" y="1107.0" width="59.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.1" y="1118.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (81 samples, 5.04%)</title><rect x="95.1" y="1091.0" width="59.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.1" y="1102.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (81 samples, 5.04%)</title><rect x="95.1" y="1075.0" width="59.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.1" y="1086.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (81 samples, 5.04%)</title><rect x="95.1" y="1059.0" width="59.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.1" y="1070.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.06%)</title><rect x="95.9" y="1043.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="98.9" y="1054.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="95.9" y="1027.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.9" y="1038.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.06%)</title><rect x="96.6" y="1043.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="99.6" y="1054.0"></text>
</g>
<g>
<title>__libc_send (78 samples, 4.85%)</title><rect x="97.3" y="1043.0" width="57.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="100.3" y="1054.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (77 samples, 4.79%)</title><rect x="98.1" y="1027.0" width="56.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.1" y="1038.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (77 samples, 4.79%)</title><rect x="98.1" y="1011.0" width="56.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.1" y="1022.0">do_sys..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.06%)</title><rect x="98.1" y="995.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_sendto (74 samples, 4.60%)</title><rect x="98.8" y="995.0" width="54.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.8" y="1006.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (74 samples, 4.60%)</title><rect x="98.8" y="979.0" width="54.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.8" y="990.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (71 samples, 4.42%)</title><rect x="100.3" y="963.0" width="52.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.3" y="974.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="100.3" y="947.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="103.3" y="958.0"></text>
</g>
<g>
<title>inet6_sendmsg (69 samples, 4.29%)</title><rect x="101.0" y="947.0" width="50.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="104.0" y="958.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (69 samples, 4.29%)</title><rect x="101.0" y="931.0" width="50.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="104.0" y="942.0">tcp_s..</text>
</g>
<g>
<title>release_sock (10 samples, 0.62%)</title><rect x="101.0" y="915.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="104.0" y="926.0"></text>
</g>
<g>
<title>__release_sock (9 samples, 0.56%)</title><rect x="101.0" y="899.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="104.0" y="910.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="101.0" y="883.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="104.0" y="894.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 0.50%)</title><rect x="101.7" y="883.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="104.7" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.50%)</title><rect x="101.7" y="867.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.7" y="878.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.31%)</title><rect x="102.5" y="851.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.5" y="862.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.19%)</title><rect x="103.2" y="835.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.2" y="846.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="103.2" y="819.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="106.2" y="830.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="103.2" y="803.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.2" y="814.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="103.2" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.2" y="798.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.06%)</title><rect x="103.9" y="819.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.9" y="830.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.06%)</title><rect x="104.7" y="819.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="107.7" y="830.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.06%)</title><rect x="105.4" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="108.4" y="846.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="106.1" y="851.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.1" y="862.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="106.1" y="835.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="109.1" y="846.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="106.1" y="819.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="109.1" y="830.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.06%)</title><rect x="106.9" y="851.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="107.6" y="899.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="110.6" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (59 samples, 3.67%)</title><rect x="108.3" y="915.0" width="43.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="111.3" y="926.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.12%)</title><rect x="108.3" y="899.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="111.3" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="108.3" y="883.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="111.3" y="894.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (2 samples, 0.12%)</title><rect x="108.3" y="867.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.3" y="878.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="108.3" y="851.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="111.3" y="862.0"></text>
</g>
<g>
<title>tcp_push (56 samples, 3.48%)</title><rect x="109.8" y="899.0" width="41.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.8" y="910.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (56 samples, 3.48%)</title><rect x="109.8" y="883.0" width="41.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.8" y="894.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (56 samples, 3.48%)</title><rect x="109.8" y="867.0" width="41.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="112.8" y="878.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (52 samples, 3.23%)</title><rect x="110.5" y="851.0" width="38.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.5" y="862.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (51 samples, 3.17%)</title><rect x="111.3" y="835.0" width="37.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.3" y="846.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (51 samples, 3.17%)</title><rect x="111.3" y="819.0" width="37.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.3" y="830.0">__i..</text>
</g>
<g>
<title>ip_local_out (50 samples, 3.11%)</title><rect x="112.0" y="803.0" width="36.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.0" y="814.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.31%)</title><rect x="112.0" y="787.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="115.0" y="798.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.31%)</title><rect x="112.0" y="771.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="115.0" y="782.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="112.0" y="755.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.0" y="766.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="112.0" y="739.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.0" y="750.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.25%)</title><rect x="112.7" y="755.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.7" y="766.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.25%)</title><rect x="112.7" y="739.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="115.7" y="750.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.06%)</title><rect x="112.7" y="723.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="115.7" y="734.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (2 samples, 0.12%)</title><rect x="113.5" y="723.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.5" y="734.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="114.9" y="723.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="117.9" y="734.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="114.9" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.9" y="718.0"></text>
</g>
<g>
<title>ip_output (44 samples, 2.74%)</title><rect x="115.7" y="787.0" width="32.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="118.7" y="798.0">ip..</text>
</g>
<g>
<title>ip_finish_output (43 samples, 2.67%)</title><rect x="116.4" y="771.0" width="31.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.4" y="782.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="116.4" y="755.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="119.4" y="766.0"></text>
</g>
<g>
<title>__ip_finish_output (42 samples, 2.61%)</title><rect x="117.1" y="755.0" width="30.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.1" y="766.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (42 samples, 2.61%)</title><rect x="117.1" y="739.0" width="30.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="120.1" y="750.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="117.1" y="723.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="120.1" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (37 samples, 2.30%)</title><rect x="117.9" y="723.0" width="27.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.9" y="734.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (37 samples, 2.30%)</title><rect x="117.9" y="707.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.9" y="718.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (37 samples, 2.30%)</title><rect x="117.9" y="691.0" width="27.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.9" y="702.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (37 samples, 2.30%)</title><rect x="117.9" y="675.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.9" y="686.0">_..</text>
</g>
<g>
<title>net_rx_action (37 samples, 2.30%)</title><rect x="117.9" y="659.0" width="27.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.9" y="670.0">n..</text>
</g>
<g>
<title>process_backlog (37 samples, 2.30%)</title><rect x="117.9" y="643.0" width="27.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.9" y="654.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (37 samples, 2.30%)</title><rect x="117.9" y="627.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.9" y="638.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (37 samples, 2.30%)</title><rect x="117.9" y="611.0" width="27.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="120.9" y="622.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="118.6" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="121.6" y="606.0"></text>
</g>
<g>
<title>ip_rcv (35 samples, 2.18%)</title><rect x="119.3" y="595.0" width="25.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.3" y="606.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (35 samples, 2.18%)</title><rect x="119.3" y="579.0" width="25.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.3" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver (34 samples, 2.11%)</title><rect x="119.3" y="563.0" width="25.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.3" y="574.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 2.11%)</title><rect x="119.3" y="547.0" width="25.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.3" y="558.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (34 samples, 2.11%)</title><rect x="119.3" y="531.0" width="25.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.3" y="542.0">i..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="119.3" y="515.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (33 samples, 2.05%)</title><rect x="120.1" y="515.0" width="24.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.1" y="526.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="120.1" y="499.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.1" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (32 samples, 1.99%)</title><rect x="120.8" y="499.0" width="23.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="123.8" y="510.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 1.93%)</title><rect x="120.8" y="483.0" width="22.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.8" y="494.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (9 samples, 0.56%)</title><rect x="120.8" y="467.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="123.8" y="478.0"></text>
</g>
<g>
<title>tcp_send_ack (9 samples, 0.56%)</title><rect x="120.8" y="451.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="123.8" y="462.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (9 samples, 0.56%)</title><rect x="120.8" y="435.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.8" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="120.8" y="419.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.8" y="430.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="120.8" y="403.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.8" y="414.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="120.8" y="387.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="123.8" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="121.5" y="403.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="124.5" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.44%)</title><rect x="122.3" y="419.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.3" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 0.37%)</title><rect x="122.3" y="403.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="125.3" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 0.37%)</title><rect x="122.3" y="387.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.3" y="398.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.31%)</title><rect x="123.0" y="371.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.0" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.25%)</title><rect x="123.0" y="355.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.0" y="366.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.06%)</title><rect x="123.7" y="339.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="124.5" y="339.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.5" y="350.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.12%)</title><rect x="124.5" y="323.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="124.5" y="307.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.5" y="318.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="125.9" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="128.9" y="366.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="125.9" y="339.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.9" y="350.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="125.9" y="323.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.9" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="125.9" y="307.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="128.9" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="125.9" y="291.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="128.9" y="302.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="125.9" y="275.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="128.9" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="125.9" y="259.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.9" y="270.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="126.7" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="129.7" y="414.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.06%)</title><rect x="127.4" y="467.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.4" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (20 samples, 1.24%)</title><rect x="128.1" y="467.0" width="14.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="131.1" y="478.0"></text>
</g>
<g>
<title>tcp_data_ready (18 samples, 1.12%)</title><rect x="128.9" y="451.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="131.9" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (18 samples, 1.12%)</title><rect x="128.9" y="435.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>__wake_up_sync_key (18 samples, 1.12%)</title><rect x="128.9" y="419.0" width="13.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 1.12%)</title><rect x="128.9" y="403.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="131.9" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 1.12%)</title><rect x="128.9" y="387.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="131.9" y="398.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.06%)</title><rect x="142.1" y="451.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.1" y="462.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="142.8" y="467.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="145.8" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="142.8" y="451.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="145.8" y="462.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="142.8" y="435.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.8" y="446.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.06%)</title><rect x="143.6" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.6" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="144.3" y="563.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.3" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.25%)</title><rect x="145.0" y="723.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="148.0" y="734.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.25%)</title><rect x="145.0" y="707.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="148.0" y="718.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.12%)</title><rect x="145.8" y="691.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.8" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.12%)</title><rect x="145.8" y="675.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.8" y="686.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.12%)</title><rect x="145.8" y="659.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="148.8" y="670.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="145.8" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="148.8" y="654.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="146.5" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="149.5" y="654.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="146.5" y="627.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="149.5" y="638.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="147.2" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="150.2" y="702.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.06%)</title><rect x="148.0" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="151.0" y="798.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="148.7" y="851.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.7" y="862.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.06%)</title><rect x="148.7" y="835.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="151.7" y="846.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.06%)</title><rect x="149.4" y="851.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="152.4" y="862.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.06%)</title><rect x="150.2" y="851.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="153.2" y="862.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="150.9" y="899.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="153.9" y="910.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="150.9" y="883.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="153.9" y="894.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="151.6" y="947.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="154.6" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="151.6" y="931.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.6" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="151.6" y="915.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.6" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="151.6" y="899.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.6" y="910.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.06%)</title><rect x="151.6" y="883.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="154.6" y="894.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.06%)</title><rect x="151.6" y="867.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.6" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="152.4" y="963.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="155.4" y="974.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="152.4" y="947.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="155.4" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="152.4" y="931.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="155.4" y="942.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="152.4" y="915.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="155.4" y="926.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="153.1" y="995.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="156.1" y="1006.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.06%)</title><rect x="153.1" y="979.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="156.1" y="990.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.06%)</title><rect x="153.1" y="963.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="156.1" y="974.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="153.8" y="995.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="156.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="154.6" y="1123.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="154.6" y="1107.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="154.6" y="1091.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (239 samples, 14.86%)</title><rect x="155.3" y="1139.0" width="175.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="158.3" y="1150.0">ru/mail/polis/dao/stasy..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (238 samples, 14.80%)</title><rect x="155.3" y="1123.0" width="174.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.3" y="1134.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (238 samples, 14.80%)</title><rect x="155.3" y="1107.0" width="174.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.3" y="1118.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="155.3" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.3" y="1102.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (167 samples, 10.39%)</title><rect x="156.0" y="1091.0" width="122.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="159.0" y="1102.0">Java_org_rocksd..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.06%)</title><rect x="157.5" y="1075.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="160.5" y="1086.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.06%)</title><rect x="158.2" y="1075.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="161.2" y="1086.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="159.0" y="1075.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="162.0" y="1086.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (162 samples, 10.07%)</title><rect x="159.7" y="1075.0" width="118.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="162.7" y="1086.0">rocksdb_put_he..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="159.7" y="1059.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="162.7" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.12%)</title><rect x="160.4" y="1059.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="163.4" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="160.4" y="1043.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="163.4" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="161.2" y="1043.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="164.2" y="1054.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="161.2" y="1027.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="164.2" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (159 samples, 9.89%)</title><rect x="161.9" y="1059.0" width="116.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="164.9" y="1070.0">rocksdb::DB::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="161.9" y="1043.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="164.9" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (158 samples, 9.83%)</title><rect x="162.6" y="1043.0" width="116.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="165.6" y="1054.0">rocksdb::DBImp..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (158 samples, 9.83%)</title><rect x="162.6" y="1027.0" width="116.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="165.6" y="1038.0">rocksdb::DB::P..</text>
</g>
<g>
<title>free@plt (1 samples, 0.06%)</title><rect x="163.4" y="1011.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="166.4" y="1022.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.06%)</title><rect x="164.1" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="167.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.06%)</title><rect x="164.8" y="1011.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.8" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (144 samples, 8.96%)</title><rect x="165.6" y="1011.0" width="105.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="168.6" y="1022.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.06%)</title><rect x="165.6" y="995.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="168.6" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (140 samples, 8.71%)</title><rect x="166.3" y="995.0" width="102.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="169.3" y="1006.0">rocksdb::DBI..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="170.0" y="979.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="173.0" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="170.7" y="979.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="173.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.06%)</title><rect x="171.4" y="979.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="174.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (17 samples, 1.06%)</title><rect x="172.2" y="979.0" width="12.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="175.2" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (17 samples, 1.06%)</title><rect x="172.2" y="963.0" width="12.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="175.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (16 samples, 1.00%)</title><rect x="172.9" y="947.0" width="11.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="175.9" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (4 samples, 0.25%)</title><rect x="174.4" y="931.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="177.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (8 samples, 0.50%)</title><rect x="177.3" y="931.0" width="5.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="180.3" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="178.0" y="915.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="181.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="178.8" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="181.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.06%)</title><rect x="179.5" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="182.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.25%)</title><rect x="180.2" y="915.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="183.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.12%)</title><rect x="183.2" y="931.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="186.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.12%)</title><rect x="183.2" y="915.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="186.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.06%)</title><rect x="184.7" y="979.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="187.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (86 samples, 5.35%)</title><rect x="185.4" y="979.0" width="63.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="188.4" y="990.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (84 samples, 5.22%)</title><rect x="186.9" y="963.0" width="61.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="189.9" y="974.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (84 samples, 5.22%)</title><rect x="186.9" y="947.0" width="61.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="189.9" y="958.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (83 samples, 5.16%)</title><rect x="187.6" y="931.0" width="60.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="190.6" y="942.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (83 samples, 5.16%)</title><rect x="187.6" y="915.0" width="60.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="190.6" y="926.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (1 samples, 0.06%)</title><rect x="187.6" y="899.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="190.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.06%)</title><rect x="188.3" y="899.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="191.3" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (81 samples, 5.04%)</title><rect x="189.1" y="899.0" width="59.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="192.1" y="910.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (3 samples, 0.19%)</title><rect x="190.5" y="883.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="193.5" y="894.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.06%)</title><rect x="192.0" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="195.0" y="878.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (76 samples, 4.73%)</title><rect x="192.7" y="883.0" width="55.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="195.7" y="894.0">bool ..</text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (69 samples, 4.29%)</title><rect x="192.7" y="867.0" width="50.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="195.7" y="878.0">/tmp/..</text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (53 samples, 3.30%)</title><rect x="194.9" y="851.0" width="38.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="197.9" y="862.0">/tm..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (53 samples, 3.30%)</title><rect x="194.9" y="835.0" width="38.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="197.9" y="846.0">roc..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (51 samples, 3.17%)</title><rect x="194.9" y="819.0" width="37.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="197.9" y="830.0">roc..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (12 samples, 0.75%)</title><rect x="194.9" y="803.0" width="8.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.9" y="814.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (11 samples, 0.68%)</title><rect x="195.7" y="787.0" width="8.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="198.7" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="196.4" y="771.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="199.4" y="782.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.06%)</title><rect x="197.1" y="771.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="200.1" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="197.9" y="771.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="200.9" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="198.6" y="771.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="201.6" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.25%)</title><rect x="200.1" y="771.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="203.1" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="200.8" y="755.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="203.8" y="766.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="201.5" y="755.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="204.5" y="766.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="202.3" y="755.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="205.3" y="766.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="203.0" y="771.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="206.0" y="782.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (27 samples, 1.68%)</title><rect x="203.7" y="803.0" width="19.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="206.7" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="203.7" y="787.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="206.7" y="798.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (26 samples, 1.62%)</title><rect x="204.5" y="787.0" width="19.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="207.5" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="204.5" y="771.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="207.5" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="205.2" y="771.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="208.2" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="205.9" y="771.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="208.9" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.25%)</title><rect x="206.7" y="771.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="209.7" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="209.6" y="771.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="212.6" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (17 samples, 1.06%)</title><rect x="211.1" y="771.0" width="12.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="214.1" y="782.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.12%)</title><rect x="215.5" y="755.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="218.5" y="766.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.06%)</title><rect x="216.9" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="219.9" y="766.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.37%)</title><rect x="217.7" y="755.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="220.7" y="766.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.19%)</title><rect x="219.9" y="739.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="222.9" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="222.1" y="755.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="225.1" y="766.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="222.8" y="755.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="225.8" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.31%)</title><rect x="223.5" y="803.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="226.5" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.12%)</title><rect x="224.3" y="787.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="227.3" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="225.7" y="787.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="228.7" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.25%)</title><rect x="227.2" y="803.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="230.2" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="230.1" y="803.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="233.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.12%)</title><rect x="230.9" y="803.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="233.9" y="814.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.06%)</title><rect x="230.9" y="787.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="233.9" y="798.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.06%)</title><rect x="231.6" y="787.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="234.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.12%)</title><rect x="232.4" y="819.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="235.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.81%)</title><rect x="233.8" y="851.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="236.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (13 samples, 0.81%)</title><rect x="233.8" y="835.0" width="9.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="236.8" y="846.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (6 samples, 0.37%)</title><rect x="233.8" y="819.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="236.8" y="830.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (6 samples, 0.37%)</title><rect x="233.8" y="803.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="236.8" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="234.6" y="787.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="237.6" y="798.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.19%)</title><rect x="235.3" y="787.0" width="2.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="238.3" y="798.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.06%)</title><rect x="236.8" y="771.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="239.8" y="782.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="237.5" y="787.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="240.5" y="798.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 0.37%)</title><rect x="238.2" y="819.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="241.2" y="830.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 0.37%)</title><rect x="238.2" y="803.0" width="4.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="241.2" y="814.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.06%)</title><rect x="238.2" y="787.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="241.2" y="798.0"></text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.06%)</title><rect x="239.0" y="787.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="242.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="239.7" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="242.7" y="798.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.19%)</title><rect x="240.4" y="787.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="243.4" y="798.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.06%)</title><rect x="240.4" y="771.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="243.4" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.12%)</title><rect x="241.2" y="771.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="244.2" y="782.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.12%)</title><rect x="241.2" y="755.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="244.2" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.06%)</title><rect x="242.6" y="819.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="245.6" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="242.6" y="803.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="245.6" y="814.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="243.4" y="867.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="246.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (6 samples, 0.37%)</title><rect x="244.1" y="867.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="247.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.37%)</title><rect x="244.1" y="851.0" width="4.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="247.1" y="862.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.06%)</title><rect x="244.1" y="835.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="247.1" y="846.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.06%)</title><rect x="244.1" y="819.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="247.1" y="830.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.06%)</title><rect x="244.1" y="803.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="247.1" y="814.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="244.1" y="787.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="247.1" y="798.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="244.1" y="771.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="247.1" y="782.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.12%)</title><rect x="244.8" y="835.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="247.8" y="846.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.12%)</title><rect x="244.8" y="819.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="247.8" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="244.8" y="803.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="247.8" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="245.6" y="803.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="248.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="246.3" y="835.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="249.3" y="846.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.12%)</title><rect x="247.0" y="835.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="250.0" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="247.0" y="819.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="250.0" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="247.8" y="819.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="250.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (6 samples, 0.37%)</title><rect x="248.5" y="979.0" width="4.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="251.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.37%)</title><rect x="248.5" y="963.0" width="4.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="251.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 0.37%)</title><rect x="248.5" y="947.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="251.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.37%)</title><rect x="248.5" y="931.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="251.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.37%)</title><rect x="248.5" y="915.0" width="4.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="251.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 0.37%)</title><rect x="248.5" y="899.0" width="4.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="251.5" y="910.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (1 samples, 0.06%)</title><rect x="248.5" y="883.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="251.5" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="248.5" y="867.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="251.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (5 samples, 0.31%)</title><rect x="249.2" y="883.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="252.2" y="894.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.31%)</title><rect x="249.2" y="867.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="252.2" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (5 samples, 0.31%)</title><rect x="249.2" y="851.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="252.2" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (4 samples, 0.25%)</title><rect x="250.0" y="835.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="253.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.25%)</title><rect x="250.0" y="819.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="253.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.25%)</title><rect x="250.0" y="803.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="253.0" y="814.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.06%)</title><rect x="250.0" y="787.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="253.0" y="798.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.19%)</title><rect x="250.7" y="787.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="253.7" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.19%)</title><rect x="250.7" y="771.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="253.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.19%)</title><rect x="250.7" y="755.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="253.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.19%)</title><rect x="250.7" y="739.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.7" y="750.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.19%)</title><rect x="250.7" y="723.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.19%)</title><rect x="250.7" y="707.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="253.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.19%)</title><rect x="250.7" y="691.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.7" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.19%)</title><rect x="250.7" y="675.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.7" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.19%)</title><rect x="250.7" y="659.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="253.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (7 samples, 0.44%)</title><rect x="252.9" y="979.0" width="5.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="255.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="258.0" y="979.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="261.0" y="990.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.06%)</title><rect x="258.0" y="963.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="261.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.06%)</title><rect x="258.8" y="979.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="261.8" y="990.0"></text>
</g>
<g>
<title>sched_yield (13 samples, 0.81%)</title><rect x="259.5" y="979.0" width="9.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="262.5" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.68%)</title><rect x="261.0" y="963.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.0" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.68%)</title><rect x="261.0" y="947.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="264.0" y="958.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (8 samples, 0.50%)</title><rect x="261.7" y="931.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="264.7" y="942.0"></text>
</g>
<g>
<title>do_sched_yield (8 samples, 0.50%)</title><rect x="261.7" y="915.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="264.7" y="926.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.44%)</title><rect x="262.4" y="899.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="265.4" y="910.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.44%)</title><rect x="262.4" y="883.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.4" y="894.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.12%)</title><rect x="267.6" y="931.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.6" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.06%)</title><rect x="268.3" y="915.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="271.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="269.0" y="995.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="272.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="269.8" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="272.8" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="270.5" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="273.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.37%)</title><rect x="271.2" y="1011.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="274.2" y="1022.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.06%)</title><rect x="271.2" y="995.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="274.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.06%)</title><rect x="272.0" y="995.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="275.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.06%)</title><rect x="272.7" y="995.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="275.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="273.4" y="995.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="276.4" y="1006.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.06%)</title><rect x="273.4" y="979.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="276.4" y="990.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="274.2" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="277.2" y="1006.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="274.9" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="277.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.25%)</title><rect x="275.6" y="1011.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="278.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.12%)</title><rect x="278.6" y="1091.0" width="13.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="281.6" y="1102.0"></text>
</g>
<g>
<title>__GI_write (15 samples, 0.93%)</title><rect x="278.6" y="1075.0" width="11.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="281.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.87%)</title><rect x="279.3" y="1059.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="282.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.87%)</title><rect x="279.3" y="1043.0" width="10.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="282.3" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_write (13 samples, 0.81%)</title><rect x="280.0" y="1027.0" width="9.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.0" y="1038.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.75%)</title><rect x="280.8" y="1011.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="283.8" y="1022.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="280.8" y="995.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="283.8" y="1006.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.68%)</title><rect x="281.5" y="995.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="284.5" y="1006.0"></text>
</g>
<g>
<title>__vfs_write (10 samples, 0.62%)</title><rect x="282.3" y="979.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="285.3" y="990.0"></text>
</g>
<g>
<title>new_sync_write (10 samples, 0.62%)</title><rect x="282.3" y="963.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.3" y="974.0"></text>
</g>
<g>
<title>ext4_file_write_iter (10 samples, 0.62%)</title><rect x="282.3" y="947.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="285.3" y="958.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.62%)</title><rect x="282.3" y="931.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="285.3" y="942.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.12%)</title><rect x="282.3" y="915.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.3" y="926.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.12%)</title><rect x="282.3" y="899.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="285.3" y="910.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="282.3" y="883.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.3" y="894.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="282.3" y="867.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.3" y="878.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.06%)</title><rect x="282.3" y="851.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="285.3" y="862.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.06%)</title><rect x="282.3" y="835.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="285.3" y="846.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.06%)</title><rect x="282.3" y="819.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.3" y="830.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.06%)</title><rect x="282.3" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.3" y="814.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="283.0" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.0" y="894.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 0.50%)</title><rect x="283.7" y="915.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.7" y="926.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.06%)</title><rect x="283.7" y="899.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="286.7" y="910.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.06%)</title><rect x="283.7" y="883.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="286.7" y="894.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.06%)</title><rect x="283.7" y="867.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="286.7" y="878.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 0.31%)</title><rect x="284.5" y="899.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="287.5" y="910.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.06%)</title><rect x="284.5" y="883.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.5" y="894.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.06%)</title><rect x="284.5" y="867.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="287.5" y="878.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="284.5" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.5" y="862.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 0.25%)</title><rect x="285.2" y="883.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="288.2" y="894.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.19%)</title><rect x="285.2" y="867.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.2" y="878.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.19%)</title><rect x="285.2" y="851.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.2" y="862.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.19%)</title><rect x="285.2" y="835.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="288.2" y="846.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.19%)</title><rect x="285.2" y="819.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="288.2" y="830.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.12%)</title><rect x="285.2" y="803.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.2" y="814.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.06%)</title><rect x="285.9" y="787.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.9" y="798.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.06%)</title><rect x="285.9" y="771.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="288.9" y="782.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.06%)</title><rect x="286.7" y="803.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="289.7" y="814.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.06%)</title><rect x="287.4" y="867.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="290.4" y="878.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.06%)</title><rect x="287.4" y="851.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="290.4" y="862.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.06%)</title><rect x="288.1" y="899.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="291.1" y="910.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.06%)</title><rect x="288.9" y="899.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.9" y="910.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="289.6" y="1075.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="292.6" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="290.3" y="1075.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="293.3" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="290.3" y="1059.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="290.3" y="1043.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="293.3" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="290.3" y="1027.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.3" y="1038.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="290.3" y="1011.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.3" y="1022.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="290.3" y="995.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="293.3" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="290.3" y="979.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="293.3" y="990.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="290.3" y="963.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.3" y="974.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="290.3" y="947.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="293.3" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="290.3" y="931.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.3" y="942.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.06%)</title><rect x="291.1" y="1075.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="294.1" y="1086.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.12%)</title><rect x="291.8" y="1091.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="294.8" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="293.3" y="1091.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="296.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="293.3" y="1075.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="293.3" y="1059.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="296.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="293.3" y="1043.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="296.3" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="293.3" y="1027.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="296.3" y="1038.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="293.3" y="1011.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="296.3" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="293.3" y="995.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.3" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="293.3" y="979.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.3" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="293.3" y="963.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="296.3" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (8 samples, 0.50%)</title><rect x="294.0" y="1091.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (41 samples, 2.55%)</title><rect x="299.9" y="1091.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="302.9" y="1102.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (39 samples, 2.43%)</title><rect x="301.3" y="1075.0" width="28.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.3" y="1086.0">ru..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (2 samples, 0.12%)</title><rect x="302.1" y="1059.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (2 samples, 0.12%)</title><rect x="302.1" y="1043.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.1" y="1054.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.06%)</title><rect x="302.8" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.8" y="1038.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (36 samples, 2.24%)</title><rect x="303.5" y="1059.0" width="26.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.5" y="1070.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (2 samples, 0.12%)</title><rect x="303.5" y="1043.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.5" y="1054.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (34 samples, 2.11%)</title><rect x="305.0" y="1043.0" width="25.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.0" y="1054.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (34 samples, 2.11%)</title><rect x="305.0" y="1027.0" width="25.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.0" y="1038.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (31 samples, 1.93%)</title><rect x="306.5" y="1011.0" width="22.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="309.5" y="1022.0">J..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="307.2" y="995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="310.2" y="1006.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="307.9" y="995.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="310.9" y="1006.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.12%)</title><rect x="308.7" y="995.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="311.7" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="310.1" y="995.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="313.1" y="1006.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.37%)</title><rect x="310.9" y="995.0" width="4.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="313.9" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.12%)</title><rect x="311.6" y="979.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="314.6" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.19%)</title><rect x="313.1" y="979.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="316.1" y="990.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 0.62%)</title><rect x="315.3" y="995.0" width="7.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="318.3" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="315.3" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="318.3" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="316.0" y="979.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="319.0" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="316.7" y="979.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="319.7" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.44%)</title><rect x="317.5" y="979.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="320.5" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.37%)</title><rect x="318.2" y="963.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="321.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.31%)</title><rect x="318.2" y="947.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="321.2" y="958.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.06%)</title><rect x="319.7" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="322.7" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.12%)</title><rect x="320.4" y="931.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="323.4" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="321.9" y="947.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="324.9" y="958.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.56%)</title><rect x="322.6" y="995.0" width="6.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="325.6" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.19%)</title><rect x="324.1" y="979.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="327.1" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="326.3" y="979.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="329.3" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.12%)</title><rect x="327.7" y="979.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="330.7" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="329.2" y="1011.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="332.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (1 samples, 0.06%)</title><rect x="330.0" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (8 samples, 0.50%)</title><rect x="330.7" y="1139.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.06%)</title><rect x="330.7" y="1123.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (7 samples, 0.44%)</title><rect x="331.4" y="1123.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="334.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (7 samples, 0.44%)</title><rect x="331.4" y="1107.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.12%)</title><rect x="332.2" y="1091.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.12%)</title><rect x="332.2" y="1075.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.06%)</title><rect x="332.2" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.06%)</title><rect x="332.9" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.9" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (3 samples, 0.19%)</title><rect x="333.6" y="1091.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.6" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (3 samples, 0.19%)</title><rect x="333.6" y="1075.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.6" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.19%)</title><rect x="333.6" y="1059.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.6" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.19%)</title><rect x="333.6" y="1043.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.6" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.19%)</title><rect x="333.6" y="1027.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.6" y="1038.0"></text>
</g>
<g>
<title>java/util/Spliterator$OfInt.forEachRemaining (1 samples, 0.06%)</title><rect x="333.6" y="1011.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="333.6" y="995.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.6" y="1006.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.06%)</title><rect x="334.4" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="337.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.06%)</title><rect x="335.1" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.1" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.end (1 samples, 0.06%)</title><rect x="335.1" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="338.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNanosSync (1 samples, 0.06%)</title><rect x="335.8" y="1091.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.8" y="1102.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="335.8" y="1075.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="338.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (1 samples, 0.06%)</title><rect x="336.6" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.06%)</title><rect x="336.6" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="339.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="336.6" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="336.6" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="336.6" y="1075.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="336.6" y="1059.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$68/1163379456.run (654 samples, 40.67%)</title><rect x="337.3" y="1187.0" width="479.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.3" y="1198.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$68/1163379456..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$put$2 (654 samples, 40.67%)</title><rect x="337.3" y="1171.0" width="479.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.3" y="1182.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$put$2</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putInternal (654 samples, 40.67%)</title><rect x="337.3" y="1155.0" width="479.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.3" y="1166.0">ru/mail/polis/service/stasyanoi/CustomServer.putInternal</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.12%)</title><rect x="337.3" y="1139.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.3" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (2 samples, 0.12%)</title><rect x="337.3" y="1123.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.3" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.06%)</title><rect x="337.3" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.3" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="337.3" y="1091.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.3" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="337.3" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.3" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.06%)</title><rect x="338.0" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.0" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.06%)</title><rect x="338.0" y="1091.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.0" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.06%)</title><rect x="338.0" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="341.0" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.06%)</title><rect x="338.0" y="1059.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.0" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.06%)</title><rect x="338.0" y="1043.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.0" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.06%)</title><rect x="338.0" y="1027.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (57 samples, 3.54%)</title><rect x="338.8" y="1139.0" width="41.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.8" y="1150.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.12%)</title><rect x="339.5" y="1123.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="339.5" y="1107.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="339.5" y="1091.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="342.5" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="339.5" y="1075.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="342.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="340.2" y="1091.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="343.2" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="340.2" y="1075.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="343.2" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="340.2" y="1059.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="343.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (49 samples, 3.05%)</title><rect x="341.0" y="1123.0" width="35.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.0" y="1134.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="341.0" y="1107.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.12%)</title><rect x="341.0" y="1091.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="341.0" y="1075.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="341.0" y="1059.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.12%)</title><rect x="341.0" y="1043.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.0" y="1054.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.06%)</title><rect x="341.7" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 2.92%)</title><rect x="342.4" y="1107.0" width="34.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.4" y="1118.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (47 samples, 2.92%)</title><rect x="342.4" y="1091.0" width="34.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.4" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (47 samples, 2.92%)</title><rect x="342.4" y="1075.0" width="34.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.4" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (47 samples, 2.92%)</title><rect x="342.4" y="1059.0" width="34.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="345.4" y="1070.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="343.2" y="1043.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="346.2" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="343.9" y="1027.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="346.9" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="343.9" y="1011.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="346.9" y="1022.0"></text>
</g>
<g>
<title>__libc_send (44 samples, 2.74%)</title><rect x="344.6" y="1043.0" width="32.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="347.6" y="1054.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 2.74%)</title><rect x="344.6" y="1027.0" width="32.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.6" y="1038.0">en..</text>
</g>
<g>
<title>do_syscall_64 (44 samples, 2.74%)</title><rect x="344.6" y="1011.0" width="32.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="347.6" y="1022.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (43 samples, 2.67%)</title><rect x="344.6" y="995.0" width="31.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.6" y="1006.0">__..</text>
</g>
<g>
<title>__sys_sendto (43 samples, 2.67%)</title><rect x="344.6" y="979.0" width="31.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="347.6" y="990.0">__..</text>
</g>
<g>
<title>sock_sendmsg (43 samples, 2.67%)</title><rect x="344.6" y="963.0" width="31.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="347.6" y="974.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (43 samples, 2.67%)</title><rect x="344.6" y="947.0" width="31.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="347.6" y="958.0">in..</text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="344.6" y="931.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.6" y="942.0"></text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 2.61%)</title><rect x="345.4" y="931.0" width="30.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.4" y="942.0">tc..</text>
</g>
<g>
<title>release_sock (2 samples, 0.12%)</title><rect x="345.4" y="915.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="348.4" y="926.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.12%)</title><rect x="345.4" y="899.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.4" y="910.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.12%)</title><rect x="345.4" y="883.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="348.4" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.12%)</title><rect x="345.4" y="867.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="348.4" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="345.4" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="348.4" y="862.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="345.4" y="835.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.4" y="846.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="346.1" y="851.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="349.1" y="862.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="346.1" y="835.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="349.1" y="846.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="346.8" y="915.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="349.8" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (39 samples, 2.43%)</title><rect x="347.6" y="915.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="350.6" y="926.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="348.3" y="899.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.3" y="910.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="349.0" y="899.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.0" y="910.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="349.0" y="883.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="352.0" y="894.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.12%)</title><rect x="349.8" y="899.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="352.8" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="349.8" y="883.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.8" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.12%)</title><rect x="349.8" y="867.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.8" y="878.0"></text>
</g>
<g>
<title>tcp_push (34 samples, 2.11%)</title><rect x="351.2" y="899.0" width="25.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="354.2" y="910.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (33 samples, 2.05%)</title><rect x="351.2" y="883.0" width="24.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.2" y="894.0">_..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="351.2" y="867.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.2" y="878.0"></text>
</g>
<g>
<title>tcp_write_xmit (32 samples, 1.99%)</title><rect x="352.0" y="867.0" width="23.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="355.0" y="878.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (30 samples, 1.87%)</title><rect x="352.0" y="851.0" width="22.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.0" y="862.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (29 samples, 1.80%)</title><rect x="352.0" y="835.0" width="21.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="355.0" y="846.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (29 samples, 1.80%)</title><rect x="352.0" y="819.0" width="21.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="355.0" y="830.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="352.0" y="803.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.0" y="814.0"></text>
</g>
<g>
<title>ip_local_out (28 samples, 1.74%)</title><rect x="352.7" y="803.0" width="20.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="355.7" y="814.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.37%)</title><rect x="352.7" y="787.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.7" y="798.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="352.7" y="771.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.7" y="782.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.31%)</title><rect x="353.4" y="771.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.4" y="782.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.25%)</title><rect x="353.4" y="755.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.4" y="766.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.25%)</title><rect x="353.4" y="739.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="356.4" y="750.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.12%)</title><rect x="353.4" y="723.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="356.4" y="734.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.06%)</title><rect x="354.9" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="357.9" y="734.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="355.6" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.6" y="734.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="355.6" y="707.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="358.6" y="718.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="356.4" y="755.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="359.4" y="766.0"></text>
</g>
<g>
<title>ip_output (21 samples, 1.31%)</title><rect x="357.1" y="787.0" width="15.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.1" y="798.0"></text>
</g>
<g>
<title>ip_finish_output (20 samples, 1.24%)</title><rect x="357.8" y="771.0" width="14.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.8" y="782.0"></text>
</g>
<g>
<title>__ip_finish_output (20 samples, 1.24%)</title><rect x="357.8" y="755.0" width="14.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="360.8" y="766.0"></text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 1.18%)</title><rect x="358.6" y="739.0" width="13.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="361.6" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 1.12%)</title><rect x="358.6" y="723.0" width="13.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="361.6" y="734.0"></text>
</g>
<g>
<title>do_softirq.part.20 (18 samples, 1.12%)</title><rect x="358.6" y="707.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="361.6" y="718.0"></text>
</g>
<g>
<title>do_softirq_own_stack (18 samples, 1.12%)</title><rect x="358.6" y="691.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.6" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 1.12%)</title><rect x="358.6" y="675.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="361.6" y="686.0"></text>
</g>
<g>
<title>net_rx_action (17 samples, 1.06%)</title><rect x="359.3" y="659.0" width="12.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="362.3" y="670.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="359.3" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="362.3" y="654.0"></text>
</g>
<g>
<title>process_backlog (16 samples, 1.00%)</title><rect x="360.0" y="643.0" width="11.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="363.0" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb (16 samples, 1.00%)</title><rect x="360.0" y="627.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.0" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 1.00%)</title><rect x="360.0" y="611.0" width="11.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.0" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="360.0" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="363.0" y="606.0"></text>
</g>
<g>
<title>ip_rcv (15 samples, 0.93%)</title><rect x="360.8" y="595.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="363.8" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (15 samples, 0.93%)</title><rect x="360.8" y="579.0" width="11.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="363.8" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver (15 samples, 0.93%)</title><rect x="360.8" y="563.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="363.8" y="574.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 0.87%)</title><rect x="360.8" y="547.0" width="10.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="363.8" y="558.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 0.87%)</title><rect x="360.8" y="531.0" width="10.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="363.8" y="542.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.06%)</title><rect x="360.8" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.8" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 0.81%)</title><rect x="361.5" y="515.0" width="9.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="364.5" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="361.5" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.5" y="510.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="361.5" y="483.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.5" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.75%)</title><rect x="362.2" y="499.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="365.2" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.75%)</title><rect x="362.2" y="483.0" width="8.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="365.2" y="494.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.19%)</title><rect x="362.2" y="467.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="365.2" y="478.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.19%)</title><rect x="362.2" y="451.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="365.2" y="462.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (3 samples, 0.19%)</title><rect x="362.2" y="435.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="365.2" y="446.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="362.2" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.2" y="430.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="362.2" y="403.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.2" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.12%)</title><rect x="363.0" y="419.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.0" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.12%)</title><rect x="363.0" y="403.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="366.0" y="414.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.12%)</title><rect x="363.0" y="387.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.0" y="398.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.12%)</title><rect x="363.0" y="371.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="366.0" y="382.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="363.0" y="355.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="366.0" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="363.0" y="339.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.0" y="350.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.06%)</title><rect x="363.0" y="323.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="366.0" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="363.0" y="307.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.0" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="363.0" y="291.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.0" y="302.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="363.0" y="275.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.0" y="286.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="363.7" y="355.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.7" y="366.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="363.7" y="339.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="366.7" y="350.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="363.7" y="323.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.7" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="363.7" y="307.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="366.7" y="318.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="364.4" y="467.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="367.4" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (4 samples, 0.25%)</title><rect x="365.2" y="467.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.2" y="478.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.25%)</title><rect x="365.2" y="451.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.2" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.25%)</title><rect x="365.2" y="435.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.2" y="446.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.25%)</title><rect x="365.2" y="419.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="368.2" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.25%)</title><rect x="365.2" y="403.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.2" y="414.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.25%)</title><rect x="365.2" y="387.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.2" y="398.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.25%)</title><rect x="368.1" y="467.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.1" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.25%)</title><rect x="368.1" y="451.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="371.1" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.25%)</title><rect x="368.1" y="435.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="371.1" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.25%)</title><rect x="368.1" y="419.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="371.1" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.25%)</title><rect x="368.1" y="403.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.1" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="371.0" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="374.0" y="558.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="371.0" y="531.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.0" y="542.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="371.0" y="515.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="374.0" y="526.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.06%)</title><rect x="371.0" y="499.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="374.0" y="510.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="371.8" y="723.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="374.8" y="734.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="371.8" y="707.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="374.8" y="718.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="371.8" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="374.8" y="702.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="372.5" y="787.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.5" y="798.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.06%)</title><rect x="373.2" y="835.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="376.2" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="374.0" y="851.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="377.0" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="374.7" y="851.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="377.7" y="862.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="374.7" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.7" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="374.7" y="819.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.7" y="830.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="374.7" y="803.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.7" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="374.7" y="787.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.7" y="798.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.06%)</title><rect x="375.4" y="883.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.4" y="894.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="376.2" y="995.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="376.9" y="1123.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="376.9" y="1107.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="376.9" y="1091.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="379.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.12%)</title><rect x="376.9" y="1075.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.12%)</title><rect x="376.9" y="1059.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.12%)</title><rect x="376.9" y="1043.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (3 samples, 0.19%)</title><rect x="378.4" y="1123.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="381.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (3 samples, 0.19%)</title><rect x="378.4" y="1107.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putProxy (221 samples, 13.74%)</title><rect x="380.6" y="1139.0" width="162.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.6" y="1150.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (101 samples, 6.28%)</title><rect x="380.6" y="1123.0" width="74.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.6" y="1134.0">ru/mail/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (1 samples, 0.06%)</title><rect x="380.6" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (1 samples, 0.06%)</title><rect x="381.3" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="384.3" y="1118.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 6.16%)</title><rect x="382.1" y="1107.0" width="72.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.1" y="1118.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 6.16%)</title><rect x="382.1" y="1091.0" width="72.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.1" y="1102.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (70 samples, 4.35%)</title><rect x="382.1" y="1075.0" width="51.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="385.1" y="1086.0">Java_..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.06%)</title><rect x="382.8" y="1059.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="385.8" y="1070.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (68 samples, 4.23%)</title><rect x="383.5" y="1059.0" width="49.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="386.5" y="1070.0">rocks..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="384.3" y="1043.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="387.3" y="1054.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="384.3" y="1027.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="387.3" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 4.10%)</title><rect x="385.0" y="1043.0" width="48.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.0" y="1054.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 4.10%)</title><rect x="385.0" y="1027.0" width="48.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="388.0" y="1038.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 4.10%)</title><rect x="385.0" y="1011.0" width="48.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="388.0" y="1022.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (63 samples, 3.92%)</title><rect x="385.0" y="995.0" width="46.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="388.0" y="1006.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.06%)</title><rect x="385.0" y="979.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="388.0" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (62 samples, 3.86%)</title><rect x="385.7" y="979.0" width="45.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="388.7" y="990.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.06%)</title><rect x="386.5" y="963.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="389.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.50%)</title><rect x="387.2" y="963.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="390.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.06%)</title><rect x="387.2" y="947.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="390.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (7 samples, 0.44%)</title><rect x="387.9" y="947.0" width="5.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="390.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.06%)</title><rect x="387.9" y="931.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="390.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 0.37%)</title><rect x="388.7" y="931.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="391.7" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (2 samples, 0.12%)</title><rect x="388.7" y="915.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="391.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.06%)</title><rect x="390.1" y="915.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="393.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.12%)</title><rect x="390.9" y="915.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="393.9" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="390.9" y="899.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="393.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="391.6" y="899.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="394.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.06%)</title><rect x="392.3" y="915.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="395.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.06%)</title><rect x="392.3" y="899.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="395.3" y="910.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.06%)</title><rect x="393.1" y="963.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="396.1" y="974.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="393.1" y="947.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (36 samples, 2.24%)</title><rect x="393.8" y="963.0" width="26.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="396.8" y="974.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (36 samples, 2.24%)</title><rect x="393.8" y="947.0" width="26.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="396.8" y="958.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (35 samples, 2.18%)</title><rect x="394.5" y="931.0" width="25.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="397.5" y="942.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (34 samples, 2.11%)</title><rect x="394.5" y="915.0" width="25.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="397.5" y="926.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (34 samples, 2.11%)</title><rect x="394.5" y="899.0" width="25.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="397.5" y="910.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (1 samples, 0.06%)</title><rect x="394.5" y="883.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="397.5" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (33 samples, 2.05%)</title><rect x="395.3" y="883.0" width="24.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="398.3" y="894.0">r..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (33 samples, 2.05%)</title><rect x="395.3" y="867.0" width="24.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="398.3" y="878.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (27 samples, 1.68%)</title><rect x="396.0" y="851.0" width="19.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="399.0" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (21 samples, 1.31%)</title><rect x="396.7" y="835.0" width="15.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="399.7" y="846.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="396.7" y="819.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="399.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (20 samples, 1.24%)</title><rect x="397.5" y="819.0" width="14.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="400.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 1.24%)</title><rect x="397.5" y="803.0" width="14.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="400.5" y="814.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (6 samples, 0.37%)</title><rect x="397.5" y="787.0" width="4.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="400.5" y="798.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (6 samples, 0.37%)</title><rect x="397.5" y="771.0" width="4.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="400.5" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.12%)</title><rect x="399.7" y="755.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="402.7" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="399.7" y="739.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="402.7" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="400.4" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="403.4" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="401.1" y="755.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="404.1" y="766.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (7 samples, 0.44%)</title><rect x="401.9" y="787.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="404.9" y="798.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 0.37%)</title><rect x="402.6" y="771.0" width="4.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="405.6" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="402.6" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="405.6" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.25%)</title><rect x="403.3" y="755.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="406.3" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.12%)</title><rect x="403.3" y="739.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="406.3" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="404.8" y="739.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="407.8" y="750.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="404.8" y="723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="407.8" y="734.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="405.5" y="739.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.5" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="406.3" y="755.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="409.3" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.37%)</title><rect x="407.0" y="787.0" width="4.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="410.0" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.19%)</title><rect x="407.7" y="771.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="410.7" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="409.9" y="771.0" width="1.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="412.9" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="411.4" y="787.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="414.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.31%)</title><rect x="412.1" y="835.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="415.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.31%)</title><rect x="412.1" y="819.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="415.1" y="830.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.25%)</title><rect x="412.9" y="803.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="415.9" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="412.9" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="415.9" y="798.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.19%)</title><rect x="413.6" y="787.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="416.6" y="798.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.19%)</title><rect x="413.6" y="771.0" width="2.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="416.6" y="782.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.12%)</title><rect x="414.3" y="755.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="417.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (5 samples, 0.31%)</title><rect x="415.8" y="851.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="418.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.31%)</title><rect x="415.8" y="835.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="418.8" y="846.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.12%)</title><rect x="415.8" y="819.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="418.8" y="830.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.12%)</title><rect x="415.8" y="803.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="418.8" y="814.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.06%)</title><rect x="416.5" y="787.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="419.5" y="798.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.06%)</title><rect x="416.5" y="771.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="419.5" y="782.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.12%)</title><rect x="417.3" y="819.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="420.3" y="830.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.12%)</title><rect x="417.3" y="803.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="420.3" y="814.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (2 samples, 0.12%)</title><rect x="417.3" y="787.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="420.3" y="798.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.06%)</title><rect x="418.7" y="819.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="421.7" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="418.7" y="803.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="421.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.06%)</title><rect x="419.5" y="915.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.25%)</title><rect x="420.2" y="963.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="423.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.25%)</title><rect x="420.2" y="947.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.25%)</title><rect x="420.2" y="931.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.25%)</title><rect x="420.2" y="915.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="423.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.25%)</title><rect x="420.2" y="899.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="423.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.25%)</title><rect x="420.2" y="883.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="423.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.25%)</title><rect x="420.2" y="867.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="423.2" y="878.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.25%)</title><rect x="420.2" y="851.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="423.2" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (4 samples, 0.25%)</title><rect x="420.2" y="835.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="423.2" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10462700402843190174.so (4 samples, 0.25%)</title><rect x="420.2" y="819.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="423.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.25%)</title><rect x="420.2" y="803.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="423.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.25%)</title><rect x="420.2" y="787.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="423.2" y="798.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.06%)</title><rect x="420.2" y="771.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="423.2" y="782.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.06%)</title><rect x="420.2" y="755.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="423.2" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.06%)</title><rect x="420.2" y="739.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="423.2" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="420.2" y="723.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="423.2" y="734.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="420.2" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="423.2" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="420.2" y="691.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="423.2" y="702.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.06%)</title><rect x="420.9" y="771.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="423.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="420.9" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="423.9" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="420.9" y="739.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="420.9" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="423.9" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="420.9" y="707.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="423.9" y="718.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="420.9" y="691.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="423.9" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="420.9" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.9" y="686.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.12%)</title><rect x="421.7" y="771.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="424.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="421.7" y="755.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="424.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="421.7" y="739.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="424.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.12%)</title><rect x="421.7" y="723.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="424.7" y="734.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="421.7" y="707.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="424.7" y="718.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="421.7" y="691.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.7" y="702.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="421.7" y="675.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="424.7" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="421.7" y="659.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.7" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="421.7" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="424.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 0.37%)</title><rect x="423.1" y="963.0" width="4.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="426.1" y="974.0"></text>
</g>
<g>
<title>sched_yield (5 samples, 0.31%)</title><rect x="427.5" y="963.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="430.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.25%)</title><rect x="428.3" y="947.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="431.3" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.25%)</title><rect x="428.3" y="931.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="431.3" y="942.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.19%)</title><rect x="428.3" y="915.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.3" y="926.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.19%)</title><rect x="428.3" y="899.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="431.3" y="910.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.19%)</title><rect x="428.3" y="883.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.3" y="894.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.19%)</title><rect x="428.3" y="867.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="431.3" y="878.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="430.5" y="915.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="433.5" y="926.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.06%)</title><rect x="430.5" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="433.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.06%)</title><rect x="431.2" y="995.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="434.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="432.0" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="435.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.06%)</title><rect x="432.0" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="435.0" y="990.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.06%)</title><rect x="432.7" y="995.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="435.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.75%)</title><rect x="433.4" y="1075.0" width="8.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="436.4" y="1086.0"></text>
</g>
<g>
<title>__GI_write (12 samples, 0.75%)</title><rect x="433.4" y="1059.0" width="8.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="436.4" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.75%)</title><rect x="433.4" y="1043.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.75%)</title><rect x="433.4" y="1027.0" width="8.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_write (11 samples, 0.68%)</title><rect x="434.2" y="1011.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.2" y="1022.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.68%)</title><rect x="434.2" y="995.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="437.2" y="1006.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.68%)</title><rect x="434.2" y="979.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.2" y="990.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.68%)</title><rect x="434.2" y="963.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.2" y="974.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.68%)</title><rect x="434.2" y="947.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="437.2" y="958.0"></text>
</g>
<g>
<title>ext4_file_write_iter (11 samples, 0.68%)</title><rect x="434.2" y="931.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.2" y="942.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.62%)</title><rect x="434.2" y="915.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.2" y="926.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.31%)</title><rect x="434.2" y="899.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.2" y="910.0"></text>
</g>
<g>
<title>generic_update_time (5 samples, 0.31%)</title><rect x="434.2" y="883.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.2" y="894.0"></text>
</g>
<g>
<title>__mark_inode_dirty (5 samples, 0.31%)</title><rect x="434.2" y="867.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="437.2" y="878.0"></text>
</g>
<g>
<title>ext4_dirty_inode (5 samples, 0.31%)</title><rect x="434.2" y="851.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="437.2" y="862.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.12%)</title><rect x="434.2" y="835.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="437.2" y="846.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.12%)</title><rect x="434.2" y="819.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.2" y="830.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.06%)</title><rect x="434.9" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.9" y="814.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.12%)</title><rect x="435.6" y="835.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="438.6" y="846.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.12%)</title><rect x="435.6" y="819.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.6" y="830.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.12%)</title><rect x="435.6" y="803.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.6" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="435.6" y="787.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="438.6" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="435.6" y="771.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.6" y="782.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="437.1" y="835.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.1" y="846.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.06%)</title><rect x="437.1" y="819.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="440.1" y="830.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.06%)</title><rect x="437.1" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="440.1" y="814.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.06%)</title><rect x="437.1" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.1" y="798.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.31%)</title><rect x="437.8" y="899.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.8" y="910.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.19%)</title><rect x="437.8" y="883.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.8" y="894.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.06%)</title><rect x="437.8" y="867.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.8" y="878.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.06%)</title><rect x="437.8" y="851.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.8" y="862.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="437.8" y="835.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="440.8" y="846.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.06%)</title><rect x="438.6" y="867.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.6" y="878.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.06%)</title><rect x="439.3" y="867.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.3" y="878.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.12%)</title><rect x="440.0" y="883.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.0" y="894.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.12%)</title><rect x="440.0" y="867.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="443.0" y="878.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.12%)</title><rect x="440.0" y="851.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="443.0" y="862.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.12%)</title><rect x="440.0" y="835.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.0" y="846.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.12%)</title><rect x="440.0" y="819.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="443.0" y="830.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.12%)</title><rect x="440.0" y="803.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="443.0" y="814.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.06%)</title><rect x="440.0" y="787.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.0" y="798.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.06%)</title><rect x="440.0" y="771.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.0" y="782.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.06%)</title><rect x="440.0" y="755.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="443.0" y="766.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.06%)</title><rect x="440.8" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="443.8" y="798.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.06%)</title><rect x="440.8" y="771.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.8" y="782.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.06%)</title><rect x="441.5" y="915.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="444.5" y="926.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.06%)</title><rect x="442.2" y="1075.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.2" y="1086.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="443.0" y="1075.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="446.0" y="1086.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.12%)</title><rect x="443.7" y="1075.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (13 samples, 0.81%)</title><rect x="445.2" y="1075.0" width="9.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (12 samples, 0.75%)</title><rect x="445.9" y="1059.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.9" y="1070.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (12 samples, 0.75%)</title><rect x="445.9" y="1043.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.9" y="1054.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.06%)</title><rect x="445.9" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.9" y="1038.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 0.68%)</title><rect x="446.6" y="1027.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.6" y="1038.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 0.68%)</title><rect x="446.6" y="1011.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.6" y="1022.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (11 samples, 0.68%)</title><rect x="446.6" y="995.0" width="8.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="449.6" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="446.6" y="979.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="449.6" y="990.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.12%)</title><rect x="447.4" y="979.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="450.4" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.12%)</title><rect x="447.4" y="963.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="450.4" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="448.1" y="947.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.1" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="448.1" y="931.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.1" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="448.1" y="915.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.1" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="448.1" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="451.1" y="910.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.06%)</title><rect x="448.1" y="883.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="451.1" y="894.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.06%)</title><rect x="448.1" y="867.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.1" y="878.0"></text>
</g>
<g>
<title>file_free_rcu (1 samples, 0.06%)</title><rect x="448.1" y="851.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.1" y="862.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 0.44%)</title><rect x="448.8" y="979.0" width="5.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="451.8" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.06%)</title><rect x="450.3" y="963.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="453.3" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="451.0" y="963.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="454.0" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="451.8" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="454.8" y="974.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.12%)</title><rect x="452.5" y="963.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="455.5" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="452.5" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="455.5" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="452.5" y="931.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="455.5" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="452.5" y="915.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="455.5" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="453.2" y="947.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="456.2" y="958.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="454.0" y="979.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="457.0" y="990.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.06%)</title><rect x="454.0" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="457.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (1 samples, 0.06%)</title><rect x="454.7" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (1 samples, 0.06%)</title><rect x="454.7" y="1107.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (1 samples, 0.06%)</title><rect x="454.7" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNanosSync (1 samples, 0.06%)</title><rect x="454.7" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.7" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="454.7" y="1059.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="457.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.routeRequest (119 samples, 7.40%)</title><rect x="455.4" y="1123.0" width="87.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.4" y="1134.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (89 samples, 5.53%)</title><rect x="455.4" y="1107.0" width="65.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.4" y="1118.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (89 samples, 5.53%)</title><rect x="455.4" y="1091.0" width="65.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.4" y="1102.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (13 samples, 0.81%)</title><rect x="455.4" y="1075.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.4" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="455.4" y="1059.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="458.4" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="455.4" y="1043.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="458.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.75%)</title><rect x="456.2" y="1059.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.2" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.19%)</title><rect x="456.9" y="1043.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="459.9" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="458.4" y="1027.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="461.4" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 0.50%)</title><rect x="459.1" y="1043.0" width="5.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="462.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.37%)</title><rect x="460.6" y="1027.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.37%)</title><rect x="460.6" y="1011.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.6" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 0.37%)</title><rect x="460.6" y="995.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="463.6" y="1006.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.37%)</title><rect x="460.6" y="979.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.6" y="990.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="460.6" y="963.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.6" y="974.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.31%)</title><rect x="461.3" y="963.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="464.3" y="974.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.19%)</title><rect x="461.3" y="947.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.3" y="958.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.19%)</title><rect x="461.3" y="931.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.3" y="942.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="461.3" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="464.3" y="926.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="461.3" y="899.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.3" y="910.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="461.3" y="883.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.3" y="894.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.06%)</title><rect x="462.0" y="915.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.0" y="926.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="462.0" y="899.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.0" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="462.0" y="883.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="465.0" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.06%)</title><rect x="462.8" y="915.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.8" y="926.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="462.8" y="899.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="465.8" y="910.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="462.8" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.8" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.12%)</title><rect x="463.5" y="947.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="466.5" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.12%)</title><rect x="463.5" y="931.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="466.5" y="942.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="463.5" y="915.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="466.5" y="926.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.06%)</title><rect x="464.2" y="915.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="467.2" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="464.2" y="899.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="467.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (3 samples, 0.19%)</title><rect x="465.0" y="1075.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="465.0" y="1059.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="465.0" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="465.0" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.06%)</title><rect x="465.0" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.06%)</title><rect x="465.0" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.06%)</title><rect x="465.0" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.0" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.12%)</title><rect x="465.7" y="1059.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="465.7" y="1043.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="465.7" y="1027.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.7" y="1038.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.06%)</title><rect x="466.4" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.06%)</title><rect x="467.2" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="467.2" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.06%)</title><rect x="467.9" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.9" y="1086.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.06%)</title><rect x="467.9" y="1059.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="470.9" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="467.9" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.9" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="467.9" y="1027.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.9" y="1038.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="467.9" y="1011.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (11 samples, 0.68%)</title><rect x="468.6" y="1075.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.6" y="1086.0"></text>
</g>
<g>
<title>__libc_send (11 samples, 0.68%)</title><rect x="468.6" y="1059.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="471.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.68%)</title><rect x="468.6" y="1043.0" width="8.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.68%)</title><rect x="468.6" y="1027.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="471.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_sendto (11 samples, 0.68%)</title><rect x="468.6" y="1011.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.6" y="1022.0"></text>
</g>
<g>
<title>__sys_sendto (11 samples, 0.68%)</title><rect x="468.6" y="995.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.6" y="1006.0"></text>
</g>
<g>
<title>sock_sendmsg (11 samples, 0.68%)</title><rect x="468.6" y="979.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="471.6" y="990.0"></text>
</g>
<g>
<title>inet6_sendmsg (11 samples, 0.68%)</title><rect x="468.6" y="963.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.6" y="974.0"></text>
</g>
<g>
<title>tcp_sendmsg (11 samples, 0.68%)</title><rect x="468.6" y="947.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="471.6" y="958.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (11 samples, 0.68%)</title><rect x="468.6" y="931.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.6" y="942.0"></text>
</g>
<g>
<title>tcp_push (10 samples, 0.62%)</title><rect x="468.6" y="915.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.6" y="926.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (10 samples, 0.62%)</title><rect x="468.6" y="899.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.6" y="910.0"></text>
</g>
<g>
<title>tcp_write_xmit (10 samples, 0.62%)</title><rect x="468.6" y="883.0" width="7.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="471.6" y="894.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (8 samples, 0.50%)</title><rect x="468.6" y="867.0" width="5.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.6" y="878.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.44%)</title><rect x="469.4" y="851.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.4" y="862.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.44%)</title><rect x="469.4" y="835.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="472.4" y="846.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.44%)</title><rect x="469.4" y="819.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.4" y="830.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="469.4" y="803.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="472.4" y="814.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="469.4" y="787.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.4" y="798.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="469.4" y="771.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="472.4" y="782.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="469.4" y="755.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="472.4" y="766.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.37%)</title><rect x="470.1" y="803.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="473.1" y="814.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.37%)</title><rect x="470.1" y="787.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="473.1" y="798.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.37%)</title><rect x="470.1" y="771.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="473.1" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.37%)</title><rect x="470.1" y="755.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="473.1" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.37%)</title><rect x="470.1" y="739.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.1" y="750.0"></text>
</g>
<g>
<title>do_softirq.part.20 (6 samples, 0.37%)</title><rect x="470.1" y="723.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="473.1" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 0.37%)</title><rect x="470.1" y="707.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="473.1" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 0.37%)</title><rect x="470.1" y="691.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="473.1" y="702.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.37%)</title><rect x="470.1" y="675.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="473.1" y="686.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.37%)</title><rect x="470.1" y="659.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.1" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.31%)</title><rect x="470.8" y="643.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.8" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.31%)</title><rect x="470.8" y="627.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.8" y="638.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.31%)</title><rect x="470.8" y="611.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="473.8" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.31%)</title><rect x="470.8" y="595.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="473.8" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.31%)</title><rect x="470.8" y="579.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.8" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.31%)</title><rect x="470.8" y="563.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.8" y="574.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.31%)</title><rect x="470.8" y="547.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.8" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.31%)</title><rect x="470.8" y="531.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.8" y="542.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="471.6" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.6" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.19%)</title><rect x="472.3" y="515.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.3" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.19%)</title><rect x="472.3" y="499.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.3" y="510.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.12%)</title><rect x="472.3" y="483.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.3" y="494.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.12%)</title><rect x="472.3" y="467.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.3" y="478.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.12%)</title><rect x="472.3" y="451.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="475.3" y="462.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.12%)</title><rect x="472.3" y="435.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="475.3" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.12%)</title><rect x="472.3" y="419.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.3" y="430.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.12%)</title><rect x="472.3" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.3" y="414.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.12%)</title><rect x="472.3" y="387.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.3" y="398.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="472.3" y="371.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="475.3" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.06%)</title><rect x="472.3" y="355.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="475.3" y="366.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="473.0" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.0" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="473.0" y="355.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="476.0" y="366.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="473.0" y="339.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="476.0" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="473.0" y="323.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.0" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="473.0" y="307.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="476.0" y="318.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="473.0" y="291.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="476.0" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="473.0" y="275.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="476.0" y="286.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.06%)</title><rect x="473.0" y="259.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.0" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.06%)</title><rect x="473.8" y="483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="476.8" y="494.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.06%)</title><rect x="473.8" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="476.8" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="473.8" y="451.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="473.8" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.8" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="473.8" y="419.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="476.8" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="473.8" y="403.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="476.8" y="414.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.12%)</title><rect x="474.5" y="867.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="477.5" y="878.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.12%)</title><rect x="474.5" y="851.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="477.5" y="862.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="474.5" y="835.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="477.5" y="846.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="474.5" y="819.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.5" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="474.5" y="803.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.5" y="814.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.06%)</title><rect x="476.0" y="915.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="479.0" y="926.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (60 samples, 3.73%)</title><rect x="476.7" y="1075.0" width="44.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.7" y="1086.0">one/..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (60 samples, 3.73%)</title><rect x="476.7" y="1059.0" width="44.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.7" y="1070.0">one/..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (60 samples, 3.73%)</title><rect x="476.7" y="1043.0" width="44.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.7" y="1054.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (48 samples, 2.99%)</title><rect x="476.7" y="1027.0" width="35.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="1038.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (47 samples, 2.92%)</title><rect x="476.7" y="1011.0" width="34.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.7" y="1022.0">on..</text>
</g>
<g>
<title>[unknown] (47 samples, 2.92%)</title><rect x="476.7" y="995.0" width="34.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="479.7" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="476.7" y="979.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="479.7" y="990.0"></text>
</g>
<g>
<title>sockaddr_from_java (1 samples, 0.06%)</title><rect x="476.7" y="963.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="479.7" y="974.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="476.7" y="947.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="479.7" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="476.7" y="931.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="479.7" y="942.0"></text>
</g>
<g>
<title>__libc_connect (46 samples, 2.86%)</title><rect x="477.5" y="979.0" width="33.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="480.5" y="990.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 2.86%)</title><rect x="477.5" y="963.0" width="33.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="480.5" y="974.0">en..</text>
</g>
<g>
<title>do_syscall_64 (46 samples, 2.86%)</title><rect x="477.5" y="947.0" width="33.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="480.5" y="958.0">do..</text>
</g>
<g>
<title>__x64_sys_connect (45 samples, 2.80%)</title><rect x="477.5" y="931.0" width="33.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="480.5" y="942.0">__..</text>
</g>
<g>
<title>__sys_connect (44 samples, 2.74%)</title><rect x="477.5" y="915.0" width="32.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="480.5" y="926.0">__..</text>
</g>
<g>
<title>inet_stream_connect (44 samples, 2.74%)</title><rect x="477.5" y="899.0" width="32.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.5" y="910.0">in..</text>
</g>
<g>
<title>__inet_stream_connect (44 samples, 2.74%)</title><rect x="477.5" y="883.0" width="32.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="480.5" y="894.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="477.5" y="867.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.5" y="878.0"></text>
</g>
<g>
<title>release_sock (11 samples, 0.68%)</title><rect x="478.2" y="867.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="481.2" y="878.0"></text>
</g>
<g>
<title>__release_sock (11 samples, 0.68%)</title><rect x="478.2" y="851.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.2" y="862.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 0.68%)</title><rect x="478.2" y="835.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.2" y="846.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (11 samples, 0.68%)</title><rect x="478.2" y="819.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.2" y="830.0"></text>
</g>
<g>
<title>tcp_finish_connect (1 samples, 0.06%)</title><rect x="478.2" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.2" y="814.0"></text>
</g>
<g>
<title>tcp_init_transfer (1 samples, 0.06%)</title><rect x="478.2" y="787.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="481.2" y="798.0"></text>
</g>
<g>
<title>tcp_init_metrics (1 samples, 0.06%)</title><rect x="478.2" y="771.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.2" y="782.0"></text>
</g>
<g>
<title>tcp_send_ack (10 samples, 0.62%)</title><rect x="478.9" y="803.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.9" y="814.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (10 samples, 0.62%)</title><rect x="478.9" y="787.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.9" y="798.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 0.62%)</title><rect x="478.9" y="771.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="481.9" y="782.0"></text>
</g>
<g>
<title>ip_queue_xmit (10 samples, 0.62%)</title><rect x="478.9" y="755.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.9" y="766.0"></text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 0.62%)</title><rect x="478.9" y="739.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.9" y="750.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.62%)</title><rect x="478.9" y="723.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="481.9" y="734.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="478.9" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.9" y="718.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="478.9" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.9" y="702.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.06%)</title><rect x="478.9" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.9" y="686.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="478.9" y="659.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.9" y="670.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="478.9" y="643.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="478.9" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="481.9" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="478.9" y="611.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.9" y="622.0"></text>
</g>
<g>
<title>ip_output (9 samples, 0.56%)</title><rect x="479.7" y="707.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.7" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.56%)</title><rect x="479.7" y="691.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.7" y="702.0"></text>
</g>
<g>
<title>__ip_finish_output (9 samples, 0.56%)</title><rect x="479.7" y="675.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.7" y="686.0"></text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 0.56%)</title><rect x="479.7" y="659.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.7" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.50%)</title><rect x="480.4" y="643.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.4" y="654.0"></text>
</g>
<g>
<title>do_softirq.part.20 (8 samples, 0.50%)</title><rect x="480.4" y="627.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.4" y="638.0"></text>
</g>
<g>
<title>do_softirq_own_stack (8 samples, 0.50%)</title><rect x="480.4" y="611.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="483.4" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 0.50%)</title><rect x="480.4" y="595.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.4" y="606.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 0.50%)</title><rect x="480.4" y="579.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.4" y="590.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 0.50%)</title><rect x="480.4" y="563.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.4" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 0.50%)</title><rect x="480.4" y="547.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="483.4" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 0.50%)</title><rect x="480.4" y="531.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="483.4" y="542.0"></text>
</g>
<g>
<title>ip_rcv (8 samples, 0.50%)</title><rect x="480.4" y="515.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.4" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.50%)</title><rect x="480.4" y="499.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="483.4" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver (8 samples, 0.50%)</title><rect x="480.4" y="483.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.4" y="494.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 0.50%)</title><rect x="480.4" y="467.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="483.4" y="478.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 0.50%)</title><rect x="480.4" y="451.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.4" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.50%)</title><rect x="480.4" y="435.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.4" y="446.0"></text>
</g>
<g>
<title>tcp_check_req (4 samples, 0.25%)</title><rect x="480.4" y="419.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.4" y="430.0"></text>
</g>
<g>
<title>inet_csk_reqsk_queue_drop (1 samples, 0.06%)</title><rect x="480.4" y="403.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.4" y="414.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (3 samples, 0.19%)</title><rect x="481.1" y="403.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="484.1" y="414.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (3 samples, 0.19%)</title><rect x="481.1" y="387.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="484.1" y="398.0"></text>
</g>
<g>
<title>inet_ehash_nolisten (1 samples, 0.06%)</title><rect x="481.1" y="371.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="484.1" y="382.0"></text>
</g>
<g>
<title>tcp_ca_openreq_child (1 samples, 0.06%)</title><rect x="481.9" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.9" y="382.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (1 samples, 0.06%)</title><rect x="482.6" y="371.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.6" y="382.0"></text>
</g>
<g>
<title>inet_csk_reset_keepalive_timer (1 samples, 0.06%)</title><rect x="482.6" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.6" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="482.6" y="339.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="485.6" y="350.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="482.6" y="323.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="485.6" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="482.6" y="307.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="485.6" y="318.0"></text>
</g>
<g>
<title>tcp_child_process (4 samples, 0.25%)</title><rect x="483.3" y="419.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="486.3" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.12%)</title><rect x="483.3" y="403.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="486.3" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="484.1" y="387.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.1" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="484.1" y="371.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.1" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="484.1" y="355.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.1" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (2 samples, 0.12%)</title><rect x="484.8" y="403.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.8" y="414.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.06%)</title><rect x="484.8" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="487.8" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="484.8" y="371.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="487.8" y="382.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="484.8" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.8" y="366.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="484.8" y="339.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.8" y="350.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="484.8" y="323.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="487.8" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="484.8" y="307.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="487.8" y="318.0"></text>
</g>
<g>
<title>tcp_init_transfer (1 samples, 0.06%)</title><rect x="485.5" y="387.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.5" y="398.0"></text>
</g>
<g>
<title>tcp_init_buffer_space (1 samples, 0.06%)</title><rect x="485.5" y="371.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="488.5" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="485.5" y="355.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.5" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.06%)</title><rect x="485.5" y="339.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.5" y="350.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="485.5" y="323.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="488.5" y="334.0"></text>
</g>
<g>
<title>tcp_v6_connect (32 samples, 1.99%)</title><rect x="486.3" y="867.0" width="23.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="489.3" y="878.0">t..</text>
</g>
<g>
<title>ip_route_output_key_hash (1 samples, 0.06%)</title><rect x="487.7" y="851.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="490.7" y="862.0"></text>
</g>
<g>
<title>tcp_v4_connect (29 samples, 1.80%)</title><rect x="488.5" y="851.0" width="21.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.5" y="862.0">t..</text>
</g>
<g>
<title>inet_hash_connect (4 samples, 0.25%)</title><rect x="488.5" y="835.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="491.5" y="846.0"></text>
</g>
<g>
<title>__inet_hash_connect (4 samples, 0.25%)</title><rect x="488.5" y="819.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="491.5" y="830.0"></text>
</g>
<g>
<title>__inet_check_established (1 samples, 0.06%)</title><rect x="489.2" y="803.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="492.2" y="814.0"></text>
</g>
<g>
<title>tcp_twsk_unique (1 samples, 0.06%)</title><rect x="489.2" y="787.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="492.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="489.9" y="803.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.9" y="814.0"></text>
</g>
<g>
<title>inet_twsk_deschedule_put (1 samples, 0.06%)</title><rect x="490.7" y="803.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="493.7" y="814.0"></text>
</g>
<g>
<title>inet_twsk_put (1 samples, 0.06%)</title><rect x="490.7" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="493.7" y="798.0"></text>
</g>
<g>
<title>inet_twsk_free (1 samples, 0.06%)</title><rect x="490.7" y="771.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="493.7" y="782.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="490.7" y="755.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="493.7" y="766.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (1 samples, 0.06%)</title><rect x="491.4" y="835.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.4" y="846.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (1 samples, 0.06%)</title><rect x="491.4" y="819.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="494.4" y="830.0"></text>
</g>
<g>
<title>fib_table_lookup (1 samples, 0.06%)</title><rect x="491.4" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.4" y="814.0"></text>
</g>
<g>
<title>tcp_connect (24 samples, 1.49%)</title><rect x="492.1" y="835.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.1" y="846.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (22 samples, 1.37%)</title><rect x="492.1" y="819.0" width="16.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.1" y="830.0"></text>
</g>
<g>
<title>ip_queue_xmit (22 samples, 1.37%)</title><rect x="492.1" y="803.0" width="16.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.1" y="814.0"></text>
</g>
<g>
<title>__ip_queue_xmit (22 samples, 1.37%)</title><rect x="492.1" y="787.0" width="16.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.1" y="798.0"></text>
</g>
<g>
<title>ip_local_out (22 samples, 1.37%)</title><rect x="492.1" y="771.0" width="16.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.1" y="782.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.25%)</title><rect x="492.1" y="755.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.1" y="766.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.25%)</title><rect x="492.1" y="739.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.1" y="750.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.25%)</title><rect x="492.1" y="723.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="495.1" y="734.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.25%)</title><rect x="492.1" y="707.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.1" y="718.0"></text>
</g>
<g>
<title>nf_conntrack_destroy (1 samples, 0.06%)</title><rect x="492.1" y="691.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.1" y="702.0"></text>
</g>
<g>
<title>destroy_conntrack?[nf_conntrack] (1 samples, 0.06%)</title><rect x="492.1" y="675.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.1" y="686.0"></text>
</g>
<g>
<title>nf_conntrack_free?[nf_conntrack] (1 samples, 0.06%)</title><rect x="492.1" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.1" y="670.0"></text>
</g>
<g>
<title>nf_ct_ext_destroy?[nf_conntrack] (1 samples, 0.06%)</title><rect x="492.1" y="643.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.1" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.19%)</title><rect x="492.9" y="691.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.9" y="702.0"></text>
</g>
<g>
<title>nf_ct_delete?[nf_conntrack] (2 samples, 0.12%)</title><rect x="492.9" y="675.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.9" y="686.0"></text>
</g>
<g>
<title>nf_ct_delete_from_lists?[nf_conntrack] (1 samples, 0.06%)</title><rect x="492.9" y="659.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.9" y="670.0"></text>
</g>
<g>
<title>nf_conntrack_double_lock.isra.34?[nf_conntrack] (1 samples, 0.06%)</title><rect x="492.9" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="495.9" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_lock?[nf_conntrack] (1 samples, 0.06%)</title><rect x="492.9" y="627.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="492.9" y="611.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="495.9" y="622.0"></text>
</g>
<g>
<title>nf_ct_remove_expectations?[nf_conntrack] (1 samples, 0.06%)</title><rect x="493.6" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="496.6" y="670.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="494.3" y="675.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.3" y="686.0"></text>
</g>
<g>
<title>ip_output (17 samples, 1.06%)</title><rect x="495.1" y="755.0" width="12.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.1" y="766.0"></text>
</g>
<g>
<title>ip_finish_output (17 samples, 1.06%)</title><rect x="495.1" y="739.0" width="12.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.1" y="750.0"></text>
</g>
<g>
<title>__ip_finish_output (17 samples, 1.06%)</title><rect x="495.1" y="723.0" width="12.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.1" y="734.0"></text>
</g>
<g>
<title>ip_finish_output2 (17 samples, 1.06%)</title><rect x="495.1" y="707.0" width="12.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.1" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (13 samples, 0.81%)</title><rect x="495.1" y="691.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.1" y="702.0"></text>
</g>
<g>
<title>do_softirq.part.20 (13 samples, 0.81%)</title><rect x="495.1" y="675.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="498.1" y="686.0"></text>
</g>
<g>
<title>do_softirq_own_stack (12 samples, 0.75%)</title><rect x="495.8" y="659.0" width="8.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.8" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 0.75%)</title><rect x="495.8" y="643.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="498.8" y="654.0"></text>
</g>
<g>
<title>net_rx_action (12 samples, 0.75%)</title><rect x="495.8" y="627.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.8" y="638.0"></text>
</g>
<g>
<title>process_backlog (12 samples, 0.75%)</title><rect x="495.8" y="611.0" width="8.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.8" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 0.75%)</title><rect x="495.8" y="595.0" width="8.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.8" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (10 samples, 0.62%)</title><rect x="495.8" y="579.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.8" y="590.0"></text>
</g>
<g>
<title>ip_rcv (10 samples, 0.62%)</title><rect x="495.8" y="563.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="498.8" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 0.62%)</title><rect x="495.8" y="547.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.8" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 0.62%)</title><rect x="495.8" y="531.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.8" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 0.56%)</title><rect x="495.8" y="515.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.8" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 0.56%)</title><rect x="495.8" y="499.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.8" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 0.56%)</title><rect x="495.8" y="483.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.8" y="494.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.56%)</title><rect x="495.8" y="467.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.8" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (9 samples, 0.56%)</title><rect x="495.8" y="451.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="498.8" y="462.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (9 samples, 0.56%)</title><rect x="495.8" y="435.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.8" y="446.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (9 samples, 0.56%)</title><rect x="495.8" y="419.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="498.8" y="430.0"></text>
</g>
<g>
<title>tcp_conn_request (9 samples, 0.56%)</title><rect x="495.8" y="403.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.8" y="414.0"></text>
</g>
<g>
<title>inet_csk_reqsk_queue_hash_add (2 samples, 0.12%)</title><rect x="495.8" y="387.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.8" y="398.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="495.8" y="371.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="498.8" y="382.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="496.5" y="355.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_route_req (2 samples, 0.12%)</title><rect x="497.3" y="387.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="500.3" y="398.0"></text>
</g>
<g>
<title>inet_csk_route_req (2 samples, 0.12%)</title><rect x="497.3" y="371.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="500.3" y="382.0"></text>
</g>
<g>
<title>ip_route_output_flow (2 samples, 0.12%)</title><rect x="497.3" y="355.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.3" y="366.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (2 samples, 0.12%)</title><rect x="497.3" y="339.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.3" y="350.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (2 samples, 0.12%)</title><rect x="497.3" y="323.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.3" y="334.0"></text>
</g>
<g>
<title>fib_table_lookup (2 samples, 0.12%)</title><rect x="497.3" y="307.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.3" y="318.0"></text>
</g>
<g>
<title>tcp_v4_send_synack (5 samples, 0.31%)</title><rect x="498.7" y="387.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.7" y="398.0"></text>
</g>
<g>
<title>ip_build_and_send_pkt (5 samples, 0.31%)</title><rect x="498.7" y="371.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.7" y="382.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.31%)</title><rect x="498.7" y="355.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.7" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.19%)</title><rect x="498.7" y="339.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.19%)</title><rect x="498.7" y="323.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.7" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.12%)</title><rect x="498.7" y="307.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.7" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.12%)</title><rect x="498.7" y="291.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.7" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.12%)</title><rect x="498.7" y="275.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="501.7" y="286.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.12%)</title><rect x="498.7" y="259.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="501.7" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="500.2" y="307.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.2" y="318.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.12%)</title><rect x="500.9" y="339.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.12%)</title><rect x="500.9" y="323.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="503.9" y="334.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.12%)</title><rect x="500.9" y="307.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.9" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.12%)</title><rect x="500.9" y="291.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.9" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.12%)</title><rect x="500.9" y="275.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.9" y="286.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.12%)</title><rect x="500.9" y="259.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.9" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="501.7" y="243.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="504.7" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="502.4" y="515.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="505.4" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="502.4" y="499.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="505.4" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="502.4" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="505.4" y="494.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.12%)</title><rect x="503.1" y="579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="506.1" y="590.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.25%)</title><rect x="504.6" y="691.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.6" y="702.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.25%)</title><rect x="504.6" y="675.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.6" y="686.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.12%)</title><rect x="505.3" y="659.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.3" y="670.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="505.3" y="643.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="508.3" y="654.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="506.1" y="643.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="509.1" y="654.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="506.1" y="627.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.1" y="638.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="506.8" y="659.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.8" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="507.5" y="755.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.5" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.12%)</title><rect x="508.3" y="819.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.3" y="830.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="508.3" y="803.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="511.3" y="814.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="508.3" y="787.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="511.3" y="798.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="508.3" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="511.3" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="509.0" y="787.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.0" y="798.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="509.7" y="915.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="512.7" y="926.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="510.5" y="931.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="513.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.toNativeAddr (1 samples, 0.06%)</title><rect x="511.2" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.2" y="1022.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.06%)</title><rect x="511.2" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.2" y="1006.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="511.2" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.2" y="990.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="511.2" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="511.2" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.2" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="511.2" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.2" y="942.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.06%)</title><rect x="511.2" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setNoDelay (1 samples, 0.06%)</title><rect x="511.9" y="1027.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.9" y="1038.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.06%)</title><rect x="511.9" y="1011.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="514.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="511.9" y="995.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="511.9" y="979.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.9" y="990.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.06%)</title><rect x="511.9" y="963.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.9" y="974.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.06%)</title><rect x="511.9" y="947.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (5 samples, 0.31%)</title><rect x="512.7" y="1027.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.7" y="1038.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.19%)</title><rect x="513.4" y="1011.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="516.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.19%)</title><rect x="513.4" y="995.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="516.4" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.19%)</title><rect x="513.4" y="979.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.4" y="990.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.06%)</title><rect x="514.1" y="963.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.1" y="974.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.06%)</title><rect x="514.1" y="947.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.1" y="958.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.06%)</title><rect x="514.1" y="931.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.1" y="942.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.06%)</title><rect x="514.1" y="915.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="517.1" y="926.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="514.9" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.9" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.06%)</title><rect x="514.9" y="947.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.9" y="958.0"></text>
</g>
<g>
<title>setsockopt@plt (1 samples, 0.06%)</title><rect x="515.6" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="518.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (6 samples, 0.37%)</title><rect x="516.3" y="1027.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (6 samples, 0.37%)</title><rect x="516.3" y="1011.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.socket0 (6 samples, 0.37%)</title><rect x="516.3" y="995.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.3" y="1006.0"></text>
</g>
<g>
<title>__GI_socket (6 samples, 0.37%)</title><rect x="516.3" y="979.0" width="4.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="519.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.31%)</title><rect x="517.1" y="963.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="520.1" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.31%)</title><rect x="517.1" y="947.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.1" y="958.0"></text>
</g>
<g>
<title>__x64_sys_socket (5 samples, 0.31%)</title><rect x="517.1" y="931.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="520.1" y="942.0"></text>
</g>
<g>
<title>__sys_socket (5 samples, 0.31%)</title><rect x="517.1" y="915.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.1" y="926.0"></text>
</g>
<g>
<title>__sock_create (4 samples, 0.25%)</title><rect x="517.1" y="899.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="520.1" y="910.0"></text>
</g>
<g>
<title>inet6_create (3 samples, 0.19%)</title><rect x="517.1" y="883.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="520.1" y="894.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.12%)</title><rect x="517.1" y="867.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="520.1" y="878.0"></text>
</g>
<g>
<title>sk_prot_alloc (2 samples, 0.12%)</title><rect x="517.1" y="851.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.1" y="862.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.06%)</title><rect x="517.1" y="835.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="520.1" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="517.8" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="520.8" y="846.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.06%)</title><rect x="517.8" y="819.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.8" y="830.0"></text>
</g>
<g>
<title>tcp_v6_init_sock (1 samples, 0.06%)</title><rect x="518.5" y="867.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.5" y="878.0"></text>
</g>
<g>
<title>tcp_init_sock (1 samples, 0.06%)</title><rect x="518.5" y="851.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.5" y="862.0"></text>
</g>
<g>
<title>security_socket_create (1 samples, 0.06%)</title><rect x="519.3" y="883.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="522.3" y="894.0"></text>
</g>
<g>
<title>apparmor_socket_create (1 samples, 0.06%)</title><rect x="519.3" y="867.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="522.3" y="878.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.06%)</title><rect x="519.3" y="851.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.3" y="862.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.06%)</title><rect x="520.0" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.0" y="910.0"></text>
</g>
<g>
<title>alloc_file_pseudo (1 samples, 0.06%)</title><rect x="520.0" y="883.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.0" y="894.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.06%)</title><rect x="520.0" y="867.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.0" y="878.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.06%)</title><rect x="520.0" y="851.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.0" y="862.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.06%)</title><rect x="520.0" y="835.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.0" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="520.0" y="819.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (5 samples, 0.31%)</title><rect x="520.7" y="1107.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (5 samples, 0.31%)</title><rect x="520.7" y="1091.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="521.5" y="1075.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.12%)</title><rect x="522.2" y="1075.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.06%)</title><rect x="522.2" y="1059.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="522.9" y="1059.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="522.9" y="1043.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (1 samples, 0.06%)</title><rect x="523.7" y="1075.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.7" y="1086.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.06%)</title><rect x="523.7" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.7" y="1070.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.06%)</title><rect x="523.7" y="1043.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.7" y="1054.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.06%)</title><rect x="523.7" y="1027.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.close (25 samples, 1.55%)</title><rect x="524.4" y="1107.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.invalidateAll (25 samples, 1.55%)</title><rect x="524.4" y="1091.0" width="18.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/Object.notifyAll (1 samples, 0.06%)</title><rect x="524.4" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.4" y="1086.0"></text>
</g>
<g>
<title>JVM_MonitorNotifyAll (1 samples, 0.06%)</title><rect x="524.4" y="1059.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="527.4" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="524.4" y="1043.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="527.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (24 samples, 1.49%)</title><rect x="525.1" y="1075.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (24 samples, 1.49%)</title><rect x="525.1" y="1059.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (24 samples, 1.49%)</title><rect x="525.1" y="1043.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.1" y="1054.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_close (1 samples, 0.06%)</title><rect x="525.1" y="1027.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="528.1" y="1038.0"></text>
</g>
<g>
<title>__GI___shutdown (22 samples, 1.37%)</title><rect x="525.9" y="1027.0" width="16.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="528.9" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.31%)</title><rect x="526.6" y="1011.0" width="15.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.31%)</title><rect x="526.6" y="995.0" width="15.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="529.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (20 samples, 1.24%)</title><rect x="527.4" y="979.0" width="14.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="530.4" y="990.0"></text>
</g>
<g>
<title>__sys_shutdown (19 samples, 1.18%)</title><rect x="527.4" y="963.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.4" y="974.0"></text>
</g>
<g>
<title>inet_shutdown (19 samples, 1.18%)</title><rect x="527.4" y="947.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.4" y="958.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="527.4" y="931.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="530.4" y="942.0"></text>
</g>
<g>
<title>tcp_shutdown (18 samples, 1.12%)</title><rect x="528.1" y="931.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="531.1" y="942.0"></text>
</g>
<g>
<title>tcp_send_fin (18 samples, 1.12%)</title><rect x="528.1" y="915.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="531.1" y="926.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="528.1" y="899.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.1" y="910.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="528.1" y="883.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.1" y="894.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="528.1" y="867.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.1" y="878.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (17 samples, 1.06%)</title><rect x="528.8" y="899.0" width="12.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.8" y="910.0"></text>
</g>
<g>
<title>tcp_write_xmit (17 samples, 1.06%)</title><rect x="528.8" y="883.0" width="12.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="531.8" y="894.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (17 samples, 1.06%)</title><rect x="528.8" y="867.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.8" y="878.0"></text>
</g>
<g>
<title>ip_queue_xmit (16 samples, 1.00%)</title><rect x="528.8" y="851.0" width="11.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="531.8" y="862.0"></text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 1.00%)</title><rect x="528.8" y="835.0" width="11.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="531.8" y="846.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 1.00%)</title><rect x="528.8" y="819.0" width="11.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="531.8" y="830.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.25%)</title><rect x="528.8" y="803.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="531.8" y="814.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.25%)</title><rect x="528.8" y="787.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.8" y="798.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.25%)</title><rect x="528.8" y="771.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="531.8" y="782.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.25%)</title><rect x="528.8" y="755.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.8" y="766.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.12%)</title><rect x="528.8" y="739.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.8" y="750.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.12%)</title><rect x="530.3" y="739.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="533.3" y="750.0"></text>
</g>
<g>
<title>ip_output (12 samples, 0.75%)</title><rect x="531.8" y="803.0" width="8.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="534.8" y="814.0"></text>
</g>
<g>
<title>ip_finish_output (12 samples, 0.75%)</title><rect x="531.8" y="787.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="534.8" y="798.0"></text>
</g>
<g>
<title>__ip_finish_output (12 samples, 0.75%)</title><rect x="531.8" y="771.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="534.8" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (12 samples, 0.75%)</title><rect x="531.8" y="755.0" width="8.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="534.8" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 0.68%)</title><rect x="531.8" y="739.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="534.8" y="750.0"></text>
</g>
<g>
<title>do_softirq.part.20 (11 samples, 0.68%)</title><rect x="531.8" y="723.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.8" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 0.68%)</title><rect x="531.8" y="707.0" width="8.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.8" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 0.68%)</title><rect x="531.8" y="691.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.8" y="702.0"></text>
</g>
<g>
<title>net_rx_action (11 samples, 0.68%)</title><rect x="531.8" y="675.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.8" y="686.0"></text>
</g>
<g>
<title>process_backlog (11 samples, 0.68%)</title><rect x="531.8" y="659.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="534.8" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 0.68%)</title><rect x="531.8" y="643.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="534.8" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 0.68%)</title><rect x="531.8" y="627.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.8" y="638.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.68%)</title><rect x="531.8" y="611.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.8" y="622.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.06%)</title><rect x="531.8" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="534.8" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 0.62%)</title><rect x="532.5" y="595.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="535.5" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 0.62%)</title><rect x="532.5" y="579.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.5" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 0.62%)</title><rect x="532.5" y="563.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="535.5" y="574.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 0.62%)</title><rect x="532.5" y="547.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="535.5" y="558.0"></text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 0.62%)</title><rect x="532.5" y="531.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.5" y="542.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="533.2" y="515.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="536.2" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 0.50%)</title><rect x="534.0" y="515.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="537.0" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.50%)</title><rect x="534.0" y="499.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="537.0" y="510.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="534.7" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="537.7" y="494.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.06%)</title><rect x="534.7" y="467.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="534.7" y="451.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.7" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="534.7" y="435.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="537.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="534.7" y="419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="537.7" y="430.0"></text>
</g>
<g>
<title>tcp_data_queue (6 samples, 0.37%)</title><rect x="535.4" y="483.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="538.4" y="494.0"></text>
</g>
<g>
<title>tcp_fin (6 samples, 0.37%)</title><rect x="535.4" y="467.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.4" y="478.0"></text>
</g>
<g>
<title>sock_def_wakeup (6 samples, 0.37%)</title><rect x="535.4" y="451.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="538.4" y="462.0"></text>
</g>
<g>
<title>__wake_up (6 samples, 0.37%)</title><rect x="535.4" y="435.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="538.4" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.37%)</title><rect x="535.4" y="419.0" width="4.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.4" y="430.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.37%)</title><rect x="535.4" y="403.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="538.4" y="414.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.06%)</title><rect x="539.8" y="739.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="542.8" y="750.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.06%)</title><rect x="540.6" y="851.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="543.6" y="862.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.06%)</title><rect x="541.3" y="963.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="544.3" y="974.0"></text>
</g>
<g>
<title>__libc_close (1 samples, 0.06%)</title><rect x="542.0" y="1027.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="545.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="542.0" y="1011.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="545.0" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="542.0" y="995.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="545.0" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="542.0" y="979.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.0" y="990.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.06%)</title><rect x="542.0" y="963.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="545.0" y="974.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.06%)</title><rect x="542.0" y="947.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="545.0" y="958.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.06%)</title><rect x="542.0" y="931.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="545.0" y="942.0"></text>
</g>
<g>
<title>dput (1 samples, 0.06%)</title><rect x="542.0" y="915.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="545.0" y="926.0"></text>
</g>
<g>
<title>__dentry_kill (1 samples, 0.06%)</title><rect x="542.0" y="899.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.0" y="910.0"></text>
</g>
<g>
<title>dentry_free (1 samples, 0.06%)</title><rect x="542.0" y="883.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="545.0" y="894.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="542.0" y="867.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="545.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getNoRepRequest (4 samples, 0.25%)</title><rect x="542.8" y="1139.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="542.8" y="1123.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="542.8" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getCloneRequest (3 samples, 0.19%)</title><rect x="543.5" y="1123.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.19%)</title><rect x="543.5" y="1107.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.19%)</title><rect x="543.5" y="1091.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.19%)</title><rect x="543.5" y="1075.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.5" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.19%)</title><rect x="543.5" y="1059.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.5" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.19%)</title><rect x="543.5" y="1043.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.5" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.19%)</title><rect x="543.5" y="1027.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.06%)</title><rect x="543.5" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.5" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="543.5" y="995.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="546.5" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.06%)</title><rect x="544.2" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="547.2" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="544.2" y="995.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="547.2" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.06%)</title><rect x="545.0" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.0" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="545.0" y="995.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="548.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/PutHelper.getPutReplicaResponse (369 samples, 22.95%)</title><rect x="545.7" y="1139.0" width="270.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.7" y="1150.0">ru/mail/polis/service/stasyanoi/PutH..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="545.7" y="1123.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="545.7" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="545.7" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getResponsesInternal (359 samples, 22.33%)</title><rect x="546.4" y="1123.0" width="263.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.4" y="1134.0">ru/mail/polis/service/stasyanoi/Get..</text>
</g>
<g>
<title>java/lang/Object.notifyAll (1 samples, 0.06%)</title><rect x="548.6" y="1107.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.6" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (1 samples, 0.06%)</title><rect x="549.4" y="1107.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="549.4" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="549.4" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (353 samples, 21.95%)</title><rect x="550.1" y="1107.0" width="259.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.1" y="1118.0">java/util/stream/ReferencePipeline...</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (353 samples, 21.95%)</title><rect x="550.1" y="1091.0" width="259.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.1" y="1102.0">java/util/stream/AbstractPipeline.e..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (353 samples, 21.95%)</title><rect x="550.1" y="1075.0" width="259.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.1" y="1086.0">java/util/stream/ReduceOps$ReduceOp..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (353 samples, 21.95%)</title><rect x="550.1" y="1059.0" width="259.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.1" y="1070.0">java/util/stream/AbstractPipeline.w..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (353 samples, 21.95%)</title><rect x="550.1" y="1043.0" width="259.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.1" y="1054.0">java/util/stream/AbstractPipeline.c..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (353 samples, 21.95%)</title><rect x="550.1" y="1027.0" width="259.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.1" y="1038.0">java/util/stream/AbstractPipeline.c..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (351 samples, 21.83%)</title><rect x="550.1" y="1011.0" width="257.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.1" y="1022.0">java/util/stream/ReferencePipeline..</text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.tryAdvance (349 samples, 21.70%)</title><rect x="550.8" y="995.0" width="256.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.8" y="1006.0">java/util/TreeMap$EntrySpliterator..</text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="552.3" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (346 samples, 21.52%)</title><rect x="553.0" y="979.0" width="253.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.0" y="990.0">java/util/stream/SliceOps$1$1.accept</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (346 samples, 21.52%)</title><rect x="553.0" y="963.0" width="253.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.0" y="974.0">java/util/stream/ReferencePipeline..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (333 samples, 20.71%)</title><rect x="553.0" y="947.0" width="244.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.0" y="958.0">java/util/stream/ReferencePipeli..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="553.8" y="931.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="556.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (2 samples, 0.12%)</title><rect x="554.5" y="931.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$112/920646907.accept (1 samples, 0.06%)</title><rect x="555.2" y="915.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.2" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="555.2" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.2" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="555.2" y="883.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.2" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="555.2" y="867.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.2" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="555.2" y="851.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.2" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="555.2" y="835.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$101/2119133134.apply (329 samples, 20.46%)</title><rect x="556.0" y="931.0" width="241.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.0" y="942.0">ru/mail/polis/service/stasyanoi/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.lambda$getResponsesInternal$1 (329 samples, 20.46%)</title><rect x="556.0" y="915.0" width="241.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.0" y="926.0">ru/mail/polis/service/stasyanoi/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (275 samples, 17.10%)</title><rect x="556.7" y="899.0" width="201.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.7" y="910.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (275 samples, 17.10%)</title><rect x="556.7" y="883.0" width="201.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="559.7" y="894.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 1.18%)</title><rect x="557.4" y="867.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.4" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="557.4" y="851.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="560.4" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="557.4" y="835.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="560.4" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="557.4" y="819.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="560.4" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="557.4" y="803.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="560.4" y="814.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.06%)</title><rect x="557.4" y="787.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="560.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 1.12%)</title><rect x="558.2" y="851.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.2" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.06%)</title><rect x="558.2" y="835.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="561.2" y="846.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="558.2" y="819.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="561.2" y="830.0"></text>
</g>
<g>
<title>__GI___recv (16 samples, 1.00%)</title><rect x="558.9" y="835.0" width="11.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="561.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.93%)</title><rect x="559.6" y="819.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.93%)</title><rect x="559.6" y="803.0" width="11.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="562.6" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.06%)</title><rect x="559.6" y="787.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.81%)</title><rect x="560.4" y="787.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="563.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.81%)</title><rect x="560.4" y="771.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="563.4" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.81%)</title><rect x="560.4" y="755.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.4" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.81%)</title><rect x="560.4" y="739.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.4" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.81%)</title><rect x="560.4" y="723.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.4" y="734.0"></text>
</g>
<g>
<title>sk_wait_data (7 samples, 0.44%)</title><rect x="561.1" y="707.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="564.1" y="718.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="561.8" y="691.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="564.8" y="702.0"></text>
</g>
<g>
<title>wait_woken (5 samples, 0.31%)</title><rect x="562.6" y="691.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="565.6" y="702.0"></text>
</g>
<g>
<title>schedule_timeout (5 samples, 0.31%)</title><rect x="562.6" y="675.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="565.6" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="562.6" y="659.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="565.6" y="670.0"></text>
</g>
<g>
<title>del_timer_sync (2 samples, 0.12%)</title><rect x="563.3" y="659.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.3" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="563.3" y="643.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="566.3" y="654.0"></text>
</g>
<g>
<title>try_to_del_timer_sync (1 samples, 0.06%)</title><rect x="564.0" y="643.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="567.0" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="564.0" y="627.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.0" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.12%)</title><rect x="564.8" y="659.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="567.8" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="565.5" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.5" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="565.5" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="568.5" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.25%)</title><rect x="566.2" y="707.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.2" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.25%)</title><rect x="566.2" y="691.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="569.2" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.19%)</title><rect x="567.0" y="675.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.0" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.12%)</title><rect x="567.0" y="659.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="570.0" y="670.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.06%)</title><rect x="568.4" y="659.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.4" y="670.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.06%)</title><rect x="569.2" y="707.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.2" y="718.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="569.9" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="572.9" y="798.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="569.9" y="771.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="572.9" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.06%)</title><rect x="570.6" y="835.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="573.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (18 samples, 1.12%)</title><rect x="571.4" y="867.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.12%)</title><rect x="571.4" y="851.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.12%)</title><rect x="571.4" y="835.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="571.4" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="571.4" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.06%)</title><rect x="572.1" y="819.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.06%)</title><rect x="572.1" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.06%)</title><rect x="572.1" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.06%)</title><rect x="572.1" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="572.8" y="851.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="573.6" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="573.6" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="573.6" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.6" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="573.6" y="803.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="576.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.mayHaveBody (1 samples, 0.06%)</title><rect x="574.3" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.44%)</title><rect x="575.0" y="851.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.44%)</title><rect x="575.0" y="835.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.44%)</title><rect x="575.0" y="819.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.0" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="579.5" y="803.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="582.5" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="579.5" y="787.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="582.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.12%)</title><rect x="580.2" y="851.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.2" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.06%)</title><rect x="581.7" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="584.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.06%)</title><rect x="582.4" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.12%)</title><rect x="583.1" y="851.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.12%)</title><rect x="583.1" y="835.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.06%)</title><rect x="583.1" y="819.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.06%)</title><rect x="583.9" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="586.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.06%)</title><rect x="583.9" y="803.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.06%)</title><rect x="583.9" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="583.9" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.19%)</title><rect x="584.6" y="867.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.12%)</title><rect x="585.3" y="851.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.06%)</title><rect x="585.3" y="835.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.06%)</title><rect x="586.1" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="586.1" y="819.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.12%)</title><rect x="586.8" y="867.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="586.8" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="589.8" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="586.8" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="587.5" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="587.5" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="587.5" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.06%)</title><rect x="588.3" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.3" y="878.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.06%)</title><rect x="588.3" y="851.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="591.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="588.3" y="835.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="591.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="588.3" y="819.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="591.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.06%)</title><rect x="588.3" y="803.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="591.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (49 samples, 3.05%)</title><rect x="589.0" y="867.0" width="36.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.0" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.06%)</title><rect x="589.0" y="851.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="592.0" y="862.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="589.0" y="835.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="592.0" y="846.0"></text>
</g>
<g>
<title>__libc_send (48 samples, 2.99%)</title><rect x="589.7" y="851.0" width="35.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="592.7" y="862.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 2.99%)</title><rect x="589.7" y="835.0" width="35.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.7" y="846.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (48 samples, 2.99%)</title><rect x="589.7" y="819.0" width="35.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.7" y="830.0">do_..</text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.06%)</title><rect x="589.7" y="803.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="592.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_sendto (47 samples, 2.92%)</title><rect x="590.5" y="803.0" width="34.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.5" y="814.0">__..</text>
</g>
<g>
<title>__sys_sendto (47 samples, 2.92%)</title><rect x="590.5" y="787.0" width="34.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.5" y="798.0">__..</text>
</g>
<g>
<title>sock_sendmsg (47 samples, 2.92%)</title><rect x="590.5" y="771.0" width="34.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="593.5" y="782.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (46 samples, 2.86%)</title><rect x="591.2" y="755.0" width="33.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="594.2" y="766.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (45 samples, 2.80%)</title><rect x="591.9" y="739.0" width="33.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="594.9" y="750.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="591.9" y="723.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.9" y="734.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.06%)</title><rect x="592.7" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="595.7" y="734.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.19%)</title><rect x="593.4" y="723.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="596.4" y="734.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.19%)</title><rect x="593.4" y="707.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.4" y="718.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.19%)</title><rect x="593.4" y="691.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="596.4" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.19%)</title><rect x="593.4" y="675.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="596.4" y="686.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.06%)</title><rect x="593.4" y="659.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="596.4" y="670.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="594.1" y="659.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="597.1" y="670.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.06%)</title><rect x="594.1" y="643.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.1" y="654.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.06%)</title><rect x="594.9" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="597.9" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (39 samples, 2.43%)</title><rect x="595.6" y="723.0" width="28.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="598.6" y="734.0">tc..</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="596.3" y="707.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.3" y="718.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="596.3" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="599.3" y="702.0"></text>
</g>
<g>
<title>tcp_push (37 samples, 2.30%)</title><rect x="597.1" y="707.0" width="27.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.1" y="718.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (37 samples, 2.30%)</title><rect x="597.1" y="691.0" width="27.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="600.1" y="702.0">_..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="597.1" y="675.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.1" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (36 samples, 2.24%)</title><rect x="597.8" y="675.0" width="26.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.8" y="686.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (33 samples, 2.05%)</title><rect x="598.5" y="659.0" width="24.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.5" y="670.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 2.05%)</title><rect x="598.5" y="643.0" width="24.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.5" y="654.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 1.87%)</title><rect x="598.5" y="627.0" width="22.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.5" y="638.0">_..</text>
</g>
<g>
<title>ip_local_out (30 samples, 1.87%)</title><rect x="598.5" y="611.0" width="22.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="601.5" y="622.0">i..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.25%)</title><rect x="598.5" y="595.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.5" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.06%)</title><rect x="598.5" y="579.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.5" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.19%)</title><rect x="599.3" y="579.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="602.3" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.19%)</title><rect x="599.3" y="563.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.3" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.19%)</title><rect x="599.3" y="547.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="602.3" y="558.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.06%)</title><rect x="600.0" y="531.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.0" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="600.7" y="531.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.7" y="542.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="600.7" y="515.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.7" y="526.0"></text>
</g>
<g>
<title>ip_output (26 samples, 1.62%)</title><rect x="601.5" y="595.0" width="19.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="604.5" y="606.0"></text>
</g>
<g>
<title>ip_finish_output (26 samples, 1.62%)</title><rect x="601.5" y="579.0" width="19.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.5" y="590.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="601.5" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.5" y="574.0"></text>
</g>
<g>
<title>__ip_finish_output (25 samples, 1.55%)</title><rect x="602.2" y="563.0" width="18.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="605.2" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (25 samples, 1.55%)</title><rect x="602.2" y="547.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.2" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (23 samples, 1.43%)</title><rect x="602.2" y="531.0" width="16.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="605.2" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.20 (23 samples, 1.43%)</title><rect x="602.2" y="515.0" width="16.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.2" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 1.43%)</title><rect x="602.2" y="499.0" width="16.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.2" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 1.43%)</title><rect x="602.2" y="483.0" width="16.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="605.2" y="494.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 1.37%)</title><rect x="602.9" y="467.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="605.9" y="478.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 1.37%)</title><rect x="602.9" y="451.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="605.9" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 1.37%)</title><rect x="602.9" y="435.0" width="16.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="605.9" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 1.37%)</title><rect x="602.9" y="419.0" width="16.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.9" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="602.9" y="403.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="605.9" y="414.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 1.24%)</title><rect x="603.7" y="403.0" width="14.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="606.7" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (20 samples, 1.24%)</title><rect x="603.7" y="387.0" width="14.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.7" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (18 samples, 1.12%)</title><rect x="603.7" y="371.0" width="13.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.7" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 1.00%)</title><rect x="603.7" y="355.0" width="11.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="606.7" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 1.00%)</title><rect x="603.7" y="339.0" width="11.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 1.00%)</title><rect x="603.7" y="323.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="606.7" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="605.1" y="307.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="608.1" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.75%)</title><rect x="605.9" y="307.0" width="8.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="608.9" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.68%)</title><rect x="606.6" y="291.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.6" y="302.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.31%)</title><rect x="607.3" y="275.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.3" y="286.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 0.25%)</title><rect x="608.1" y="259.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.1" y="270.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (4 samples, 0.25%)</title><rect x="608.1" y="243.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.1" y="254.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 0.25%)</title><rect x="608.1" y="227.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="611.1" y="238.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.19%)</title><rect x="608.8" y="211.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="611.8" y="222.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.19%)</title><rect x="608.8" y="195.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="611.8" y="206.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.19%)</title><rect x="608.8" y="179.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="611.8" y="190.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.12%)</title><rect x="608.8" y="163.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="611.8" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="608.8" y="147.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.8" y="158.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.12%)</title><rect x="608.8" y="131.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="611.8" y="142.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.12%)</title><rect x="608.8" y="115.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.8" y="126.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="608.8" y="99.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.8" y="110.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="608.8" y="83.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.8" y="94.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="609.5" y="99.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.5" y="110.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="610.3" y="163.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="613.3" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="610.3" y="147.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="613.3" y="158.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="610.3" y="131.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.3" y="142.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="610.3" y="115.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="613.3" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="610.3" y="99.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="613.3" y="110.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="610.3" y="83.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.3" y="94.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="610.3" y="67.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="613.3" y="78.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="610.3" y="51.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="613.3" y="62.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.31%)</title><rect x="611.0" y="275.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="614.0" y="286.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.31%)</title><rect x="611.0" y="259.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="614.0" y="270.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.31%)</title><rect x="611.0" y="243.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="614.0" y="254.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.25%)</title><rect x="611.7" y="227.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="614.7" y="238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.25%)</title><rect x="611.7" y="211.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="614.7" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.25%)</title><rect x="611.7" y="195.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.06%)</title><rect x="614.7" y="307.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="617.7" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="615.4" y="355.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="618.4" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="616.1" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="619.1" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="616.1" y="339.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="619.1" y="350.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="616.1" y="323.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.1" y="334.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.06%)</title><rect x="616.9" y="371.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="619.9" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="617.6" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.6" y="382.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.06%)</title><rect x="618.3" y="403.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="621.3" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.12%)</title><rect x="619.1" y="531.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.1" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.12%)</title><rect x="619.1" y="515.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="622.1" y="526.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="619.8" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="622.8" y="510.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="619.8" y="483.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.8" y="494.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="620.5" y="627.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.5" y="638.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.06%)</title><rect x="621.3" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="624.3" y="638.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="622.0" y="627.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="625.0" y="638.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.12%)</title><rect x="622.7" y="659.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.7" y="670.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.06%)</title><rect x="622.7" y="643.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="625.7" y="654.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="623.5" y="643.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="626.5" y="654.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="623.5" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="626.5" y="638.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="623.5" y="611.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="626.5" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="623.5" y="595.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="626.5" y="606.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="624.2" y="723.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="627.2" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (182 samples, 11.32%)</title><rect x="625.0" y="867.0" width="133.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.0" y="878.0">one/nio/pool/Pool..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.06%)</title><rect x="625.0" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.0" y="862.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (181 samples, 11.26%)</title><rect x="625.7" y="851.0" width="132.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.7" y="862.0">one/nio/pool/Soc..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (181 samples, 11.26%)</title><rect x="625.7" y="835.0" width="132.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.7" y="846.0">one/nio/pool/Soc..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (148 samples, 9.20%)</title><rect x="626.4" y="819.0" width="108.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.4" y="830.0">one/nio/net/N..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (146 samples, 9.08%)</title><rect x="626.4" y="803.0" width="107.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.4" y="814.0">one/nio/net/N..</text>
</g>
<g>
<title>[unknown] (146 samples, 9.08%)</title><rect x="626.4" y="787.0" width="107.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="629.4" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="626.4" y="771.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="629.4" y="782.0"></text>
</g>
<g>
<title>sockaddr_from_java (1 samples, 0.06%)</title><rect x="626.4" y="755.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="629.4" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="626.4" y="739.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="629.4" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="626.4" y="723.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="629.4" y="734.0"></text>
</g>
<g>
<title>__libc_connect (145 samples, 9.02%)</title><rect x="627.2" y="771.0" width="106.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="630.2" y="782.0">__libc_connect</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (145 samples, 9.02%)</title><rect x="627.2" y="755.0" width="106.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="630.2" y="766.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (145 samples, 9.02%)</title><rect x="627.2" y="739.0" width="106.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="630.2" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_connect (143 samples, 8.89%)</title><rect x="628.6" y="723.0" width="105.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="631.6" y="734.0">__x64_sys_co..</text>
</g>
<g>
<title>__sys_connect (142 samples, 8.83%)</title><rect x="628.6" y="707.0" width="104.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="631.6" y="718.0">__sys_connect</text>
</g>
<g>
<title>inet_stream_connect (140 samples, 8.71%)</title><rect x="628.6" y="691.0" width="102.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="631.6" y="702.0">inet_stream_..</text>
</g>
<g>
<title>__inet_stream_connect (140 samples, 8.71%)</title><rect x="628.6" y="675.0" width="102.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.6" y="686.0">__inet_strea..</text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.06%)</title><rect x="629.4" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="632.4" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="629.4" y="643.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="632.4" y="654.0"></text>
</g>
<g>
<title>release_sock (55 samples, 3.42%)</title><rect x="630.1" y="659.0" width="40.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="633.1" y="670.0">rel..</text>
</g>
<g>
<title>__release_sock (55 samples, 3.42%)</title><rect x="630.1" y="643.0" width="40.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="633.1" y="654.0">__r..</text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 3.42%)</title><rect x="630.1" y="627.0" width="40.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.1" y="638.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="630.1" y="611.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="633.1" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (53 samples, 3.30%)</title><rect x="630.8" y="611.0" width="38.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.8" y="622.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="631.6" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.6" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="631.6" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="634.6" y="590.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="631.6" y="563.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.6" y="574.0"></text>
</g>
<g>
<title>inet_sk_rx_dst_set (1 samples, 0.06%)</title><rect x="632.3" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.3" y="606.0"></text>
</g>
<g>
<title>sock_def_wakeup (2 samples, 0.12%)</title><rect x="633.0" y="595.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="636.0" y="606.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.12%)</title><rect x="633.0" y="579.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.0" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="633.0" y="563.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="636.0" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="633.0" y="547.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="636.0" y="558.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.25%)</title><rect x="634.5" y="595.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="637.5" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.12%)</title><rect x="636.0" y="579.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="639.0" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="636.0" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.0" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="636.0" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.0" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="636.0" y="531.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.0" y="542.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="636.7" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="639.7" y="574.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="637.4" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="640.4" y="606.0"></text>
</g>
<g>
<title>tcp_finish_connect (3 samples, 0.19%)</title><rect x="638.2" y="595.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.2" y="606.0"></text>
</g>
<g>
<title>inet_sk_rebuild_header (1 samples, 0.06%)</title><rect x="638.2" y="579.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.2" y="590.0"></text>
</g>
<g>
<title>tcp_init_transfer (2 samples, 0.12%)</title><rect x="638.9" y="579.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.9" y="590.0"></text>
</g>
<g>
<title>tcp_init_congestion_control (1 samples, 0.06%)</title><rect x="639.6" y="563.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.6" y="574.0"></text>
</g>
<g>
<title>bictcp_init (1 samples, 0.06%)</title><rect x="639.6" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.6" y="558.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.06%)</title><rect x="639.6" y="531.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="642.6" y="542.0"></text>
</g>
<g>
<title>tcp_parse_options (1 samples, 0.06%)</title><rect x="640.4" y="595.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="643.4" y="606.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.12%)</title><rect x="641.1" y="595.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="644.1" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (36 samples, 2.24%)</title><rect x="642.6" y="595.0" width="26.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.6" y="606.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (36 samples, 2.24%)</title><rect x="642.6" y="579.0" width="26.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.6" y="590.0">_..</text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 2.24%)</title><rect x="642.6" y="563.0" width="26.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.6" y="574.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (35 samples, 2.18%)</title><rect x="643.3" y="547.0" width="25.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="646.3" y="558.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (35 samples, 2.18%)</title><rect x="643.3" y="531.0" width="25.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="646.3" y="542.0">_..</text>
</g>
<g>
<title>ip_local_out (35 samples, 2.18%)</title><rect x="643.3" y="515.0" width="25.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="646.3" y="526.0">i..</text>
</g>
<g>
<title>ip_output (35 samples, 2.18%)</title><rect x="643.3" y="499.0" width="25.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="646.3" y="510.0">i..</text>
</g>
<g>
<title>ip_finish_output (35 samples, 2.18%)</title><rect x="643.3" y="483.0" width="25.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="646.3" y="494.0">i..</text>
</g>
<g>
<title>__ip_finish_output (35 samples, 2.18%)</title><rect x="643.3" y="467.0" width="25.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="646.3" y="478.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 2.18%)</title><rect x="643.3" y="451.0" width="25.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.3" y="462.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 2.05%)</title><rect x="643.3" y="435.0" width="24.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="646.3" y="446.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (33 samples, 2.05%)</title><rect x="643.3" y="419.0" width="24.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="646.3" y="430.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 1.99%)</title><rect x="644.0" y="403.0" width="23.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="647.0" y="414.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 1.99%)</title><rect x="644.0" y="387.0" width="23.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.0" y="398.0">_..</text>
</g>
<g>
<title>net_rx_action (32 samples, 1.99%)</title><rect x="644.0" y="371.0" width="23.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.0" y="382.0">n..</text>
</g>
<g>
<title>process_backlog (32 samples, 1.99%)</title><rect x="644.0" y="355.0" width="23.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="647.0" y="366.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (32 samples, 1.99%)</title><rect x="644.0" y="339.0" width="23.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="647.0" y="350.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 1.99%)</title><rect x="644.0" y="323.0" width="23.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="647.0" y="334.0">_..</text>
</g>
<g>
<title>ip_rcv (31 samples, 1.93%)</title><rect x="644.8" y="307.0" width="22.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="647.8" y="318.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (31 samples, 1.93%)</title><rect x="644.8" y="291.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="647.8" y="302.0">i..</text>
</g>
<g>
<title>ip_local_deliver (31 samples, 1.93%)</title><rect x="644.8" y="275.0" width="22.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="647.8" y="286.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 1.74%)</title><rect x="644.8" y="259.0" width="20.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.8" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 1.74%)</title><rect x="644.8" y="243.0" width="20.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="647.8" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 1.74%)</title><rect x="644.8" y="227.0" width="20.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="647.8" y="238.0"></text>
</g>
<g>
<title>tcp_check_req (11 samples, 0.68%)</title><rect x="644.8" y="211.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.8" y="222.0"></text>
</g>
<g>
<title>inet_csk_complete_hashdance (2 samples, 0.12%)</title><rect x="645.5" y="195.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="648.5" y="206.0"></text>
</g>
<g>
<title>inet_csk_reqsk_queue_add (1 samples, 0.06%)</title><rect x="645.5" y="179.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="648.5" y="190.0"></text>
</g>
<g>
<title>inet_csk_reqsk_queue_drop (1 samples, 0.06%)</title><rect x="646.2" y="179.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="649.2" y="190.0"></text>
</g>
<g>
<title>tcp_synack_rtt_meas (1 samples, 0.06%)</title><rect x="647.0" y="195.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="650.0" y="206.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="647.0" y="179.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.0" y="190.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (7 samples, 0.44%)</title><rect x="647.7" y="195.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (7 samples, 0.44%)</title><rect x="647.7" y="179.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="650.7" y="190.0"></text>
</g>
<g>
<title>__inet_inherit_port (1 samples, 0.06%)</title><rect x="647.7" y="163.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.7" y="174.0"></text>
</g>
<g>
<title>inet_ehash_nolisten (1 samples, 0.06%)</title><rect x="648.4" y="163.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.4" y="174.0"></text>
</g>
<g>
<title>inet_ehash_insert (1 samples, 0.06%)</title><rect x="648.4" y="147.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.4" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="648.4" y="131.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.4" y="142.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="649.2" y="163.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.2" y="174.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (4 samples, 0.25%)</title><rect x="649.9" y="163.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="652.9" y="174.0"></text>
</g>
<g>
<title>inet_csk_clone_lock (3 samples, 0.19%)</title><rect x="649.9" y="147.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.9" y="158.0"></text>
</g>
<g>
<title>sk_clone_lock (3 samples, 0.19%)</title><rect x="649.9" y="131.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.9" y="142.0"></text>
</g>
<g>
<title>security_sk_clone (2 samples, 0.12%)</title><rect x="649.9" y="115.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.9" y="126.0"></text>
</g>
<g>
<title>apparmor_sk_clone_security (2 samples, 0.12%)</title><rect x="649.9" y="99.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="652.9" y="110.0"></text>
</g>
<g>
<title>sk_prot_alloc (1 samples, 0.06%)</title><rect x="651.4" y="115.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.4" y="126.0"></text>
</g>
<g>
<title>security_sk_alloc (1 samples, 0.06%)</title><rect x="651.4" y="99.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="654.4" y="110.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.06%)</title><rect x="651.4" y="83.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="654.4" y="94.0"></text>
</g>
<g>
<title>inet_csk_reset_keepalive_timer (1 samples, 0.06%)</title><rect x="652.1" y="147.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="655.1" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="652.1" y="131.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.1" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="652.1" y="115.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="655.1" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="652.1" y="99.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.1" y="110.0"></text>
</g>
<g>
<title>tcp_child_process (17 samples, 1.06%)</title><rect x="652.8" y="211.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="655.8" y="222.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 0.68%)</title><rect x="652.8" y="195.0" width="8.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="655.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.62%)</title><rect x="653.6" y="179.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="656.6" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.62%)</title><rect x="653.6" y="163.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="656.6" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.62%)</title><rect x="653.6" y="147.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="656.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (6 samples, 0.37%)</title><rect x="660.9" y="195.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="663.9" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.31%)</title><rect x="660.9" y="179.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.9" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.31%)</title><rect x="660.9" y="163.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="663.9" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.12%)</title><rect x="660.9" y="147.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="663.9" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="661.6" y="131.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="664.6" y="142.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.19%)</title><rect x="662.4" y="147.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.4" y="158.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.19%)</title><rect x="662.4" y="131.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="665.4" y="142.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="662.4" y="115.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.4" y="126.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.12%)</title><rect x="663.1" y="115.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="666.1" y="126.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.12%)</title><rect x="663.1" y="99.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.1" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="664.6" y="179.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="667.6" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.19%)</title><rect x="665.3" y="259.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="668.3" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.19%)</title><rect x="665.3" y="243.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="668.3" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.19%)</title><rect x="665.3" y="227.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="668.3" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.12%)</title><rect x="667.5" y="435.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.5" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.12%)</title><rect x="667.5" y="419.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.5" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="667.5" y="403.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="670.5" y="414.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.06%)</title><rect x="667.5" y="387.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="670.5" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="668.2" y="403.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.2" y="414.0"></text>
</g>
<g>
<title>tcp_sync_mss (1 samples, 0.06%)</title><rect x="669.0" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.0" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.06%)</title><rect x="669.7" y="611.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="672.7" y="622.0"></text>
</g>
<g>
<title>tcp_v6_connect (82 samples, 5.10%)</title><rect x="670.4" y="659.0" width="60.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="673.4" y="670.0">tcp_v6..</text>
</g>
<g>
<title>tcp_v4_connect (81 samples, 5.04%)</title><rect x="671.2" y="643.0" width="59.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="674.2" y="654.0">tcp_v4..</text>
</g>
<g>
<title>inet_hash_connect (4 samples, 0.25%)</title><rect x="671.2" y="627.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.2" y="638.0"></text>
</g>
<g>
<title>__inet_hash_connect (4 samples, 0.25%)</title><rect x="671.2" y="611.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.2" y="622.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="671.9" y="595.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="674.9" y="606.0"></text>
</g>
<g>
<title>inet_twsk_bind_unhash (1 samples, 0.06%)</title><rect x="672.6" y="595.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="675.6" y="606.0"></text>
</g>
<g>
<title>inet_twsk_deschedule_put (1 samples, 0.06%)</title><rect x="673.4" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.4" y="606.0"></text>
</g>
<g>
<title>inet_twsk_put (1 samples, 0.06%)</title><rect x="673.4" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="676.4" y="590.0"></text>
</g>
<g>
<title>ip_route_output_flow (2 samples, 0.12%)</title><rect x="674.1" y="627.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="677.1" y="638.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (2 samples, 0.12%)</title><rect x="674.1" y="611.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.1" y="622.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (2 samples, 0.12%)</title><rect x="674.1" y="595.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="677.1" y="606.0"></text>
</g>
<g>
<title>fib_table_lookup (1 samples, 0.06%)</title><rect x="674.1" y="579.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="677.1" y="590.0"></text>
</g>
<g>
<title>inet_lookup_ifaddr_rcu (1 samples, 0.06%)</title><rect x="674.9" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.9" y="590.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (6 samples, 0.37%)</title><rect x="675.6" y="627.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="678.6" y="638.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (6 samples, 0.37%)</title><rect x="675.6" y="611.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="678.6" y="622.0"></text>
</g>
<g>
<title>fib_table_lookup (2 samples, 0.12%)</title><rect x="678.5" y="595.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.5" y="606.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.06%)</title><rect x="680.0" y="627.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="683.0" y="638.0"></text>
</g>
<g>
<title>secure_ipv4_port_ephemeral (1 samples, 0.06%)</title><rect x="680.7" y="627.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.7" y="638.0"></text>
</g>
<g>
<title>security_sk_classify_flow (1 samples, 0.06%)</title><rect x="681.5" y="627.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.5" y="638.0"></text>
</g>
<g>
<title>siphash_1u64 (1 samples, 0.06%)</title><rect x="682.2" y="627.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="685.2" y="638.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.06%)</title><rect x="682.9" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="685.9" y="638.0"></text>
</g>
<g>
<title>tcp_clear_retrans (1 samples, 0.06%)</title><rect x="683.7" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.7" y="638.0"></text>
</g>
<g>
<title>tcp_connect (63 samples, 3.92%)</title><rect x="684.4" y="627.0" width="46.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="687.4" y="638.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (56 samples, 3.48%)</title><rect x="684.4" y="611.0" width="41.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="687.4" y="622.0">__t..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="685.1" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="688.1" y="606.0"></text>
</g>
<g>
<title>ip_queue_xmit (52 samples, 3.23%)</title><rect x="685.9" y="595.0" width="38.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="688.9" y="606.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (52 samples, 3.23%)</title><rect x="685.9" y="579.0" width="38.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="688.9" y="590.0">__i..</text>
</g>
<g>
<title>ip_local_out (52 samples, 3.23%)</title><rect x="685.9" y="563.0" width="38.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="688.9" y="574.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (13 samples, 0.81%)</title><rect x="685.9" y="547.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="688.9" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.06%)</title><rect x="685.9" y="531.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.9" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.75%)</title><rect x="686.6" y="531.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="689.6" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (11 samples, 0.68%)</title><rect x="686.6" y="515.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="689.6" y="526.0"></text>
</g>
<g>
<title>init_conntrack.isra.43?[nf_conntrack] (1 samples, 0.06%)</title><rect x="686.6" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="689.6" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (10 samples, 0.62%)</title><rect x="687.3" y="499.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="690.3" y="510.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.19%)</title><rect x="687.3" y="483.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="690.3" y="494.0"></text>
</g>
<g>
<title>init_conntrack.isra.43?[nf_conntrack] (3 samples, 0.19%)</title><rect x="689.5" y="483.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="692.5" y="494.0"></text>
</g>
<g>
<title>__nf_conntrack_alloc?[nf_conntrack] (1 samples, 0.06%)</title><rect x="690.3" y="467.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="693.3" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="690.3" y="451.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="693.3" y="462.0"></text>
</g>
<g>
<title>nf_ct_ext_add?[nf_conntrack] (1 samples, 0.06%)</title><rect x="691.0" y="467.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.0" y="478.0"></text>
</g>
<g>
<title>__krealloc (1 samples, 0.06%)</title><rect x="691.0" y="451.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.0" y="462.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="691.0" y="435.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.0" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_destroy (3 samples, 0.19%)</title><rect x="691.7" y="483.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="694.7" y="494.0"></text>
</g>
<g>
<title>destroy_conntrack?[nf_conntrack] (3 samples, 0.19%)</title><rect x="691.7" y="467.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="694.7" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_free?[nf_conntrack] (3 samples, 0.19%)</title><rect x="691.7" y="451.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.7" y="462.0"></text>
</g>
<g>
<title>nf_ct_ext_destroy?[nf_conntrack] (2 samples, 0.12%)</title><rect x="691.7" y="435.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.7" y="446.0"></text>
</g>
<g>
<title>nf_nat_cleanup_conntrack?[nf_nat] (1 samples, 0.06%)</title><rect x="693.2" y="435.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="693.9" y="483.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.9" y="494.0"></text>
</g>
<g>
<title>nf_ct_delete?[nf_conntrack] (1 samples, 0.06%)</title><rect x="693.9" y="467.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.9" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="694.7" y="515.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.7" y="526.0"></text>
</g>
<g>
<title>ip_output (39 samples, 2.43%)</title><rect x="695.4" y="547.0" width="28.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="698.4" y="558.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="695.4" y="531.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.4" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (36 samples, 2.24%)</title><rect x="696.1" y="531.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="699.1" y="542.0">i..</text>
</g>
<g>
<title>__ip_finish_output (35 samples, 2.18%)</title><rect x="696.9" y="515.0" width="25.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="699.9" y="526.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 2.18%)</title><rect x="696.9" y="499.0" width="25.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="699.9" y="510.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 1.87%)</title><rect x="697.6" y="483.0" width="22.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="700.6" y="494.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (30 samples, 1.87%)</title><rect x="697.6" y="467.0" width="22.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.6" y="478.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 1.87%)</title><rect x="697.6" y="451.0" width="22.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="700.6" y="462.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 1.87%)</title><rect x="697.6" y="435.0" width="22.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.6" y="446.0">_..</text>
</g>
<g>
<title>net_rx_action (29 samples, 1.80%)</title><rect x="698.3" y="419.0" width="21.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="701.3" y="430.0">n..</text>
</g>
<g>
<title>process_backlog (28 samples, 1.74%)</title><rect x="699.1" y="403.0" width="20.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.1" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb (28 samples, 1.74%)</title><rect x="699.1" y="387.0" width="20.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.1" y="398.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 1.74%)</title><rect x="699.1" y="371.0" width="20.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="702.1" y="382.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="699.1" y="355.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.1" y="366.0"></text>
</g>
<g>
<title>ip_rcv (27 samples, 1.68%)</title><rect x="699.8" y="355.0" width="19.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.8" y="366.0"></text>
</g>
<g>
<title>ip_rcv_finish (25 samples, 1.55%)</title><rect x="700.5" y="339.0" width="18.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.5" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 1.49%)</title><rect x="700.5" y="323.0" width="17.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.5" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 1.43%)</title><rect x="700.5" y="307.0" width="16.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.5" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (22 samples, 1.37%)</title><rect x="700.5" y="291.0" width="16.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.5" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 1.31%)</title><rect x="701.3" y="275.0" width="15.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="704.3" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="701.3" y="259.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.3" y="270.0"></text>
</g>
<g>
<title>__inet_lookup_listener (1 samples, 0.06%)</title><rect x="702.0" y="259.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="705.0" y="270.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="702.7" y="259.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="705.7" y="270.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="702.7" y="243.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.7" y="254.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 1.12%)</title><rect x="703.5" y="259.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="706.5" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (18 samples, 1.12%)</title><rect x="703.5" y="243.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="706.5" y="254.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (18 samples, 1.12%)</title><rect x="703.5" y="227.0" width="13.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="706.5" y="238.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (18 samples, 1.12%)</title><rect x="703.5" y="211.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.5" y="222.0"></text>
</g>
<g>
<title>tcp_conn_request (17 samples, 1.06%)</title><rect x="703.5" y="195.0" width="12.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="706.5" y="206.0"></text>
</g>
<g>
<title>inet_csk_reqsk_queue_hash_add (3 samples, 0.19%)</title><rect x="704.2" y="179.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="707.2" y="190.0"></text>
</g>
<g>
<title>inet_ehash_insert (1 samples, 0.06%)</title><rect x="704.2" y="163.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="707.2" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.06%)</title><rect x="704.2" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="707.2" y="158.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="704.9" y="163.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="707.9" y="174.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="704.9" y="147.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="707.9" y="158.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.06%)</title><rect x="705.7" y="147.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.7" y="158.0"></text>
</g>
<g>
<title>secure_tcp_ts_off (1 samples, 0.06%)</title><rect x="706.4" y="179.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_init_seq (1 samples, 0.06%)</title><rect x="707.1" y="179.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.1" y="190.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.06%)</title><rect x="707.1" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_route_req (2 samples, 0.12%)</title><rect x="707.9" y="179.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="710.9" y="190.0"></text>
</g>
<g>
<title>inet_csk_route_req (2 samples, 0.12%)</title><rect x="707.9" y="163.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.9" y="174.0"></text>
</g>
<g>
<title>ip_route_output_flow (2 samples, 0.12%)</title><rect x="707.9" y="147.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="710.9" y="158.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (2 samples, 0.12%)</title><rect x="707.9" y="131.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.9" y="142.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (2 samples, 0.12%)</title><rect x="707.9" y="115.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.9" y="126.0"></text>
</g>
<g>
<title>__ip_dev_find (1 samples, 0.06%)</title><rect x="707.9" y="99.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.9" y="110.0"></text>
</g>
<g>
<title>inet_lookup_ifaddr_rcu (1 samples, 0.06%)</title><rect x="707.9" y="83.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.9" y="94.0"></text>
</g>
<g>
<title>fib_table_lookup (1 samples, 0.06%)</title><rect x="708.6" y="99.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="711.6" y="110.0"></text>
</g>
<g>
<title>tcp_v4_send_synack (9 samples, 0.56%)</title><rect x="709.3" y="179.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.3" y="190.0"></text>
</g>
<g>
<title>ip_build_and_send_pkt (4 samples, 0.25%)</title><rect x="709.3" y="163.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.3" y="174.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 0.25%)</title><rect x="709.3" y="147.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="712.3" y="158.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.12%)</title><rect x="709.3" y="131.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.3" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="709.3" y="115.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.3" y="126.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="709.3" y="99.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="712.3" y="110.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="709.3" y="83.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.3" y="94.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.06%)</title><rect x="710.1" y="99.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.1" y="110.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="710.1" y="83.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.1" y="94.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.06%)</title><rect x="710.1" y="67.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="713.1" y="78.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.06%)</title><rect x="710.1" y="51.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.1" y="62.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.12%)</title><rect x="710.8" y="131.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="713.8" y="142.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.12%)</title><rect x="710.8" y="115.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.8" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="710.8" y="99.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="713.8" y="110.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="711.5" y="99.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.5" y="110.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="711.5" y="83.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="714.5" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="711.5" y="67.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="714.5" y="78.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="711.5" y="51.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="714.5" y="62.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="711.5" y="35.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="714.5" y="46.0"></text>
</g>
<g>
<title>ipv4_default_advmss (1 samples, 0.06%)</title><rect x="712.3" y="163.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="715.3" y="174.0"></text>
</g>
<g>
<title>tcp_make_synack (4 samples, 0.25%)</title><rect x="713.0" y="163.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.0" y="174.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.19%)</title><rect x="713.7" y="147.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.7" y="158.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (2 samples, 0.12%)</title><rect x="713.7" y="131.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.7" y="142.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="713.7" y="115.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="716.7" y="126.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="715.2" y="131.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="718.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_init_ts_off (1 samples, 0.06%)</title><rect x="715.9" y="195.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="718.9" y="206.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="716.7" y="291.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="719.7" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="717.4" y="307.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="720.4" y="318.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="717.4" y="291.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.4" y="302.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="717.4" y="275.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="720.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.06%)</title><rect x="718.1" y="323.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="721.1" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="718.9" y="339.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.9" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.25%)</title><rect x="719.6" y="483.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.6" y="494.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.25%)</title><rect x="719.6" y="467.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.6" y="478.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="720.3" y="451.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="723.3" y="462.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="720.3" y="435.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="723.3" y="446.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.06%)</title><rect x="721.1" y="451.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="724.1" y="462.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.06%)</title><rect x="721.8" y="451.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="724.8" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="722.5" y="531.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.5" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="723.3" y="531.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.3" y="542.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="723.3" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="726.3" y="526.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="723.3" y="499.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.3" y="510.0"></text>
</g>
<g>
<title>__nf_conntrack_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="723.3" y="483.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="726.3" y="494.0"></text>
</g>
<g>
<title>ipv4_default_advmss (1 samples, 0.06%)</title><rect x="724.0" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.0" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="724.0" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="727.0" y="590.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.06%)</title><rect x="724.8" y="595.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="727.8" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="725.5" y="611.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="728.5" y="622.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="725.5" y="595.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="728.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="725.5" y="579.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="728.5" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.25%)</title><rect x="727.0" y="611.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.0" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.19%)</title><rect x="727.0" y="595.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="730.0" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="727.7" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.7" y="590.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="727.7" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.7" y="574.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="728.4" y="579.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.4" y="590.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="729.2" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.2" y="606.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.06%)</title><rect x="729.9" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="732.9" y="622.0"></text>
</g>
<g>
<title>tcp_v6_pre_connect (1 samples, 0.06%)</title><rect x="730.6" y="659.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="733.6" y="670.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_sock_addr (1 samples, 0.06%)</title><rect x="730.6" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="733.6" y="654.0"></text>
</g>
<g>
<title>security_socket_connect (2 samples, 0.12%)</title><rect x="731.4" y="691.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="734.4" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_connect (2 samples, 0.12%)</title><rect x="731.4" y="675.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.4" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.12%)</title><rect x="731.4" y="659.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.4" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.06%)</title><rect x="732.1" y="643.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.1" y="654.0"></text>
</g>
<g>
<title>inet_stream_connect (1 samples, 0.06%)</title><rect x="732.8" y="707.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="735.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.toNativeAddr (2 samples, 0.12%)</title><rect x="733.6" y="803.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.6" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.12%)</title><rect x="733.6" y="787.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.6" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.12%)</title><rect x="733.6" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.6" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.12%)</title><rect x="733.6" y="755.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.6" y="766.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.12%)</title><rect x="733.6" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (2 samples, 0.12%)</title><rect x="733.6" y="723.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="736.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (2 samples, 0.12%)</title><rect x="733.6" y="707.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="736.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (2 samples, 0.12%)</title><rect x="733.6" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.06%)</title><rect x="734.3" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setKeepAlive (4 samples, 0.25%)</title><rect x="735.0" y="819.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.0" y="830.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.19%)</title><rect x="735.8" y="803.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="738.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="736.5" y="787.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.5" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="736.5" y="771.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.06%)</title><rect x="736.5" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="739.5" y="766.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.06%)</title><rect x="736.5" y="739.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.5" y="750.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.06%)</title><rect x="736.5" y="723.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="739.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.06%)</title><rect x="736.5" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="739.5" y="718.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.06%)</title><rect x="736.5" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.5" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="736.5" y="675.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="739.5" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.06%)</title><rect x="736.5" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.5" y="670.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.06%)</title><rect x="736.5" y="643.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.5" y="654.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="737.2" y="755.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setNoDelay (2 samples, 0.12%)</title><rect x="738.0" y="819.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.0" y="830.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.06%)</title><rect x="738.7" y="803.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="741.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (16 samples, 1.00%)</title><rect x="739.4" y="819.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.4" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.06%)</title><rect x="739.4" y="803.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="742.4" y="814.0"></text>
</g>
<g>
<title>__GI___setsockopt (15 samples, 0.93%)</title><rect x="740.2" y="803.0" width="11.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="743.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.93%)</title><rect x="740.2" y="787.0" width="11.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.06%)</title><rect x="740.2" y="771.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="743.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.87%)</title><rect x="740.9" y="771.0" width="10.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="743.9" y="782.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.06%)</title><rect x="741.6" y="755.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="744.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (10 samples, 0.62%)</title><rect x="742.4" y="755.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.4" y="766.0"></text>
</g>
<g>
<title>__sys_setsockopt (9 samples, 0.56%)</title><rect x="742.4" y="739.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="745.4" y="750.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="742.4" y="723.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="745.4" y="734.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="742.4" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="745.4" y="718.0"></text>
</g>
<g>
<title>security_socket_setsockopt (5 samples, 0.31%)</title><rect x="743.1" y="723.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="746.1" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (5 samples, 0.31%)</title><rect x="743.1" y="707.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.1" y="718.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (5 samples, 0.31%)</title><rect x="743.1" y="691.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="746.1" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.31%)</title><rect x="743.1" y="675.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.1" y="686.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.06%)</title><rect x="744.6" y="659.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="747.6" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.12%)</title><rect x="745.3" y="659.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="748.3" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.06%)</title><rect x="746.0" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="749.0" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.12%)</title><rect x="746.8" y="723.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="749.8" y="734.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="746.8" y="707.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="749.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="746.8" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="749.8" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="746.8" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="749.8" y="686.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.06%)</title><rect x="747.5" y="707.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="750.5" y="718.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.06%)</title><rect x="747.5" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="750.5" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="748.2" y="723.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="751.2" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="748.2" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="748.2" y="691.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="751.2" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="748.2" y="675.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="751.2" y="686.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.06%)</title><rect x="749.0" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.0" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="749.7" y="755.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="752.7" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.06%)</title><rect x="749.7" y="739.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.7" y="750.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="750.4" y="755.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (10 samples, 0.62%)</title><rect x="751.2" y="819.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (10 samples, 0.62%)</title><rect x="751.2" y="803.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.socket0 (10 samples, 0.62%)</title><rect x="751.2" y="787.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.2" y="798.0"></text>
</g>
<g>
<title>__GI_socket (10 samples, 0.62%)</title><rect x="751.2" y="771.0" width="7.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="754.2" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.62%)</title><rect x="751.2" y="755.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.62%)</title><rect x="751.2" y="739.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_socket (10 samples, 0.62%)</title><rect x="751.2" y="723.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="754.2" y="734.0"></text>
</g>
<g>
<title>__sys_socket (10 samples, 0.62%)</title><rect x="751.2" y="707.0" width="7.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="754.2" y="718.0"></text>
</g>
<g>
<title>__sock_create (9 samples, 0.56%)</title><rect x="751.2" y="691.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="754.2" y="702.0"></text>
</g>
<g>
<title>inet6_create (5 samples, 0.31%)</title><rect x="751.2" y="675.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="754.2" y="686.0"></text>
</g>
<g>
<title>sk_alloc (5 samples, 0.31%)</title><rect x="751.2" y="659.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="754.2" y="670.0"></text>
</g>
<g>
<title>sk_prot_alloc (5 samples, 0.31%)</title><rect x="751.2" y="643.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="754.2" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.19%)</title><rect x="751.9" y="627.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="754.9" y="638.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (3 samples, 0.19%)</title><rect x="751.9" y="611.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="754.9" y="622.0"></text>
</g>
<g>
<title>security_sk_alloc (1 samples, 0.06%)</title><rect x="754.1" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="757.1" y="638.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.06%)</title><rect x="754.1" y="611.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="757.1" y="622.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.06%)</title><rect x="754.8" y="675.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="757.8" y="686.0"></text>
</g>
<g>
<title>security_socket_create (1 samples, 0.06%)</title><rect x="755.6" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.6" y="686.0"></text>
</g>
<g>
<title>apparmor_socket_create (1 samples, 0.06%)</title><rect x="755.6" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.6" y="670.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.12%)</title><rect x="756.3" y="675.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="759.3" y="686.0"></text>
</g>
<g>
<title>new_inode_pseudo (2 samples, 0.12%)</title><rect x="756.3" y="659.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="759.3" y="670.0"></text>
</g>
<g>
<title>alloc_inode (2 samples, 0.12%)</title><rect x="756.3" y="643.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.3" y="654.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.06%)</title><rect x="756.3" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.3" y="638.0"></text>
</g>
<g>
<title>make_kgid (1 samples, 0.06%)</title><rect x="756.3" y="611.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.3" y="622.0"></text>
</g>
<g>
<title>map_id_range_down (1 samples, 0.06%)</title><rect x="756.3" y="595.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="759.3" y="606.0"></text>
</g>
<g>
<title>sock_alloc_inode (1 samples, 0.06%)</title><rect x="757.0" y="627.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="760.0" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="757.0" y="611.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.0" y="622.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.06%)</title><rect x="757.0" y="595.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="760.0" y="606.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.06%)</title><rect x="757.8" y="691.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.8" y="702.0"></text>
</g>
<g>
<title>alloc_file_pseudo (1 samples, 0.06%)</title><rect x="757.8" y="675.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="760.8" y="686.0"></text>
</g>
<g>
<title>d_alloc_pseudo (1 samples, 0.06%)</title><rect x="757.8" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.8" y="670.0"></text>
</g>
<g>
<title>__d_alloc (1 samples, 0.06%)</title><rect x="757.8" y="643.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="760.8" y="654.0"></text>
</g>
<g>
<title>d_set_d_op (1 samples, 0.06%)</title><rect x="757.8" y="627.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.8" y="638.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.close (51 samples, 3.17%)</title><rect x="758.5" y="899.0" width="37.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.5" y="910.0">one..</text>
</g>
<g>
<title>one/nio/pool/Pool.invalidateAll (51 samples, 3.17%)</title><rect x="758.5" y="883.0" width="37.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="761.5" y="894.0">one..</text>
</g>
<g>
<title>java/lang/Object.notifyAll (1 samples, 0.06%)</title><rect x="758.5" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.5" y="878.0"></text>
</g>
<g>
<title>JVM_MonitorNotifyAll (1 samples, 0.06%)</title><rect x="758.5" y="851.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="761.5" y="862.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.06%)</title><rect x="758.5" y="835.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="761.5" y="846.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (50 samples, 3.11%)</title><rect x="759.2" y="867.0" width="36.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="762.2" y="878.0">one..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (50 samples, 3.11%)</title><rect x="759.2" y="851.0" width="36.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.2" y="862.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (50 samples, 3.11%)</title><rect x="759.2" y="835.0" width="36.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.2" y="846.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_close (2 samples, 0.12%)</title><rect x="760.0" y="819.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="763.0" y="830.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="760.7" y="803.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="763.7" y="814.0"></text>
</g>
<g>
<title>__GI___shutdown (41 samples, 2.55%)</title><rect x="761.4" y="819.0" width="30.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="764.4" y="830.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 2.55%)</title><rect x="761.4" y="803.0" width="30.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.4" y="814.0">en..</text>
</g>
<g>
<title>do_syscall_64 (41 samples, 2.55%)</title><rect x="761.4" y="787.0" width="30.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.4" y="798.0">do..</text>
</g>
<g>
<title>__x64_sys_shutdown (40 samples, 2.49%)</title><rect x="762.2" y="771.0" width="29.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="765.2" y="782.0">__..</text>
</g>
<g>
<title>__sys_shutdown (40 samples, 2.49%)</title><rect x="762.2" y="755.0" width="29.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="765.2" y="766.0">__..</text>
</g>
<g>
<title>inet_shutdown (35 samples, 2.18%)</title><rect x="762.2" y="739.0" width="25.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.2" y="750.0">i..</text>
</g>
<g>
<title>tcp_shutdown (35 samples, 2.18%)</title><rect x="762.2" y="723.0" width="25.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="765.2" y="734.0">t..</text>
</g>
<g>
<title>tcp_send_fin (34 samples, 2.11%)</title><rect x="762.2" y="707.0" width="24.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.2" y="718.0">t..</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="762.9" y="691.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.9" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="762.9" y="675.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.9" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="762.9" y="659.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.9" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="763.6" y="675.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="766.6" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (31 samples, 1.93%)</title><rect x="764.4" y="691.0" width="22.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.4" y="702.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (31 samples, 1.93%)</title><rect x="764.4" y="675.0" width="22.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="767.4" y="686.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (30 samples, 1.87%)</title><rect x="765.1" y="659.0" width="22.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.1" y="670.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (30 samples, 1.87%)</title><rect x="765.1" y="643.0" width="22.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.1" y="654.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 1.87%)</title><rect x="765.1" y="627.0" width="22.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="768.1" y="638.0">_..</text>
</g>
<g>
<title>ip_local_out (30 samples, 1.87%)</title><rect x="765.1" y="611.0" width="22.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="768.1" y="622.0">i..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.25%)</title><rect x="765.1" y="595.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.1" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.25%)</title><rect x="765.1" y="579.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.1" y="590.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.25%)</title><rect x="765.1" y="563.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.1" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.06%)</title><rect x="765.1" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.1" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.19%)</title><rect x="765.8" y="547.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="768.8" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.19%)</title><rect x="765.8" y="531.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="768.8" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="767.3" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="770.3" y="526.0"></text>
</g>
<g>
<title>ip_output (26 samples, 1.62%)</title><rect x="768.0" y="595.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="771.0" y="606.0"></text>
</g>
<g>
<title>ip_finish_output (26 samples, 1.62%)</title><rect x="768.0" y="579.0" width="19.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="771.0" y="590.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="768.0" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.0" y="574.0"></text>
</g>
<g>
<title>__ip_finish_output (25 samples, 1.55%)</title><rect x="768.8" y="563.0" width="18.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.8" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (25 samples, 1.55%)</title><rect x="768.8" y="547.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.8" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (23 samples, 1.43%)</title><rect x="768.8" y="531.0" width="16.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="771.8" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.20 (23 samples, 1.43%)</title><rect x="768.8" y="515.0" width="16.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.8" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 1.43%)</title><rect x="768.8" y="499.0" width="16.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.8" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 1.43%)</title><rect x="768.8" y="483.0" width="16.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="771.8" y="494.0"></text>
</g>
<g>
<title>net_rx_action (23 samples, 1.43%)</title><rect x="768.8" y="467.0" width="16.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="771.8" y="478.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="768.8" y="451.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.8" y="462.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 1.37%)</title><rect x="769.5" y="451.0" width="16.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="772.5" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 1.37%)</title><rect x="769.5" y="435.0" width="16.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="772.5" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 1.37%)</title><rect x="769.5" y="419.0" width="16.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.5" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="770.2" y="403.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.2" y="414.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 1.24%)</title><rect x="771.0" y="403.0" width="14.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.0" y="414.0"></text>
</g>
<g>
<title>ip_rcv_finish (20 samples, 1.24%)</title><rect x="771.0" y="387.0" width="14.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.0" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (20 samples, 1.24%)</title><rect x="771.0" y="371.0" width="14.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="774.0" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 1.06%)</title><rect x="771.0" y="355.0" width="12.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.0" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 1.00%)</title><rect x="771.7" y="339.0" width="11.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="774.7" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 0.93%)</title><rect x="772.5" y="323.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="775.5" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="773.2" y="307.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.81%)</title><rect x="773.9" y="307.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="776.9" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.81%)</title><rect x="773.9" y="291.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="776.9" y="302.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.12%)</title><rect x="773.9" y="275.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.9" y="286.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.12%)</title><rect x="773.9" y="259.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="776.9" y="270.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="773.9" y="243.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.9" y="254.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.06%)</title><rect x="773.9" y="227.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="776.9" y="238.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="774.7" y="227.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="777.7" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="774.7" y="211.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="777.7" y="222.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.12%)</title><rect x="775.4" y="275.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.4" y="286.0"></text>
</g>
<g>
<title>tcp_data_queue (8 samples, 0.50%)</title><rect x="776.9" y="275.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.9" y="286.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="776.9" y="259.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="779.9" y="270.0"></text>
</g>
<g>
<title>tcp_fin (7 samples, 0.44%)</title><rect x="777.6" y="259.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="780.6" y="270.0"></text>
</g>
<g>
<title>sock_def_wakeup (7 samples, 0.44%)</title><rect x="777.6" y="243.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="780.6" y="254.0"></text>
</g>
<g>
<title>__wake_up (7 samples, 0.44%)</title><rect x="777.6" y="227.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="780.6" y="238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.44%)</title><rect x="777.6" y="211.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.6" y="222.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.44%)</title><rect x="777.6" y="195.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="780.6" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.06%)</title><rect x="782.7" y="275.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="785.7" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.19%)</title><rect x="783.5" y="355.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.5" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.12%)</title><rect x="783.5" y="339.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="786.5" y="350.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="783.5" y="323.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="786.5" y="334.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.06%)</title><rect x="784.9" y="339.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.9" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.12%)</title><rect x="785.7" y="531.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.7" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.12%)</title><rect x="785.7" y="515.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="788.7" y="526.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="785.7" y="499.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="788.7" y="510.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="786.4" y="499.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="789.4" y="510.0"></text>
</g>
<g>
<title>tcp_set_state (1 samples, 0.06%)</title><rect x="787.1" y="707.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="790.1" y="718.0"></text>
</g>
<g>
<title>security_socket_shutdown (4 samples, 0.25%)</title><rect x="787.9" y="739.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="790.9" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_shutdown (4 samples, 0.25%)</title><rect x="787.9" y="723.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.9" y="734.0"></text>
</g>
<g>
<title>aa_sock_perm (4 samples, 0.25%)</title><rect x="787.9" y="707.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="790.9" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.25%)</title><rect x="787.9" y="691.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="790.9" y="702.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.06%)</title><rect x="790.1" y="675.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.1" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.06%)</title><rect x="790.1" y="659.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="793.1" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="790.8" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="793.8" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="790.8" y="723.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.8" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="790.8" y="707.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.8" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="790.8" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.8" y="702.0"></text>
</g>
<g>
<title>__libc_close (6 samples, 0.37%)</title><rect x="791.5" y="819.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="794.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.37%)</title><rect x="791.5" y="803.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="794.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_close (1 samples, 0.06%)</title><rect x="791.5" y="787.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.5" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.31%)</title><rect x="792.3" y="787.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.31%)</title><rect x="792.3" y="771.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="795.3" y="782.0"></text>
</g>
<g>
<title>mem_cgroup_handle_over_high (1 samples, 0.06%)</title><rect x="792.3" y="755.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="795.3" y="766.0"></text>
</g>
<g>
<title>task_work_run (4 samples, 0.25%)</title><rect x="793.0" y="755.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.0" y="766.0"></text>
</g>
<g>
<title>____fput (4 samples, 0.25%)</title><rect x="793.0" y="739.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="796.0" y="750.0"></text>
</g>
<g>
<title>__fput (4 samples, 0.25%)</title><rect x="793.0" y="723.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.0" y="734.0"></text>
</g>
<g>
<title>call_rcu (1 samples, 0.06%)</title><rect x="793.0" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="796.0" y="718.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.06%)</title><rect x="793.0" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.0" y="702.0"></text>
</g>
<g>
<title>dput (3 samples, 0.19%)</title><rect x="793.7" y="707.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.7" y="718.0"></text>
</g>
<g>
<title>__dentry_kill (2 samples, 0.12%)</title><rect x="793.7" y="691.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="796.7" y="702.0"></text>
</g>
<g>
<title>dentry_unlink_inode (2 samples, 0.12%)</title><rect x="793.7" y="675.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.7" y="686.0"></text>
</g>
<g>
<title>iput (2 samples, 0.12%)</title><rect x="793.7" y="659.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.7" y="670.0"></text>
</g>
<g>
<title>destroy_inode (1 samples, 0.06%)</title><rect x="793.7" y="643.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="796.7" y="654.0"></text>
</g>
<g>
<title>evict (1 samples, 0.06%)</title><rect x="794.5" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="797.5" y="654.0"></text>
</g>
<g>
<title>__inode_wait_for_writeback (1 samples, 0.06%)</title><rect x="794.5" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="797.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="795.2" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.2" y="702.0"></text>
</g>
<g>
<title>org/javatuples/Pair.getValue0 (2 samples, 0.12%)</title><rect x="795.9" y="899.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.06%)</title><rect x="796.7" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$97/1579238551.apply (13 samples, 0.81%)</title><rect x="797.4" y="947.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.lambda$getResponsesInternal$0 (13 samples, 0.81%)</title><rect x="797.4" y="931.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="800.4" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.&lt;init&gt; (1 samples, 0.06%)</title><rect x="798.1" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (5 samples, 0.31%)</title><rect x="798.9" y="915.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (5 samples, 0.31%)</title><rect x="798.9" y="899.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="798.9" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (4 samples, 0.25%)</title><rect x="799.6" y="883.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.6" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (4 samples, 0.25%)</title><rect x="799.6" y="867.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.6" y="878.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (4 samples, 0.25%)</title><rect x="799.6" y="851.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.6" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.reset (4 samples, 0.25%)</title><rect x="799.6" y="835.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getNewRequest (6 samples, 0.37%)</title><rect x="802.5" y="915.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="802.5" y="899.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="802.5" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="802.5" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getCloneRequest (5 samples, 0.31%)</title><rect x="803.3" y="899.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.06%)</title><rect x="803.3" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="803.3" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.06%)</title><rect x="803.3" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="803.3" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="803.3" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.19%)</title><rect x="804.0" y="883.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.19%)</title><rect x="804.0" y="867.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.19%)</title><rect x="804.0" y="851.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.19%)</title><rect x="804.0" y="835.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.19%)</title><rect x="804.0" y="819.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.12%)</title><rect x="804.0" y="803.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.0" y="814.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (2 samples, 0.12%)</title><rect x="804.0" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.12%)</title><rect x="804.0" y="771.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$73/1734144082.test (1 samples, 0.06%)</title><rect x="804.7" y="755.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="805.5" y="803.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.06%)</title><rect x="805.5" y="787.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="805.5" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="805.5" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="806.2" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="806.2" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="806.2" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="806.2" y="835.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.06%)</title><rect x="806.2" y="819.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.cancellationRequested (1 samples, 0.06%)</title><rect x="806.9" y="995.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.9" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.06%)</title><rect x="806.9" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.06%)</title><rect x="806.9" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.12%)</title><rect x="807.7" y="1011.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.7" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (2 samples, 0.12%)</title><rect x="807.7" y="995.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.7" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.06%)</title><rect x="808.4" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.06%)</title><rect x="808.4" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (1 samples, 0.06%)</title><rect x="809.1" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.&lt;init&gt; (1 samples, 0.06%)</title><rect x="809.1" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.1" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.06%)</title><rect x="809.1" y="1075.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="812.1" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="809.1" y="1059.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.1" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.06%)</title><rect x="809.1" y="1043.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.getEndResponsePutAndDelete (2 samples, 0.12%)</title><rect x="809.9" y="1123.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.9" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2 samples, 0.12%)</title><rect x="809.9" y="1107.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.9" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.12%)</title><rect x="809.9" y="1091.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.9" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.12%)</title><rect x="809.9" y="1075.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="812.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.12%)</title><rect x="809.9" y="1059.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.9" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="809.9" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.06%)</title><rect x="809.9" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.9" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="810.6" y="1043.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.6" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.06%)</title><rect x="810.6" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getAckFrom (7 samples, 0.44%)</title><rect x="811.3" y="1123.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.44%)</title><rect x="811.3" y="1107.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.44%)</title><rect x="811.3" y="1091.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="814.3" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.44%)</title><rect x="811.3" y="1075.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.3" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.44%)</title><rect x="811.3" y="1059.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.37%)</title><rect x="811.3" y="1043.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.37%)</title><rect x="811.3" y="1027.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.3" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (5 samples, 0.31%)</title><rect x="811.3" y="1011.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.tryAdvance (5 samples, 0.31%)</title><rect x="811.3" y="995.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (5 samples, 0.31%)</title><rect x="811.3" y="979.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.06%)</title><rect x="811.3" y="963.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$91/2102115173.test (1 samples, 0.06%)</title><rect x="811.3" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getAckFrom$1 (1 samples, 0.06%)</title><rect x="811.3" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="811.3" y="915.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.06%)</title><rect x="811.3" y="899.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$89/13554038.apply (4 samples, 0.25%)</title><rect x="812.1" y="963.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getAckFrom$0 (4 samples, 0.25%)</title><rect x="812.1" y="947.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="815.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.split (4 samples, 0.25%)</title><rect x="812.1" y="931.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.split (4 samples, 0.25%)</title><rect x="812.1" y="915.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.12%)</title><rect x="812.1" y="899.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="812.8" y="883.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="815.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="812.8" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.12%)</title><rect x="813.5" y="899.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.5" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.06%)</title><rect x="814.3" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.3" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.06%)</title><rect x="814.3" y="867.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.3" y="878.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="814.3" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.06%)</title><rect x="815.0" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.0" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="815.0" y="995.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="818.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="815.7" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.7" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (1 samples, 0.06%)</title><rect x="815.7" y="1027.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.7" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.&lt;init&gt; (1 samples, 0.06%)</title><rect x="815.7" y="1011.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="818.7" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.06%)</title><rect x="815.7" y="995.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNode (1 samples, 0.06%)</title><rect x="816.5" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (80 samples, 4.98%)</title><rect x="817.2" y="1235.0" width="58.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="820.2" y="1246.0">one/ni..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.06%)</title><rect x="823.1" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (6 samples, 0.37%)</title><rect x="823.8" y="1219.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (6 samples, 0.37%)</title><rect x="823.8" y="1203.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (6 samples, 0.37%)</title><rect x="823.8" y="1187.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.8" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="823.8" y="1171.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="826.8" y="1182.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="823.8" y="1155.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="826.8" y="1166.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="823.8" y="1139.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="826.8" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="823.8" y="1123.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="826.8" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="823.8" y="1107.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="826.8" y="1118.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="823.8" y="1091.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.8" y="1102.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="823.8" y="1075.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="826.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.&lt;init&gt; (5 samples, 0.31%)</title><rect x="824.6" y="1171.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.&lt;init&gt; (5 samples, 0.31%)</title><rect x="824.6" y="1155.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.6" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.12%)</title><rect x="825.3" y="1139.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="828.3" y="1150.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.06%)</title><rect x="826.8" y="1139.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="829.8" y="1150.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="827.5" y="1139.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="830.5" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="827.5" y="1123.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="830.5" y="1134.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="827.5" y="1107.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="830.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (33 samples, 2.05%)</title><rect x="828.2" y="1219.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.2" y="1230.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (33 samples, 2.05%)</title><rect x="828.2" y="1203.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="831.2" y="1214.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (32 samples, 1.99%)</title><rect x="829.0" y="1187.0" width="23.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.0" y="1198.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_accept0 (1 samples, 0.06%)</title><rect x="829.0" y="1171.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="832.0" y="1182.0"></text>
</g>
<g>
<title>__GI_accept (23 samples, 1.43%)</title><rect x="829.7" y="1171.0" width="16.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="832.7" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.43%)</title><rect x="829.7" y="1155.0" width="16.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.43%)</title><rect x="829.7" y="1139.0" width="16.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="832.7" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_accept (22 samples, 1.37%)</title><rect x="830.4" y="1123.0" width="16.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="833.4" y="1134.0"></text>
</g>
<g>
<title>__sys_accept4 (21 samples, 1.31%)</title><rect x="830.4" y="1107.0" width="15.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="833.4" y="1118.0"></text>
</g>
<g>
<title>get_unused_fd_flags (2 samples, 0.12%)</title><rect x="830.4" y="1091.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="833.4" y="1102.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.06%)</title><rect x="831.2" y="1075.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.2" y="1086.0"></text>
</g>
<g>
<title>inet_accept (13 samples, 0.81%)</title><rect x="831.9" y="1091.0" width="9.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="834.9" y="1102.0"></text>
</g>
<g>
<title>apparmor_sock_graft (2 samples, 0.12%)</title><rect x="831.9" y="1075.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="834.9" y="1086.0"></text>
</g>
<g>
<title>inet_csk_accept (11 samples, 0.68%)</title><rect x="833.4" y="1075.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="836.4" y="1086.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="833.4" y="1059.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.4" y="1070.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="834.1" y="1059.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.1" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="834.1" y="1043.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="837.1" y="1054.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="834.8" y="1059.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="837.8" y="1070.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.06%)</title><rect x="834.8" y="1043.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.8" y="1054.0"></text>
</g>
<g>
<title>schedule_timeout (8 samples, 0.50%)</title><rect x="835.6" y="1059.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.6" y="1070.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.50%)</title><rect x="835.6" y="1043.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.6" y="1054.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.50%)</title><rect x="835.6" y="1027.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="838.6" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.31%)</title><rect x="837.8" y="1011.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.8" y="1022.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.12%)</title><rect x="841.4" y="1091.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.4" y="1102.0"></text>
</g>
<g>
<title>new_inode_pseudo (1 samples, 0.06%)</title><rect x="842.2" y="1075.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="845.2" y="1086.0"></text>
</g>
<g>
<title>sock_alloc_inode (1 samples, 0.06%)</title><rect x="842.2" y="1059.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="845.2" y="1070.0"></text>
</g>
<g>
<title>sock_alloc_file (4 samples, 0.25%)</title><rect x="842.9" y="1091.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="845.9" y="1102.0"></text>
</g>
<g>
<title>alloc_file_pseudo (4 samples, 0.25%)</title><rect x="842.9" y="1075.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="845.9" y="1086.0"></text>
</g>
<g>
<title>alloc_file (2 samples, 0.12%)</title><rect x="842.9" y="1059.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="845.9" y="1070.0"></text>
</g>
<g>
<title>alloc_empty_file (2 samples, 0.12%)</title><rect x="842.9" y="1043.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="845.9" y="1054.0"></text>
</g>
<g>
<title>__alloc_file (2 samples, 0.12%)</title><rect x="842.9" y="1027.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="845.9" y="1038.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="843.6" y="1011.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="846.6" y="1022.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.06%)</title><rect x="843.6" y="995.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.6" y="1006.0"></text>
</g>
<g>
<title>d_alloc_pseudo (1 samples, 0.06%)</title><rect x="844.4" y="1059.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="847.4" y="1070.0"></text>
</g>
<g>
<title>__d_alloc (1 samples, 0.06%)</title><rect x="844.4" y="1043.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.4" y="1054.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="844.4" y="1027.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.4" y="1038.0"></text>
</g>
<g>
<title>d_instantiate (1 samples, 0.06%)</title><rect x="845.1" y="1059.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="848.1" y="1070.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.06%)</title><rect x="845.8" y="1107.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="848.8" y="1118.0"></text>
</g>
<g>
<title>__libc_fcntl (8 samples, 0.50%)</title><rect x="846.6" y="1171.0" width="5.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="849.6" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.50%)</title><rect x="846.6" y="1155.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="849.6" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.50%)</title><rect x="846.6" y="1139.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="849.6" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_fcntl (5 samples, 0.31%)</title><rect x="848.0" y="1123.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="851.0" y="1134.0"></text>
</g>
<g>
<title>do_fcntl (3 samples, 0.19%)</title><rect x="848.0" y="1107.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="851.0" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="848.8" y="1091.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="851.8" y="1102.0"></text>
</g>
<g>
<title>setfl (1 samples, 0.06%)</title><rect x="849.5" y="1091.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="852.5" y="1102.0"></text>
</g>
<g>
<title>security_file_fcntl (1 samples, 0.06%)</title><rect x="850.2" y="1107.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="853.2" y="1118.0"></text>
</g>
<g>
<title>setfl (1 samples, 0.06%)</title><rect x="851.0" y="1107.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="854.0" y="1118.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="851.7" y="1123.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="854.7" y="1134.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.06%)</title><rect x="851.7" y="1107.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="854.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.isOpen (1 samples, 0.06%)</title><rect x="852.4" y="1219.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (31 samples, 1.93%)</title><rect x="853.2" y="1219.0" width="22.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.2" y="1230.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (29 samples, 1.80%)</title><rect x="853.2" y="1203.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.2" y="1214.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.add (8 samples, 0.50%)</title><rect x="853.2" y="1187.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.37%)</title><rect x="854.6" y="1171.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.6" y="1182.0"></text>
</g>
<g>
<title>JVM_IHashCode (6 samples, 0.37%)</title><rect x="854.6" y="1155.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="857.6" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="854.6" y="1139.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="857.6" y="1150.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="855.4" y="1139.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="858.4" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.06%)</title><rect x="856.1" y="1139.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="859.1" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.19%)</title><rect x="856.8" y="1139.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="859.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (21 samples, 1.31%)</title><rect x="859.0" y="1187.0" width="15.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (21 samples, 1.31%)</title><rect x="859.0" y="1171.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.0" y="1182.0"></text>
</g>
<g>
<title>epoll_ctl (20 samples, 1.24%)</title><rect x="859.8" y="1155.0" width="14.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="862.8" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.18%)</title><rect x="860.5" y="1139.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="863.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.18%)</title><rect x="860.5" y="1123.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (19 samples, 1.18%)</title><rect x="860.5" y="1107.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.5" y="1118.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="860.5" y="1091.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.5" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="860.5" y="1075.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.5" y="1086.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="860.5" y="1059.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="863.5" y="1070.0"></text>
</g>
<g>
<title>ep_insert (18 samples, 1.12%)</title><rect x="861.2" y="1091.0" width="13.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="864.2" y="1102.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.12%)</title><rect x="870.8" y="1075.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.8" y="1086.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.12%)</title><rect x="870.8" y="1059.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.8" y="1070.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="870.8" y="1043.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.8" y="1054.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (1 samples, 0.06%)</title><rect x="870.8" y="1027.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="873.8" y="1038.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="870.8" y="1011.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.8" y="1022.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="871.5" y="1043.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="874.5" y="1054.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.19%)</title><rect x="872.3" y="1075.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="875.3" y="1086.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (2 samples, 0.12%)</title><rect x="873.0" y="1059.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="876.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/Server.getSmallestSelector (2 samples, 0.12%)</title><rect x="874.5" y="1203.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextInt (1 samples, 0.06%)</title><rect x="875.2" y="1187.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSeed (1 samples, 0.06%)</title><rect x="875.2" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (405 samples, 25.19%)</title><rect x="875.9" y="1235.0" width="297.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.9" y="1246.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.06%)</title><rect x="878.9" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.9" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.12%)</title><rect x="879.6" y="1219.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="882.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.12%)</title><rect x="879.6" y="1203.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.06%)</title><rect x="880.3" y="1187.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 2.61%)</title><rect x="881.1" y="1219.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.1" y="1230.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.06%)</title><rect x="881.8" y="1203.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.06%)</title><rect x="881.8" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (40 samples, 2.49%)</title><rect x="882.5" y="1203.0" width="29.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.5" y="1214.0">on..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.36%)</title><rect x="882.5" y="1187.0" width="27.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="885.5" y="1198.0">[..</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.12%)</title><rect x="882.5" y="1171.0" width="1.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="885.5" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="883.3" y="1155.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="886.3" y="1166.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="883.3" y="1139.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="886.3" y="1150.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 2.24%)</title><rect x="884.0" y="1171.0" width="26.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="887.0" y="1182.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 2.05%)</title><rect x="886.2" y="1155.0" width="24.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="889.2" y="1166.0">e..</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 2.05%)</title><rect x="886.2" y="1139.0" width="24.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.2" y="1150.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 1.87%)</title><rect x="886.2" y="1123.0" width="22.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="889.2" y="1134.0">_..</text>
</g>
<g>
<title>do_epoll_wait (30 samples, 1.87%)</title><rect x="886.2" y="1107.0" width="22.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.2" y="1118.0">d..</text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="886.2" y="1091.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.2" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="886.2" y="1075.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.2" y="1086.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="886.2" y="1059.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="889.2" y="1070.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 1.68%)</title><rect x="886.9" y="1091.0" width="19.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="889.9" y="1102.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (9 samples, 0.56%)</title><rect x="888.4" y="1075.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.4" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.25%)</title><rect x="892.1" y="1059.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.1" y="1070.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.25%)</title><rect x="892.1" y="1043.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="895.1" y="1054.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.25%)</title><rect x="892.1" y="1027.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.1" y="1038.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="894.3" y="1011.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.3" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (16 samples, 1.00%)</title><rect x="895.0" y="1075.0" width="11.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.0" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 1.00%)</title><rect x="895.0" y="1059.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.0" y="1070.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.87%)</title><rect x="896.5" y="1043.0" width="10.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.5" y="1054.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.81%)</title><rect x="897.2" y="1027.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="900.2" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.68%)</title><rect x="898.7" y="1011.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="901.7" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="906.0" y="995.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="909.0" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="906.0" y="979.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="909.0" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="906.0" y="963.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="909.0" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="906.0" y="947.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="909.0" y="958.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.06%)</title><rect x="906.0" y="931.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="909.0" y="942.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.06%)</title><rect x="906.0" y="915.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="909.0" y="926.0"></text>
</g>
<g>
<title>i_callback (1 samples, 0.06%)</title><rect x="906.0" y="899.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="909.0" y="910.0"></text>
</g>
<g>
<title>sock_free_inode (1 samples, 0.06%)</title><rect x="906.0" y="883.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="909.0" y="894.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="906.0" y="867.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="909.0" y="878.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="906.7" y="1091.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="909.7" y="1102.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="906.7" y="1075.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="909.7" y="1086.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="907.5" y="1091.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.5" y="1102.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.19%)</title><rect x="908.2" y="1123.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.2" y="1134.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.12%)</title><rect x="908.2" y="1107.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.2" y="1118.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.06%)</title><rect x="909.7" y="1107.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="912.7" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.12%)</title><rect x="910.4" y="1187.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="913.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (356 samples, 22.14%)</title><rect x="911.9" y="1219.0" width="261.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.9" y="1230.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (355 samples, 22.08%)</title><rect x="911.9" y="1203.0" width="260.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.9" y="1214.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (136 samples, 8.46%)</title><rect x="912.6" y="1187.0" width="99.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.6" y="1198.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.31%)</title><rect x="912.6" y="1171.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (5 samples, 0.31%)</title><rect x="912.6" y="1155.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (5 samples, 0.31%)</title><rect x="912.6" y="1139.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="915.6" y="1150.0"></text>
</g>
<g>
<title>epoll_ctl (5 samples, 0.31%)</title><rect x="912.6" y="1123.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="915.6" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.31%)</title><rect x="912.6" y="1107.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="915.6" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (1 samples, 0.06%)</title><rect x="912.6" y="1091.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="915.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.25%)</title><rect x="913.3" y="1091.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="916.3" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (4 samples, 0.25%)</title><rect x="913.3" y="1075.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.3" y="1086.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="914.1" y="1059.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="917.1" y="1070.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="914.1" y="1043.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.1" y="1054.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="914.1" y="1027.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.1" y="1038.0"></text>
</g>
<g>
<title>ep_modify (2 samples, 0.12%)</title><rect x="914.8" y="1059.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.8" y="1070.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.12%)</title><rect x="914.8" y="1043.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="917.8" y="1054.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.12%)</title><rect x="914.8" y="1027.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="917.8" y="1038.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="915.5" y="1011.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="918.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (131 samples, 8.15%)</title><rect x="916.3" y="1171.0" width="96.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.3" y="1182.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.close (130 samples, 8.08%)</title><rect x="917.0" y="1155.0" width="95.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.0" y="1166.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.unregister (11 samples, 0.68%)</title><rect x="917.7" y="1139.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.disable (11 samples, 0.68%)</title><rect x="917.7" y="1123.0" width="8.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (11 samples, 0.68%)</title><rect x="917.7" y="1107.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.7" y="1118.0"></text>
</g>
<g>
<title>epoll_ctl (11 samples, 0.68%)</title><rect x="917.7" y="1091.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="920.7" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.68%)</title><rect x="917.7" y="1075.0" width="8.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="920.7" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.68%)</title><rect x="917.7" y="1059.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="920.7" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (10 samples, 0.62%)</title><rect x="918.5" y="1043.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.5" y="1054.0"></text>
</g>
<g>
<title>ep_remove (8 samples, 0.50%)</title><rect x="920.0" y="1027.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="923.0" y="1038.0"></text>
</g>
<g>
<title>call_rcu (1 samples, 0.06%)</title><rect x="920.7" y="1011.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.7" y="1022.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.06%)</title><rect x="920.7" y="995.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.7" y="1006.0"></text>
</g>
<g>
<title>ep_unregister_pollwait.isra.13 (6 samples, 0.37%)</title><rect x="921.4" y="1011.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.4" y="1022.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="923.6" y="995.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="926.6" y="1006.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.06%)</title><rect x="925.1" y="995.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.1" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="925.1" y="979.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="928.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (118 samples, 7.34%)</title><rect x="925.8" y="1139.0" width="86.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.8" y="1150.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_close (3 samples, 0.19%)</title><rect x="927.3" y="1123.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="930.3" y="1134.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="928.8" y="1107.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="931.8" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="928.8" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="931.8" y="1102.0"></text>
</g>
<g>
<title>__GI___shutdown (92 samples, 5.72%)</title><rect x="929.5" y="1123.0" width="67.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="932.5" y="1134.0">__GI___..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (91 samples, 5.66%)</title><rect x="930.2" y="1107.0" width="66.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="933.2" y="1118.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (91 samples, 5.66%)</title><rect x="930.2" y="1091.0" width="66.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.2" y="1102.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_shutdown (89 samples, 5.53%)</title><rect x="930.2" y="1075.0" width="65.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.2" y="1086.0">__x64_s..</text>
</g>
<g>
<title>__sys_shutdown (88 samples, 5.47%)</title><rect x="930.2" y="1059.0" width="64.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="933.2" y="1070.0">__sys_s..</text>
</g>
<g>
<title>inet_shutdown (85 samples, 5.29%)</title><rect x="931.0" y="1043.0" width="62.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="934.0" y="1054.0">inet_s..</text>
</g>
<g>
<title>release_sock (7 samples, 0.44%)</title><rect x="931.0" y="1027.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="934.0" y="1038.0"></text>
</g>
<g>
<title>__release_sock (7 samples, 0.44%)</title><rect x="931.0" y="1011.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="934.0" y="1022.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.44%)</title><rect x="931.0" y="995.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="934.0" y="1006.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (7 samples, 0.44%)</title><rect x="931.0" y="979.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.0" y="990.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.12%)</title><rect x="931.0" y="963.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="934.0" y="974.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="931.0" y="947.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.0" y="958.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="931.7" y="947.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="934.7" y="958.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.06%)</title><rect x="931.7" y="931.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="934.7" y="942.0"></text>
</g>
<g>
<title>tcp_done (3 samples, 0.19%)</title><rect x="932.4" y="963.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.4" y="974.0"></text>
</g>
<g>
<title>inet_csk_clear_xmit_timers (2 samples, 0.12%)</title><rect x="932.4" y="947.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.4" y="958.0"></text>
</g>
<g>
<title>sk_stop_timer (2 samples, 0.12%)</title><rect x="932.4" y="931.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.4" y="942.0"></text>
</g>
<g>
<title>del_timer (2 samples, 0.12%)</title><rect x="932.4" y="915.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.4" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="932.4" y="899.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.4" y="910.0"></text>
</g>
<g>
<title>tcp_set_state (1 samples, 0.06%)</title><rect x="933.9" y="947.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="936.9" y="958.0"></text>
</g>
<g>
<title>tcp_drop (1 samples, 0.06%)</title><rect x="934.6" y="963.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="937.6" y="974.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="934.6" y="947.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.6" y="958.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="934.6" y="931.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="937.6" y="942.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="934.6" y="915.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.6" y="926.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.06%)</title><rect x="935.4" y="963.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="938.4" y="974.0"></text>
</g>
<g>
<title>tcp_shutdown (78 samples, 4.85%)</title><rect x="936.1" y="1027.0" width="57.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.1" y="1038.0">tcp_sh..</text>
</g>
<g>
<title>tcp_send_fin (78 samples, 4.85%)</title><rect x="936.1" y="1011.0" width="57.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="939.1" y="1022.0">tcp_se..</text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.31%)</title><rect x="936.8" y="995.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="939.8" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="936.8" y="979.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.8" y="990.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.06%)</title><rect x="936.8" y="963.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="939.8" y="974.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.06%)</title><rect x="937.6" y="979.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="940.6" y="990.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.12%)</title><rect x="938.3" y="979.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="941.3" y="990.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="939.8" y="979.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.8" y="990.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (72 samples, 4.48%)</title><rect x="940.5" y="995.0" width="52.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="943.5" y="1006.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (72 samples, 4.48%)</title><rect x="940.5" y="979.0" width="52.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="943.5" y="990.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (67 samples, 4.17%)</title><rect x="941.2" y="963.0" width="49.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="944.2" y="974.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (63 samples, 3.92%)</title><rect x="943.4" y="947.0" width="46.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.4" y="958.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (63 samples, 3.92%)</title><rect x="943.4" y="931.0" width="46.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="946.4" y="942.0">__ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="944.2" y="915.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="947.2" y="926.0"></text>
</g>
<g>
<title>ip_local_out (60 samples, 3.73%)</title><rect x="944.9" y="915.0" width="44.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.9" y="926.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (12 samples, 0.75%)</title><rect x="944.9" y="899.0" width="8.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="947.9" y="910.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.75%)</title><rect x="944.9" y="883.0" width="8.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.9" y="894.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="945.6" y="867.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="948.6" y="878.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.19%)</title><rect x="946.4" y="867.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="949.4" y="878.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="947.1" y="851.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="950.1" y="862.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (6 samples, 0.37%)</title><rect x="948.6" y="867.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.6" y="878.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (6 samples, 0.37%)</title><rect x="948.6" y="851.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="951.6" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="950.0" y="835.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="953.0" y="846.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.12%)</title><rect x="950.8" y="835.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="953.8" y="846.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.12%)</title><rect x="950.8" y="819.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.8" y="830.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.12%)</title><rect x="950.8" y="803.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.8" y="814.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.06%)</title><rect x="952.2" y="835.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="955.2" y="846.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="953.0" y="867.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="956.0" y="878.0"></text>
</g>
<g>
<title>ip_output (47 samples, 2.92%)</title><rect x="953.7" y="899.0" width="34.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="956.7" y="910.0">ip..</text>
</g>
<g>
<title>ip_finish_output (47 samples, 2.92%)</title><rect x="953.7" y="883.0" width="34.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.7" y="894.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (46 samples, 2.86%)</title><rect x="954.4" y="867.0" width="33.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="957.4" y="878.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (45 samples, 2.80%)</title><rect x="955.2" y="851.0" width="33.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="958.2" y="862.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (39 samples, 2.43%)</title><rect x="956.6" y="835.0" width="28.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="959.6" y="846.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (39 samples, 2.43%)</title><rect x="956.6" y="819.0" width="28.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.6" y="830.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (39 samples, 2.43%)</title><rect x="956.6" y="803.0" width="28.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="959.6" y="814.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (39 samples, 2.43%)</title><rect x="956.6" y="787.0" width="28.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="959.6" y="798.0">__..</text>
</g>
<g>
<title>net_rx_action (39 samples, 2.43%)</title><rect x="956.6" y="771.0" width="28.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="959.6" y="782.0">ne..</text>
</g>
<g>
<title>process_backlog (39 samples, 2.43%)</title><rect x="956.6" y="755.0" width="28.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="959.6" y="766.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (38 samples, 2.36%)</title><rect x="957.4" y="739.0" width="27.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="960.4" y="750.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (38 samples, 2.36%)</title><rect x="957.4" y="723.0" width="27.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="960.4" y="734.0">_..</text>
</g>
<g>
<title>ip_rcv (37 samples, 2.30%)</title><rect x="958.1" y="707.0" width="27.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="961.1" y="718.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (36 samples, 2.24%)</title><rect x="958.1" y="691.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="961.1" y="702.0">i..</text>
</g>
<g>
<title>ip_local_deliver (35 samples, 2.18%)</title><rect x="958.8" y="675.0" width="25.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="961.8" y="686.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 1.99%)</title><rect x="958.8" y="659.0" width="23.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.8" y="670.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 1.99%)</title><rect x="958.8" y="643.0" width="23.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="961.8" y="654.0">i..</text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.06%)</title><rect x="958.8" y="627.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.8" y="638.0"></text>
</g>
<g>
<title>tcp_v4_rcv (31 samples, 1.93%)</title><rect x="959.6" y="627.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="962.6" y="638.0">t..</text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="959.6" y="611.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.6" y="622.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="960.3" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.3" y="622.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="960.3" y="595.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="963.3" y="606.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.06%)</title><rect x="961.0" y="611.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="964.0" y="622.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.06%)</title><rect x="961.0" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="964.0" y="606.0"></text>
</g>
<g>
<title>__sk_free (1 samples, 0.06%)</title><rect x="961.0" y="579.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.0" y="590.0"></text>
</g>
<g>
<title>sk_destruct (1 samples, 0.06%)</title><rect x="961.0" y="563.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="964.0" y="574.0"></text>
</g>
<g>
<title>__sk_destruct (1 samples, 0.06%)</title><rect x="961.0" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="964.0" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="961.0" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="964.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 1.74%)</title><rect x="961.8" y="611.0" width="20.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="964.8" y="622.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="961.8" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="964.8" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (27 samples, 1.68%)</title><rect x="962.5" y="595.0" width="19.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="965.5" y="606.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.06%)</title><rect x="963.2" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.2" y="590.0"></text>
</g>
<g>
<title>inet_csk_reset_keepalive_timer (1 samples, 0.06%)</title><rect x="964.0" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.0" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="964.0" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.0" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="964.0" y="547.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="964.0" y="531.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.0" y="542.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="964.7" y="579.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="967.7" y="590.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.19%)</title><rect x="965.4" y="579.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.4" y="590.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.19%)</title><rect x="965.4" y="563.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="968.4" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.12%)</title><rect x="966.2" y="547.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="969.2" y="558.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.12%)</title><rect x="966.2" y="531.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.2" y="542.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.12%)</title><rect x="966.2" y="515.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.2" y="526.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="966.9" y="499.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="969.9" y="510.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="966.9" y="483.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="969.9" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="967.6" y="579.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.6" y="590.0"></text>
</g>
<g>
<title>tcp_data_queue (17 samples, 1.06%)</title><rect x="968.4" y="579.0" width="12.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="971.4" y="590.0"></text>
</g>
<g>
<title>tcp_fin (15 samples, 0.93%)</title><rect x="969.9" y="563.0" width="11.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="972.9" y="574.0"></text>
</g>
<g>
<title>tcp_send_ack (9 samples, 0.56%)</title><rect x="969.9" y="547.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="972.9" y="558.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (9 samples, 0.56%)</title><rect x="969.9" y="531.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.9" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="969.9" y="515.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.06%)</title><rect x="970.6" y="499.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.6" y="510.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.06%)</title><rect x="970.6" y="483.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.6" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 0.44%)</title><rect x="971.3" y="515.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.3" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.44%)</title><rect x="971.3" y="499.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="974.3" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.44%)</title><rect x="971.3" y="483.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.3" y="494.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.37%)</title><rect x="971.3" y="467.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="974.3" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.25%)</title><rect x="972.1" y="451.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.1" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.19%)</title><rect x="972.8" y="435.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.8" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.06%)</title><rect x="972.8" y="419.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.06%)</title><rect x="972.8" y="403.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="975.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.12%)</title><rect x="973.5" y="419.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.5" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.12%)</title><rect x="973.5" y="403.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="976.5" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.12%)</title><rect x="973.5" y="387.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="976.5" y="398.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.06%)</title><rect x="974.3" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.3" y="382.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="975.0" y="451.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.0" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="975.0" y="435.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="978.0" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="975.0" y="419.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="978.0" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="975.0" y="403.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.0" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="975.7" y="467.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="978.7" y="478.0"></text>
</g>
<g>
<title>tcp_time_wait (6 samples, 0.37%)</title><rect x="976.5" y="547.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="979.5" y="558.0"></text>
</g>
<g>
<title>__inet_twsk_schedule (3 samples, 0.19%)</title><rect x="977.2" y="531.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="980.2" y="542.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.19%)</title><rect x="977.2" y="515.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="980.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="977.9" y="499.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.9" y="510.0"></text>
</g>
<g>
<title>tcp_done (2 samples, 0.12%)</title><rect x="979.4" y="531.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="982.4" y="542.0"></text>
</g>
<g>
<title>inet_csk_destroy_sock (2 samples, 0.12%)</title><rect x="979.4" y="515.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="982.4" y="526.0"></text>
</g>
<g>
<title>sk_stream_kill_queues (1 samples, 0.06%)</title><rect x="979.4" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="982.4" y="510.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="979.4" y="483.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="982.4" y="494.0"></text>
</g>
<g>
<title>tcp_v6_destroy_sock (1 samples, 0.06%)</title><rect x="980.1" y="499.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="983.1" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_congestion_control (1 samples, 0.06%)</title><rect x="980.1" y="483.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="983.1" y="494.0"></text>
</g>
<g>
<title>tcp_set_state (1 samples, 0.06%)</title><rect x="980.9" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="983.9" y="590.0"></text>
</g>
<g>
<title>inet_sk_state_store (1 samples, 0.06%)</title><rect x="980.9" y="563.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.9" y="574.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.06%)</title><rect x="981.6" y="579.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="984.6" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="982.3" y="659.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="985.3" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.12%)</title><rect x="983.1" y="659.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="986.1" y="670.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.12%)</title><rect x="983.1" y="643.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="986.1" y="654.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.12%)</title><rect x="983.1" y="627.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="986.1" y="638.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.06%)</title><rect x="984.5" y="691.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.5" y="702.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.19%)</title><rect x="985.3" y="835.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.3" y="846.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.19%)</title><rect x="985.3" y="819.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.3" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="985.3" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="988.3" y="814.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="986.0" y="803.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="989.0" y="814.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.06%)</title><rect x="986.0" y="787.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.0" y="798.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.06%)</title><rect x="986.7" y="803.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.7" y="814.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.06%)</title><rect x="987.5" y="835.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="990.5" y="846.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.06%)</title><rect x="988.2" y="899.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="991.2" y="910.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="988.9" y="915.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.9" y="926.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="989.7" y="947.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.7" y="958.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.06%)</title><rect x="990.4" y="963.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="993.4" y="974.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.12%)</title><rect x="991.1" y="963.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.1" y="974.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.06%)</title><rect x="991.9" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="994.9" y="958.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.06%)</title><rect x="992.6" y="963.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="995.6" y="974.0"></text>
</g>
<g>
<title>security_socket_shutdown (2 samples, 0.12%)</title><rect x="993.3" y="1043.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.3" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_shutdown (2 samples, 0.12%)</title><rect x="993.3" y="1027.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.3" y="1038.0"></text>
</g>
<g>
<title>aa_sock_perm (2 samples, 0.12%)</title><rect x="993.3" y="1011.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="996.3" y="1022.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.12%)</title><rect x="993.3" y="995.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.3" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.12%)</title><rect x="993.3" y="979.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.3" y="990.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="994.8" y="1059.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.8" y="1070.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.06%)</title><rect x="995.5" y="1075.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.5" y="1086.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="996.3" y="1075.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="999.3" y="1086.0"></text>
</g>
<g>
<title>__libc_close (19 samples, 1.18%)</title><rect x="997.0" y="1123.0" width="13.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1000.0" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 1.12%)</title><rect x="997.7" y="1107.0" width="13.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.7" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 1.12%)</title><rect x="997.7" y="1091.0" width="13.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1000.7" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_close (3 samples, 0.19%)</title><rect x="998.5" y="1075.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1001.5" y="1086.0"></text>
</g>
<g>
<title>__close_fd (3 samples, 0.19%)</title><rect x="998.5" y="1059.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.5" y="1070.0"></text>
</g>
<g>
<title>filp_close (2 samples, 0.12%)</title><rect x="999.2" y="1043.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1002.2" y="1054.0"></text>
</g>
<g>
<title>fput (2 samples, 0.12%)</title><rect x="999.2" y="1027.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1002.2" y="1038.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.12%)</title><rect x="999.2" y="1011.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.2" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (13 samples, 0.81%)</title><rect x="1000.7" y="1075.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1003.7" y="1086.0"></text>
</g>
<g>
<title>task_work_run (12 samples, 0.75%)</title><rect x="1001.4" y="1059.0" width="8.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1004.4" y="1070.0"></text>
</g>
<g>
<title>____fput (12 samples, 0.75%)</title><rect x="1001.4" y="1043.0" width="8.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1004.4" y="1054.0"></text>
</g>
<g>
<title>__fput (12 samples, 0.75%)</title><rect x="1001.4" y="1027.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1004.4" y="1038.0"></text>
</g>
<g>
<title>dput (4 samples, 0.25%)</title><rect x="1001.4" y="1011.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1004.4" y="1022.0"></text>
</g>
<g>
<title>__dentry_kill (4 samples, 0.25%)</title><rect x="1001.4" y="995.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1004.4" y="1006.0"></text>
</g>
<g>
<title>dentry_free (2 samples, 0.12%)</title><rect x="1001.4" y="979.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1004.4" y="990.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="1001.4" y="963.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1004.4" y="974.0"></text>
</g>
<g>
<title>dentry_unlink_inode (2 samples, 0.12%)</title><rect x="1002.9" y="979.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1005.9" y="990.0"></text>
</g>
<g>
<title>iput (2 samples, 0.12%)</title><rect x="1002.9" y="963.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.9" y="974.0"></text>
</g>
<g>
<title>evict (2 samples, 0.12%)</title><rect x="1002.9" y="947.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1005.9" y="958.0"></text>
</g>
<g>
<title>destroy_inode (1 samples, 0.06%)</title><rect x="1002.9" y="931.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1005.9" y="942.0"></text>
</g>
<g>
<title>call_rcu (1 samples, 0.06%)</title><rect x="1002.9" y="915.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1005.9" y="926.0"></text>
</g>
<g>
<title>__call_rcu (1 samples, 0.06%)</title><rect x="1002.9" y="899.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.9" y="910.0"></text>
</g>
<g>
<title>wake_up_bit (1 samples, 0.06%)</title><rect x="1003.6" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.6" y="942.0"></text>
</g>
<g>
<title>__wake_up_bit (1 samples, 0.06%)</title><rect x="1003.6" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1006.6" y="926.0"></text>
</g>
<g>
<title>security_file_free (3 samples, 0.19%)</title><rect x="1004.3" y="1011.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.3" y="1022.0"></text>
</g>
<g>
<title>apparmor_file_free_security (2 samples, 0.12%)</title><rect x="1004.3" y="995.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1007.3" y="1006.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="1005.8" y="995.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1008.8" y="1006.0"></text>
</g>
<g>
<title>sock_close (5 samples, 0.31%)</title><rect x="1006.5" y="1011.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1009.5" y="1022.0"></text>
</g>
<g>
<title>__sock_release (5 samples, 0.31%)</title><rect x="1006.5" y="995.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1009.5" y="1006.0"></text>
</g>
<g>
<title>inet6_release (5 samples, 0.31%)</title><rect x="1006.5" y="979.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1009.5" y="990.0"></text>
</g>
<g>
<title>inet_release (5 samples, 0.31%)</title><rect x="1006.5" y="963.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1009.5" y="974.0"></text>
</g>
<g>
<title>_raw_write_unlock_bh (1 samples, 0.06%)</title><rect x="1006.5" y="947.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1009.5" y="958.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="1007.3" y="947.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1010.3" y="958.0"></text>
</g>
<g>
<title>tcp_close (3 samples, 0.19%)</title><rect x="1008.0" y="947.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1011.0" y="958.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.12%)</title><rect x="1008.7" y="931.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1011.7" y="942.0"></text>
</g>
<g>
<title>__sk_free (2 samples, 0.12%)</title><rect x="1008.7" y="915.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1011.7" y="926.0"></text>
</g>
<g>
<title>sk_destruct (1 samples, 0.06%)</title><rect x="1009.5" y="899.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.5" y="910.0"></text>
</g>
<g>
<title>__sk_destruct (1 samples, 0.06%)</title><rect x="1009.5" y="883.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.5" y="894.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="1010.2" y="1075.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1013.2" y="1086.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.06%)</title><rect x="1010.9" y="1123.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1013.9" y="1134.0"></text>
</g>
<g>
<title>jni_SetIntField (1 samples, 0.06%)</title><rect x="1011.7" y="1123.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1014.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 2.67%)</title><rect x="1012.4" y="1187.0" width="31.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.4" y="1198.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 2.05%)</title><rect x="1012.4" y="1171.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.4" y="1182.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 2.05%)</title><rect x="1012.4" y="1155.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.4" y="1166.0">o..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (10 samples, 0.62%)</title><rect x="1012.4" y="1139.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1012.4" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.06%)</title><rect x="1012.4" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (9 samples, 0.56%)</title><rect x="1013.1" y="1123.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.56%)</title><rect x="1013.1" y="1107.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.56%)</title><rect x="1013.1" y="1091.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.56%)</title><rect x="1013.1" y="1075.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.56%)</title><rect x="1013.1" y="1059.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.56%)</title><rect x="1013.1" y="1043.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.56%)</title><rect x="1013.1" y="1027.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.56%)</title><rect x="1013.1" y="1011.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.56%)</title><rect x="1013.1" y="995.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.1" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.06%)</title><rect x="1013.1" y="979.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1016.1" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.19%)</title><rect x="1013.9" y="979.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1016.9" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.12%)</title><rect x="1013.9" y="963.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1016.9" y="974.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="1015.3" y="963.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1018.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.31%)</title><rect x="1016.1" y="979.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1019.1" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.25%)</title><rect x="1016.8" y="963.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1019.8" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.25%)</title><rect x="1016.8" y="947.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.8" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.25%)</title><rect x="1016.8" y="931.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1019.8" y="942.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.25%)</title><rect x="1016.8" y="915.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1019.8" y="926.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.25%)</title><rect x="1016.8" y="899.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.8" y="910.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.06%)</title><rect x="1016.8" y="883.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1019.8" y="894.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.06%)</title><rect x="1016.8" y="867.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1019.8" y="878.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.19%)</title><rect x="1017.5" y="883.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1020.5" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.19%)</title><rect x="1017.5" y="867.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.5" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.19%)</title><rect x="1017.5" y="851.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.5" y="862.0"></text>
</g>
<g>
<title>RequestHandler5_putRep.handleRequest (22 samples, 1.37%)</title><rect x="1019.8" y="1139.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1019.8" y="1123.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.06%)</title><rect x="1019.8" y="1107.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.06%)</title><rect x="1019.8" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putRep (21 samples, 1.31%)</title><rect x="1020.5" y="1123.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.31%)</title><rect x="1020.5" y="1107.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 1.31%)</title><rect x="1020.5" y="1091.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1023.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (18 samples, 1.12%)</title><rect x="1022.0" y="1075.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 1.12%)</title><rect x="1022.0" y="1059.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1025.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 1.12%)</title><rect x="1022.0" y="1043.0" width="13.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 1.12%)</title><rect x="1022.0" y="1027.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1025.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 1.12%)</title><rect x="1022.0" y="1011.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1025.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 1.12%)</title><rect x="1022.0" y="995.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1025.0" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="1022.0" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1025.0" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.25%)</title><rect x="1022.7" y="979.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1025.7" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.12%)</title><rect x="1022.7" y="963.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1025.7" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="1024.2" y="963.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1027.2" y="974.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1024.9" y="963.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1027.9" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.75%)</title><rect x="1025.6" y="979.0" width="8.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1028.6" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.68%)</title><rect x="1026.4" y="963.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1029.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.68%)</title><rect x="1026.4" y="947.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.4" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.68%)</title><rect x="1026.4" y="931.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1029.4" y="942.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.68%)</title><rect x="1026.4" y="915.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.4" y="926.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.62%)</title><rect x="1026.4" y="899.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1029.4" y="910.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.62%)</title><rect x="1026.4" y="883.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1029.4" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.62%)</title><rect x="1026.4" y="867.0" width="7.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1029.4" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.62%)</title><rect x="1026.4" y="851.0" width="7.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1029.4" y="862.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="1033.7" y="899.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1036.7" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="1034.4" y="979.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1037.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="1035.2" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="1035.2" y="1059.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="1035.2" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.06%)</title><rect x="1035.2" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.06%)</title><rect x="1035.2" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1038.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.06%)</title><rect x="1035.2" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.06%)</title><rect x="1035.2" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.06%)</title><rect x="1035.9" y="1139.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.9" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.06%)</title><rect x="1035.9" y="1123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="1035.9" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.06%)</title><rect x="1035.9" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.9" y="1102.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1035.9" y="1075.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1038.9" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="1035.9" y="1059.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1038.9" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="1035.9" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1038.9" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1035.9" y="1027.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1038.9" y="1038.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.06%)</title><rect x="1035.9" y="1011.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1038.9" y="1022.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.06%)</title><rect x="1035.9" y="995.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1038.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.37%)</title><rect x="1036.6" y="1171.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.19%)</title><rect x="1037.4" y="1155.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.19%)</title><rect x="1037.4" y="1139.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1038.8" y="1123.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.12%)</title><rect x="1039.6" y="1155.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.19%)</title><rect x="1041.0" y="1171.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1041.0" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1041.0" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.0" y="1150.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1041.0" y="1123.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1044.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1041.8" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.8" y="1166.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1042.5" y="1155.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1045.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1043.2" y="1171.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1043.2" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1046.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (175 samples, 10.88%)</title><rect x="1044.0" y="1187.0" width="128.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.0" y="1198.0">one/nio/net/Sess..</text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (3 samples, 0.19%)</title><rect x="1044.0" y="1171.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.0" y="1182.0"></text>
</g>
<g>
<title>Exceptions::debug_check_abort(Handle, char const*) (1 samples, 0.06%)</title><rect x="1044.0" y="1155.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1047.0" y="1166.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="1044.7" y="1155.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1047.7" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="1044.7" y="1139.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1047.7" y="1150.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="1044.7" y="1123.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1047.7" y="1134.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1045.4" y="1155.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1048.4" y="1166.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.06%)</title><rect x="1045.4" y="1139.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.4" y="1150.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="1045.4" y="1123.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1046.2" y="1171.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1049.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1046.2" y="1155.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1049.2" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::exception_handler_for_return_address(JavaThread*, unsigned char*) (1 samples, 0.06%)</title><rect x="1046.2" y="1139.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1049.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (171 samples, 10.63%)</title><rect x="1046.9" y="1171.0" width="125.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.9" y="1182.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (56 samples, 3.48%)</title><rect x="1047.6" y="1155.0" width="41.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1050.6" y="1166.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.12%)</title><rect x="1047.6" y="1139.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.6" y="1150.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.12%)</title><rect x="1049.1" y="1139.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1052.1" y="1150.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.12%)</title><rect x="1049.1" y="1123.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1052.1" y="1134.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1049.8" y="1107.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1052.8" y="1118.0"></text>
</g>
<g>
<title>jni_ThrowNew (50 samples, 3.11%)</title><rect x="1050.6" y="1139.0" width="36.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1053.6" y="1150.0">jni..</text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (48 samples, 2.99%)</title><rect x="1052.0" y="1123.0" width="35.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1055.0" y="1134.0">Exc..</text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (28 samples, 1.74%)</title><rect x="1052.8" y="1107.0" width="20.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1055.8" y="1118.0"></text>
</g>
<g>
<title>Events::log_exception(Thread*, char const*, ...) (2 samples, 0.12%)</title><rect x="1055.0" y="1091.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1058.0" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="1055.0" y="1075.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1058.0" y="1086.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.06%)</title><rect x="1055.0" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.0" y="1070.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.06%)</title><rect x="1055.7" y="1075.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1058.7" y="1086.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.06%)</title><rect x="1055.7" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1058.7" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (1 samples, 0.06%)</title><rect x="1056.4" y="1091.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1059.4" y="1102.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (21 samples, 1.31%)</title><rect x="1057.2" y="1091.0" width="15.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1060.2" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (15 samples, 0.93%)</title><rect x="1057.2" y="1075.0" width="11.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1060.2" y="1086.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (13 samples, 0.81%)</title><rect x="1057.2" y="1059.0" width="9.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1060.2" y="1070.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (12 samples, 0.75%)</title><rect x="1057.9" y="1043.0" width="8.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1060.9" y="1054.0"></text>
</g>
<g>
<title>__strchr_avx2 (3 samples, 0.19%)</title><rect x="1057.9" y="1027.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1060.9" y="1038.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (9 samples, 0.56%)</title><rect x="1060.1" y="1027.0" width="6.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1063.1" y="1038.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (5 samples, 0.31%)</title><rect x="1063.0" y="1011.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1066.0" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::box_klass_type(Klass*) (1 samples, 0.06%)</title><rect x="1066.7" y="1059.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1069.7" y="1070.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.06%)</title><rect x="1067.5" y="1059.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1070.5" y="1070.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (1 samples, 0.06%)</title><rect x="1067.5" y="1043.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1070.5" y="1054.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="1067.5" y="1027.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1070.5" y="1038.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (3 samples, 0.19%)</title><rect x="1068.2" y="1075.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1071.2" y="1086.0"></text>
</g>
<g>
<title>java_lang_boxing_object::basic_type(oopDesc*) (1 samples, 0.06%)</title><rect x="1070.4" y="1075.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1073.4" y="1086.0"></text>
</g>
<g>
<title>stringStream::as_string() const (1 samples, 0.06%)</title><rect x="1071.1" y="1075.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1074.1" y="1086.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1071.1" y="1059.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1074.1" y="1070.0"></text>
</g>
<g>
<title>stringStream::~stringStream() (1 samples, 0.06%)</title><rect x="1071.9" y="1075.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1074.9" y="1086.0"></text>
</g>
<g>
<title>stringStream::stringStream(char*, unsigned long) (1 samples, 0.06%)</title><rect x="1072.6" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1075.6" y="1102.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (18 samples, 1.12%)</title><rect x="1073.3" y="1107.0" width="13.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1076.3" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_handle(Thread*) (1 samples, 0.06%)</title><rect x="1073.3" y="1091.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1076.3" y="1102.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (6 samples, 0.37%)</title><rect x="1074.1" y="1091.0" width="4.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1077.1" y="1102.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (5 samples, 0.31%)</title><rect x="1074.1" y="1075.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1077.1" y="1086.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="1074.8" y="1059.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.8" y="1070.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="1074.8" y="1043.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.8" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="1075.5" y="1059.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1078.5" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, LinkInfo const&amp;, methodHandle const&amp;, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1076.3" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.3" y="1070.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="1077.0" y="1059.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1080.0" y="1070.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="1077.7" y="1075.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1080.7" y="1086.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.06%)</title><rect x="1078.5" y="1091.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1081.5" y="1102.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) [clone .part.92] (9 samples, 0.56%)</title><rect x="1079.2" y="1091.0" width="6.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1082.2" y="1102.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (9 samples, 0.56%)</title><rect x="1079.2" y="1075.0" width="6.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.2" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 573558ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.12%)</title><rect x="1079.9" y="1059.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1082.9" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1081.4" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1084.4" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.25%)</title><rect x="1082.1" y="1059.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1085.1" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.12%)</title><rect x="1082.9" y="1043.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1085.9" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1082.9" y="1027.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1085.9" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1083.6" y="1027.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1086.6" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1084.3" y="1043.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1087.3" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1085.1" y="1059.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1088.1" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1085.1" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.1" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1085.1" y="1027.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1088.1" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="1085.1" y="1011.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1088.1" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="1085.8" y="1091.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.8" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1086.5" y="1107.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1089.5" y="1118.0"></text>
</g>
<g>
<title>oopDesc::metadata_field(int) const (2 samples, 0.12%)</title><rect x="1087.3" y="1139.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 1.49%)</title><rect x="1088.7" y="1155.0" width="17.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1091.7" y="1166.0"></text>
</g>
<g>
<title>_IO_old_init (1 samples, 0.06%)</title><rect x="1088.7" y="1139.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1091.7" y="1150.0"></text>
</g>
<g>
<title>__GI__IO_setb (2 samples, 0.12%)</title><rect x="1089.5" y="1139.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1092.5" y="1150.0"></text>
</g>
<g>
<title>jni_FindClass (1 samples, 0.06%)</title><rect x="1090.9" y="1139.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1093.9" y="1150.0"></text>
</g>
<g>
<title>throw_by_name (20 samples, 1.24%)</title><rect x="1091.7" y="1139.0" width="14.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1094.7" y="1150.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.12%)</title><rect x="1092.4" y="1123.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1095.4" y="1134.0"></text>
</g>
<g>
<title>jni_FindClass (17 samples, 1.06%)</title><rect x="1093.9" y="1123.0" width="12.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1096.9" y="1134.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="1094.6" y="1107.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1097.6" y="1118.0"></text>
</g>
<g>
<title>JavaThread::security_get_caller_class(int) (7 samples, 0.44%)</title><rect x="1095.3" y="1107.0" width="5.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1098.3" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.31%)</title><rect x="1096.1" y="1091.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.1" y="1102.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.31%)</title><rect x="1096.1" y="1075.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1099.1" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.19%)</title><rect x="1097.5" y="1059.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1100.5" y="1070.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.06%)</title><rect x="1099.7" y="1091.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.7" y="1102.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="1099.7" y="1075.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1102.7" y="1086.0"></text>
</g>
<g>
<title>SymbolTable::lookup(char const*, int, Thread*) (1 samples, 0.06%)</title><rect x="1100.5" y="1107.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.5" y="1118.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.06%)</title><rect x="1100.5" y="1091.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.5" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="1101.2" y="1107.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1104.2" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.12%)</title><rect x="1101.9" y="1107.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1104.9" y="1118.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (4 samples, 0.25%)</title><rect x="1103.4" y="1107.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1106.4" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::initialize(Thread*) (1 samples, 0.06%)</title><rect x="1103.4" y="1091.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1106.4" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.06%)</title><rect x="1104.1" y="1091.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1107.1" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.12%)</title><rect x="1104.9" y="1091.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.9" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.12%)</title><rect x="1104.9" y="1075.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1107.9" y="1086.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.06%)</title><rect x="1104.9" y="1059.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.9" y="1070.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (1 samples, 0.06%)</title><rect x="1105.6" y="1059.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1108.6" y="1070.0"></text>
</g>
<g>
<title>_IO_default_xsputn (5 samples, 0.31%)</title><rect x="1106.3" y="1155.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1109.3" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (42 samples, 2.61%)</title><rect x="1110.0" y="1155.0" width="30.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1113.0" y="1166.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 2.43%)</title><rect x="1112.2" y="1139.0" width="28.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1115.2" y="1150.0">en..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.06%)</title><rect x="1112.2" y="1123.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.2" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 2.36%)</title><rect x="1112.9" y="1123.0" width="27.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1115.9" y="1134.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (36 samples, 2.24%)</title><rect x="1113.7" y="1107.0" width="26.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1116.7" y="1118.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (35 samples, 2.18%)</title><rect x="1113.7" y="1091.0" width="25.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1116.7" y="1102.0">_..</text>
</g>
<g>
<title>sock_recvmsg (32 samples, 1.99%)</title><rect x="1113.7" y="1075.0" width="23.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.7" y="1086.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (25 samples, 1.55%)</title><rect x="1113.7" y="1059.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.7" y="1070.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="1114.4" y="1043.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1117.4" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (23 samples, 1.43%)</title><rect x="1115.1" y="1043.0" width="16.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.1" y="1054.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.44%)</title><rect x="1120.3" y="1027.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.3" y="1038.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.12%)</title><rect x="1120.3" y="1011.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.3" y="1022.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="1120.3" y="995.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.3" y="1006.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.31%)</title><rect x="1121.8" y="1011.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.8" y="1022.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.31%)</title><rect x="1121.8" y="995.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.8" y="1006.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.12%)</title><rect x="1124.0" y="979.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1127.0" y="990.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="1124.0" y="963.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1127.0" y="974.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="1124.7" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1127.7" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.06%)</title><rect x="1125.4" y="1027.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.4" y="1038.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.12%)</title><rect x="1126.2" y="1027.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1129.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.12%)</title><rect x="1126.2" y="1011.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.2" y="1022.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="1127.6" y="1027.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.6" y="1038.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.19%)</title><rect x="1128.4" y="1027.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1131.4" y="1038.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.19%)</title><rect x="1128.4" y="1011.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1131.4" y="1022.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.06%)</title><rect x="1129.8" y="995.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.8" y="1006.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="1129.8" y="979.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.8" y="990.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="1130.6" y="1027.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.6" y="1038.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.06%)</title><rect x="1131.3" y="1027.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1134.3" y="1038.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.44%)</title><rect x="1132.0" y="1059.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1135.0" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.37%)</title><rect x="1132.8" y="1043.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1135.8" y="1054.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.37%)</title><rect x="1132.8" y="1027.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1135.8" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.31%)</title><rect x="1133.5" y="1011.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1136.5" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.19%)</title><rect x="1135.0" y="995.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.0" y="1006.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.06%)</title><rect x="1136.4" y="979.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.4" y="990.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.19%)</title><rect x="1137.2" y="1075.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.2" y="1086.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.19%)</title><rect x="1137.2" y="1059.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.2" y="1070.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.19%)</title><rect x="1137.2" y="1043.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1140.2" y="1054.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="1137.9" y="1027.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.9" y="1038.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="1139.4" y="1091.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1142.4" y="1102.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.06%)</title><rect x="1140.1" y="1107.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1143.1" y="1118.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (20 samples, 1.24%)</title><rect x="1140.8" y="1155.0" width="14.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1143.8" y="1166.0"></text>
</g>
<g>
<title>_IO_default_xsputn (2 samples, 0.12%)</title><rect x="1141.6" y="1139.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1144.6" y="1150.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (14 samples, 0.87%)</title><rect x="1143.0" y="1139.0" width="10.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1146.0" y="1150.0"></text>
</g>
<g>
<title>__strlen_avx2 (1 samples, 0.06%)</title><rect x="1153.3" y="1139.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1156.3" y="1150.0"></text>
</g>
<g>
<title>_itoa_word (2 samples, 0.12%)</title><rect x="1154.0" y="1139.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1157.0" y="1150.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.12%)</title><rect x="1155.5" y="1155.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1158.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (21 samples, 1.31%)</title><rect x="1157.0" y="1155.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.0" y="1166.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (21 samples, 1.31%)</title><rect x="1157.0" y="1139.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.0" y="1150.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (21 samples, 1.31%)</title><rect x="1157.0" y="1123.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (21 samples, 1.31%)</title><rect x="1157.0" y="1107.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (21 samples, 1.31%)</title><rect x="1157.0" y="1091.0" width="15.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (21 samples, 1.31%)</title><rect x="1157.0" y="1075.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1160.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (21 samples, 1.31%)</title><rect x="1157.0" y="1059.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1160.0" y="1070.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="1157.0" y="1043.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1160.0" y="1054.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (20 samples, 1.24%)</title><rect x="1157.7" y="1043.0" width="14.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1160.7" y="1054.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (20 samples, 1.24%)</title><rect x="1157.7" y="1027.0" width="14.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1160.7" y="1038.0"></text>
</g>
<g>
<title>PreserveExceptionMark::~PreserveExceptionMark() (1 samples, 0.06%)</title><rect x="1157.7" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.7" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.06%)</title><rect x="1158.4" y="1011.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="1022.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (2 samples, 0.12%)</title><rect x="1159.2" y="1011.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.2" y="1022.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (16 samples, 1.00%)</title><rect x="1160.6" y="1011.0" width="11.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.6" y="1022.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.06%)</title><rect x="1160.6" y="995.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.6" y="1006.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.06%)</title><rect x="1161.4" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.4" y="1006.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (14 samples, 0.87%)</title><rect x="1162.1" y="995.0" width="10.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.1" y="1006.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.19%)</title><rect x="1164.3" y="979.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.3" y="990.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (3 samples, 0.19%)</title><rect x="1164.3" y="963.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.3" y="974.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.12%)</title><rect x="1164.3" y="947.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.3" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.12%)</title><rect x="1164.3" y="931.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.3" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1164.3" y="915.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.3" y="926.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="1164.3" y="899.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1167.3" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1165.0" y="915.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1168.0" y="926.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1165.8" y="947.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.8" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1165.8" y="931.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.8" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1165.8" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.8" y="926.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.06%)</title><rect x="1165.8" y="899.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1168.8" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="1166.5" y="979.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.5" y="990.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.06%)</title><rect x="1166.5" y="963.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.5" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.44%)</title><rect x="1167.3" y="979.0" width="5.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.3" y="990.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (5 samples, 0.31%)</title><rect x="1168.7" y="963.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.7" y="974.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.19%)</title><rect x="1169.5" y="947.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.12%)</title><rect x="1170.2" y="931.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.2" y="942.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.06%)</title><rect x="1171.7" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.7" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="1172.4" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.4" y="1214.0"></text>
</g>
<g>
<title>start_thread (23 samples, 1.43%)</title><rect x="1173.1" y="1235.0" width="16.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1176.1" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (23 samples, 1.43%)</title><rect x="1173.1" y="1219.0" width="16.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1176.1" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (23 samples, 1.43%)</title><rect x="1173.1" y="1203.0" width="16.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.1" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.50%)</title><rect x="1173.1" y="1187.0" width="5.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.1" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.50%)</title><rect x="1173.1" y="1171.0" width="5.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.1" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (7 samples, 0.44%)</title><rect x="1173.1" y="1155.0" width="5.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.1" y="1166.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.44%)</title><rect x="1173.1" y="1139.0" width="5.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1176.1" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1178.3" y="1155.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.3" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.06%)</title><rect x="1178.3" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.3" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="1178.3" y="1123.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.3" y="1134.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.06%)</title><rect x="1178.3" y="1107.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.3" y="1118.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.06%)</title><rect x="1178.3" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.3" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.06%)</title><rect x="1178.3" y="1075.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.3" y="1086.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.06%)</title><rect x="1178.3" y="1059.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.3" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.06%)</title><rect x="1178.3" y="1043.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.3" y="1054.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 0.93%)</title><rect x="1179.0" y="1187.0" width="11.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.0" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.93%)</title><rect x="1179.0" y="1171.0" width="11.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.0" y="1182.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (15 samples, 0.93%)</title><rect x="1179.0" y="1155.0" width="11.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.0" y="1166.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 0.87%)</title><rect x="1179.0" y="1139.0" width="10.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.0" y="1150.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (14 samples, 0.87%)</title><rect x="1179.0" y="1123.0" width="10.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.0" y="1134.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (8 samples, 0.50%)</title><rect x="1179.0" y="1107.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.0" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.06%)</title><rect x="1179.0" y="1091.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.0" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.06%)</title><rect x="1179.0" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.0" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.06%)</title><rect x="1179.0" y="1059.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.0" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (7 samples, 0.44%)</title><rect x="1179.7" y="1091.0" width="5.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.7" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.12%)</title><rect x="1179.7" y="1075.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.7" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.06%)</title><rect x="1179.7" y="1059.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.7" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.06%)</title><rect x="1180.5" y="1059.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.5" y="1070.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.06%)</title><rect x="1180.5" y="1043.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.5" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.06%)</title><rect x="1181.2" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="1086.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.12%)</title><rect x="1181.9" y="1075.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.9" y="1086.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.06%)</title><rect x="1181.9" y="1059.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.9" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="1181.9" y="1043.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1184.9" y="1054.0"></text>
</g>
<g>
<title>addL_rReg_immNode::two_adr() const (1 samples, 0.06%)</title><rect x="1182.7" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.7" y="1070.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.12%)</title><rect x="1183.4" y="1075.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.4" y="1086.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.06%)</title><rect x="1184.1" y="1059.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.1" y="1070.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 0.25%)</title><rect x="1184.9" y="1107.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="1118.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (2 samples, 0.12%)</title><rect x="1184.9" y="1091.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.12%)</title><rect x="1184.9" y="1075.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.06%)</title><rect x="1184.9" y="1059.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.06%)</title><rect x="1184.9" y="1043.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.9" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.06%)</title><rect x="1185.6" y="1059.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.06%)</title><rect x="1185.6" y="1043.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.06%)</title><rect x="1186.3" y="1091.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.06%)</title><rect x="1186.3" y="1075.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.06%)</title><rect x="1186.3" y="1059.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_region(Node*, Node*) (1 samples, 0.06%)</title><rect x="1186.3" y="1043.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_idom(Node*, Node*, unsigned int) (1 samples, 0.06%)</title><rect x="1186.3" y="1027.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="1038.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1186.3" y="1011.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="1022.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="1186.3" y="995.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.3" y="1006.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.06%)</title><rect x="1186.3" y="979.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.3" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="1187.1" y="1091.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="1187.1" y="1075.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.06%)</title><rect x="1187.1" y="1059.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.06%)</title><rect x="1187.1" y="1043.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1187.8" y="1107.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1187.8" y="1091.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1187.8" y="1075.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1187.8" y="1059.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1187.8" y="1043.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1187.8" y="1027.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.12%)</title><rect x="1187.8" y="1011.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.12%)</title><rect x="1187.8" y="995.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.12%)</title><rect x="1187.8" y="979.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.12%)</title><rect x="1187.8" y="963.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.12%)</title><rect x="1187.8" y="947.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.12%)</title><rect x="1187.8" y="931.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1187.8" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1187.8" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1187.8" y="883.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1187.8" y="867.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1187.8" y="851.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1187.8" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.8" y="846.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.06%)</title><rect x="1187.8" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.8" y="830.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.06%)</title><rect x="1187.8" y="803.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.8" y="814.0"></text>
</g>
<g>
<title>TypeTuple::xdual() const (1 samples, 0.06%)</title><rect x="1187.8" y="787.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1188.5" y="915.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1188.5" y="899.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.5" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1188.5" y="883.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1188.5" y="867.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1188.5" y="851.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1188.5" y="835.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.06%)</title><rect x="1188.5" y="819.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.06%)</title><rect x="1188.5" y="803.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.06%)</title><rect x="1188.5" y="787.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.06%)</title><rect x="1188.5" y="771.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.06%)</title><rect x="1188.5" y="755.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.06%)</title><rect x="1188.5" y="739.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.06%)</title><rect x="1188.5" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
<g>
<title>Node::disconnect_inputs(Node*, Compile*) (1 samples, 0.06%)</title><rect x="1188.5" y="707.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.06%)</title><rect x="1189.3" y="1139.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="1150.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.06%)</title><rect x="1189.3" y="1123.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.3" y="1134.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.06%)</title><rect x="1189.3" y="1107.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.3" y="1118.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.06%)</title><rect x="1189.3" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="1102.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.06%)</title><rect x="1189.3" y="1075.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.3" y="1086.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.06%)</title><rect x="1189.3" y="1059.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="1070.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.06%)</title><rect x="1189.3" y="1043.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.3" y="1054.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.06%)</title><rect x="1189.3" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="1038.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.06%)</title><rect x="1189.3" y="1011.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.3" y="1022.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.06%)</title><rect x="1189.3" y="995.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.3" y="1006.0"></text>
</g>
</g>
</svg>
