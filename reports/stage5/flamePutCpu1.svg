<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (891 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.11%)</title><rect x="10.0" y="947.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.11%)</title><rect x="10.0" y="931.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="10.0" y="915.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="10.0" y="899.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="10.0" y="883.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.11%)</title><rect x="10.0" y="867.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.11%)</title><rect x="10.0" y="851.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.11%)</title><rect x="10.0" y="835.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.11%)</title><rect x="10.0" y="819.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.11%)</title><rect x="10.0" y="803.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="10.0" y="787.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.11%)</title><rect x="10.0" y="771.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.11%)</title><rect x="10.0" y="755.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.11%)</title><rect x="10.0" y="739.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.11%)</title><rect x="10.0" y="723.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.11%)</title><rect x="10.0" y="707.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="10.0" y="691.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="10.0" y="675.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="10.0" y="659.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="10.0" y="643.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="10.0" y="627.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="10.0" y="611.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.56%)</title><rect x="11.3" y="947.0" width="6.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.3" y="958.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.56%)</title><rect x="11.3" y="931.0" width="6.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="14.3" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (10 samples, 1.12%)</title><rect x="17.9" y="947.0" width="13.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="20.9" y="958.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (9 samples, 1.01%)</title><rect x="17.9" y="931.0" width="12.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="20.9" y="942.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (9 samples, 1.01%)</title><rect x="17.9" y="915.0" width="12.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.01%)</title><rect x="17.9" y="899.0" width="12.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.01%)</title><rect x="17.9" y="883.0" width="12.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="20.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.01%)</title><rect x="17.9" y="867.0" width="12.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (9 samples, 1.01%)</title><rect x="17.9" y="851.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (9 samples, 1.01%)</title><rect x="17.9" y="835.0" width="12.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (8 samples, 0.90%)</title><rect x="17.9" y="819.0" width="10.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.90%)</title><rect x="17.9" y="803.0" width="10.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 0.90%)</title><rect x="17.9" y="787.0" width="10.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.90%)</title><rect x="17.9" y="771.0" width="10.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="20.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.90%)</title><rect x="17.9" y="755.0" width="10.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 0.90%)</title><rect x="17.9" y="739.0" width="10.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.9" y="750.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 0.90%)</title><rect x="17.9" y="723.0" width="10.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="20.9" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (8 samples, 0.90%)</title><rect x="17.9" y="707.0" width="10.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="20.9" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (6 samples, 0.67%)</title><rect x="17.9" y="691.0" width="8.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="20.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.67%)</title><rect x="17.9" y="675.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="20.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.67%)</title><rect x="17.9" y="659.0" width="8.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.9" y="670.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.45%)</title><rect x="17.9" y="643.0" width="5.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.9" y="654.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 0.45%)</title><rect x="17.9" y="627.0" width="5.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="20.9" y="638.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.45%)</title><rect x="17.9" y="611.0" width="5.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.9" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.45%)</title><rect x="17.9" y="595.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="20.9" y="606.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.11%)</title><rect x="17.9" y="579.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="20.9" y="590.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.22%)</title><rect x="19.3" y="579.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.3" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="20.6" y="563.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="23.6" y="574.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.11%)</title><rect x="21.9" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="24.9" y="590.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.11%)</title><rect x="21.9" y="563.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.9" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.22%)</title><rect x="23.2" y="643.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.2" y="654.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.22%)</title><rect x="23.2" y="627.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="26.2" y="638.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.22%)</title><rect x="23.2" y="611.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="26.2" y="622.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.11%)</title><rect x="23.2" y="595.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="26.2" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="24.6" y="595.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="27.6" y="606.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.11%)</title><rect x="24.6" y="579.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.22%)</title><rect x="25.9" y="691.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.22%)</title><rect x="25.9" y="675.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="28.9" y="686.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.22%)</title><rect x="25.9" y="659.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.9" y="670.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.22%)</title><rect x="25.9" y="643.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="28.9" y="654.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.22%)</title><rect x="25.9" y="627.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="28.9" y="638.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.11%)</title><rect x="25.9" y="611.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="28.9" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="27.2" y="611.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.2" y="622.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.11%)</title><rect x="27.2" y="595.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="30.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.11%)</title><rect x="28.5" y="819.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.11%)</title><rect x="28.5" y="803.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.11%)</title><rect x="28.5" y="787.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="28.5" y="771.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.11%)</title><rect x="28.5" y="755.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.11%)</title><rect x="28.5" y="739.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.11%)</title><rect x="28.5" y="723.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.5" y="734.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.11%)</title><rect x="28.5" y="707.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.5" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.11%)</title><rect x="28.5" y="691.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="31.5" y="702.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.11%)</title><rect x="28.5" y="675.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="31.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="28.5" y="659.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="28.5" y="643.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="31.5" y="654.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="28.5" y="627.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.5" y="638.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="28.5" y="611.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="31.5" y="622.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="28.5" y="595.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="31.5" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="28.5" y="579.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="29.9" y="931.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="32.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="29.9" y="915.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="32.9" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="29.9" y="899.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="32.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.run (736 samples, 82.60%)</title><rect x="31.2" y="947.0" width="974.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.2" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (736 samples, 82.60%)</title><rect x="31.2" y="931.0" width="974.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.2" y="942.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (736 samples, 82.60%)</title><rect x="31.2" y="915.0" width="974.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.2" y="926.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (6 samples, 0.67%)</title><rect x="53.7" y="899.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.beforeExecute (1 samples, 0.11%)</title><rect x="61.6" y="899.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (62 samples, 6.96%)</title><rect x="63.0" y="899.0" width="82.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.0" y="910.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (61 samples, 6.85%)</title><rect x="64.3" y="883.0" width="80.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.3" y="894.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (47 samples, 5.27%)</title><rect x="66.9" y="867.0" width="62.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.9" y="878.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.11%)</title><rect x="69.6" y="851.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.11%)</title><rect x="69.6" y="835.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.11%)</title><rect x="69.6" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (6 samples, 0.67%)</title><rect x="70.9" y="851.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (6 samples, 0.67%)</title><rect x="70.9" y="835.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 4.26%)</title><rect x="78.9" y="851.0" width="50.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.9" y="862.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 4.26%)</title><rect x="78.9" y="835.0" width="50.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.9" y="846.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (16 samples, 1.80%)</title><rect x="80.2" y="819.0" width="21.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="83.2" y="830.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.11%)</title><rect x="80.2" y="803.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="83.2" y="814.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.67%)</title><rect x="81.5" y="803.0" width="8.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="84.5" y="814.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.34%)</title><rect x="82.8" y="787.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="85.8" y="798.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.11%)</title><rect x="86.8" y="787.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="89.8" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="88.1" y="787.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="91.1" y="798.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.56%)</title><rect x="89.5" y="803.0" width="6.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="92.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.56%)</title><rect x="89.5" y="787.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="89.5" y="771.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.34%)</title><rect x="90.8" y="771.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="93.8" y="782.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.22%)</title><rect x="92.1" y="755.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="95.1" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.22%)</title><rect x="92.1" y="739.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.1" y="750.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="94.8" y="771.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.8" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.11%)</title><rect x="96.1" y="803.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="99.1" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.11%)</title><rect x="97.4" y="803.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="100.4" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.11%)</title><rect x="98.7" y="803.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="101.7" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="100.1" y="803.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="103.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 2.36%)</title><rect x="101.4" y="819.0" width="27.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="104.4" y="830.0">[..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.11%)</title><rect x="101.4" y="803.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="104.4" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.11%)</title><rect x="102.7" y="803.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="105.7" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (19 samples, 2.13%)</title><rect x="104.0" y="803.0" width="25.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="107.0" y="814.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.46%)</title><rect x="112.0" y="787.0" width="17.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.46%)</title><rect x="112.0" y="771.0" width="17.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="115.0" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="112.0" y="755.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 1.23%)</title><rect x="113.3" y="755.0" width="14.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.3" y="766.0"></text>
</g>
<g>
<title>do_futex (10 samples, 1.12%)</title><rect x="113.3" y="739.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="116.3" y="750.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 1.12%)</title><rect x="113.3" y="723.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="116.3" y="734.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.79%)</title><rect x="114.6" y="707.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.6" y="718.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.67%)</title><rect x="115.9" y="691.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.9" y="702.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.56%)</title><rect x="117.3" y="675.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.3" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.45%)</title><rect x="118.6" y="659.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.6" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.22%)</title><rect x="123.9" y="707.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="126.9" y="718.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.11%)</title><rect x="126.5" y="739.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="129.5" y="750.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="127.9" y="755.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="130.9" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="127.9" y="739.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="130.9" y="750.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="127.9" y="723.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="130.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 1.35%)</title><rect x="129.2" y="867.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 1.35%)</title><rect x="129.2" y="851.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 1.35%)</title><rect x="129.2" y="835.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 1.35%)</title><rect x="129.2" y="819.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 1.01%)</title><rect x="133.2" y="803.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.2" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.11%)</title><rect x="133.2" y="787.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="136.2" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.22%)</title><rect x="134.5" y="787.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="137.5" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.11%)</title><rect x="135.8" y="771.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="138.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.67%)</title><rect x="137.1" y="787.0" width="8.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="140.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.67%)</title><rect x="137.1" y="771.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="140.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.67%)</title><rect x="137.1" y="755.0" width="8.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="140.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.56%)</title><rect x="138.5" y="739.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.5" y="750.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.56%)</title><rect x="138.5" y="723.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="141.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.56%)</title><rect x="138.5" y="707.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.45%)</title><rect x="139.8" y="691.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="142.8" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.45%)</title><rect x="139.8" y="675.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.8" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.45%)</title><rect x="139.8" y="659.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="142.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$76/301499389.run (330 samples, 37.04%)</title><rect x="145.1" y="899.0" width="437.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.1" y="910.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$5 (330 samples, 37.04%)</title><rect x="145.1" y="883.0" width="437.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.1" y="894.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$p..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (330 samples, 37.04%)</title><rect x="145.1" y="867.0" width="437.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.1" y="878.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internal..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (65 samples, 7.30%)</title><rect x="145.1" y="851.0" width="86.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.1" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="145.1" y="835.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="145.1" y="819.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="145.1" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="145.1" y="787.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="148.1" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="145.1" y="771.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="148.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 7.18%)</title><rect x="146.4" y="835.0" width="84.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.4" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.11%)</title><rect x="146.4" y="819.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 7.07%)</title><rect x="147.7" y="819.0" width="83.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.7" y="830.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 7.07%)</title><rect x="147.7" y="803.0" width="83.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.7" y="814.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (63 samples, 7.07%)</title><rect x="147.7" y="787.0" width="83.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="150.7" y="798.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (63 samples, 7.07%)</title><rect x="147.7" y="771.0" width="83.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.7" y="782.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.22%)</title><rect x="147.7" y="755.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="150.7" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.22%)</title><rect x="147.7" y="739.0" width="2.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="150.7" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="147.7" y="723.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="150.7" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="149.1" y="723.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="152.1" y="734.0"></text>
</g>
<g>
<title>__libc_send (61 samples, 6.85%)</title><rect x="150.4" y="755.0" width="80.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="153.4" y="766.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 6.62%)</title><rect x="153.0" y="739.0" width="78.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="156.0" y="750.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (59 samples, 6.62%)</title><rect x="153.0" y="723.0" width="78.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="156.0" y="734.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (59 samples, 6.62%)</title><rect x="153.0" y="707.0" width="78.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="156.0" y="718.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (59 samples, 6.62%)</title><rect x="153.0" y="691.0" width="78.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="156.0" y="702.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (58 samples, 6.51%)</title><rect x="153.0" y="675.0" width="76.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="156.0" y="686.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (58 samples, 6.51%)</title><rect x="153.0" y="659.0" width="76.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="156.0" y="670.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (58 samples, 6.51%)</title><rect x="153.0" y="643.0" width="76.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="156.0" y="654.0">tcp_send..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.11%)</title><rect x="153.0" y="627.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="156.0" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="153.0" y="611.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="156.0" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.22%)</title><rect x="154.4" y="627.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.4" y="638.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.11%)</title><rect x="155.7" y="611.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.7" y="622.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.11%)</title><rect x="155.7" y="595.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.7" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.11%)</title><rect x="155.7" y="579.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="158.7" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="155.7" y="563.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.7" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.11%)</title><rect x="155.7" y="547.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="158.7" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (55 samples, 6.17%)</title><rect x="157.0" y="627.0" width="72.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="160.0" y="638.0">tcp_send..</text>
</g>
<g>
<title>check_stack_object (1 samples, 0.11%)</title><rect x="158.3" y="611.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.3" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.22%)</title><rect x="159.7" y="611.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.7" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.22%)</title><rect x="159.7" y="595.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.7" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.11%)</title><rect x="159.7" y="579.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="162.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="159.7" y="563.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="162.7" y="574.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.11%)</title><rect x="161.0" y="579.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="164.0" y="590.0"></text>
</g>
<g>
<title>tcp_push (51 samples, 5.72%)</title><rect x="162.3" y="611.0" width="67.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.3" y="622.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (51 samples, 5.72%)</title><rect x="162.3" y="595.0" width="67.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.3" y="606.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (51 samples, 5.72%)</title><rect x="162.3" y="579.0" width="67.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.3" y="590.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (51 samples, 5.72%)</title><rect x="162.3" y="563.0" width="67.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.3" y="574.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (46 samples, 5.16%)</title><rect x="166.3" y="547.0" width="60.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="169.3" y="558.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 4.94%)</title><rect x="167.6" y="531.0" width="58.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="170.6" y="542.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (44 samples, 4.94%)</title><rect x="167.6" y="515.0" width="58.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="170.6" y="526.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (7 samples, 0.79%)</title><rect x="167.6" y="499.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.6" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.79%)</title><rect x="167.6" y="483.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.6" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.79%)</title><rect x="167.6" y="467.0" width="9.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="170.6" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.79%)</title><rect x="167.6" y="451.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="170.6" y="462.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.34%)</title><rect x="168.9" y="435.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="171.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="172.9" y="435.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="175.9" y="446.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.11%)</title><rect x="174.2" y="435.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="177.2" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.11%)</title><rect x="175.5" y="435.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="178.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="175.5" y="419.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="178.5" y="430.0"></text>
</g>
<g>
<title>ip_output (37 samples, 4.15%)</title><rect x="176.9" y="499.0" width="49.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.9" y="510.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (36 samples, 4.04%)</title><rect x="178.2" y="483.0" width="47.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.2" y="494.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="179.5" y="467.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="182.5" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (34 samples, 3.82%)</title><rect x="180.8" y="467.0" width="45.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.8" y="478.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 3.82%)</title><rect x="180.8" y="451.0" width="45.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.8" y="462.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (28 samples, 3.14%)</title><rect x="183.5" y="435.0" width="37.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.5" y="446.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (28 samples, 3.14%)</title><rect x="183.5" y="419.0" width="37.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="186.5" y="430.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (28 samples, 3.14%)</title><rect x="183.5" y="403.0" width="37.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.5" y="414.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (28 samples, 3.14%)</title><rect x="183.5" y="387.0" width="37.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.5" y="398.0">__s..</text>
</g>
<g>
<title>net_rx_action (27 samples, 3.03%)</title><rect x="184.8" y="371.0" width="35.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.8" y="382.0">net..</text>
</g>
<g>
<title>process_backlog (26 samples, 2.92%)</title><rect x="186.1" y="355.0" width="34.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="189.1" y="366.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 2.92%)</title><rect x="186.1" y="339.0" width="34.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="189.1" y="350.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 2.92%)</title><rect x="186.1" y="323.0" width="34.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="189.1" y="334.0">__..</text>
</g>
<g>
<title>ip_rcv (26 samples, 2.92%)</title><rect x="186.1" y="307.0" width="34.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.1" y="318.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (25 samples, 2.81%)</title><rect x="186.1" y="291.0" width="33.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.1" y="302.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (25 samples, 2.81%)</title><rect x="186.1" y="275.0" width="33.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="189.1" y="286.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 2.69%)</title><rect x="186.1" y="259.0" width="31.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.1" y="270.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 2.69%)</title><rect x="186.1" y="243.0" width="31.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="189.1" y="254.0">ip..</text>
</g>
<g>
<title>sock_put (1 samples, 0.11%)</title><rect x="186.1" y="227.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="189.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 2.58%)</title><rect x="187.5" y="227.0" width="30.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="190.5" y="238.0">tc..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.11%)</title><rect x="187.5" y="211.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="190.5" y="222.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="187.5" y="195.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="190.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 2.47%)</title><rect x="188.8" y="211.0" width="29.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.8" y="222.0">tc..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.11%)</title><rect x="188.8" y="195.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="191.8" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 2.36%)</title><rect x="190.1" y="195.0" width="27.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="193.1" y="206.0">t..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.11%)</title><rect x="191.4" y="179.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.4" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.11%)</title><rect x="191.4" y="163.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.4" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="191.4" y="147.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="194.4" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.11%)</title><rect x="191.4" y="131.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.4" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.11%)</title><rect x="191.4" y="115.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.4" y="126.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.11%)</title><rect x="191.4" y="99.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.4" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (19 samples, 2.13%)</title><rect x="192.8" y="179.0" width="25.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.8" y="190.0">t..</text>
</g>
<g>
<title>sock_def_readable (19 samples, 2.13%)</title><rect x="192.8" y="163.0" width="25.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="195.8" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 2.13%)</title><rect x="192.8" y="147.0" width="25.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="195.8" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 2.13%)</title><rect x="192.8" y="131.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.8" y="142.0">_..</text>
</g>
<g>
<title>__lock_text_start (19 samples, 2.13%)</title><rect x="192.8" y="115.0" width="25.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="195.8" y="126.0">_..</text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.11%)</title><rect x="217.9" y="259.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="220.9" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="217.9" y="243.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.9" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="217.9" y="227.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.9" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="219.2" y="291.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.2" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.45%)</title><rect x="220.6" y="435.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="223.6" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.45%)</title><rect x="220.6" y="419.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.6" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="224.5" y="403.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="227.5" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.11%)</title><rect x="224.5" y="387.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="227.5" y="398.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.11%)</title><rect x="225.9" y="531.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="228.9" y="542.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.11%)</title><rect x="227.2" y="547.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="230.2" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.11%)</title><rect x="228.5" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.5" y="558.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.11%)</title><rect x="228.5" y="531.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="231.5" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="229.8" y="675.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.8" y="686.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.11%)</title><rect x="229.8" y="659.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.8" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="229.8" y="643.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="232.8" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.11%)</title><rect x="229.8" y="627.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$82/977738926.get (265 samples, 29.74%)</title><rect x="231.2" y="851.0" width="350.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.2" y="862.0">ru/mail/polis/service/stasyanoi/server/CustomSer..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$4 (265 samples, 29.74%)</title><rect x="231.2" y="835.0" width="350.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.2" y="846.0">ru/mail/polis/service/stasyanoi/server/CustomSer..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (265 samples, 29.74%)</title><rect x="231.2" y="819.0" width="350.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.2" y="830.0">ru/mail/polis/service/stasyanoi/server/CustomSer..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="231.2" y="803.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="231.2" y="787.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.11%)</title><rect x="231.2" y="771.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="231.2" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="231.2" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="231.2" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNode (1 samples, 0.11%)</title><rect x="232.5" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.5" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.11%)</title><rect x="232.5" y="787.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.5" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="232.5" y="771.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="235.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (104 samples, 11.67%)</title><rect x="233.8" y="803.0" width="137.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.8" y="814.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (99 samples, 11.11%)</title><rect x="233.8" y="787.0" width="131.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.8" y="798.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 11.11%)</title><rect x="233.8" y="771.0" width="131.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.8" y="782.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (99 samples, 11.11%)</title><rect x="233.8" y="755.0" width="131.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.8" y="766.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (59 samples, 6.62%)</title><rect x="233.8" y="739.0" width="78.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="236.8" y="750.0">Java_org_..</text>
</g>
<g>
<title>malloc@plt (1 samples, 0.11%)</title><rect x="233.8" y="723.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="236.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="235.1" y="723.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="238.1" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (57 samples, 6.40%)</title><rect x="236.5" y="723.0" width="75.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="239.5" y="734.0">rocksdb_..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="236.5" y="707.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="239.5" y="718.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="236.5" y="691.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="239.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 6.29%)</title><rect x="237.8" y="707.0" width="74.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="240.8" y="718.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 6.29%)</title><rect x="237.8" y="691.0" width="74.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="240.8" y="702.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (55 samples, 6.17%)</title><rect x="237.8" y="675.0" width="72.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="240.8" y="686.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (55 samples, 6.17%)</title><rect x="237.8" y="659.0" width="72.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="240.8" y="670.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (55 samples, 6.17%)</title><rect x="237.8" y="643.0" width="72.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="240.8" y="654.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.11%)</title><rect x="240.4" y="627.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="243.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.11%)</title><rect x="240.4" y="611.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="243.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="240.4" y="595.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="243.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.11%)</title><rect x="240.4" y="579.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="243.4" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="240.4" y="563.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="243.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (40 samples, 4.49%)</title><rect x="241.8" y="627.0" width="52.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="244.8" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (38 samples, 4.26%)</title><rect x="243.1" y="611.0" width="50.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="246.1" y="622.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (38 samples, 4.26%)</title><rect x="243.1" y="595.0" width="50.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="246.1" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 4.26%)</title><rect x="243.1" y="579.0" width="50.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="246.1" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.11%)</title><rect x="243.1" y="563.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="246.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (37 samples, 4.15%)</title><rect x="244.4" y="563.0" width="49.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="247.4" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (36 samples, 4.04%)</title><rect x="244.4" y="547.0" width="47.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="247.4" y="558.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.11%)</title><rect x="245.7" y="531.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="248.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.11%)</title><rect x="245.7" y="515.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="248.7" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (34 samples, 3.82%)</title><rect x="247.1" y="531.0" width="45.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="250.1" y="542.0">bool..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (30 samples, 3.37%)</title><rect x="247.1" y="515.0" width="39.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="250.1" y="526.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (22 samples, 2.47%)</title><rect x="247.1" y="499.0" width="29.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="250.1" y="510.0">/t..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.11%)</title><rect x="247.1" y="483.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="250.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (21 samples, 2.36%)</title><rect x="248.4" y="483.0" width="27.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="251.4" y="494.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) [clone .plt] (1 samples, 0.11%)</title><rect x="248.4" y="467.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="251.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 2.24%)</title><rect x="249.7" y="467.0" width="26.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="252.7" y="478.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (5 samples, 0.56%)</title><rect x="249.7" y="451.0" width="6.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="252.7" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (5 samples, 0.56%)</title><rect x="249.7" y="435.0" width="6.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="252.7" y="446.0"></text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.11%)</title><rect x="249.7" y="419.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="252.7" y="430.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="251.0" y="419.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="254.0" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="252.4" y="419.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="255.4" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.22%)</title><rect x="253.7" y="419.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="256.7" y="430.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.11%)</title><rect x="253.7" y="403.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="256.7" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.11%)</title><rect x="255.0" y="403.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="258.0" y="414.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 0.56%)</title><rect x="256.3" y="451.0" width="6.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="259.3" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (5 samples, 0.56%)</title><rect x="256.3" y="435.0" width="6.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="259.3" y="446.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.11%)</title><rect x="257.7" y="419.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="260.7" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.34%)</title><rect x="259.0" y="419.0" width="4.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="262.0" y="430.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.11%)</title><rect x="259.0" y="403.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="262.0" y="414.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.11%)</title><rect x="260.3" y="403.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="263.3" y="414.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.11%)</title><rect x="261.6" y="403.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="264.6" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="263.0" y="451.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="266.0" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="264.3" y="451.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="267.3" y="462.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.22%)</title><rect x="265.6" y="451.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="268.6" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="265.6" y="435.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="268.6" y="446.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.11%)</title><rect x="268.2" y="451.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="271.2" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.34%)</title><rect x="269.6" y="451.0" width="3.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="272.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.22%)</title><rect x="273.5" y="451.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="276.5" y="462.0"></text>
</g>
<g>
<title>jni_GetEnv (2 samples, 0.22%)</title><rect x="273.5" y="435.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="276.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.90%)</title><rect x="276.2" y="499.0" width="10.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="279.2" y="510.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="276.2" y="483.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="279.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 0.79%)</title><rect x="277.5" y="483.0" width="9.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="280.5" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.45%)</title><rect x="278.8" y="467.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="281.8" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.45%)</title><rect x="278.8" y="451.0" width="5.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="281.8" y="462.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.11%)</title><rect x="278.8" y="435.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="281.8" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.34%)</title><rect x="280.2" y="435.0" width="3.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="283.2" y="446.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (3 samples, 0.34%)</title><rect x="280.2" y="419.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="283.2" y="430.0"></text>
</g>
<g>
<title>jni_GetEnv (2 samples, 0.22%)</title><rect x="284.1" y="467.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="287.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.45%)</title><rect x="286.8" y="515.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="289.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.45%)</title><rect x="286.8" y="499.0" width="5.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="289.8" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.22%)</title><rect x="288.1" y="483.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="291.1" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.22%)</title><rect x="288.1" y="467.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="291.1" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.22%)</title><rect x="288.1" y="451.0" width="2.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="291.1" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.22%)</title><rect x="288.1" y="435.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="291.1" y="446.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.11%)</title><rect x="288.1" y="419.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="291.1" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.11%)</title><rect x="289.4" y="419.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="292.4" y="430.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="290.8" y="483.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="293.8" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="290.8" y="467.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="293.8" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="290.8" y="451.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="293.8" y="462.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.11%)</title><rect x="290.8" y="435.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="293.8" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.11%)</title><rect x="292.1" y="547.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="295.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.11%)</title><rect x="293.4" y="611.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="296.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (4 samples, 0.45%)</title><rect x="294.7" y="627.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="297.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.45%)</title><rect x="294.7" y="611.0" width="5.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="297.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (4 samples, 0.45%)</title><rect x="294.7" y="595.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="297.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.45%)</title><rect x="294.7" y="579.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="297.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.45%)</title><rect x="294.7" y="563.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="297.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (4 samples, 0.45%)</title><rect x="294.7" y="547.0" width="5.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="297.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.45%)</title><rect x="294.7" y="531.0" width="5.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="297.7" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.45%)</title><rect x="294.7" y="515.0" width="5.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="297.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (3 samples, 0.34%)</title><rect x="294.7" y="499.0" width="4.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="297.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (3 samples, 0.34%)</title><rect x="294.7" y="483.0" width="4.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="297.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.34%)</title><rect x="294.7" y="467.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="297.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.34%)</title><rect x="294.7" y="451.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="297.7" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="294.7" y="435.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="297.7" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="294.7" y="419.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="297.7" y="430.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="294.7" y="403.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="297.7" y="414.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="296.1" y="435.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="299.1" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="296.1" y="419.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="299.1" y="430.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="296.1" y="403.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="299.1" y="414.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.11%)</title><rect x="297.4" y="435.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="300.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="297.4" y="419.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="297.4" y="403.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="297.4" y="387.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.4" y="398.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.11%)</title><rect x="297.4" y="371.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.4" y="382.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.11%)</title><rect x="297.4" y="355.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.4" y="366.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.11%)</title><rect x="297.4" y="339.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="300.4" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="297.4" y="323.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.4" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="297.4" y="307.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="300.4" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.11%)</title><rect x="298.7" y="499.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="298.7" y="483.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="301.7" y="494.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.11%)</title><rect x="298.7" y="467.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="301.7" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="298.7" y="451.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.7" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="298.7" y="435.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="301.7" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="298.7" y="419.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.7" y="430.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.11%)</title><rect x="298.7" y="403.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="301.7" y="414.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.11%)</title><rect x="298.7" y="387.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.7" y="398.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.11%)</title><rect x="298.7" y="371.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="301.7" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="298.7" y="355.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="301.7" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="298.7" y="339.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="301.7" y="350.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.45%)</title><rect x="300.0" y="627.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="303.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.11%)</title><rect x="305.3" y="627.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="308.3" y="638.0"></text>
</g>
<g>
<title>sched_yield (3 samples, 0.34%)</title><rect x="306.7" y="627.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="309.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.34%)</title><rect x="306.7" y="611.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="309.7" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.34%)</title><rect x="306.7" y="595.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.7" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.34%)</title><rect x="306.7" y="579.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.7" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.34%)</title><rect x="306.7" y="563.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.7" y="574.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.34%)</title><rect x="306.7" y="547.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="309.7" y="558.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.34%)</title><rect x="306.7" y="531.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.11%)</title><rect x="310.6" y="675.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="313.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.91%)</title><rect x="312.0" y="739.0" width="22.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="315.0" y="750.0">[..</text>
</g>
<g>
<title>__GI_write (17 samples, 1.91%)</title><rect x="312.0" y="723.0" width="22.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="315.0" y="734.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 1.91%)</title><rect x="312.0" y="707.0" width="22.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.0" y="718.0">e..</text>
</g>
<g>
<title>do_syscall_64 (17 samples, 1.91%)</title><rect x="312.0" y="691.0" width="22.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="315.0" y="702.0">d..</text>
</g>
<g>
<title>__x64_sys_write (17 samples, 1.91%)</title><rect x="312.0" y="675.0" width="22.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="315.0" y="686.0">_..</text>
</g>
<g>
<title>ksys_write (17 samples, 1.91%)</title><rect x="312.0" y="659.0" width="22.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="315.0" y="670.0">k..</text>
</g>
<g>
<title>vfs_write (17 samples, 1.91%)</title><rect x="312.0" y="643.0" width="22.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="315.0" y="654.0">v..</text>
</g>
<g>
<title>__vfs_write (16 samples, 1.80%)</title><rect x="312.0" y="627.0" width="21.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="315.0" y="638.0">_..</text>
</g>
<g>
<title>new_sync_write (16 samples, 1.80%)</title><rect x="312.0" y="611.0" width="21.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="315.0" y="622.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (16 samples, 1.80%)</title><rect x="312.0" y="595.0" width="21.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="315.0" y="606.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (16 samples, 1.80%)</title><rect x="312.0" y="579.0" width="21.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="315.0" y="590.0">_..</text>
</g>
<g>
<title>file_update_time (2 samples, 0.22%)</title><rect x="313.3" y="563.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.3" y="574.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.22%)</title><rect x="313.3" y="547.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="316.3" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.22%)</title><rect x="313.3" y="531.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.3" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.22%)</title><rect x="313.3" y="515.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="316.3" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.11%)</title><rect x="313.3" y="499.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="316.3" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.11%)</title><rect x="313.3" y="483.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="316.3" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.11%)</title><rect x="314.6" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.6" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.11%)</title><rect x="314.6" y="483.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.6" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.11%)</title><rect x="314.6" y="467.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="317.6" y="478.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.11%)</title><rect x="314.6" y="451.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.6" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.11%)</title><rect x="314.6" y="435.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="317.6" y="446.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.11%)</title><rect x="314.6" y="419.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.6" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 1.46%)</title><rect x="315.9" y="563.0" width="17.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="318.9" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (7 samples, 0.79%)</title><rect x="317.3" y="547.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="320.3" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.34%)</title><rect x="318.6" y="531.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="321.6" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.34%)</title><rect x="318.6" y="515.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.11%)</title><rect x="318.6" y="499.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.6" y="510.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.22%)</title><rect x="319.9" y="499.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.9" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.11%)</title><rect x="321.2" y="483.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.2" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.34%)</title><rect x="322.5" y="531.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="325.5" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.34%)</title><rect x="322.5" y="515.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="325.5" y="526.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.22%)</title><rect x="323.9" y="499.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="326.9" y="510.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.22%)</title><rect x="323.9" y="483.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.9" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 0.45%)</title><rect x="326.5" y="547.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.5" y="558.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 0.45%)</title><rect x="326.5" y="531.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="329.5" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.45%)</title><rect x="326.5" y="515.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.5" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.45%)</title><rect x="326.5" y="499.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="329.5" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.45%)</title><rect x="326.5" y="483.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.5" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.34%)</title><rect x="326.5" y="467.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="329.5" y="478.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.11%)</title><rect x="326.5" y="451.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.5" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.22%)</title><rect x="327.8" y="451.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="330.8" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.11%)</title><rect x="329.2" y="435.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="332.2" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.11%)</title><rect x="329.2" y="419.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="332.2" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.11%)</title><rect x="329.2" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.2" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.11%)</title><rect x="329.2" y="387.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="332.2" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.11%)</title><rect x="330.5" y="467.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.5" y="478.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.11%)</title><rect x="330.5" y="451.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.5" y="462.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.11%)</title><rect x="331.8" y="547.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="334.8" y="558.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.11%)</title><rect x="333.1" y="627.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.1" y="638.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.11%)</title><rect x="334.5" y="739.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="337.5" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.22%)</title><rect x="335.8" y="739.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (20 samples, 2.24%)</title><rect x="338.4" y="739.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.4" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (20 samples, 2.24%)</title><rect x="338.4" y="723.0" width="26.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.4" y="734.0">r..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.11%)</title><rect x="338.4" y="707.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="341.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.11%)</title><rect x="338.4" y="691.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.4" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (19 samples, 2.13%)</title><rect x="339.8" y="707.0" width="25.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.8" y="718.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.11%)</title><rect x="339.8" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (18 samples, 2.02%)</title><rect x="341.1" y="691.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.1" y="702.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (18 samples, 2.02%)</title><rect x="341.1" y="675.0" width="23.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.1" y="686.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (16 samples, 1.80%)</title><rect x="342.4" y="659.0" width="21.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="345.4" y="670.0">J..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="343.7" y="643.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="346.7" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="343.7" y="627.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="346.7" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 1.01%)</title><rect x="345.1" y="643.0" width="11.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="348.1" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="345.1" y="627.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="348.1" y="638.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.11%)</title><rect x="346.4" y="627.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="349.4" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="347.7" y="627.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="350.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="349.0" y="627.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="352.0" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.45%)</title><rect x="351.7" y="627.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="354.7" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.34%)</title><rect x="353.0" y="611.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="356.0" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.22%)</title><rect x="353.0" y="595.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="356.0" y="606.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.11%)</title><rect x="353.0" y="579.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="356.0" y="590.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.11%)</title><rect x="354.3" y="579.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="357.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="355.7" y="595.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="358.7" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.56%)</title><rect x="357.0" y="643.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="360.0" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.22%)</title><rect x="358.3" y="627.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="361.3" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="361.0" y="627.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="364.0" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="363.6" y="659.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="366.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (2 samples, 0.22%)</title><rect x="364.9" y="787.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (2 samples, 0.22%)</title><rect x="364.9" y="771.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (2 samples, 0.22%)</title><rect x="364.9" y="755.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (2 samples, 0.22%)</title><rect x="364.9" y="739.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (2 samples, 0.22%)</title><rect x="364.9" y="723.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.11%)</title><rect x="366.3" y="707.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.3" y="718.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (1 samples, 0.11%)</title><rect x="366.3" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (1 samples, 0.11%)</title><rect x="366.3" y="675.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (1 samples, 0.11%)</title><rect x="366.3" y="659.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (1 samples, 0.11%)</title><rect x="366.3" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.3" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="366.3" y="627.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="369.3" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="366.3" y="611.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="369.3" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="366.3" y="595.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="369.3" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="366.3" y="579.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="369.3" y="590.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.11%)</title><rect x="366.3" y="563.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="369.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (3 samples, 0.34%)</title><rect x="367.6" y="787.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (3 samples, 0.34%)</title><rect x="367.6" y="771.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicatePutOrDelete (113 samples, 12.68%)</title><rect x="371.5" y="803.0" width="149.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.5" y="814.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (113 samples, 12.68%)</title><rect x="371.5" y="787.0" width="149.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.5" y="798.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.11%)</title><rect x="371.5" y="771.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (1 samples, 0.11%)</title><rect x="371.5" y="755.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.11%)</title><rect x="371.5" y="739.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.5" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.11%)</title><rect x="371.5" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="374.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.11%)</title><rect x="371.5" y="707.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="374.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (112 samples, 12.57%)</title><rect x="372.9" y="771.0" width="148.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="375.9" y="782.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.11%)</title><rect x="372.9" y="755.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.9" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.11%)</title><rect x="372.9" y="739.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (1 samples, 0.11%)</title><rect x="372.9" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.&lt;init&gt; (1 samples, 0.11%)</title><rect x="372.9" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.11%)</title><rect x="374.2" y="755.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestToReplicas (110 samples, 12.35%)</title><rect x="375.5" y="755.0" width="145.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.5" y="766.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpClient.put (108 samples, 12.12%)</title><rect x="375.5" y="739.0" width="143.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.5" y="750.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (108 samples, 12.12%)</title><rect x="375.5" y="723.0" width="143.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.5" y="734.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (108 samples, 12.12%)</title><rect x="375.5" y="707.0" width="143.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="378.5" y="718.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (29 samples, 3.25%)</title><rect x="378.2" y="691.0" width="38.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.2" y="702.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.11%)</title><rect x="379.5" y="675.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="382.5" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="379.5" y="659.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="382.5" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="379.5" y="643.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="382.5" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="379.5" y="627.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="382.5" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="379.5" y="611.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="382.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (27 samples, 3.03%)</title><rect x="380.8" y="675.0" width="35.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.8" y="686.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.22%)</title><rect x="380.8" y="659.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="383.8" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.22%)</title><rect x="380.8" y="643.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="383.8" y="654.0"></text>
</g>
<g>
<title>__GI___recv (25 samples, 2.81%)</title><rect x="383.5" y="659.0" width="33.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="386.5" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 2.47%)</title><rect x="387.4" y="643.0" width="29.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="390.4" y="654.0">en..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 2.47%)</title><rect x="387.4" y="627.0" width="29.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="390.4" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (20 samples, 2.24%)</title><rect x="388.8" y="611.0" width="26.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="391.8" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 2.24%)</title><rect x="388.8" y="595.0" width="26.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="391.8" y="606.0">_..</text>
</g>
<g>
<title>sock_recvmsg (20 samples, 2.24%)</title><rect x="388.8" y="579.0" width="26.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="391.8" y="590.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (20 samples, 2.24%)</title><rect x="388.8" y="563.0" width="26.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="391.8" y="574.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 2.24%)</title><rect x="388.8" y="547.0" width="26.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="391.8" y="558.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="390.1" y="531.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="393.1" y="542.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.11%)</title><rect x="390.1" y="515.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="393.1" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.11%)</title><rect x="390.1" y="499.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.1" y="510.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.11%)</title><rect x="390.1" y="483.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.1" y="494.0"></text>
</g>
<g>
<title>sk_wait_data (5 samples, 0.56%)</title><rect x="391.4" y="531.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.4" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.11%)</title><rect x="391.4" y="515.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="394.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="391.4" y="499.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="394.4" y="510.0"></text>
</g>
<g>
<title>wait_woken (4 samples, 0.45%)</title><rect x="392.7" y="515.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="395.7" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.45%)</title><rect x="392.7" y="499.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.7" y="510.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.45%)</title><rect x="392.7" y="483.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.7" y="494.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.45%)</title><rect x="392.7" y="467.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="395.7" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.34%)</title><rect x="394.1" y="451.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.1" y="462.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.22%)</title><rect x="398.0" y="531.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="401.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.22%)</title><rect x="398.0" y="515.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="401.0" y="526.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (10 samples, 1.12%)</title><rect x="400.7" y="531.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="403.7" y="542.0"></text>
</g>
<g>
<title>tcp_send_ack (10 samples, 1.12%)</title><rect x="400.7" y="515.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="403.7" y="526.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (10 samples, 1.12%)</title><rect x="400.7" y="499.0" width="13.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="403.7" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 1.12%)</title><rect x="400.7" y="483.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="403.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (10 samples, 1.12%)</title><rect x="400.7" y="467.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="403.7" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 1.12%)</title><rect x="400.7" y="451.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="403.7" y="462.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 1.12%)</title><rect x="400.7" y="435.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="403.7" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.45%)</title><rect x="400.7" y="419.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.7" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.45%)</title><rect x="400.7" y="403.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.7" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="400.7" y="387.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.7" y="398.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="402.0" y="387.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="405.0" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="402.0" y="371.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="405.0" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.22%)</title><rect x="403.3" y="387.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="406.3" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.22%)</title><rect x="403.3" y="371.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.3" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.11%)</title><rect x="403.3" y="355.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.3" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.11%)</title><rect x="404.7" y="355.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="407.7" y="366.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.67%)</title><rect x="406.0" y="419.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 0.67%)</title><rect x="406.0" y="403.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.0" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 0.67%)</title><rect x="406.0" y="387.0" width="7.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.0" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 0.67%)</title><rect x="406.0" y="371.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.0" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.45%)</title><rect x="406.0" y="355.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="409.0" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (4 samples, 0.45%)</title><rect x="406.0" y="339.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="409.0" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.45%)</title><rect x="406.0" y="323.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="409.0" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.45%)</title><rect x="406.0" y="307.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.0" y="318.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.45%)</title><rect x="406.0" y="291.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.0" y="302.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.45%)</title><rect x="406.0" y="275.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="409.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.45%)</title><rect x="406.0" y="259.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="409.0" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.45%)</title><rect x="406.0" y="243.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.45%)</title><rect x="406.0" y="227.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.45%)</title><rect x="406.0" y="211.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="409.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.34%)</title><rect x="406.0" y="195.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.34%)</title><rect x="406.0" y="179.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.0" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.34%)</title><rect x="406.0" y="163.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="409.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.34%)</title><rect x="406.0" y="147.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.0" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="406.0" y="131.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.22%)</title><rect x="407.3" y="131.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="410.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.22%)</title><rect x="407.3" y="115.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.11%)</title><rect x="407.3" y="99.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="410.3" y="110.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="408.6" y="99.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="411.6" y="110.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.11%)</title><rect x="410.0" y="195.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="413.0" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.22%)</title><rect x="411.3" y="355.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.3" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.22%)</title><rect x="411.3" y="339.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="414.3" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="412.6" y="323.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.11%)</title><rect x="412.6" y="307.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.6" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.11%)</title><rect x="412.6" y="291.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="415.6" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.11%)</title><rect x="412.6" y="275.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.6" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="413.9" y="531.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="416.9" y="542.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="413.9" y="515.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.9" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.11%)</title><rect x="413.9" y="499.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.9" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.11%)</title><rect x="413.9" y="483.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="416.9" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="415.3" y="611.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 1.12%)</title><rect x="416.6" y="691.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="419.2" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.56%)</title><rect x="420.5" y="675.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="423.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.45%)</title><rect x="421.9" y="659.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.45%)</title><rect x="421.9" y="643.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.11%)</title><rect x="427.2" y="675.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="427.2" y="659.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="427.2" y="643.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="430.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.11%)</title><rect x="428.5" y="675.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.11%)</title><rect x="428.5" y="659.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="428.5" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.34%)</title><rect x="429.8" y="691.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="431.1" y="675.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="431.1" y="659.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="431.1" y="643.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.22%)</title><rect x="431.1" y="627.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="434.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.22%)</title><rect x="431.1" y="611.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (14 samples, 1.57%)</title><rect x="433.8" y="691.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="436.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.11%)</title><rect x="435.1" y="675.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="438.1" y="686.0"></text>
</g>
<g>
<title>__GI___setsockopt (12 samples, 1.35%)</title><rect x="436.4" y="675.0" width="15.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="439.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.23%)</title><rect x="437.8" y="659.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.23%)</title><rect x="437.8" y="643.0" width="14.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (8 samples, 0.90%)</title><rect x="437.8" y="627.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.8" y="638.0"></text>
</g>
<g>
<title>__sys_setsockopt (8 samples, 0.90%)</title><rect x="437.8" y="611.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.8" y="622.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (3 samples, 0.34%)</title><rect x="437.8" y="595.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.8" y="606.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.11%)</title><rect x="441.7" y="595.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.7" y="606.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.11%)</title><rect x="443.1" y="595.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="446.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.11%)</title><rect x="443.1" y="579.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.11%)</title><rect x="443.1" y="563.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="446.1" y="574.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.22%)</title><rect x="444.4" y="595.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="447.4" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.11%)</title><rect x="444.4" y="579.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="444.4" y="563.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="447.4" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.11%)</title><rect x="445.7" y="579.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.7" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.11%)</title><rect x="445.7" y="563.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.7" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="447.0" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.0" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.11%)</title><rect x="447.0" y="579.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.0" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="447.0" y="563.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="450.0" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.11%)</title><rect x="447.0" y="547.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="450.0" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.34%)</title><rect x="448.4" y="627.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="451.4" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.22%)</title><rect x="449.7" y="611.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (48 samples, 5.39%)</title><rect x="452.3" y="691.0" width="63.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.3" y="702.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.22%)</title><rect x="453.7" y="675.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="456.7" y="686.0"></text>
</g>
<g>
<title>__libc_send (45 samples, 5.05%)</title><rect x="456.3" y="675.0" width="59.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="459.3" y="686.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 5.05%)</title><rect x="456.3" y="659.0" width="59.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="459.3" y="670.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (45 samples, 5.05%)</title><rect x="456.3" y="643.0" width="59.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="459.3" y="654.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (45 samples, 5.05%)</title><rect x="456.3" y="627.0" width="59.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.3" y="638.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (45 samples, 5.05%)</title><rect x="456.3" y="611.0" width="59.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="459.3" y="622.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (44 samples, 4.94%)</title><rect x="457.6" y="595.0" width="58.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="460.6" y="606.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (44 samples, 4.94%)</title><rect x="457.6" y="579.0" width="58.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="460.6" y="590.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (44 samples, 4.94%)</title><rect x="457.6" y="563.0" width="58.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.6" y="574.0">tcp_se..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="457.6" y="547.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="460.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (43 samples, 4.83%)</title><rect x="459.0" y="547.0" width="56.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="462.0" y="558.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="459.0" y="531.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="462.0" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="460.3" y="531.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.3" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.11%)</title><rect x="460.3" y="515.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.3" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.11%)</title><rect x="460.3" y="499.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="463.3" y="510.0"></text>
</g>
<g>
<title>tcp_push (41 samples, 4.60%)</title><rect x="461.6" y="531.0" width="54.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="464.6" y="542.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (41 samples, 4.60%)</title><rect x="461.6" y="515.0" width="54.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.6" y="526.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (41 samples, 4.60%)</title><rect x="461.6" y="499.0" width="54.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.6" y="510.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (40 samples, 4.49%)</title><rect x="462.9" y="483.0" width="53.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.9" y="494.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (39 samples, 4.38%)</title><rect x="464.3" y="467.0" width="51.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.3" y="478.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (39 samples, 4.38%)</title><rect x="464.3" y="451.0" width="51.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="467.3" y="462.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (37 samples, 4.15%)</title><rect x="464.3" y="435.0" width="49.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.3" y="446.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.45%)</title><rect x="464.3" y="419.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.3" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.45%)</title><rect x="464.3" y="403.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="467.3" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.34%)</title><rect x="464.3" y="387.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.3" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.34%)</title><rect x="464.3" y="371.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.3" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.11%)</title><rect x="468.2" y="387.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.2" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="468.2" y="371.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.2" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.11%)</title><rect x="468.2" y="355.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="471.2" y="366.0"></text>
</g>
<g>
<title>ip_output (33 samples, 3.70%)</title><rect x="469.6" y="419.0" width="43.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.6" y="430.0">ip_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="469.6" y="403.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="472.6" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (32 samples, 3.59%)</title><rect x="470.9" y="403.0" width="42.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.9" y="414.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (32 samples, 3.59%)</title><rect x="470.9" y="387.0" width="42.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="473.9" y="398.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 3.59%)</title><rect x="470.9" y="371.0" width="42.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="473.9" y="382.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 2.92%)</title><rect x="476.2" y="355.0" width="34.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="479.2" y="366.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (26 samples, 2.92%)</title><rect x="476.2" y="339.0" width="34.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="479.2" y="350.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 2.92%)</title><rect x="476.2" y="323.0" width="34.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="479.2" y="334.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 2.92%)</title><rect x="476.2" y="307.0" width="34.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="479.2" y="318.0">__..</text>
</g>
<g>
<title>net_rx_action (26 samples, 2.92%)</title><rect x="476.2" y="291.0" width="34.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="479.2" y="302.0">ne..</text>
</g>
<g>
<title>process_backlog (26 samples, 2.92%)</title><rect x="476.2" y="275.0" width="34.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.2" y="286.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 2.92%)</title><rect x="476.2" y="259.0" width="34.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="479.2" y="270.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 2.92%)</title><rect x="476.2" y="243.0" width="34.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="479.2" y="254.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="476.2" y="227.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="479.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 2.81%)</title><rect x="477.5" y="227.0" width="33.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.5" y="238.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.11%)</title><rect x="477.5" y="211.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (24 samples, 2.69%)</title><rect x="478.8" y="211.0" width="31.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.8" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 2.58%)</title><rect x="480.1" y="195.0" width="30.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.1" y="206.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 2.24%)</title><rect x="480.1" y="179.0" width="26.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.1" y="190.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 2.13%)</title><rect x="481.5" y="163.0" width="25.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.5" y="174.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 2.13%)</title><rect x="481.5" y="147.0" width="25.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.5" y="158.0">t..</text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.11%)</title><rect x="481.5" y="131.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 2.02%)</title><rect x="482.8" y="131.0" width="23.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.8" y="142.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 2.02%)</title><rect x="482.8" y="115.0" width="23.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.8" y="126.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.11%)</title><rect x="482.8" y="99.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="485.8" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.11%)</title><rect x="482.8" y="83.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.8" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.11%)</title><rect x="482.8" y="67.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.8" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.11%)</title><rect x="482.8" y="51.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.8" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="482.8" y="35.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="485.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.11%)</title><rect x="484.1" y="99.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.1" y="110.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.11%)</title><rect x="484.1" y="83.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (15 samples, 1.68%)</title><rect x="485.4" y="99.0" width="19.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 1.68%)</title><rect x="485.4" y="83.0" width="19.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 1.68%)</title><rect x="485.4" y="67.0" width="19.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 1.57%)</title><rect x="485.4" y="51.0" width="18.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.4" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 1.46%)</title><rect x="486.8" y="35.0" width="17.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="489.8" y="46.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="504.0" y="51.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="507.0" y="62.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="505.3" y="99.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="508.3" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.34%)</title><rect x="506.6" y="179.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="509.6" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.22%)</title><rect x="506.6" y="163.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.6" y="174.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.22%)</title><rect x="506.6" y="147.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.6" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.11%)</title><rect x="509.3" y="163.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.3" y="174.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.11%)</title><rect x="509.3" y="147.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.3" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.22%)</title><rect x="510.6" y="355.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.22%)</title><rect x="510.6" y="339.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="513.6" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="511.9" y="323.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="514.9" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.11%)</title><rect x="511.9" y="307.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.9" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.11%)</title><rect x="511.9" y="291.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.9" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="511.9" y="275.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="514.9" y="286.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.11%)</title><rect x="513.3" y="435.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="516.3" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.11%)</title><rect x="514.6" y="435.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.6" y="446.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.11%)</title><rect x="515.9" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.9" y="702.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.11%)</title><rect x="517.2" y="691.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (2 samples, 0.22%)</title><rect x="518.6" y="739.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.6" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.22%)</title><rect x="518.6" y="723.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="521.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (46 samples, 5.16%)</title><rect x="521.2" y="803.0" width="60.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.2" y="814.0">ru/mai..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.11%)</title><rect x="521.2" y="787.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.11%)</title><rect x="521.2" y="771.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestToRemote (45 samples, 5.05%)</title><rect x="522.5" y="787.0" width="59.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.5" y="798.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpClient.put (45 samples, 5.05%)</title><rect x="522.5" y="771.0" width="59.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.5" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (45 samples, 5.05%)</title><rect x="522.5" y="755.0" width="59.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.5" y="766.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (45 samples, 5.05%)</title><rect x="522.5" y="739.0" width="59.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.5" y="750.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (16 samples, 1.80%)</title><rect x="522.5" y="723.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.5" y="734.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.22%)</title><rect x="523.8" y="707.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="526.8" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="525.2" y="691.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="528.2" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.11%)</title><rect x="525.2" y="675.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="528.2" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="525.2" y="659.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="528.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 1.46%)</title><rect x="526.5" y="707.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.5" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.34%)</title><rect x="526.5" y="691.0" width="4.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="529.5" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="526.5" y="675.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="529.5" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.22%)</title><rect x="527.8" y="675.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="530.8" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="529.1" y="659.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="532.1" y="670.0"></text>
</g>
<g>
<title>__GI___recv (9 samples, 1.01%)</title><rect x="530.5" y="691.0" width="11.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="533.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.79%)</title><rect x="533.1" y="675.0" width="9.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.79%)</title><rect x="533.1" y="659.0" width="9.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="536.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.79%)</title><rect x="533.1" y="643.0" width="9.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="536.1" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.79%)</title><rect x="533.1" y="627.0" width="9.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.1" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.79%)</title><rect x="533.1" y="611.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.1" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.79%)</title><rect x="533.1" y="595.0" width="9.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="536.1" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.79%)</title><rect x="533.1" y="579.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="536.1" y="590.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.11%)</title><rect x="533.1" y="563.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="536.1" y="574.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.11%)</title><rect x="533.1" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="536.1" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.11%)</title><rect x="533.1" y="531.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="536.1" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.11%)</title><rect x="533.1" y="515.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="536.1" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.11%)</title><rect x="533.1" y="499.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="536.1" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.11%)</title><rect x="533.1" y="483.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="536.1" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.56%)</title><rect x="534.4" y="563.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="537.4" y="574.0"></text>
</g>
<g>
<title>tcp_send_ack (5 samples, 0.56%)</title><rect x="534.4" y="547.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.4" y="558.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (5 samples, 0.56%)</title><rect x="534.4" y="531.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.4" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 0.56%)</title><rect x="534.4" y="515.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.4" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.56%)</title><rect x="534.4" y="499.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="537.4" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 0.56%)</title><rect x="534.4" y="483.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="537.4" y="494.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.56%)</title><rect x="534.4" y="467.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="537.4" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.11%)</title><rect x="534.4" y="451.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="537.4" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.11%)</title><rect x="534.4" y="435.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="537.4" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="534.4" y="419.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="537.4" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="534.4" y="403.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.4" y="414.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.45%)</title><rect x="535.8" y="451.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="538.8" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.45%)</title><rect x="535.8" y="435.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.8" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="535.8" y="419.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.8" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.34%)</title><rect x="537.1" y="419.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="540.1" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.34%)</title><rect x="537.1" y="403.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.1" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.34%)</title><rect x="537.1" y="387.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.1" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (3 samples, 0.34%)</title><rect x="537.1" y="371.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="540.1" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.34%)</title><rect x="537.1" y="355.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.1" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.34%)</title><rect x="537.1" y="339.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.22%)</title><rect x="538.4" y="323.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="541.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.22%)</title><rect x="538.4" y="307.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.4" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.22%)</title><rect x="538.4" y="291.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="541.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.11%)</title><rect x="538.4" y="275.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="541.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.11%)</title><rect x="538.4" y="259.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="541.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.11%)</title><rect x="538.4" y="243.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="541.4" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.11%)</title><rect x="538.4" y="227.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="541.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.11%)</title><rect x="538.4" y="211.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="541.4" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.11%)</title><rect x="538.4" y="195.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="541.4" y="206.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.42 (1 samples, 0.11%)</title><rect x="538.4" y="179.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.11%)</title><rect x="539.7" y="275.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="542.7" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.11%)</title><rect x="541.1" y="563.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.1" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="541.1" y="547.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.1" y="558.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.11%)</title><rect x="541.1" y="531.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.1" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="542.4" y="691.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="545.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.67%)</title><rect x="543.7" y="723.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="543.7" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.11%)</title><rect x="543.7" y="691.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.7" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.11%)</title><rect x="543.7" y="675.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="546.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.56%)</title><rect x="545.0" y="707.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.11%)</title><rect x="549.0" y="691.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="550.3" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="550.3" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.11%)</title><rect x="551.7" y="723.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.11%)</title><rect x="551.7" y="707.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.11%)</title><rect x="551.7" y="691.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.11%)</title><rect x="551.7" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.11%)</title><rect x="551.7" y="659.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.11%)</title><rect x="551.7" y="643.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (3 samples, 0.34%)</title><rect x="553.0" y="723.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.0" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (2 samples, 0.22%)</title><rect x="554.3" y="707.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="557.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.22%)</title><rect x="554.3" y="691.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="557.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.22%)</title><rect x="554.3" y="675.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="557.3" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="555.6" y="659.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (19 samples, 2.13%)</title><rect x="557.0" y="723.0" width="25.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.0" y="734.0">o..</text>
</g>
<g>
<title>__libc_send (19 samples, 2.13%)</title><rect x="557.0" y="707.0" width="25.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="560.0" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 2.13%)</title><rect x="557.0" y="691.0" width="25.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="560.0" y="702.0">e..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 2.13%)</title><rect x="557.0" y="675.0" width="25.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.0" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (18 samples, 2.02%)</title><rect x="558.3" y="659.0" width="23.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="561.3" y="670.0">_..</text>
</g>
<g>
<title>__sys_sendto (18 samples, 2.02%)</title><rect x="558.3" y="643.0" width="23.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="561.3" y="654.0">_..</text>
</g>
<g>
<title>sock_sendmsg (18 samples, 2.02%)</title><rect x="558.3" y="627.0" width="23.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.3" y="638.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (18 samples, 2.02%)</title><rect x="558.3" y="611.0" width="23.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.3" y="622.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (18 samples, 2.02%)</title><rect x="558.3" y="595.0" width="23.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.3" y="606.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (18 samples, 2.02%)</title><rect x="558.3" y="579.0" width="23.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.3" y="590.0">t..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="558.3" y="563.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="561.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.34%)</title><rect x="559.6" y="563.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.6" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.34%)</title><rect x="559.6" y="547.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 0.34%)</title><rect x="559.6" y="531.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.22%)</title><rect x="559.6" y="515.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="562.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.11%)</title><rect x="562.3" y="515.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.3" y="526.0"></text>
</g>
<g>
<title>tcp_push (14 samples, 1.57%)</title><rect x="563.6" y="563.0" width="18.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.6" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (14 samples, 1.57%)</title><rect x="563.6" y="547.0" width="18.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="566.6" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (14 samples, 1.57%)</title><rect x="563.6" y="531.0" width="18.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.6" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (12 samples, 1.35%)</title><rect x="564.9" y="515.0" width="15.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="567.9" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (12 samples, 1.35%)</title><rect x="564.9" y="499.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="567.9" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (12 samples, 1.35%)</title><rect x="564.9" y="483.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="567.9" y="494.0"></text>
</g>
<g>
<title>ip_local_out (12 samples, 1.35%)</title><rect x="564.9" y="467.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="567.9" y="478.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.22%)</title><rect x="564.9" y="451.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="567.9" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.22%)</title><rect x="564.9" y="435.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="564.9" y="419.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="567.9" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="564.9" y="403.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="567.9" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.11%)</title><rect x="566.2" y="419.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="569.2" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="566.2" y="403.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.2" y="414.0"></text>
</g>
<g>
<title>ip_output (10 samples, 1.12%)</title><rect x="567.6" y="451.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 1.12%)</title><rect x="567.6" y="435.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.6" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (10 samples, 1.12%)</title><rect x="567.6" y="419.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="570.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 1.12%)</title><rect x="567.6" y="403.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.6" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.90%)</title><rect x="567.6" y="387.0" width="10.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="570.6" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (8 samples, 0.90%)</title><rect x="567.6" y="371.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="570.6" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (8 samples, 0.90%)</title><rect x="567.6" y="355.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.6" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 0.90%)</title><rect x="567.6" y="339.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="570.6" y="350.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 0.90%)</title><rect x="567.6" y="323.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="570.6" y="334.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 0.90%)</title><rect x="567.6" y="307.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.6" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 0.90%)</title><rect x="567.6" y="291.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.6" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 0.90%)</title><rect x="567.6" y="275.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (8 samples, 0.90%)</title><rect x="567.6" y="259.0" width="10.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.79%)</title><rect x="567.6" y="243.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.6" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.79%)</title><rect x="567.6" y="227.0" width="9.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="570.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (7 samples, 0.79%)</title><rect x="567.6" y="211.0" width="9.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.6" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (7 samples, 0.79%)</title><rect x="567.6" y="195.0" width="9.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="570.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.79%)</title><rect x="567.6" y="179.0" width="9.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.79%)</title><rect x="567.6" y="163.0" width="9.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.6" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.79%)</title><rect x="567.6" y="147.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.11%)</title><rect x="567.6" y="131.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.11%)</title><rect x="567.6" y="115.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="570.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="567.6" y="99.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.6" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.11%)</title><rect x="567.6" y="83.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.11%)</title><rect x="567.6" y="67.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="570.6" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.11%)</title><rect x="567.6" y="51.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="570.6" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.11%)</title><rect x="567.6" y="35.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="570.6" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.56%)</title><rect x="568.9" y="131.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="571.9" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.56%)</title><rect x="568.9" y="115.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="571.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.56%)</title><rect x="568.9" y="99.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="571.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.56%)</title><rect x="568.9" y="83.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.9" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.56%)</title><rect x="568.9" y="67.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="571.9" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.11%)</title><rect x="575.5" y="131.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.5" y="142.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="576.8" y="243.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="579.8" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.22%)</title><rect x="578.1" y="387.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.22%)</title><rect x="578.1" y="371.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.11%)</title><rect x="579.5" y="355.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.5" y="366.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.11%)</title><rect x="579.5" y="339.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="582.5" y="350.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.11%)</title><rect x="580.8" y="515.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="583.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$86/1309188278.run (320 samples, 35.91%)</title><rect x="582.1" y="899.0" width="423.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.1" y="910.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambd..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$putReplication$7 (320 samples, 35.91%)</title><rect x="582.1" y="883.0" width="423.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.1" y="894.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (320 samples, 35.91%)</title><rect x="582.1" y="867.0" width="423.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.1" y="878.0">ru/mail/polis/service/stasyanoi/server/CustomServer.intern..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (73 samples, 8.19%)</title><rect x="582.1" y="851.0" width="96.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.1" y="862.0">one/nio/htt..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.11%)</title><rect x="586.1" y="835.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.11%)</title><rect x="586.1" y="819.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.11%)</title><rect x="586.1" y="803.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.1" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="586.1" y="787.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="589.1" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.11%)</title><rect x="586.1" y="771.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="589.1" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="586.1" y="755.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="589.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (67 samples, 7.52%)</title><rect x="587.4" y="835.0" width="88.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.4" y="846.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.34%)</title><rect x="587.4" y="819.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.22%)</title><rect x="588.7" y="803.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.22%)</title><rect x="588.7" y="787.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="588.7" y="771.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.22%)</title><rect x="588.7" y="755.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.22%)</title><rect x="588.7" y="739.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.7" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 7.18%)</title><rect x="591.4" y="819.0" width="84.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.4" y="830.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session.write (64 samples, 7.18%)</title><rect x="591.4" y="803.0" width="84.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.4" y="814.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (64 samples, 7.18%)</title><rect x="591.4" y="787.0" width="84.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.4" y="798.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (64 samples, 7.18%)</title><rect x="591.4" y="771.0" width="84.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.4" y="782.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.11%)</title><rect x="592.7" y="755.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="595.7" y="766.0"></text>
</g>
<g>
<title>__libc_send (62 samples, 6.96%)</title><rect x="594.0" y="755.0" width="82.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="597.0" y="766.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 6.85%)</title><rect x="595.4" y="739.0" width="80.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.4" y="750.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (61 samples, 6.85%)</title><rect x="595.4" y="723.0" width="80.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="598.4" y="734.0">do_syscal..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.11%)</title><rect x="595.4" y="707.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="598.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (59 samples, 6.62%)</title><rect x="596.7" y="707.0" width="78.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="599.7" y="718.0">__x64_sys..</text>
</g>
<g>
<title>__sys_sendto (59 samples, 6.62%)</title><rect x="596.7" y="691.0" width="78.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.7" y="702.0">__sys_sen..</text>
</g>
<g>
<title>sock_sendmsg (56 samples, 6.29%)</title><rect x="596.7" y="675.0" width="74.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="599.7" y="686.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (54 samples, 6.06%)</title><rect x="596.7" y="659.0" width="71.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.7" y="670.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (54 samples, 6.06%)</title><rect x="596.7" y="643.0" width="71.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.7" y="654.0">tcp_send..</text>
</g>
<g>
<title>tcp_sendmsg_locked (54 samples, 6.06%)</title><rect x="596.7" y="627.0" width="71.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="599.7" y="638.0">tcp_send..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="596.7" y="611.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="599.7" y="622.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.11%)</title><rect x="598.0" y="611.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.0" y="622.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.56%)</title><rect x="599.3" y="611.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.3" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.56%)</title><rect x="599.3" y="595.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.11%)</title><rect x="600.7" y="579.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="600.7" y="563.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.7" y="574.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.11%)</title><rect x="600.7" y="547.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="603.7" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.11%)</title><rect x="602.0" y="579.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="605.0" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.22%)</title><rect x="603.3" y="579.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.3" y="590.0"></text>
</g>
<g>
<title>tcp_push (45 samples, 5.05%)</title><rect x="606.0" y="611.0" width="59.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="609.0" y="622.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (45 samples, 5.05%)</title><rect x="606.0" y="595.0" width="59.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.0" y="606.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 5.05%)</title><rect x="606.0" y="579.0" width="59.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="609.0" y="590.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (44 samples, 4.94%)</title><rect x="607.3" y="563.0" width="58.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.3" y="574.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (43 samples, 4.83%)</title><rect x="607.3" y="547.0" width="56.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.3" y="558.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (43 samples, 4.83%)</title><rect x="607.3" y="531.0" width="56.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.3" y="542.0">__ip_q..</text>
</g>
<g>
<title>ip_local_out (43 samples, 4.83%)</title><rect x="607.3" y="515.0" width="56.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="610.3" y="526.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.45%)</title><rect x="607.3" y="499.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.3" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.45%)</title><rect x="607.3" y="483.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.3" y="494.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="607.3" y="467.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="610.3" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.22%)</title><rect x="608.6" y="467.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="611.6" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.22%)</title><rect x="608.6" y="451.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="611.6" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.11%)</title><rect x="611.3" y="467.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.3" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="611.3" y="451.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="614.3" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.11%)</title><rect x="611.3" y="435.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.3" y="446.0"></text>
</g>
<g>
<title>ip_output (38 samples, 4.26%)</title><rect x="612.6" y="499.0" width="50.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="615.6" y="510.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (38 samples, 4.26%)</title><rect x="612.6" y="483.0" width="50.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="615.6" y="494.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="612.6" y="467.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="615.6" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (37 samples, 4.15%)</title><rect x="613.9" y="467.0" width="49.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="616.9" y="478.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (37 samples, 4.15%)</title><rect x="613.9" y="451.0" width="49.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="616.9" y="462.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 3.70%)</title><rect x="615.2" y="435.0" width="43.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.2" y="446.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.20 (33 samples, 3.70%)</title><rect x="615.2" y="419.0" width="43.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="618.2" y="430.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 3.59%)</title><rect x="616.6" y="403.0" width="42.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="619.6" y="414.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 3.59%)</title><rect x="616.6" y="387.0" width="42.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="619.6" y="398.0">__so..</text>
</g>
<g>
<title>net_rx_action (32 samples, 3.59%)</title><rect x="616.6" y="371.0" width="42.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="619.6" y="382.0">net_..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.11%)</title><rect x="616.6" y="355.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="619.6" y="366.0"></text>
</g>
<g>
<title>process_backlog (31 samples, 3.48%)</title><rect x="617.9" y="355.0" width="41.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="620.9" y="366.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (31 samples, 3.48%)</title><rect x="617.9" y="339.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.9" y="350.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (31 samples, 3.48%)</title><rect x="617.9" y="323.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.9" y="334.0">__n..</text>
</g>
<g>
<title>ip_rcv (31 samples, 3.48%)</title><rect x="617.9" y="307.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="620.9" y="318.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.11%)</title><rect x="617.9" y="291.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="620.9" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (29 samples, 3.25%)</title><rect x="619.2" y="291.0" width="38.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.2" y="302.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (29 samples, 3.25%)</title><rect x="619.2" y="275.0" width="38.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="622.2" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 3.14%)</title><rect x="619.2" y="259.0" width="37.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.2" y="270.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 3.14%)</title><rect x="619.2" y="243.0" width="37.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.2" y="254.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 3.14%)</title><rect x="619.2" y="227.0" width="37.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="622.2" y="238.0">tcp..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.11%)</title><rect x="620.5" y="211.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.5" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.11%)</title><rect x="620.5" y="195.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.5" y="206.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.11%)</title><rect x="621.9" y="211.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="624.9" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 2.81%)</title><rect x="623.2" y="211.0" width="33.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.2" y="222.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 2.81%)</title><rect x="623.2" y="195.0" width="33.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="626.2" y="206.0">tc..</text>
</g>
<g>
<title>tcp_ack (8 samples, 0.90%)</title><rect x="623.2" y="179.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="626.2" y="190.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.79%)</title><rect x="623.2" y="163.0" width="9.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="626.2" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.45%)</title><rect x="624.5" y="147.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.5" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.22%)</title><rect x="624.5" y="131.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.5" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.22%)</title><rect x="624.5" y="115.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="627.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.22%)</title><rect x="627.1" y="131.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="630.1" y="142.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.22%)</title><rect x="627.1" y="115.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="630.1" y="126.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.11%)</title><rect x="628.5" y="99.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="631.5" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.11%)</title><rect x="628.5" y="83.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="631.5" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.11%)</title><rect x="628.5" y="67.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="631.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.11%)</title><rect x="629.8" y="147.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="632.8" y="158.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.11%)</title><rect x="631.1" y="147.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="634.1" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.11%)</title><rect x="632.4" y="163.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="635.4" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (16 samples, 1.80%)</title><rect x="633.8" y="179.0" width="21.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="636.8" y="190.0">t..</text>
</g>
<g>
<title>sock_def_readable (16 samples, 1.80%)</title><rect x="633.8" y="163.0" width="21.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="636.8" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (16 samples, 1.80%)</title><rect x="633.8" y="147.0" width="21.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="636.8" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 1.80%)</title><rect x="633.8" y="131.0" width="21.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.8" y="142.0">_..</text>
</g>
<g>
<title>__lock_text_start (15 samples, 1.68%)</title><rect x="635.1" y="115.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.1" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.11%)</title><rect x="655.0" y="179.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.0" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.11%)</title><rect x="656.3" y="259.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.3" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="656.3" y="243.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="659.3" y="254.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="656.3" y="227.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="659.3" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="657.6" y="291.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="660.6" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.34%)</title><rect x="658.9" y="435.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.9" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.34%)</title><rect x="658.9" y="419.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="661.9" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.22%)</title><rect x="658.9" y="403.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="661.9" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="661.6" y="403.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="664.6" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.11%)</title><rect x="662.9" y="499.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.9" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.11%)</title><rect x="664.2" y="547.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="667.2" y="558.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.11%)</title><rect x="664.2" y="531.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="667.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.22%)</title><rect x="665.6" y="611.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.6" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.11%)</title><rect x="665.6" y="595.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="668.6" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.11%)</title><rect x="666.9" y="595.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="669.9" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.22%)</title><rect x="668.2" y="659.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="671.2" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.22%)</title><rect x="668.2" y="643.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="671.2" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.22%)</title><rect x="668.2" y="627.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="671.2" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.11%)</title><rect x="669.5" y="611.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="672.5" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.11%)</title><rect x="669.5" y="595.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="672.5" y="606.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.11%)</title><rect x="669.5" y="579.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.5" y="590.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.11%)</title><rect x="669.5" y="563.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="672.5" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.34%)</title><rect x="670.9" y="675.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.9" y="686.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.22%)</title><rect x="670.9" y="659.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="673.9" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.22%)</title><rect x="670.9" y="643.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="673.9" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.22%)</title><rect x="670.9" y="627.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="673.5" y="659.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="676.5" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="674.8" y="707.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.22%)</title><rect x="676.2" y="835.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="676.2" y="819.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="676.2" y="803.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="677.5" y="787.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$88/1750862512.get (247 samples, 27.72%)</title><rect x="678.8" y="851.0" width="327.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.8" y="862.0">ru/mail/polis/service/stasyanoi/server/Custo..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$putReplication$6 (247 samples, 27.72%)</title><rect x="678.8" y="835.0" width="327.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.8" y="846.0">ru/mail/polis/service/stasyanoi/server/Custo..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (247 samples, 27.72%)</title><rect x="678.8" y="819.0" width="327.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.8" y="830.0">ru/mail/polis/service/stasyanoi/server/Custo..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (240 samples, 26.94%)</title><rect x="678.8" y="803.0" width="317.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.8" y="814.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (240 samples, 26.94%)</title><rect x="678.8" y="787.0" width="317.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.8" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (240 samples, 26.94%)</title><rect x="678.8" y="771.0" width="317.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.8" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.11%)</title><rect x="680.1" y="755.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.1" y="766.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (174 samples, 19.53%)</title><rect x="681.4" y="755.0" width="230.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="684.4" y="766.0">Java_org_rocksdb_RocksDB_put__..</text>
</g>
<g>
<title>__malloc (1 samples, 0.11%)</title><rect x="682.8" y="739.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="685.8" y="750.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.11%)</title><rect x="684.1" y="739.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="687.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.11%)</title><rect x="685.4" y="739.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="688.4" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (170 samples, 19.08%)</title><rect x="686.7" y="739.0" width="225.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="689.7" y="750.0">rocksdb_put_helper(JNIEnv_*, r..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="688.1" y="723.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="691.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (167 samples, 18.74%)</title><rect x="689.4" y="723.0" width="221.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="692.4" y="734.0">rocksdb::DB::Put(rocksdb::Wri..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.22%)</title><rect x="689.4" y="707.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="692.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (165 samples, 18.52%)</title><rect x="692.0" y="707.0" width="218.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="695.0" y="718.0">rocksdb::DBImpl::Put(rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (164 samples, 18.41%)</title><rect x="692.0" y="691.0" width="217.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="695.0" y="702.0">rocksdb::DB::Put(rocksdb::Wri..</text>
</g>
<g>
<title>free@plt (2 samples, 0.22%)</title><rect x="692.0" y="675.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="695.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (155 samples, 17.40%)</title><rect x="694.7" y="675.0" width="205.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="697.7" y="686.0">rocksdb::DBImpl::Write(rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (152 samples, 17.06%)</title><rect x="694.7" y="659.0" width="201.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="697.7" y="670.0">rocksdb::DBImpl::WriteImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.22%)</title><rect x="697.3" y="643.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="700.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 0.90%)</title><rect x="700.0" y="643.0" width="10.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="703.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.90%)</title><rect x="700.0" y="627.0" width="10.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="703.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (7 samples, 0.79%)</title><rect x="701.3" y="611.0" width="9.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="704.3" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (1 samples, 0.11%)</title><rect x="702.6" y="595.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="705.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.34%)</title><rect x="704.0" y="595.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="707.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.22%)</title><rect x="705.3" y="579.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="708.3" y="590.0"></text>
</g>
<g>
<title>write@plt (1 samples, 0.11%)</title><rect x="706.6" y="563.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="709.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.11%)</title><rect x="707.9" y="595.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="710.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (1 samples, 0.11%)</title><rect x="709.3" y="595.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="712.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.11%)</title><rect x="710.6" y="643.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="713.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (93 samples, 10.44%)</title><rect x="711.9" y="643.0" width="123.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="714.9" y="654.0">rocksdb::WriteB..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (93 samples, 10.44%)</title><rect x="711.9" y="627.0" width="123.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="714.9" y="638.0">rocksdb::WriteB..</text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.11%)</title><rect x="711.9" y="611.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="714.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (92 samples, 10.33%)</title><rect x="713.2" y="611.0" width="121.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="716.2" y="622.0">rocksdb::WriteB..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (90 samples, 10.10%)</title><rect x="715.9" y="595.0" width="119.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="718.9" y="606.0">rocksdb::MemTab..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.11%)</title><rect x="715.9" y="579.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="718.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.11%)</title><rect x="717.2" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="720.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (88 samples, 9.88%)</title><rect x="718.5" y="579.0" width="116.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.5" y="590.0">rocksdb::MemTa..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (88 samples, 9.88%)</title><rect x="718.5" y="563.0" width="116.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="721.5" y="574.0">rocksdb::MemTa..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (86 samples, 9.65%)</title><rect x="719.9" y="547.0" width="113.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="722.9" y="558.0">bool rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (77 samples, 8.64%)</title><rect x="723.8" y="531.0" width="102.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="726.8" y="542.0">/tmp/librock..</text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (56 samples, 6.29%)</title><rect x="734.4" y="515.0" width="74.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="737.4" y="526.0">/tmp/lib..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="734.4" y="499.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="737.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (55 samples, 6.17%)</title><rect x="735.7" y="499.0" width="72.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="738.7" y="510.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (52 samples, 5.84%)</title><rect x="738.4" y="483.0" width="68.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="741.4" y="494.0">rocksdb..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (11 samples, 1.23%)</title><rect x="738.4" y="467.0" width="14.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="741.4" y="478.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (11 samples, 1.23%)</title><rect x="738.4" y="451.0" width="14.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="741.4" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="739.7" y="435.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="742.7" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (9 samples, 1.01%)</title><rect x="741.0" y="435.0" width="12.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="744.0" y="446.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.22%)</title><rect x="743.7" y="419.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="746.7" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.34%)</title><rect x="746.3" y="419.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="749.3" y="430.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.22%)</title><rect x="746.3" y="403.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="749.3" y="414.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.11%)</title><rect x="747.7" y="387.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="750.7" y="398.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.11%)</title><rect x="749.0" y="403.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="752.0" y="414.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.22%)</title><rect x="750.3" y="419.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="753.3" y="430.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (25 samples, 2.81%)</title><rect x="753.0" y="467.0" width="33.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="756.0" y="478.0">JN..</text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.11%)</title><rect x="753.0" y="451.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="756.0" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (23 samples, 2.58%)</title><rect x="754.3" y="451.0" width="30.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="757.3" y="462.0">jn..</text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.11%)</title><rect x="755.6" y="435.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="758.6" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.45%)</title><rect x="756.9" y="435.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.9" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (16 samples, 1.80%)</title><rect x="762.2" y="435.0" width="21.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="765.2" y="446.0">j..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.11%)</title><rect x="766.2" y="419.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="769.2" y="430.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.11%)</title><rect x="767.5" y="419.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="770.5" y="430.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (5 samples, 0.56%)</title><rect x="768.9" y="419.0" width="6.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="771.9" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.22%)</title><rect x="775.5" y="419.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="778.5" y="430.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.11%)</title><rect x="776.8" y="403.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="779.8" y="414.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.11%)</title><rect x="778.1" y="419.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="781.1" y="430.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.11%)</title><rect x="779.5" y="419.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="782.5" y="430.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.22%)</title><rect x="780.8" y="419.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="783.8" y="430.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="783.4" y="435.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="786.4" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="784.7" y="451.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="787.7" y="462.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="786.1" y="467.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.1" y="478.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="787.4" y="467.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="790.4" y="478.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (8 samples, 0.90%)</title><rect x="788.7" y="467.0" width="10.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="791.7" y="478.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="790.0" y="451.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="793.0" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.34%)</title><rect x="791.4" y="451.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="794.4" y="462.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.34%)</title><rect x="795.3" y="451.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="798.3" y="462.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.11%)</title><rect x="799.3" y="467.0" width="1.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="802.3" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.22%)</title><rect x="800.6" y="467.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="803.6" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.22%)</title><rect x="803.3" y="467.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="806.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.11%)</title><rect x="805.9" y="467.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="808.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.11%)</title><rect x="807.3" y="483.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="810.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 1.46%)</title><rect x="808.6" y="515.0" width="17.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="811.6" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="808.6" y="499.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="811.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (12 samples, 1.35%)</title><rect x="809.9" y="499.0" width="15.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="812.9" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="809.9" y="483.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="812.9" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="809.9" y="467.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="812.9" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (8 samples, 0.90%)</title><rect x="811.2" y="483.0" width="10.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="814.2" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (7 samples, 0.79%)</title><rect x="811.2" y="467.0" width="9.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="814.2" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (6 samples, 0.67%)</title><rect x="811.2" y="451.0" width="8.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="814.2" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.45%)</title><rect x="813.9" y="435.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="816.9" y="446.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.11%)</title><rect x="813.9" y="419.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="816.9" y="430.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (3 samples, 0.34%)</title><rect x="815.2" y="419.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="818.2" y="430.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.11%)</title><rect x="819.2" y="451.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="822.2" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="820.5" y="467.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="823.5" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="821.8" y="483.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="824.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.22%)</title><rect x="823.2" y="483.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="826.2" y="494.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.11%)</title><rect x="823.2" y="467.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="826.2" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.11%)</title><rect x="824.5" y="467.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="827.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (6 samples, 0.67%)</title><rect x="825.8" y="531.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="828.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.67%)</title><rect x="825.8" y="515.0" width="7.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="828.8" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="825.8" y="499.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="828.8" y="510.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="825.8" y="483.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="828.8" y="494.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="825.8" y="467.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="828.8" y="478.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="825.8" y="451.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="828.8" y="462.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.11%)</title><rect x="825.8" y="435.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="828.8" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.34%)</title><rect x="827.1" y="499.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="830.1" y="510.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.34%)</title><rect x="827.1" y="483.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="830.1" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="827.1" y="467.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.1" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.22%)</title><rect x="828.5" y="467.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="831.5" y="478.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.11%)</title><rect x="828.5" y="451.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="831.5" y="462.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="829.8" y="451.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="832.8" y="462.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.11%)</title><rect x="829.8" y="435.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="832.8" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.22%)</title><rect x="831.1" y="499.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="834.1" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.22%)</title><rect x="831.1" y="483.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="834.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.11%)</title><rect x="833.7" y="547.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="836.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.11%)</title><rect x="833.7" y="531.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (12 samples, 1.35%)</title><rect x="835.1" y="643.0" width="15.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="838.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 1.35%)</title><rect x="835.1" y="627.0" width="15.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="838.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 1.35%)</title><rect x="835.1" y="611.0" width="15.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="838.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 1.35%)</title><rect x="835.1" y="595.0" width="15.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="838.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 1.35%)</title><rect x="835.1" y="579.0" width="15.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="838.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 1.35%)</title><rect x="835.1" y="563.0" width="15.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="838.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (12 samples, 1.35%)</title><rect x="835.1" y="547.0" width="15.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="838.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 1.35%)</title><rect x="835.1" y="531.0" width="15.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="838.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (11 samples, 1.23%)</title><rect x="835.1" y="515.0" width="14.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="838.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16576770481916141830.so (10 samples, 1.12%)</title><rect x="836.4" y="499.0" width="13.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="839.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 1.12%)</title><rect x="836.4" y="483.0" width="13.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="839.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 1.12%)</title><rect x="836.4" y="467.0" width="13.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="839.4" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="836.4" y="451.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="839.4" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="836.4" y="435.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="839.4" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="836.4" y="419.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="839.4" y="430.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="837.7" y="451.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="840.7" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="837.7" y="435.0" width="1.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="840.7" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="837.7" y="419.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="840.7" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="837.7" y="403.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="840.7" y="414.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.11%)</title><rect x="837.7" y="387.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="840.7" y="398.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="839.0" y="451.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="842.0" y="462.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.56%)</title><rect x="840.4" y="451.0" width="6.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="843.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.56%)</title><rect x="840.4" y="435.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.4" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.56%)</title><rect x="840.4" y="419.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="843.4" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.56%)</title><rect x="840.4" y="403.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="843.4" y="414.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.56%)</title><rect x="840.4" y="387.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="843.4" y="398.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.56%)</title><rect x="840.4" y="371.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="843.4" y="382.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.56%)</title><rect x="840.4" y="355.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="843.4" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.56%)</title><rect x="840.4" y="339.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.4" y="350.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.56%)</title><rect x="840.4" y="323.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="843.4" y="334.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="847.0" y="451.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="850.0" y="462.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="847.0" y="435.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="850.0" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.11%)</title><rect x="848.3" y="451.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="851.3" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.11%)</title><rect x="849.6" y="515.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="852.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="849.6" y="499.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="852.6" y="510.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.11%)</title><rect x="849.6" y="483.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="852.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="849.6" y="467.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.6" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="849.6" y="451.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.6" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="849.6" y="435.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="852.6" y="446.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.11%)</title><rect x="849.6" y="419.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.6" y="430.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.11%)</title><rect x="849.6" y="403.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="852.6" y="414.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.11%)</title><rect x="849.6" y="387.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 0.90%)</title><rect x="851.0" y="643.0" width="10.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="854.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (5 samples, 0.56%)</title><rect x="861.6" y="643.0" width="6.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="864.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.22%)</title><rect x="861.6" y="627.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="864.6" y="638.0"></text>
</g>
<g>
<title>sched_yield (3 samples, 0.34%)</title><rect x="864.2" y="627.0" width="4.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="867.2" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.34%)</title><rect x="864.2" y="611.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="867.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.34%)</title><rect x="864.2" y="595.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="867.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.22%)</title><rect x="864.2" y="579.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="867.2" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.22%)</title><rect x="864.2" y="563.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.2" y="574.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.22%)</title><rect x="864.2" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.2" y="558.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.22%)</title><rect x="864.2" y="531.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.2" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="866.9" y="579.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.9" y="590.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="866.9" y="563.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="869.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.11%)</title><rect x="868.2" y="643.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="871.2" y="654.0"></text>
</g>
<g>
<title>sched_yield (20 samples, 2.24%)</title><rect x="869.5" y="643.0" width="26.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="872.5" y="654.0">s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 2.02%)</title><rect x="872.2" y="627.0" width="23.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.2" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 2.02%)</title><rect x="872.2" y="611.0" width="23.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="875.2" y="622.0">d..</text>
</g>
<g>
<title>__x64_sys_sched_yield (10 samples, 1.12%)</title><rect x="880.1" y="595.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.1" y="606.0"></text>
</g>
<g>
<title>do_sched_yield (10 samples, 1.12%)</title><rect x="880.1" y="579.0" width="13.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="883.1" y="590.0"></text>
</g>
<g>
<title>schedule (10 samples, 1.12%)</title><rect x="880.1" y="563.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.1" y="574.0"></text>
</g>
<g>
<title>__schedule (10 samples, 1.12%)</title><rect x="880.1" y="547.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="883.1" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.22%)</title><rect x="893.3" y="595.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="896.3" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.22%)</title><rect x="893.3" y="579.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.11%)</title><rect x="896.0" y="659.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="899.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) [clone .plt] (1 samples, 0.11%)</title><rect x="897.3" y="659.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="900.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.11%)</title><rect x="898.6" y="659.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="901.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.11%)</title><rect x="900.0" y="675.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="903.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="901.3" y="675.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="904.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="901.3" y="659.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="904.3" y="670.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.11%)</title><rect x="901.3" y="643.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="904.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.34%)</title><rect x="902.6" y="675.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="905.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.11%)</title><rect x="906.6" y="675.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="909.6" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.11%)</title><rect x="907.9" y="675.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="910.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.11%)</title><rect x="909.2" y="691.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="912.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.11%)</title><rect x="910.6" y="723.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 2.47%)</title><rect x="911.9" y="755.0" width="29.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="914.9" y="766.0">[u..</text>
</g>
<g>
<title>__GI_write (20 samples, 2.24%)</title><rect x="911.9" y="739.0" width="26.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="914.9" y="750.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 2.13%)</title><rect x="913.2" y="723.0" width="25.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="916.2" y="734.0">e..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 2.13%)</title><rect x="913.2" y="707.0" width="25.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="916.2" y="718.0">d..</text>
</g>
<g>
<title>__x64_sys_write (19 samples, 2.13%)</title><rect x="913.2" y="691.0" width="25.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="916.2" y="702.0">_..</text>
</g>
<g>
<title>ksys_write (19 samples, 2.13%)</title><rect x="913.2" y="675.0" width="25.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="916.2" y="686.0">k..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.11%)</title><rect x="913.2" y="659.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.2" y="670.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="913.2" y="643.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.2" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.11%)</title><rect x="913.2" y="627.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="916.2" y="638.0"></text>
</g>
<g>
<title>vfs_write (18 samples, 2.02%)</title><rect x="914.5" y="659.0" width="23.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.5" y="670.0">v..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.11%)</title><rect x="914.5" y="643.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="917.5" y="654.0"></text>
</g>
<g>
<title>__vfs_write (17 samples, 1.91%)</title><rect x="915.9" y="643.0" width="22.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.9" y="654.0">_..</text>
</g>
<g>
<title>new_sync_write (17 samples, 1.91%)</title><rect x="915.9" y="627.0" width="22.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.9" y="638.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (17 samples, 1.91%)</title><rect x="915.9" y="611.0" width="22.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="918.9" y="622.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (13 samples, 1.46%)</title><rect x="917.2" y="595.0" width="17.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.2" y="606.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.34%)</title><rect x="918.5" y="579.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="921.5" y="590.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.22%)</title><rect x="918.5" y="563.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="921.5" y="574.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.22%)</title><rect x="918.5" y="547.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.5" y="558.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.22%)</title><rect x="918.5" y="531.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="921.5" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.11%)</title><rect x="918.5" y="515.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="921.5" y="526.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.11%)</title><rect x="918.5" y="499.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="921.5" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.11%)</title><rect x="919.8" y="515.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.8" y="526.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.11%)</title><rect x="919.8" y="499.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="922.8" y="510.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.11%)</title><rect x="919.8" y="483.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.8" y="494.0"></text>
</g>
<g>
<title>timestamp_truncate (1 samples, 0.11%)</title><rect x="921.2" y="563.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.2" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 1.01%)</title><rect x="922.5" y="579.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="925.5" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.56%)</title><rect x="922.5" y="563.0" width="6.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="925.5" y="574.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.45%)</title><rect x="923.8" y="547.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="926.8" y="558.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.45%)</title><rect x="923.8" y="531.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.8" y="542.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.45%)</title><rect x="923.8" y="515.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.8" y="526.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.34%)</title><rect x="925.1" y="499.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.1" y="510.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.22%)</title><rect x="926.5" y="483.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.5" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (3 samples, 0.34%)</title><rect x="929.1" y="563.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="932.1" y="574.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.34%)</title><rect x="929.1" y="547.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="932.1" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.34%)</title><rect x="929.1" y="531.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="932.1" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.34%)</title><rect x="929.1" y="515.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.1" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.11%)</title><rect x="929.1" y="499.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="932.1" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.11%)</title><rect x="929.1" y="483.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="932.1" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.22%)</title><rect x="930.4" y="499.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.4" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.11%)</title><rect x="930.4" y="483.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.4" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.11%)</title><rect x="930.4" y="467.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="933.4" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.11%)</title><rect x="931.8" y="483.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.8" y="494.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.11%)</title><rect x="933.1" y="563.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.1" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="933.1" y="547.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.1" y="558.0"></text>
</g>
<g>
<title>ext4_write_checks (3 samples, 0.34%)</title><rect x="934.4" y="595.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="937.4" y="606.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.11%)</title><rect x="935.7" y="579.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.7" y="590.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.11%)</title><rect x="937.0" y="579.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="940.0" y="590.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.11%)</title><rect x="937.0" y="563.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="940.0" y="574.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="938.4" y="739.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="941.4" y="750.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="938.4" y="723.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="941.4" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="938.4" y="707.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="941.4" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.11%)</title><rect x="939.7" y="739.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="942.7" y="750.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.11%)</title><rect x="941.0" y="755.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="944.0" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.11%)</title><rect x="942.3" y="755.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="945.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="942.3" y="739.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="945.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="942.3" y="723.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.11%)</title><rect x="942.3" y="707.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="945.3" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.11%)</title><rect x="942.3" y="691.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.3" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.11%)</title><rect x="942.3" y="675.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="945.3" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.11%)</title><rect x="942.3" y="659.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.3" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.11%)</title><rect x="942.3" y="643.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.3" y="654.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.11%)</title><rect x="943.7" y="755.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="946.7" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (8 samples, 0.90%)</title><rect x="945.0" y="755.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (31 samples, 3.48%)</title><rect x="955.6" y="755.0" width="41.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="958.6" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (31 samples, 3.48%)</title><rect x="955.6" y="739.0" width="41.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.6" y="750.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (31 samples, 3.48%)</title><rect x="955.6" y="723.0" width="41.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.6" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.11%)</title><rect x="955.6" y="707.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.6" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (30 samples, 3.37%)</title><rect x="956.9" y="707.0" width="39.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.9" y="718.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (29 samples, 3.25%)</title><rect x="958.2" y="691.0" width="38.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="961.2" y="702.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (27 samples, 3.03%)</title><rect x="960.9" y="675.0" width="35.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="963.9" y="686.0">Jav..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="960.9" y="659.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.9" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="962.2" y="659.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="965.2" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="963.5" y="659.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="966.5" y="670.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.56%)</title><rect x="964.9" y="659.0" width="6.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="967.9" y="670.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="964.9" y="643.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="967.9" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.22%)</title><rect x="966.2" y="643.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="969.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="968.8" y="643.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="971.8" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 1.01%)</title><rect x="971.5" y="659.0" width="11.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="974.5" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.11%)</title><rect x="974.1" y="643.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="977.1" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.11%)</title><rect x="975.5" y="643.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="978.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="976.8" y="643.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="979.8" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.45%)</title><rect x="978.1" y="643.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="981.1" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.45%)</title><rect x="978.1" y="627.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="981.1" y="638.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.11%)</title><rect x="978.1" y="611.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="981.1" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.22%)</title><rect x="979.4" y="611.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="982.4" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.11%)</title><rect x="982.1" y="611.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="985.1" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 1.12%)</title><rect x="983.4" y="659.0" width="13.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="986.4" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="984.7" y="643.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="987.7" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.11%)</title><rect x="986.0" y="643.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="989.0" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.34%)</title><rect x="987.4" y="643.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="990.4" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="991.3" y="643.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="994.3" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.22%)</title><rect x="994.0" y="643.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="997.0" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.11%)</title><rect x="995.3" y="627.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="998.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (4 samples, 0.45%)</title><rect x="996.6" y="803.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (4 samples, 0.45%)</title><rect x="996.6" y="787.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (4 samples, 0.45%)</title><rect x="996.6" y="771.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="999.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.22%)</title><rect x="996.6" y="755.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.22%)</title><rect x="996.6" y="739.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.22%)</title><rect x="996.6" y="723.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.11%)</title><rect x="996.6" y="707.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="999.6" y="718.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.11%)</title><rect x="996.6" y="691.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="999.6" y="702.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.11%)</title><rect x="998.0" y="707.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1001.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (2 samples, 0.22%)</title><rect x="999.3" y="755.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1002.3" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.11%)</title><rect x="1000.6" y="739.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (3 samples, 0.34%)</title><rect x="1001.9" y="803.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (3 samples, 0.34%)</title><rect x="1001.9" y="787.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.9" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.34%)</title><rect x="1001.9" y="771.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.34%)</title><rect x="1001.9" y="755.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1004.9" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.11%)</title><rect x="1001.9" y="739.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1004.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1003.3" y="739.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1003.3" y="723.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1003.3" y="707.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="1003.3" y="691.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.11%)</title><rect x="1003.3" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.3" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1003.3" y="659.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1006.3" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1004.6" y="739.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1007.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (123 samples, 13.80%)</title><rect x="1005.9" y="947.0" width="162.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1008.9" y="958.0">one/nio/server/Select..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 3.59%)</title><rect x="1011.2" y="931.0" width="42.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.2" y="942.0">one/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.22%)</title><rect x="1011.2" y="915.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1014.2" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.11%)</title><rect x="1011.2" y="899.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1014.2" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.11%)</title><rect x="1011.2" y="883.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1014.2" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="1011.2" y="867.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1014.2" y="878.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.11%)</title><rect x="1011.2" y="851.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1014.2" y="862.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.11%)</title><rect x="1012.5" y="899.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1015.5" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (30 samples, 3.37%)</title><rect x="1013.9" y="915.0" width="39.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.9" y="926.0">one..</text>
</g>
<g>
<title>JVM_IHashCode (9 samples, 1.01%)</title><rect x="1020.5" y="899.0" width="11.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1023.5" y="910.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 1.01%)</title><rect x="1020.5" y="883.0" width="11.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1023.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.79%)</title><rect x="1023.1" y="867.0" width="9.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.79%)</title><rect x="1023.1" y="851.0" width="9.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1026.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.67%)</title><rect x="1023.1" y="835.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1026.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.67%)</title><rect x="1023.1" y="819.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1026.1" y="830.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.67%)</title><rect x="1023.1" y="803.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1026.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (5 samples, 0.56%)</title><rect x="1024.5" y="787.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1027.5" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.56%)</title><rect x="1024.5" y="771.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1027.5" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.22%)</title><rect x="1028.4" y="755.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1031.4" y="766.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.11%)</title><rect x="1029.8" y="739.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1032.8" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="1031.1" y="835.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1034.1" y="846.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.11%)</title><rect x="1031.1" y="819.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1034.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.68%)</title><rect x="1032.4" y="899.0" width="19.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1035.4" y="910.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.11%)</title><rect x="1032.4" y="883.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1035.4" y="894.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 1.57%)</title><rect x="1033.7" y="883.0" width="18.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1036.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 1.46%)</title><rect x="1035.1" y="867.0" width="17.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1038.1" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.46%)</title><rect x="1035.1" y="851.0" width="17.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1038.1" y="862.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 1.35%)</title><rect x="1035.1" y="835.0" width="15.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1038.1" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 1.35%)</title><rect x="1035.1" y="819.0" width="15.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.1" y="830.0"></text>
</g>
<g>
<title>ep_poll (11 samples, 1.23%)</title><rect x="1035.1" y="803.0" width="14.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1038.1" y="814.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 0.45%)</title><rect x="1037.7" y="787.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1040.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.34%)</title><rect x="1037.7" y="771.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1040.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.34%)</title><rect x="1037.7" y="755.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1040.7" y="766.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.22%)</title><rect x="1039.0" y="739.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.0" y="750.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.11%)</title><rect x="1041.7" y="771.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1044.7" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.56%)</title><rect x="1043.0" y="787.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1046.0" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.11%)</title><rect x="1044.3" y="771.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1047.3" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.34%)</title><rect x="1045.6" y="771.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1048.6" y="782.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.22%)</title><rect x="1047.0" y="755.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.0" y="766.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.22%)</title><rect x="1047.0" y="739.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1050.0" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.22%)</title><rect x="1047.0" y="723.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1050.0" y="734.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.11%)</title><rect x="1049.6" y="803.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1052.6" y="814.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="1050.9" y="835.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1053.9" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="1052.3" y="899.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1055.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (87 samples, 9.76%)</title><rect x="1053.6" y="931.0" width="115.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.6" y="942.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (87 samples, 9.76%)</title><rect x="1053.6" y="915.0" width="115.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1056.6" y="926.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (62 samples, 6.96%)</title><rect x="1053.6" y="899.0" width="82.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1056.6" y="910.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (48 samples, 5.39%)</title><rect x="1053.6" y="883.0" width="63.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1056.6" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (48 samples, 5.39%)</title><rect x="1053.6" y="867.0" width="63.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.6" y="878.0">one/nio..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (19 samples, 2.13%)</title><rect x="1053.6" y="851.0" width="25.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.6" y="862.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.22%)</title><rect x="1053.6" y="835.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="1054.9" y="819.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1057.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="1054.9" y="803.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1057.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (17 samples, 1.91%)</title><rect x="1056.2" y="835.0" width="22.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1059.2" y="846.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 1.91%)</title><rect x="1056.2" y="819.0" width="22.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1059.2" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 1.80%)</title><rect x="1057.6" y="803.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 1.68%)</title><rect x="1057.6" y="787.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 1.68%)</title><rect x="1057.6" y="771.0" width="19.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1060.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 1.68%)</title><rect x="1057.6" y="755.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 1.68%)</title><rect x="1057.6" y="739.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1060.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 1.68%)</title><rect x="1057.6" y="723.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1060.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 1.68%)</title><rect x="1057.6" y="707.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1060.6" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.34%)</title><rect x="1057.6" y="691.0" width="3.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1060.6" y="702.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.11%)</title><rect x="1060.2" y="675.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1063.2" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 1.35%)</title><rect x="1061.5" y="691.0" width="15.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1064.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.23%)</title><rect x="1062.9" y="675.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.23%)</title><rect x="1062.9" y="659.0" width="14.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 1.12%)</title><rect x="1064.2" y="643.0" width="13.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.2" y="654.0"></text>
</g>
<g>
<title>do_futex (10 samples, 1.12%)</title><rect x="1064.2" y="627.0" width="13.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 1.12%)</title><rect x="1064.2" y="611.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1067.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 1.12%)</title><rect x="1064.2" y="595.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.2" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 1.12%)</title><rect x="1064.2" y="579.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1067.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 1.12%)</title><rect x="1064.2" y="563.0" width="13.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.11%)</title><rect x="1077.4" y="787.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.11%)</title><rect x="1077.4" y="771.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.11%)</title><rect x="1077.4" y="755.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1080.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.11%)</title><rect x="1077.4" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.4" y="750.0"></text>
</g>
<g>
<title>RequestHandler5_putReplication.handleRequest (22 samples, 2.47%)</title><rect x="1078.8" y="851.0" width="29.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.8" y="862.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.22%)</title><rect x="1078.8" y="835.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1081.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="1080.1" y="819.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="1080.1" y="803.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putReplication (20 samples, 2.24%)</title><rect x="1081.4" y="835.0" width="26.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.4" y="846.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 2.24%)</title><rect x="1081.4" y="819.0" width="26.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.4" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 2.24%)</title><rect x="1081.4" y="803.0" width="26.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (18 samples, 2.02%)</title><rect x="1081.4" y="787.0" width="23.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.4" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 2.02%)</title><rect x="1081.4" y="771.0" width="23.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.4" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 2.02%)</title><rect x="1081.4" y="755.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 2.02%)</title><rect x="1081.4" y="739.0" width="23.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 2.02%)</title><rect x="1081.4" y="723.0" width="23.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1084.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 2.02%)</title><rect x="1081.4" y="707.0" width="23.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.4" y="718.0">j..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.11%)</title><rect x="1081.4" y="691.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1084.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="1082.7" y="691.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.7" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.22%)</title><rect x="1084.1" y="691.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1087.1" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="1085.4" y="675.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1088.4" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 1.35%)</title><rect x="1086.7" y="691.0" width="15.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1089.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 1.35%)</title><rect x="1086.7" y="675.0" width="15.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 1.35%)</title><rect x="1086.7" y="659.0" width="15.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 1.35%)</title><rect x="1086.7" y="643.0" width="15.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1089.7" y="654.0"></text>
</g>
<g>
<title>do_futex (12 samples, 1.35%)</title><rect x="1086.7" y="627.0" width="15.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1089.7" y="638.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 1.35%)</title><rect x="1086.7" y="611.0" width="15.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1089.7" y="622.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 1.01%)</title><rect x="1090.7" y="595.0" width="11.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1093.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 1.01%)</title><rect x="1090.7" y="579.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 1.01%)</title><rect x="1090.7" y="563.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1093.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.22%)</title><rect x="1102.6" y="691.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1105.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.22%)</title><rect x="1105.2" y="787.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.22%)</title><rect x="1105.2" y="771.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.22%)</title><rect x="1105.2" y="755.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1108.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.22%)</title><rect x="1105.2" y="739.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.79%)</title><rect x="1107.9" y="851.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.79%)</title><rect x="1107.9" y="835.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.11%)</title><rect x="1107.9" y="819.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1110.9" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.67%)</title><rect x="1109.2" y="819.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1112.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.67%)</title><rect x="1109.2" y="803.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (6 samples, 0.67%)</title><rect x="1109.2" y="787.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.2" y="798.0"></text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (1 samples, 0.11%)</title><rect x="1110.5" y="771.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.5" y="782.0"></text>
</g>
<g>
<title>RequestHandler5_putReplication.handleRequest (1 samples, 0.11%)</title><rect x="1111.9" y="771.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.9" y="782.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.34%)</title><rect x="1113.2" y="771.0" width="4.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1116.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.45%)</title><rect x="1117.2" y="883.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1120.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1119.8" y="867.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1121.1" y="867.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.22%)</title><rect x="1122.5" y="883.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.5" y="894.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.22%)</title><rect x="1122.5" y="867.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.22%)</title><rect x="1122.5" y="851.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.22%)</title><rect x="1122.5" y="835.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.22%)</title><rect x="1122.5" y="819.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.22%)</title><rect x="1122.5" y="803.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1125.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.45%)</title><rect x="1125.1" y="883.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="1126.4" y="867.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="1126.4" y="851.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.11%)</title><rect x="1129.1" y="867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.11%)</title><rect x="1129.1" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1132.1" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1129.1" y="835.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1132.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.45%)</title><rect x="1130.4" y="883.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.22%)</title><rect x="1133.1" y="867.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 2.81%)</title><rect x="1135.7" y="899.0" width="33.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.7" y="910.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (25 samples, 2.81%)</title><rect x="1135.7" y="883.0" width="33.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.7" y="894.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.45%)</title><rect x="1135.7" y="867.0" width="5.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1138.7" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.11%)</title><rect x="1135.7" y="851.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1138.7" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.34%)</title><rect x="1137.0" y="851.0" width="4.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1140.0" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="1138.4" y="835.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="1139.7" y="835.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.7" y="846.0"></text>
</g>
<g>
<title>__GI___recv (20 samples, 2.24%)</title><rect x="1141.0" y="867.0" width="26.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1144.0" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 2.13%)</title><rect x="1142.3" y="851.0" width="25.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.3" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 2.13%)</title><rect x="1142.3" y="835.0" width="25.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1145.3" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 2.02%)</title><rect x="1142.3" y="819.0" width="23.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.3" y="830.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (18 samples, 2.02%)</title><rect x="1142.3" y="803.0" width="23.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1145.3" y="814.0">_..</text>
</g>
<g>
<title>sock_recvmsg (11 samples, 1.23%)</title><rect x="1142.3" y="787.0" width="14.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.3" y="798.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.11%)</title><rect x="1142.3" y="771.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1145.3" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.79%)</title><rect x="1143.6" y="771.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.6" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.79%)</title><rect x="1143.6" y="755.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.6" y="766.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.11%)</title><rect x="1145.0" y="739.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1148.0" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="1145.0" y="723.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1148.0" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.45%)</title><rect x="1146.3" y="739.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1149.3" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.45%)</title><rect x="1146.3" y="723.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1149.3" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.45%)</title><rect x="1146.3" y="707.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1149.3" y="718.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.22%)</title><rect x="1146.3" y="691.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1149.3" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.22%)</title><rect x="1148.9" y="691.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.9" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.11%)</title><rect x="1151.6" y="739.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1154.6" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.34%)</title><rect x="1152.9" y="771.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1155.9" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.34%)</title><rect x="1152.9" y="755.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.9" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.34%)</title><rect x="1152.9" y="739.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1155.9" y="750.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.34%)</title><rect x="1152.9" y="723.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.9" y="734.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.22%)</title><rect x="1152.9" y="707.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.9" y="718.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.22%)</title><rect x="1152.9" y="691.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.9" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.11%)</title><rect x="1155.6" y="707.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1158.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.79%)</title><rect x="1156.9" y="787.0" width="9.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1159.9" y="798.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.45%)</title><rect x="1156.9" y="771.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.45%)</title><rect x="1156.9" y="755.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.9" y="766.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.45%)</title><rect x="1156.9" y="739.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1159.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.34%)</title><rect x="1162.2" y="771.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.2" y="782.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="1166.2" y="819.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1169.2" y="830.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="1166.2" y="803.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1169.2" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="1167.5" y="867.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1170.5" y="878.0"></text>
</g>
<g>
<title>start_thread (16 samples, 1.80%)</title><rect x="1168.8" y="947.0" width="21.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1171.8" y="958.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 1.80%)</title><rect x="1168.8" y="931.0" width="21.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1171.8" y="942.0">t..</text>
</g>
<g>
<title>Thread::call_run() (16 samples, 1.80%)</title><rect x="1168.8" y="915.0" width="21.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.8" y="926.0">T..</text>
</g>
<g>
<title>JavaThread::run() (16 samples, 1.80%)</title><rect x="1168.8" y="899.0" width="21.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="910.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (16 samples, 1.80%)</title><rect x="1168.8" y="883.0" width="21.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.8" y="894.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 1.80%)</title><rect x="1168.8" y="867.0" width="21.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.8" y="878.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 1.68%)</title><rect x="1168.8" y="851.0" width="19.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.8" y="862.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (15 samples, 1.68%)</title><rect x="1168.8" y="835.0" width="19.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.8" y="846.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (9 samples, 1.01%)</title><rect x="1168.8" y="819.0" width="11.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.8" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.11%)</title><rect x="1168.8" y="803.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.8" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.11%)</title><rect x="1168.8" y="787.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.8" y="798.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.11%)</title><rect x="1168.8" y="771.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.8" y="782.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.11%)</title><rect x="1168.8" y="755.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.8" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 0.90%)</title><rect x="1170.1" y="803.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.1" y="814.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.11%)</title><rect x="1170.1" y="787.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.1" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.11%)</title><rect x="1171.5" y="787.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.5" y="798.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.11%)</title><rect x="1171.5" y="771.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.5" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.11%)</title><rect x="1172.8" y="787.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.11%)</title><rect x="1172.8" y="771.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.8" y="782.0"></text>
</g>
<g>
<title>loadNNode::rule() const (1 samples, 0.11%)</title><rect x="1172.8" y="755.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.8" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.11%)</title><rect x="1174.1" y="787.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.1" y="798.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.11%)</title><rect x="1174.1" y="771.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.1" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.11%)</title><rect x="1175.4" y="787.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.4" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.11%)</title><rect x="1176.8" y="787.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.8" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.22%)</title><rect x="1178.1" y="787.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.1" y="798.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.56%)</title><rect x="1180.7" y="819.0" width="6.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.7" y="830.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.11%)</title><rect x="1180.7" y="803.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.7" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.11%)</title><rect x="1180.7" y="787.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.7" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.11%)</title><rect x="1180.7" y="771.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.7" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.22%)</title><rect x="1182.1" y="803.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.1" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.11%)</title><rect x="1182.1" y="787.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.11%)</title><rect x="1183.4" y="787.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.4" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.11%)</title><rect x="1183.4" y="771.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.4" y="782.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.11%)</title><rect x="1183.4" y="755.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.4" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.22%)</title><rect x="1184.7" y="803.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.7" y="814.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.22%)</title><rect x="1184.7" y="787.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.7" y="798.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.11%)</title><rect x="1184.7" y="771.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.7" y="782.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.11%)</title><rect x="1184.7" y="755.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.7" y="766.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.11%)</title><rect x="1184.7" y="739.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.7" y="750.0"></text>
</g>
<g>
<title>PhaseTransform::makecon(Type const*) (1 samples, 0.11%)</title><rect x="1186.0" y="771.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="782.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.11%)</title><rect x="1186.0" y="755.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="766.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.11%)</title><rect x="1186.0" y="739.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="750.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.11%)</title><rect x="1187.4" y="819.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.11%)</title><rect x="1188.7" y="851.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="862.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.11%)</title><rect x="1188.7" y="835.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="846.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.11%)</title><rect x="1188.7" y="819.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="830.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.11%)</title><rect x="1188.7" y="803.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="814.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.11%)</title><rect x="1188.7" y="787.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="798.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.11%)</title><rect x="1188.7" y="771.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.11%)</title><rect x="1188.7" y="755.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.7" y="766.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.11%)</title><rect x="1188.7" y="739.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.11%)</title><rect x="1188.7" y="723.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.11%)</title><rect x="1188.7" y="707.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.11%)</title><rect x="1188.7" y="691.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.11%)</title><rect x="1188.7" y="675.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
</g>
</svg>
