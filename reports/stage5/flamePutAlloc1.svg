<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="453"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="453"> </text>
<g id="frames">
<g>
<title>all (10,372 samples, 100.00%)</title><rect x="10.0" y="419.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="430.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (7,943 samples, 76.58%)</title><rect x="10.0" y="403.0" width="903.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="414.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,943 samples, 76.58%)</title><rect x="10.0" y="387.0" width="903.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="398.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,943 samples, 76.58%)</title><rect x="10.0" y="371.0" width="903.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (71 samples, 0.68%)</title><rect x="10.0" y="355.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (71 samples, 0.68%)</title><rect x="10.0" y="339.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (71 samples, 0.68%)</title><rect x="10.0" y="323.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (71 samples, 0.68%)</title><rect x="10.0" y="307.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (71 samples, 0.68%)</title><rect x="10.0" y="291.0" width="8.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$75/447253676.run (7,872 samples, 75.90%)</title><rect x="18.1" y="355.0" width="895.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.1" y="366.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$75/447253676.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3 (7,872 samples, 75.90%)</title><rect x="18.1" y="339.0" width="895.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.1" y="350.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (141 samples, 1.36%)</title><rect x="18.1" y="323.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (141 samples, 1.36%)</title><rect x="18.1" y="307.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get$Lambda (141 samples, 1.36%)</title><rect x="18.1" y="291.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.1" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$77 (141 samples, 1.36%)</title><rect x="18.1" y="275.0" width="16.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="21.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (7,731 samples, 74.54%)</title><rect x="34.1" y="323.0" width="879.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.1" y="334.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (390 samples, 3.76%)</title><rect x="34.1" y="307.0" width="44.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.1" y="318.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (276 samples, 2.66%)</title><rect x="34.1" y="291.0" width="31.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.1" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (193 samples, 1.86%)</title><rect x="34.1" y="275.0" width="22.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.1" y="286.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (193 samples, 1.86%)</title><rect x="34.1" y="259.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.1" y="270.0">o..</text>
</g>
<g>
<title>byte[] (193 samples, 1.86%)</title><rect x="34.1" y="243.0" width="22.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="37.1" y="254.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (83 samples, 0.80%)</title><rect x="56.1" y="275.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.1" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (83 samples, 0.80%)</title><rect x="56.1" y="259.0" width="9.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="59.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (114 samples, 1.10%)</title><rect x="65.5" y="291.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (114 samples, 1.10%)</title><rect x="65.5" y="275.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 1.10%)</title><rect x="65.5" y="259.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.5" y="270.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.46%)</title><rect x="65.5" y="243.0" width="5.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="68.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (66 samples, 0.64%)</title><rect x="71.0" y="243.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.0" y="254.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.64%)</title><rect x="71.0" y="227.0" width="7.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="74.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get (7,341 samples, 70.78%)</title><rect x="78.5" y="307.0" width="835.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.5" y="318.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$77/901254208.get</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2 (7,341 samples, 70.78%)</title><rect x="78.5" y="291.0" width="835.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.5" y="302.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (7,341 samples, 70.78%)</title><rect x="78.5" y="275.0" width="835.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.5" y="286.0">ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (111 samples, 1.07%)</title><rect x="78.5" y="259.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (111 samples, 1.07%)</title><rect x="78.5" y="243.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (111 samples, 1.07%)</title><rect x="78.5" y="227.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (111 samples, 1.07%)</title><rect x="78.5" y="211.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (61 samples, 0.59%)</title><rect x="78.5" y="195.0" width="6.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="81.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.48%)</title><rect x="85.4" y="195.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.4" y="206.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.48%)</title><rect x="85.4" y="179.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="88.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNode (3 samples, 0.03%)</title><rect x="91.1" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.1" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.03%)</title><rect x="91.1" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.03%)</title><rect x="91.1" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.03%)</title><rect x="91.1" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.03%)</title><rect x="91.1" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.1" y="206.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="91.1" y="179.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="94.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (3,583 samples, 34.54%)</title><rect x="91.5" y="259.0" width="407.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.5" y="270.0">ru/mail/polis/service/stasyanoi/server/CustomServer.putI..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (2,583 samples, 24.90%)</title><rect x="91.5" y="243.0" width="293.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.5" y="254.0">ru/mail/polis/dao/stasyanoi/DAOImpl.ups..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,421 samples, 23.34%)</title><rect x="91.5" y="227.0" width="275.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.5" y="238.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,421 samples, 23.34%)</title><rect x="91.5" y="211.0" width="275.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.5" y="222.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2,421 samples, 23.34%)</title><rect x="91.5" y="195.0" width="275.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.5" y="206.0">ru/mail/polis/dao/stasyanoi/Comparato..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2,421 samples, 23.34%)</title><rect x="91.5" y="179.0" width="275.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.5" y="190.0">ru/mail/polis/dao/stasyanoi/Comparato..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2,421 samples, 23.34%)</title><rect x="91.5" y="163.0" width="275.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.5" y="174.0">org/rocksdb/AbstractSlice.data</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2,421 samples, 23.34%)</title><rect x="91.5" y="147.0" width="275.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.5" y="158.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2,421 samples, 23.34%)</title><rect x="91.5" y="131.0" width="275.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="94.5" y="142.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (2,421 samples, 23.34%)</title><rect x="91.5" y="115.0" width="275.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.5" y="126.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (162 samples, 1.56%)</title><rect x="366.9" y="227.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.9" y="238.0"></text>
</g>
<g>
<title>byte[] (162 samples, 1.56%)</title><rect x="366.9" y="211.0" width="18.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="369.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampToBodyAndModifyEmptyBody (629 samples, 6.06%)</title><rect x="385.5" y="243.0" width="71.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.5" y="254.0">ru/mail/..</text>
</g>
<g>
<title>byte[] (98 samples, 0.94%)</title><rect x="385.5" y="227.0" width="11.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="388.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (531 samples, 5.12%)</title><rect x="396.7" y="227.0" width="60.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.7" y="238.0">ru/mai..</text>
</g>
<g>
<title>byte[] (59 samples, 0.57%)</title><rect x="396.7" y="211.0" width="6.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="399.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.chars (196 samples, 1.89%)</title><rect x="403.4" y="211.0" width="22.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.4" y="222.0">j..</text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (62 samples, 0.60%)</title><rect x="403.4" y="195.0" width="7.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="406.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (134 samples, 1.29%)</title><rect x="410.5" y="195.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (134 samples, 1.29%)</title><rect x="410.5" y="179.0" width="15.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="413.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (65 samples, 0.63%)</title><rect x="425.7" y="211.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="428.7" y="222.0"></text>
</g>
<g>
<title>java/lang/Long.toString (65 samples, 0.63%)</title><rect x="425.7" y="195.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="428.7" y="206.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.63%)</title><rect x="425.7" y="179.0" width="7.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="428.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (211 samples, 2.03%)</title><rect x="433.1" y="211.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.1" y="222.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (211 samples, 2.03%)</title><rect x="433.1" y="195.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.1" y="206.0">j..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (211 samples, 2.03%)</title><rect x="433.1" y="179.0" width="24.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.1" y="190.0">j..</text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (211 samples, 2.03%)</title><rect x="433.1" y="163.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.1" y="174.0">j..</text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (211 samples, 2.03%)</title><rect x="433.1" y="147.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.1" y="158.0">j..</text>
</g>
<g>
<title>java.util.stream.Nodes$IntFixedNodeBuilder (45 samples, 0.43%)</title><rect x="433.1" y="131.0" width="5.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="436.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (166 samples, 1.60%)</title><rect x="438.2" y="131.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.2" y="142.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (166 samples, 1.60%)</title><rect x="438.2" y="115.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.2" y="126.0"></text>
</g>
<g>
<title>int[] (166 samples, 1.60%)</title><rect x="438.2" y="99.0" width="18.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="441.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (50 samples, 0.48%)</title><rect x="457.1" y="243.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (49 samples, 0.47%)</title><rect x="457.1" y="227.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="460.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (49 samples, 0.47%)</title><rect x="457.1" y="211.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (49 samples, 0.47%)</title><rect x="457.1" y="195.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="460.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (49 samples, 0.47%)</title><rect x="457.1" y="179.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.1" y="190.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.47%)</title><rect x="457.1" y="163.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="460.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (319 samples, 3.08%)</title><rect x="462.8" y="243.0" width="36.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.8" y="254.0">ru/..</text>
</g>
<g>
<title>one.nio.http.Response (59 samples, 0.57%)</title><rect x="462.8" y="227.0" width="6.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="465.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (260 samples, 2.51%)</title><rect x="469.5" y="227.0" width="29.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.5" y="238.0">on..</text>
</g>
<g>
<title>byte[] (106 samples, 1.02%)</title><rect x="469.5" y="211.0" width="12.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="472.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (90 samples, 0.87%)</title><rect x="481.6" y="211.0" width="10.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="484.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.62%)</title><rect x="491.8" y="211.0" width="7.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="494.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicatePutOrDelete (2,733 samples, 26.35%)</title><rect x="499.1" y="259.0" width="310.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.1" y="270.0">ru/mail/polis/service/stasyanoi/server/Cus..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergePutDeleteResponses (12 samples, 0.12%)</title><rect x="499.1" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="502.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (10 samples, 0.10%)</title><rect x="499.3" y="227.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.3" y="238.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.04%)</title><rect x="499.3" y="211.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="502.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.06%)</title><rect x="499.8" y="211.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.03%)</title><rect x="500.0" y="195.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="503.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (2,721 samples, 26.23%)</title><rect x="500.5" y="243.0" width="309.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.5" y="254.0">ru/mail/polis/service/stasyanoi/server/Cus..</text>
</g>
<g>
<title>java.util.TreeMap (3 samples, 0.03%)</title><rect x="500.5" y="227.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="503.5" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (12 samples, 0.12%)</title><rect x="500.8" y="227.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (12 samples, 0.12%)</title><rect x="500.8" y="211.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.8" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (11 samples, 0.11%)</title><rect x="500.9" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.9" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (11 samples, 0.11%)</title><rect x="500.9" y="179.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.9" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (4 samples, 0.04%)</title><rect x="500.9" y="163.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="503.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (7 samples, 0.07%)</title><rect x="501.4" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.4" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.07%)</title><rect x="501.4" y="147.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="504.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (2,706 samples, 26.09%)</title><rect x="502.2" y="227.0" width="307.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.2" y="238.0">ru/mail/polis/service/stasyanoi/server/Cu..</text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.07%)</title><rect x="502.2" y="211.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="505.2" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 0.12%)</title><rect x="503.2" y="211.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.2" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.03%)</title><rect x="503.2" y="195.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="506.2" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.09%)</title><rect x="503.5" y="195.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.5" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="503.5" y="179.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="506.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (4 samples, 0.04%)</title><rect x="504.1" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.1" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (4 samples, 0.04%)</title><rect x="504.1" y="163.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="507.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (8 samples, 0.08%)</title><rect x="504.8" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.8" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (8 samples, 0.08%)</title><rect x="504.8" y="195.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="507.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (2,673 samples, 25.77%)</title><rect x="505.9" y="211.0" width="304.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.9" y="222.0">ru/mail/polis/service/stasyanoi/Util.send..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.19%)</title><rect x="505.9" y="195.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (20 samples, 0.19%)</title><rect x="505.9" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1347523408.invoke (20 samples, 0.19%)</title><rect x="505.9" y="163.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.19%)</title><rect x="505.9" y="147.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.05%)</title><rect x="505.9" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.05%)</title><rect x="505.9" y="115.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="508.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.14%)</title><rect x="506.5" y="131.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.14%)</title><rect x="506.5" y="115.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.5" y="126.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.14%)</title><rect x="506.5" y="99.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="509.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (2,625 samples, 25.31%)</title><rect x="508.2" y="195.0" width="298.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.2" y="206.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="508.2" y="179.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="511.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.07%)</title><rect x="508.8" y="179.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="511.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (17 samples, 0.16%)</title><rect x="509.6" y="179.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.6" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (7 samples, 0.07%)</title><rect x="509.6" y="163.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="512.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.10%)</title><rect x="510.4" y="163.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.10%)</title><rect x="510.4" y="147.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="513.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,596 samples, 25.03%)</title><rect x="511.5" y="179.0" width="295.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.5" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,596 samples, 25.03%)</title><rect x="511.5" y="163.0" width="295.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.5" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (5 samples, 0.05%)</title><rect x="511.5" y="147.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="514.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,448 samples, 23.60%)</title><rect x="512.1" y="147.0" width="278.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.1" y="158.0">one/nio/http/HttpClient$ResponseReade..</text>
</g>
<g>
<title>byte[] (847 samples, 8.17%)</title><rect x="512.1" y="131.0" width="96.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="515.1" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (1,601 samples, 15.44%)</title><rect x="608.4" y="131.0" width="182.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.4" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (107 samples, 1.03%)</title><rect x="790.6" y="147.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="790.8" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="793.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="790.8" y="115.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="790.9" y="99.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.9" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="790.9" y="83.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="793.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (92 samples, 0.89%)</title><rect x="791.5" y="131.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92 samples, 0.89%)</title><rect x="791.5" y="115.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (92 samples, 0.89%)</title><rect x="791.5" y="99.0" width="10.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.5" y="110.0"></text>
</g>
<g>
<title>char[] (60 samples, 0.58%)</title><rect x="791.5" y="83.0" width="6.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="794.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.15%)</title><rect x="798.3" y="83.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="801.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.15%)</title><rect x="800.1" y="83.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.15%)</title><rect x="800.1" y="67.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.15%)</title><rect x="800.1" y="51.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.1" y="62.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.15%)</title><rect x="800.1" y="35.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="803.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.04%)</title><rect x="801.9" y="131.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.04%)</title><rect x="801.9" y="115.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="804.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.03%)</title><rect x="802.4" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="802.4" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="802.4" y="99.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (26 samples, 0.25%)</title><rect x="802.7" y="147.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="805.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (26 samples, 0.25%)</title><rect x="802.7" y="131.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.7" y="142.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.25%)</title><rect x="802.7" y="115.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="805.7" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.05%)</title><rect x="805.7" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="805.7" y="131.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.7" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="805.7" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="805.8" y="99.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.8" y="110.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="805.8" y="83.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="808.8" y="94.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (5 samples, 0.05%)</title><rect x="806.3" y="147.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.3" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (5 samples, 0.05%)</title><rect x="806.3" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.3" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (5 samples, 0.05%)</title><rect x="806.3" y="115.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.3" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (5 samples, 0.05%)</title><rect x="806.3" y="99.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="809.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.08%)</title><rect x="806.8" y="195.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.08%)</title><rect x="806.8" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.08%)</title><rect x="806.8" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="806.8" y="147.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="809.8" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="807.3" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.3" y="158.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="807.3" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="810.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (20 samples, 0.19%)</title><rect x="807.7" y="195.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.19%)</title><rect x="807.7" y="179.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.19%)</title><rect x="807.7" y="163.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.06%)</title><rect x="807.7" y="147.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="810.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.13%)</title><rect x="808.4" y="147.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.4" y="158.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.13%)</title><rect x="808.4" y="131.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="811.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (911 samples, 8.78%)</title><rect x="810.0" y="259.0" width="103.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.0" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestInternal (911 samples, 8.78%)</title><rect x="810.0" y="243.0" width="103.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.0" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.04%)</title><rect x="810.0" y="227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1053995047.invoke (4 samples, 0.04%)</title><rect x="810.0" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1347523408.invoke (4 samples, 0.04%)</title><rect x="810.0" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.04%)</title><rect x="810.0" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.03%)</title><rect x="810.1" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.03%)</title><rect x="810.1" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="158.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="810.1" y="131.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="813.1" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (893 samples, 8.61%)</title><rect x="810.5" y="227.0" width="101.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.5" y="238.0">one/nio/http..</text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="810.5" y="211.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="813.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="810.8" y="211.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="813.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (9 samples, 0.09%)</title><rect x="811.2" y="211.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.2" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.04%)</title><rect x="811.2" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="814.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.05%)</title><rect x="811.6" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.05%)</title><rect x="811.6" y="179.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="814.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (878 samples, 8.47%)</title><rect x="812.2" y="211.0" width="99.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.2" y="222.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (878 samples, 8.47%)</title><rect x="812.2" y="195.0" width="99.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="815.2" y="206.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (4 samples, 0.04%)</title><rect x="812.2" y="179.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="815.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (819 samples, 7.90%)</title><rect x="812.6" y="179.0" width="93.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.6" y="190.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (322 samples, 3.10%)</title><rect x="812.6" y="163.0" width="36.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="815.6" y="174.0">byt..</text>
</g>
<g>
<title>byte[] (497 samples, 4.79%)</title><rect x="849.3" y="163.0" width="56.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.3" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (39 samples, 0.38%)</title><rect x="905.8" y="179.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (31 samples, 0.30%)</title><rect x="906.1" y="163.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.30%)</title><rect x="906.1" y="147.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.30%)</title><rect x="906.1" y="131.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="909.1" y="142.0"></text>
</g>
<g>
<title>char[] (21 samples, 0.20%)</title><rect x="906.1" y="115.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="909.1" y="126.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.03%)</title><rect x="908.5" y="115.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="911.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.07%)</title><rect x="908.9" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.07%)</title><rect x="908.9" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 0.07%)</title><rect x="908.9" y="83.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.9" y="94.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="908.9" y="67.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="911.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.05%)</title><rect x="909.7" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="909.7" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="909.7" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.05%)</title><rect x="909.7" y="115.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.7" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="909.7" y="99.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="912.7" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (15 samples, 0.14%)</title><rect x="910.2" y="179.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.2" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 0.14%)</title><rect x="910.2" y="163.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.2" y="174.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.14%)</title><rect x="910.2" y="147.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="913.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.06%)</title><rect x="912.1" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.06%)</title><rect x="912.1" y="211.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.06%)</title><rect x="912.1" y="195.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="912.3" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.3" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="912.3" y="163.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="915.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (8 samples, 0.08%)</title><rect x="912.7" y="227.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.08%)</title><rect x="912.7" y="211.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.08%)</title><rect x="912.7" y="195.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.7" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.06%)</title><rect x="913.0" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.0" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="913.0" y="163.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="916.0" y="174.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,428 samples, 23.41%)</title><rect x="913.8" y="403.0" width="276.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.8" y="414.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (107 samples, 1.03%)</title><rect x="913.8" y="387.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.8" y="398.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (107 samples, 1.03%)</title><rect x="913.8" y="371.0" width="12.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="916.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,321 samples, 22.38%)</title><rect x="925.9" y="387.0" width="264.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="928.9" y="398.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,321 samples, 22.38%)</title><rect x="925.9" y="371.0" width="264.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.9" y="382.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,321 samples, 22.38%)</title><rect x="925.9" y="355.0" width="264.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.9" y="366.0">one/nio/http/HttpSession.processHtt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (448 samples, 4.32%)</title><rect x="925.9" y="339.0" width="51.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.9" y="350.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (448 samples, 4.32%)</title><rect x="925.9" y="323.0" width="51.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.9" y="334.0">one/n..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (303 samples, 2.92%)</title><rect x="925.9" y="307.0" width="34.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="928.9" y="318.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (154 samples, 1.48%)</title><rect x="925.9" y="291.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (154 samples, 1.48%)</title><rect x="925.9" y="275.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="928.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (154 samples, 1.48%)</title><rect x="925.9" y="259.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.85%)</title><rect x="925.9" y="243.0" width="10.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="928.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (66 samples, 0.64%)</title><rect x="936.0" y="243.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="939.0" y="254.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.64%)</title><rect x="936.0" y="227.0" width="7.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="939.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (149 samples, 1.44%)</title><rect x="943.5" y="291.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.78%)</title><rect x="943.5" y="275.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.78%)</title><rect x="943.5" y="259.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$75/447253676.get$Lambda (81 samples, 0.78%)</title><rect x="943.5" y="243.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.5" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$75 (81 samples, 0.78%)</title><rect x="943.5" y="227.0" width="9.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="946.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 0.66%)</title><rect x="952.7" y="275.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (68 samples, 0.66%)</title><rect x="952.7" y="259.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="955.7" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (67 samples, 0.65%)</title><rect x="952.7" y="243.0" width="7.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="955.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (145 samples, 1.40%)</title><rect x="960.4" y="307.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="963.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (145 samples, 1.40%)</title><rect x="960.4" y="291.0" width="16.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (145 samples, 1.40%)</title><rect x="960.4" y="275.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.68%)</title><rect x="960.4" y="259.0" width="8.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="963.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.71%)</title><rect x="968.5" y="259.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.5" y="270.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.71%)</title><rect x="968.5" y="243.0" width="8.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="971.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (781 samples, 7.53%)</title><rect x="976.9" y="339.0" width="88.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.9" y="350.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (108 samples, 1.04%)</title><rect x="976.9" y="323.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="979.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (255 samples, 2.46%)</title><rect x="989.2" y="323.0" width="29.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.2" y="334.0">on..</text>
</g>
<g>
<title>java.lang.String[] (255 samples, 2.46%)</title><rect x="989.2" y="307.0" width="29.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="992.2" y="318.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (418 samples, 4.03%)</title><rect x="1018.2" y="323.0" width="47.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.2" y="334.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (418 samples, 4.03%)</title><rect x="1018.2" y="307.0" width="47.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1021.2" y="318.0">one/..</text>
</g>
<g>
<title>char[] (236 samples, 2.28%)</title><rect x="1018.2" y="291.0" width="26.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1021.2" y="302.0">c..</text>
</g>
<g>
<title>java.lang.String (68 samples, 0.66%)</title><rect x="1045.1" y="291.0" width="7.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1048.1" y="302.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (114 samples, 1.10%)</title><rect x="1052.8" y="291.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (114 samples, 1.10%)</title><rect x="1052.8" y="275.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (114 samples, 1.10%)</title><rect x="1052.8" y="259.0" width="13.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.8" y="270.0"></text>
</g>
<g>
<title>byte[] (114 samples, 1.10%)</title><rect x="1052.8" y="243.0" width="13.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1055.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (98 samples, 0.94%)</title><rect x="1065.8" y="339.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1068.8" y="350.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.94%)</title><rect x="1065.8" y="323.0" width="11.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1068.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (122 samples, 1.18%)</title><rect x="1076.9" y="339.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (122 samples, 1.18%)</title><rect x="1076.9" y="323.0" width="13.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1079.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (122 samples, 1.18%)</title><rect x="1076.9" y="307.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.63%)</title><rect x="1076.9" y="291.0" width="7.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1079.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.55%)</title><rect x="1084.3" y="291.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1087.3" y="302.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.55%)</title><rect x="1084.3" y="275.0" width="6.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1087.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (872 samples, 8.41%)</title><rect x="1090.8" y="339.0" width="99.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.8" y="350.0">one/nio/util..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (872 samples, 8.41%)</title><rect x="1090.8" y="323.0" width="99.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.8" y="334.0">one/nio/util..</text>
</g>
<g>
<title>char[] (421 samples, 4.06%)</title><rect x="1090.8" y="307.0" width="47.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1093.8" y="318.0">char[]</text>
</g>
<g>
<title>java.lang.String (172 samples, 1.66%)</title><rect x="1138.7" y="307.0" width="19.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1141.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (279 samples, 2.69%)</title><rect x="1158.3" y="307.0" width="31.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.3" y="318.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (279 samples, 2.69%)</title><rect x="1158.3" y="291.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.3" y="302.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (279 samples, 2.69%)</title><rect x="1158.3" y="275.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.3" y="286.0">ja..</text>
</g>
<g>
<title>byte[] (279 samples, 2.69%)</title><rect x="1158.3" y="259.0" width="31.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1161.3" y="270.0">by..</text>
</g>
</g>
</svg>
