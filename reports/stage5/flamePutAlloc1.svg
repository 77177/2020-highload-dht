<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (21,867 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (10,168 samples, 46.50%)</title><rect x="10.1" y="547.0" width="548.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.1" y="558.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (10,168 samples, 46.50%)</title><rect x="10.1" y="531.0" width="548.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.1" y="542.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (10,168 samples, 46.50%)</title><rect x="10.1" y="515.0" width="548.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.1" y="526.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (98 samples, 0.45%)</title><rect x="10.1" y="499.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (98 samples, 0.45%)</title><rect x="10.1" y="483.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (96 samples, 0.44%)</title><rect x="10.1" y="467.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (96 samples, 0.44%)</title><rect x="10.1" y="451.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (96 samples, 0.44%)</title><rect x="10.1" y="435.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="13.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$119/1785725247.run (3,408 samples, 15.59%)</title><rect x="15.3" y="499.0" width="183.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.3" y="510.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$putRep$3 (3,408 samples, 15.59%)</title><rect x="15.3" y="483.0" width="183.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.3" y="494.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putRepInternal (3,408 samples, 15.59%)</title><rect x="15.3" y="467.0" width="183.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.3" y="478.0">ru/mail/polis/service/st..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (226 samples, 1.03%)</title><rect x="15.3" y="451.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (226 samples, 1.03%)</title><rect x="15.3" y="435.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (156 samples, 0.71%)</title><rect x="15.3" y="419.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (156 samples, 0.71%)</title><rect x="15.3" y="403.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.3" y="414.0"></text>
</g>
<g>
<title>byte[] (156 samples, 0.71%)</title><rect x="15.3" y="387.0" width="8.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="18.3" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 0.32%)</title><rect x="23.8" y="419.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.8" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (70 samples, 0.32%)</title><rect x="23.8" y="403.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="26.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (2,442 samples, 11.17%)</title><rect x="27.5" y="451.0" width="131.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.5" y="462.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,312 samples, 10.57%)</title><rect x="27.5" y="435.0" width="124.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.5" y="446.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (2,312 samples, 10.57%)</title><rect x="27.5" y="419.0" width="124.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.5" y="430.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2,312 samples, 10.57%)</title><rect x="27.5" y="403.0" width="124.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.5" y="414.0">ru/mail/polis/d..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2,312 samples, 10.57%)</title><rect x="27.5" y="387.0" width="124.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.5" y="398.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2,312 samples, 10.57%)</title><rect x="27.5" y="371.0" width="124.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.5" y="382.0">org/rocksdb/Abs..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2,312 samples, 10.57%)</title><rect x="27.5" y="355.0" width="124.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.5" y="366.0">org/rocksdb/Sli..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2,312 samples, 10.57%)</title><rect x="27.5" y="339.0" width="124.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.5" y="350.0">org/rocksdb/Sli..</text>
</g>
<g>
<title>byte[] (2,312 samples, 10.57%)</title><rect x="27.5" y="323.0" width="124.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="30.5" y="334.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (130 samples, 0.59%)</title><rect x="152.3" y="435.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.3" y="446.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.59%)</title><rect x="152.3" y="419.0" width="7.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="155.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (532 samples, 2.43%)</title><rect x="159.3" y="451.0" width="28.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.3" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (532 samples, 2.43%)</title><rect x="159.3" y="435.0" width="28.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.3" y="446.0">ru..</text>
</g>
<g>
<title>byte[] (64 samples, 0.29%)</title><rect x="159.3" y="419.0" width="3.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="162.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (468 samples, 2.14%)</title><rect x="162.8" y="419.0" width="25.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.8" y="430.0">r..</text>
</g>
<g>
<title>byte[] (73 samples, 0.33%)</title><rect x="162.8" y="403.0" width="3.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="165.8" y="414.0"></text>
</g>
<g>
<title>java/lang/String.chars (172 samples, 0.79%)</title><rect x="166.7" y="403.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.7" y="414.0"></text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (68 samples, 0.31%)</title><rect x="166.7" y="387.0" width="3.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="169.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (104 samples, 0.48%)</title><rect x="170.4" y="387.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.4" y="398.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (104 samples, 0.48%)</title><rect x="170.4" y="371.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="173.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (57 samples, 0.26%)</title><rect x="176.0" y="403.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Long.toString (57 samples, 0.26%)</title><rect x="176.0" y="387.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.0" y="398.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.26%)</title><rect x="176.0" y="371.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="179.0" y="382.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (166 samples, 0.76%)</title><rect x="179.1" y="403.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.1" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (166 samples, 0.76%)</title><rect x="179.1" y="387.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (166 samples, 0.76%)</title><rect x="179.1" y="371.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (166 samples, 0.76%)</title><rect x="179.1" y="355.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (166 samples, 0.76%)</title><rect x="179.1" y="339.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$IntFixedNodeBuilder (36 samples, 0.16%)</title><rect x="179.1" y="323.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="182.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (130 samples, 0.59%)</title><rect x="181.0" y="323.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (130 samples, 0.59%)</title><rect x="181.0" y="307.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.0" y="318.0"></text>
</g>
<g>
<title>int[] (130 samples, 0.59%)</title><rect x="181.0" y="291.0" width="7.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="184.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (113 samples, 0.52%)</title><rect x="188.0" y="451.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (113 samples, 0.52%)</title><rect x="188.0" y="435.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (113 samples, 0.52%)</title><rect x="188.0" y="419.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (113 samples, 0.52%)</title><rect x="188.0" y="403.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (113 samples, 0.52%)</title><rect x="188.0" y="387.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.0" y="398.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.52%)</title><rect x="188.0" y="371.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="191.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithNoBody (95 samples, 0.43%)</title><rect x="194.1" y="451.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.1" y="462.0"></text>
</g>
<g>
<title>one.nio.http.Response (44 samples, 0.20%)</title><rect x="194.1" y="435.0" width="2.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="197.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (51 samples, 0.23%)</title><rect x="196.5" y="435.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.23%)</title><rect x="196.5" y="419.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="199.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$68/1163379456.run (6,662 samples, 30.47%)</title><rect x="199.2" y="499.0" width="359.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.2" y="510.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lam..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$put$2 (6,662 samples, 30.47%)</title><rect x="199.2" y="483.0" width="359.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.2" y="494.0">ru/mail/polis/service/stasyanoi/CustomServer.lamb..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putInternal (6,662 samples, 30.47%)</title><rect x="199.2" y="467.0" width="359.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.2" y="478.0">ru/mail/polis/service/stasyanoi/CustomServer.putI..</text>
</g>
<g>
<title>java.util.TreeMap (98 samples, 0.45%)</title><rect x="199.2" y="451.0" width="5.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="202.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (23 samples, 0.11%)</title><rect x="204.5" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (23 samples, 0.11%)</title><rect x="204.5" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (23 samples, 0.11%)</title><rect x="204.5" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.11%)</title><rect x="204.5" y="403.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.5" y="414.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.11%)</title><rect x="204.5" y="387.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="207.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (151 samples, 0.69%)</title><rect x="205.8" y="451.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (151 samples, 0.69%)</title><rect x="205.8" y="435.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.8" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (35 samples, 0.16%)</title><rect x="205.8" y="419.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (35 samples, 0.16%)</title><rect x="205.8" y="403.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="208.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (116 samples, 0.53%)</title><rect x="207.7" y="419.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.7" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (116 samples, 0.53%)</title><rect x="207.7" y="403.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.7" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (44 samples, 0.20%)</title><rect x="207.7" y="387.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="210.7" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (72 samples, 0.33%)</title><rect x="210.0" y="387.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.33%)</title><rect x="210.0" y="371.0" width="3.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="213.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (111 samples, 0.51%)</title><rect x="213.9" y="451.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 0.51%)</title><rect x="213.9" y="435.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (69 samples, 0.32%)</title><rect x="213.9" y="419.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.9" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (69 samples, 0.32%)</title><rect x="213.9" y="403.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.9" y="414.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.32%)</title><rect x="213.9" y="387.0" width="3.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="216.9" y="398.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (42 samples, 0.19%)</title><rect x="217.6" y="419.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="220.6" y="430.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (42 samples, 0.19%)</title><rect x="217.6" y="403.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="220.6" y="414.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (52 samples, 0.24%)</title><rect x="219.9" y="451.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.11%)</title><rect x="219.9" y="435.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="222.9" y="446.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (29 samples, 0.13%)</title><rect x="221.2" y="435.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (29 samples, 0.13%)</title><rect x="221.2" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.2" y="430.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (29 samples, 0.13%)</title><rect x="221.2" y="403.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="224.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putProxy (2,539 samples, 11.61%)</title><rect x="222.7" y="451.0" width="137.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="462.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (1,105 samples, 5.05%)</title><rect x="222.7" y="435.0" width="59.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.7" y="446.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,046 samples, 4.78%)</title><rect x="222.7" y="419.0" width="56.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.7" y="430.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,046 samples, 4.78%)</title><rect x="222.7" y="403.0" width="56.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.7" y="414.0">org/ro..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,046 samples, 4.78%)</title><rect x="222.7" y="387.0" width="56.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.7" y="398.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,046 samples, 4.78%)</title><rect x="222.7" y="371.0" width="56.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.7" y="382.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1,046 samples, 4.78%)</title><rect x="222.7" y="355.0" width="56.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.7" y="366.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,046 samples, 4.78%)</title><rect x="222.7" y="339.0" width="56.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="350.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,046 samples, 4.78%)</title><rect x="222.7" y="323.0" width="56.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.7" y="334.0">org/ro..</text>
</g>
<g>
<title>byte[] (1,046 samples, 4.78%)</title><rect x="222.7" y="307.0" width="56.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="225.7" y="318.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (59 samples, 0.27%)</title><rect x="279.2" y="419.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.2" y="430.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.27%)</title><rect x="279.2" y="403.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="282.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (44 samples, 0.20%)</title><rect x="282.3" y="435.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.20%)</title><rect x="282.3" y="419.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.20%)</title><rect x="282.3" y="403.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.3" y="414.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.20%)</title><rect x="282.3" y="387.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="285.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (364 samples, 1.66%)</title><rect x="284.7" y="435.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (53 samples, 0.24%)</title><rect x="284.7" y="419.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.24%)</title><rect x="284.7" y="403.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.24%)</title><rect x="284.7" y="387.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.7" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (53 samples, 0.24%)</title><rect x="284.7" y="371.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="287.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (311 samples, 1.42%)</title><rect x="287.6" y="419.0" width="16.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.6" y="430.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.22%)</title><rect x="287.6" y="403.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="290.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (263 samples, 1.20%)</title><rect x="290.2" y="403.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.2" y="414.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.20%)</title><rect x="290.2" y="387.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="293.2" y="398.0"></text>
</g>
<g>
<title>java/lang/String.chars (85 samples, 0.39%)</title><rect x="292.5" y="387.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.5" y="398.0"></text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (28 samples, 0.13%)</title><rect x="292.5" y="371.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="295.5" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (57 samples, 0.26%)</title><rect x="294.0" y="371.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.0" y="382.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (57 samples, 0.26%)</title><rect x="294.0" y="355.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="297.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (30 samples, 0.14%)</title><rect x="297.1" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (30 samples, 0.14%)</title><rect x="297.1" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.1" y="382.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.14%)</title><rect x="297.1" y="355.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="300.1" y="366.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (105 samples, 0.48%)</title><rect x="298.7" y="387.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (105 samples, 0.48%)</title><rect x="298.7" y="371.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (105 samples, 0.48%)</title><rect x="298.7" y="355.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="301.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (105 samples, 0.48%)</title><rect x="298.7" y="339.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (105 samples, 0.48%)</title><rect x="298.7" y="323.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$IntFixedNodeBuilder (24 samples, 0.11%)</title><rect x="298.7" y="307.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="301.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (81 samples, 0.37%)</title><rect x="300.0" y="307.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (81 samples, 0.37%)</title><rect x="300.0" y="291.0" width="4.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="303.0" y="302.0"></text>
</g>
<g>
<title>int[] (81 samples, 0.37%)</title><rect x="300.0" y="275.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="303.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithNoBody (57 samples, 0.26%)</title><rect x="304.4" y="435.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.4" y="446.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.07%)</title><rect x="304.4" y="419.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="307.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (41 samples, 0.19%)</title><rect x="305.2" y="419.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.19%)</title><rect x="305.2" y="403.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="308.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.routeRequest (969 samples, 4.43%)</title><rect x="307.4" y="435.0" width="52.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.4" y="446.0">ru/ma..</text>
</g>
<g>
<title>one.nio.http.HttpClient (12 samples, 0.05%)</title><rect x="307.4" y="419.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="310.4" y="430.0"></text>
</g>
<g>
<title>one.nio.net.ConnectionString (5 samples, 0.02%)</title><rect x="308.1" y="419.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="311.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.&lt;init&gt; (15 samples, 0.07%)</title><rect x="308.4" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.4" y="430.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.03%)</title><rect x="308.4" y="403.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="311.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="308.9" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="311.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (873 samples, 3.99%)</title><rect x="309.2" y="419.0" width="47.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.2" y="430.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (873 samples, 3.99%)</title><rect x="309.2" y="403.0" width="47.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.2" y="414.0">one/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (6 samples, 0.03%)</title><rect x="309.2" y="387.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="312.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (795 samples, 3.64%)</title><rect x="309.5" y="387.0" width="42.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.5" y="398.0">one/..</text>
</g>
<g>
<title>byte[] (302 samples, 1.38%)</title><rect x="309.5" y="371.0" width="16.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="312.5" y="382.0"></text>
</g>
<g>
<title>byte[] (493 samples, 2.25%)</title><rect x="325.8" y="371.0" width="26.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.8" y="382.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (46 samples, 0.21%)</title><rect x="352.4" y="387.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (36 samples, 0.16%)</title><rect x="352.7" y="371.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.16%)</title><rect x="352.7" y="355.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="355.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.16%)</title><rect x="352.7" y="339.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.7" y="350.0"></text>
</g>
<g>
<title>char[] (27 samples, 0.12%)</title><rect x="352.7" y="323.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="355.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="354.4" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.4" y="334.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.02%)</title><rect x="354.4" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.02%)</title><rect x="354.4" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.4" y="302.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="354.4" y="275.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="357.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.05%)</title><rect x="354.9" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 0.05%)</title><rect x="354.9" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.9" y="382.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="354.9" y="355.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="357.9" y="366.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (9 samples, 0.04%)</title><rect x="355.7" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.7" y="398.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (9 samples, 0.04%)</title><rect x="355.7" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.7" y="382.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (9 samples, 0.04%)</title><rect x="355.7" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.7" y="366.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (7 samples, 0.03%)</title><rect x="355.7" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="358.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.toNativeAddr (7 samples, 0.03%)</title><rect x="355.7" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.7" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (5 samples, 0.02%)</title><rect x="355.8" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.8" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="355.8" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.8" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (5 samples, 0.02%)</title><rect x="355.8" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="358.8" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.02%)</title><rect x="355.8" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.8" y="270.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (5 samples, 0.02%)</title><rect x="355.8" y="243.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="358.8" y="254.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (62 samples, 0.28%)</title><rect x="356.3" y="419.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.3" y="430.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (62 samples, 0.28%)</title><rect x="356.3" y="403.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.15%)</title><rect x="356.3" y="387.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.15%)</title><rect x="356.3" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="359.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.07%)</title><rect x="356.3" y="355.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="359.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.08%)</title><rect x="357.1" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.1" y="366.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.08%)</title><rect x="357.1" y="339.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="360.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (30 samples, 0.14%)</title><rect x="358.0" y="387.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.0" y="398.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (30 samples, 0.14%)</title><rect x="358.0" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="361.0" y="382.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (11 samples, 0.05%)</title><rect x="358.0" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="361.0" y="366.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (19 samples, 0.09%)</title><rect x="358.6" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="361.6" y="366.0"></text>
</g>
<g>
<title>int[] (17 samples, 0.08%)</title><rect x="358.6" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="361.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getNoRepRequest (684 samples, 3.13%)</title><rect x="359.7" y="451.0" width="36.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.7" y="462.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.38%)</title><rect x="359.7" y="435.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/95359731.invoke (84 samples, 0.38%)</title><rect x="359.7" y="419.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2060170340.invoke (84 samples, 0.38%)</title><rect x="359.7" y="403.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.38%)</title><rect x="359.7" y="387.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (26 samples, 0.12%)</title><rect x="359.7" y="371.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.12%)</title><rect x="359.7" y="355.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="362.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (58 samples, 0.27%)</title><rect x="361.1" y="371.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (58 samples, 0.27%)</title><rect x="361.1" y="355.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.1" y="366.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.27%)</title><rect x="361.1" y="339.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="364.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (54 samples, 0.25%)</title><rect x="364.3" y="435.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (54 samples, 0.25%)</title><rect x="364.3" y="419.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (54 samples, 0.25%)</title><rect x="364.3" y="403.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.11%)</title><rect x="364.3" y="387.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="367.3" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.14%)</title><rect x="365.6" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.6" y="398.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.14%)</title><rect x="365.6" y="371.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="368.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (72 samples, 0.33%)</title><rect x="367.2" y="435.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (72 samples, 0.33%)</title><rect x="367.2" y="419.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 0.33%)</title><rect x="367.2" y="403.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.11%)</title><rect x="367.2" y="387.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="370.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (49 samples, 0.22%)</title><rect x="368.4" y="387.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.4" y="398.0"></text>
</g>
<g>
<title>byte[] (49 samples, 0.22%)</title><rect x="368.4" y="371.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="371.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getCloneRequest (474 samples, 2.17%)</title><rect x="371.1" y="435.0" width="25.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.1" y="446.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.39%)</title><rect x="371.1" y="419.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.07%)</title><rect x="371.1" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$85/2069209318.get$Lambda (15 samples, 0.07%)</title><rect x="371.1" y="387.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.GetHelper$$Lambda$85 (15 samples, 0.07%)</title><rect x="371.1" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="374.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/925858445.invoke (71 samples, 0.32%)</title><rect x="371.9" y="403.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.32%)</title><rect x="371.9" y="387.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (23 samples, 0.11%)</title><rect x="371.9" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.11%)</title><rect x="371.9" y="355.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="374.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (48 samples, 0.22%)</title><rect x="373.1" y="371.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (48 samples, 0.22%)</title><rect x="373.1" y="355.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.1" y="366.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.22%)</title><rect x="373.1" y="339.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="376.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (76 samples, 0.35%)</title><rect x="375.7" y="419.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="378.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (76 samples, 0.35%)</title><rect x="375.7" y="403.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="378.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (30 samples, 0.14%)</title><rect x="375.7" y="387.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="378.7" y="398.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (30 samples, 0.14%)</title><rect x="375.7" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.7" y="382.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (30 samples, 0.14%)</title><rect x="375.7" y="355.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="378.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (46 samples, 0.21%)</title><rect x="377.3" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.3" y="398.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (46 samples, 0.21%)</title><rect x="377.3" y="371.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="380.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (123 samples, 0.56%)</title><rect x="379.8" y="419.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.8" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (123 samples, 0.56%)</title><rect x="379.8" y="403.0" width="6.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="382.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (82 samples, 0.37%)</title><rect x="386.4" y="419.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (52 samples, 0.24%)</title><rect x="386.4" y="403.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (52 samples, 0.24%)</title><rect x="386.4" y="387.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (52 samples, 0.24%)</title><rect x="386.4" y="371.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (52 samples, 0.24%)</title><rect x="386.4" y="355.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (52 samples, 0.24%)</title><rect x="386.4" y="339.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (52 samples, 0.24%)</title><rect x="386.4" y="323.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (52 samples, 0.24%)</title><rect x="386.4" y="307.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="389.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (30 samples, 0.14%)</title><rect x="389.2" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (30 samples, 0.14%)</title><rect x="389.2" y="387.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="392.2" y="398.0"></text>
</g>
<g>
<title>one.nio.http.Request (35 samples, 0.16%)</title><rect x="390.9" y="419.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="393.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (72 samples, 0.33%)</title><rect x="392.8" y="419.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String[] (72 samples, 0.33%)</title><rect x="392.8" y="403.0" width="3.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="395.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/PutHelper.getPutReplicaResponse (3,004 samples, 13.74%)</title><rect x="396.6" y="451.0" width="162.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.6" y="462.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.11%)</title><rect x="396.6" y="435.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (24 samples, 0.11%)</title><rect x="396.6" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.11%)</title><rect x="396.6" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.11%)</title><rect x="396.6" y="387.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="399.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.06%)</title><rect x="396.6" y="371.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="399.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.05%)</title><rect x="397.3" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.3" y="382.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.05%)</title><rect x="397.3" y="355.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="400.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getResponsesInternal (2,828 samples, 12.93%)</title><rect x="397.9" y="435.0" width="152.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.9" y="446.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/util/Collection.stream (12 samples, 0.05%)</title><rect x="398.0" y="419.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (10 samples, 0.05%)</title><rect x="398.2" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (10 samples, 0.05%)</title><rect x="398.2" y="387.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="401.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (15 samples, 0.07%)</title><rect x="398.7" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.7" y="430.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (15 samples, 0.07%)</title><rect x="398.7" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="401.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (2,762 samples, 12.63%)</title><rect x="399.6" y="419.0" width="149.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="430.0">java/util/stream/Re..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2,755 samples, 12.60%)</title><rect x="399.6" y="403.0" width="148.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.6" y="414.0">java/util/stream/Ab..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2,755 samples, 12.60%)</title><rect x="399.6" y="387.0" width="148.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.6" y="398.0">java/util/stream/Re..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2,748 samples, 12.57%)</title><rect x="399.6" y="371.0" width="148.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.6" y="382.0">java/util/stream/Ab..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2,728 samples, 12.48%)</title><rect x="399.6" y="355.0" width="147.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.6" y="366.0">java/util/stream/Ab..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2,728 samples, 12.48%)</title><rect x="399.6" y="339.0" width="147.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.6" y="350.0">java/util/stream/Ab..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2,722 samples, 12.45%)</title><rect x="399.6" y="323.0" width="146.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.6" y="334.0">java/util/stream/R..</text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.tryAdvance (2,722 samples, 12.45%)</title><rect x="399.6" y="307.0" width="146.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.6" y="318.0">java/util/TreeMap$..</text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (2,722 samples, 12.45%)</title><rect x="399.6" y="291.0" width="146.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.6" y="302.0">java/util/stream/S..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,722 samples, 12.45%)</title><rect x="399.6" y="275.0" width="146.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.6" y="286.0">java/util/stream/R..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (2,313 samples, 10.58%)</title><rect x="399.6" y="259.0" width="124.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.6" y="270.0">java/util/strea..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (7 samples, 0.03%)</title><rect x="399.6" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$112/920646907.accept (7 samples, 0.03%)</title><rect x="399.6" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.6" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.03%)</title><rect x="399.6" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.03%)</title><rect x="399.6" y="195.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.6" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.03%)</title><rect x="399.6" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="402.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.03%)</title><rect x="399.6" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.03%)</title><rect x="399.6" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.03%)</title><rect x="399.6" y="131.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="402.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$101/2119133134.apply (2,306 samples, 10.55%)</title><rect x="399.9" y="243.0" width="124.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.9" y="254.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.lambda$getResponsesInternal$1 (2,306 samples, 10.55%)</title><rect x="399.9" y="227.0" width="124.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.9" y="238.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,306 samples, 10.55%)</title><rect x="399.9" y="211.0" width="124.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.9" y="222.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,306 samples, 10.55%)</title><rect x="399.9" y="195.0" width="124.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.9" y="206.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (16 samples, 0.07%)</title><rect x="399.9" y="179.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="402.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,111 samples, 9.65%)</title><rect x="400.8" y="179.0" width="113.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.8" y="190.0">one/nio/http/H..</text>
</g>
<g>
<title>byte[] (705 samples, 3.22%)</title><rect x="400.8" y="163.0" width="38.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="403.8" y="174.0">byt..</text>
</g>
<g>
<title>byte[] (1,406 samples, 6.43%)</title><rect x="438.8" y="163.0" width="75.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.8" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (103 samples, 0.47%)</title><rect x="514.7" y="179.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.05%)</title><rect x="514.9" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.9" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.05%)</title><rect x="514.9" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.05%)</title><rect x="514.9" y="131.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="517.9" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (71 samples, 0.32%)</title><rect x="515.5" y="163.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.5" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.32%)</title><rect x="515.5" y="147.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.5" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (71 samples, 0.32%)</title><rect x="515.5" y="131.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.5" y="142.0"></text>
</g>
<g>
<title>char[] (50 samples, 0.23%)</title><rect x="515.5" y="115.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="518.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.04%)</title><rect x="518.2" y="115.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="521.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.05%)</title><rect x="518.7" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.05%)</title><rect x="518.7" y="99.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.7" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (12 samples, 0.05%)</title><rect x="518.7" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.7" y="94.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.05%)</title><rect x="518.7" y="67.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="521.7" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.04%)</title><rect x="519.3" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (8 samples, 0.04%)</title><rect x="519.3" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="522.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.05%)</title><rect x="519.7" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="522.7" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.05%)</title><rect x="519.7" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.05%)</title><rect x="519.7" y="131.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="519.7" y="115.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="522.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.02%)</title><rect x="520.0" y="115.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.0" y="126.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.02%)</title><rect x="520.0" y="99.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="523.0" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (44 samples, 0.20%)</title><rect x="520.3" y="179.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.3" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (44 samples, 0.20%)</title><rect x="520.3" y="163.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.3" y="174.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.20%)</title><rect x="520.3" y="147.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="523.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (9 samples, 0.04%)</title><rect x="522.6" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.6" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.04%)</title><rect x="522.6" y="163.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.04%)</title><rect x="522.6" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.03%)</title><rect x="522.8" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.8" y="142.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.03%)</title><rect x="522.8" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="525.8" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (19 samples, 0.09%)</title><rect x="523.1" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.1" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (19 samples, 0.09%)</title><rect x="523.1" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.1" y="174.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (19 samples, 0.09%)</title><rect x="523.1" y="147.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.1" y="158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (17 samples, 0.08%)</title><rect x="523.1" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.1" y="142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.toNativeAddr (17 samples, 0.08%)</title><rect x="523.1" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.1" y="126.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getAddress (8 samples, 0.04%)</title><rect x="523.1" y="99.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.1" y="110.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="523.1" y="83.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="526.1" y="94.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (9 samples, 0.04%)</title><rect x="523.6" y="99.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.6" y="110.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.04%)</title><rect x="523.6" y="83.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.6" y="94.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (9 samples, 0.04%)</title><rect x="523.6" y="67.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.6" y="78.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (9 samples, 0.04%)</title><rect x="523.6" y="51.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.6" y="62.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (9 samples, 0.04%)</title><rect x="523.6" y="35.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="526.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$97/1579238551.apply (409 samples, 1.87%)</title><rect x="524.4" y="259.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.4" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.lambda$getResponsesInternal$0 (409 samples, 1.87%)</title><rect x="524.4" y="243.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.4" y="254.0">r..</text>
</g>
<g>
<title>one.nio.http.HttpClient (25 samples, 0.11%)</title><rect x="524.4" y="227.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="527.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.&lt;init&gt; (24 samples, 0.11%)</title><rect x="525.9" y="227.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.9" y="238.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="525.9" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="528.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.05%)</title><rect x="526.4" y="211.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="529.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.03%)</title><rect x="526.9" y="211.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="529.9" y="222.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (127 samples, 0.58%)</title><rect x="527.2" y="227.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.2" y="238.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (127 samples, 0.58%)</title><rect x="527.2" y="211.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (66 samples, 0.30%)</title><rect x="527.2" y="195.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 0.30%)</title><rect x="527.2" y="179.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (30 samples, 0.14%)</title><rect x="527.2" y="163.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="530.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.16%)</title><rect x="528.9" y="163.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.9" y="174.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.16%)</title><rect x="528.9" y="147.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="531.9" y="158.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (61 samples, 0.28%)</title><rect x="530.8" y="195.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.8" y="206.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (61 samples, 0.28%)</title><rect x="530.8" y="179.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.8" y="190.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (17 samples, 0.08%)</title><rect x="530.8" y="163.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="533.8" y="174.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (44 samples, 0.20%)</title><rect x="531.7" y="163.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.7" y="174.0"></text>
</g>
<g>
<title>int[] (41 samples, 0.19%)</title><rect x="531.7" y="147.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="534.7" y="158.0"></text>
</g>
<g>
<title>org.javatuples.Pair (13 samples, 0.06%)</title><rect x="534.1" y="227.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="537.1" y="238.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (22 samples, 0.10%)</title><rect x="534.8" y="227.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.04%)</title><rect x="534.8" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="537.8" y="222.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (13 samples, 0.06%)</title><rect x="535.3" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (13 samples, 0.06%)</title><rect x="535.3" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.3" y="206.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (13 samples, 0.06%)</title><rect x="535.3" y="179.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="538.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getNewRequest (194 samples, 0.89%)</title><rect x="536.0" y="227.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.07%)</title><rect x="536.0" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (15 samples, 0.07%)</title><rect x="536.0" y="195.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1177377518.invoke (15 samples, 0.07%)</title><rect x="536.0" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.07%)</title><rect x="536.0" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.03%)</title><rect x="536.0" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="539.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="536.0" y="131.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="539.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.04%)</title><rect x="536.4" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.04%)</title><rect x="536.4" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.4" y="142.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.04%)</title><rect x="536.4" y="115.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="539.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.05%)</title><rect x="536.8" y="211.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="539.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.05%)</title><rect x="536.8" y="195.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.05%)</title><rect x="536.8" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="536.8" y="163.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="539.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (15 samples, 0.07%)</title><rect x="537.4" y="211.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (15 samples, 0.07%)</title><rect x="537.4" y="195.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.07%)</title><rect x="537.4" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="540.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.05%)</title><rect x="537.4" y="163.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="540.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper.getCloneRequest (153 samples, 0.70%)</title><rect x="538.2" y="211.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.13%)</title><rect x="538.2" y="195.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.04%)</title><rect x="538.2" y="179.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="541.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/GetHelper$$Lambda$85/2069209318.get$Lambda (9 samples, 0.04%)</title><rect x="538.2" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.GetHelper$$Lambda$85 (9 samples, 0.04%)</title><rect x="538.2" y="147.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="541.2" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/925858445.invoke (20 samples, 0.09%)</title><rect x="538.7" y="179.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.09%)</title><rect x="538.7" y="163.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.02%)</title><rect x="538.7" y="147.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.02%)</title><rect x="538.7" y="131.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="541.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.07%)</title><rect x="538.9" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.07%)</title><rect x="538.9" y="131.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.9" y="142.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.07%)</title><rect x="538.9" y="115.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="541.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (36 samples, 0.16%)</title><rect x="539.8" y="195.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (36 samples, 0.16%)</title><rect x="539.8" y="179.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (15 samples, 0.07%)</title><rect x="539.8" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.8" y="174.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (15 samples, 0.07%)</title><rect x="539.8" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.8" y="158.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (15 samples, 0.07%)</title><rect x="539.8" y="131.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="542.8" y="142.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (21 samples, 0.10%)</title><rect x="540.6" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.6" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (21 samples, 0.10%)</title><rect x="540.6" y="147.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="543.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (35 samples, 0.16%)</title><rect x="541.7" y="195.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (35 samples, 0.16%)</title><rect x="541.7" y="179.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="544.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (20 samples, 0.09%)</title><rect x="543.6" y="195.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.6" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.06%)</title><rect x="543.6" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (14 samples, 0.06%)</title><rect x="543.6" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.6" y="174.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (14 samples, 0.06%)</title><rect x="543.6" y="147.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.6" y="158.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.06%)</title><rect x="543.6" y="131.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.6" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (14 samples, 0.06%)</title><rect x="543.6" y="115.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="546.6" y="126.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (14 samples, 0.06%)</title><rect x="543.6" y="99.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.6" y="110.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (14 samples, 0.06%)</title><rect x="543.6" y="83.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="546.6" y="94.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (6 samples, 0.03%)</title><rect x="544.3" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.3" y="190.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (6 samples, 0.03%)</title><rect x="544.3" y="163.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="547.3" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.06%)</title><rect x="544.7" y="195.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="547.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (19 samples, 0.09%)</title><rect x="545.4" y="195.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.09%)</title><rect x="545.4" y="179.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="548.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.begin (6 samples, 0.03%)</title><rect x="546.4" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (6 samples, 0.03%)</title><rect x="546.4" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (6 samples, 0.03%)</title><rect x="546.4" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.4" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (6 samples, 0.03%)</title><rect x="546.4" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.4" y="286.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$106/1303409641.get (6 samples, 0.03%)</title><rect x="546.4" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.4" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.03%)</title><rect x="546.4" y="243.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="549.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (20 samples, 0.09%)</title><rect x="546.8" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (9 samples, 0.04%)</title><rect x="546.8" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (9 samples, 0.04%)</title><rect x="546.8" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="549.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (11 samples, 0.05%)</title><rect x="547.3" y="339.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1$1 (11 samples, 0.05%)</title><rect x="547.3" y="323.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="550.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (7 samples, 0.03%)</title><rect x="547.8" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (7 samples, 0.03%)</title><rect x="547.8" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.8" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (7 samples, 0.03%)</title><rect x="547.8" y="339.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="550.8" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (7 samples, 0.03%)</title><rect x="548.2" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.2" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (7 samples, 0.03%)</title><rect x="548.2" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="551.2" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (12 samples, 0.05%)</title><rect x="548.6" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="551.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (12 samples, 0.05%)</title><rect x="548.6" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.6" y="414.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (12 samples, 0.05%)</title><rect x="548.6" y="387.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="551.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (24 samples, 0.11%)</title><rect x="549.2" y="419.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (24 samples, 0.11%)</title><rect x="549.2" y="403.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="552.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.getEndResponsePutAndDelete (47 samples, 0.21%)</title><rect x="550.5" y="435.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.5" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (14 samples, 0.06%)</title><rect x="550.5" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (11 samples, 0.05%)</title><rect x="550.7" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.7" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (11 samples, 0.05%)</title><rect x="550.7" y="387.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="553.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (18 samples, 0.08%)</title><rect x="551.4" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.06%)</title><rect x="551.4" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (14 samples, 0.06%)</title><rect x="551.4" y="387.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.4" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.06%)</title><rect x="551.4" y="371.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (11 samples, 0.05%)</title><rect x="551.4" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (8 samples, 0.04%)</title><rect x="551.4" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (8 samples, 0.04%)</title><rect x="551.4" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.accept (8 samples, 0.04%)</title><rect x="551.4" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$112/920646907.accept (8 samples, 0.04%)</title><rect x="551.4" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.04%)</title><rect x="551.4" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.4" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.04%)</title><rect x="551.4" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.04%)</title><rect x="551.4" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.04%)</title><rect x="551.4" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="554.4" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.04%)</title><rect x="551.4" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.04%)</title><rect x="551.4" y="195.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="554.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithNoBody (9 samples, 0.04%)</title><rect x="552.6" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.02%)</title><rect x="552.8" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.02%)</title><rect x="552.8" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="555.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getAckFrom (105 samples, 0.48%)</title><rect x="553.1" y="435.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.02%)</title><rect x="553.1" y="419.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.02%)</title><rect x="553.1" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$91/2102115173.get$Lambda (5 samples, 0.02%)</title><rect x="553.1" y="387.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.1" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.Util$$Lambda$91 (5 samples, 0.02%)</title><rect x="553.1" y="371.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="556.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (13 samples, 0.06%)</title><rect x="553.3" y="419.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays$ArrayList.spliterator (8 samples, 0.04%)</title><rect x="553.3" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.3" y="414.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (8 samples, 0.04%)</title><rect x="553.3" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.3" y="398.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (8 samples, 0.04%)</title><rect x="553.3" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="556.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.02%)</title><rect x="553.8" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (5 samples, 0.02%)</title><rect x="553.8" y="387.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="556.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (74 samples, 0.34%)</title><rect x="554.3" y="419.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (74 samples, 0.34%)</title><rect x="554.3" y="403.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (74 samples, 0.34%)</title><rect x="554.3" y="387.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (71 samples, 0.32%)</title><rect x="554.3" y="371.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (65 samples, 0.30%)</title><rect x="554.3" y="355.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (65 samples, 0.30%)</title><rect x="554.3" y="339.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (65 samples, 0.30%)</title><rect x="554.3" y="323.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="557.3" y="334.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.tryAdvance (65 samples, 0.30%)</title><rect x="554.3" y="307.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (65 samples, 0.30%)</title><rect x="554.3" y="291.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="557.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$89/13554038.apply (65 samples, 0.30%)</title><rect x="554.3" y="275.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getAckFrom$0 (65 samples, 0.30%)</title><rect x="554.3" y="259.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.split (65 samples, 0.30%)</title><rect x="554.3" y="243.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.split (65 samples, 0.30%)</title><rect x="554.3" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.03%)</title><rect x="554.3" y="211.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="557.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.18%)</title><rect x="554.8" y="211.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.18%)</title><rect x="554.8" y="195.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.06%)</title><rect x="554.8" y="179.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="557.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.11%)</title><rect x="555.5" y="179.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.5" y="190.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.11%)</title><rect x="555.5" y="163.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="558.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.08%)</title><rect x="556.9" y="211.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.08%)</title><rect x="556.9" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.08%)</title><rect x="556.9" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.08%)</title><rect x="556.9" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.08%)</title><rect x="556.9" y="147.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="559.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.08%)</title><rect x="556.9" y="131.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="559.9" y="142.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (6 samples, 0.03%)</title><rect x="557.8" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (5 samples, 0.02%)</title><rect x="557.8" y="339.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.8" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (5 samples, 0.02%)</title><rect x="557.8" y="323.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="560.8" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (5 samples, 0.02%)</title><rect x="558.3" y="419.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.3" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (5 samples, 0.02%)</title><rect x="558.3" y="403.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="561.3" y="414.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (2,745 samples, 12.55%)</title><rect x="558.7" y="547.0" width="148.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="561.7" y="558.0">one/nio/server/Acce..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (2,723 samples, 12.45%)</title><rect x="558.7" y="531.0" width="147.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.7" y="542.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (2,723 samples, 12.45%)</title><rect x="558.7" y="515.0" width="147.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.7" y="526.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one.nio.http.HttpSession (18 samples, 0.08%)</title><rect x="558.7" y="499.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="561.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (2,705 samples, 12.37%)</title><rect x="559.7" y="499.0" width="146.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.7" y="510.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>byte[] (864 samples, 3.95%)</title><rect x="559.7" y="483.0" width="46.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="562.7" y="494.0">byte[]</text>
</g>
<g>
<title>byte[] (1,839 samples, 8.41%)</title><rect x="606.3" y="483.0" width="99.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.3" y="494.0">byte[]</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (22 samples, 0.10%)</title><rect x="705.7" y="531.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (22 samples, 0.10%)</title><rect x="705.7" y="515.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.7" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (22 samples, 0.10%)</title><rect x="705.7" y="499.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="708.7" y="510.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,953 samples, 40.94%)</title><rect x="706.9" y="547.0" width="483.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.9" y="558.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (373 samples, 1.71%)</title><rect x="706.9" y="531.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.9" y="542.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (373 samples, 1.71%)</title><rect x="706.9" y="515.0" width="20.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.9" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,580 samples, 39.24%)</title><rect x="727.0" y="531.0" width="463.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.0" y="542.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,580 samples, 39.24%)</title><rect x="727.0" y="515.0" width="463.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.0" y="526.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,749 samples, 21.72%)</title><rect x="727.0" y="499.0" width="256.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.0" y="510.0">one/nio/http/HttpSession.processHt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (868 samples, 3.97%)</title><rect x="727.0" y="483.0" width="46.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.0" y="494.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (868 samples, 3.97%)</title><rect x="727.0" y="467.0" width="46.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="730.0" y="478.0">one/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (260 samples, 1.19%)</title><rect x="727.0" y="451.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (126 samples, 0.58%)</title><rect x="727.0" y="435.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (126 samples, 0.58%)</title><rect x="727.0" y="419.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (126 samples, 0.58%)</title><rect x="727.0" y="403.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.29%)</title><rect x="727.0" y="387.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="730.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (63 samples, 0.29%)</title><rect x="730.4" y="387.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.4" y="398.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.29%)</title><rect x="730.4" y="371.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="733.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (134 samples, 0.61%)</title><rect x="733.8" y="435.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.39%)</title><rect x="733.8" y="419.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.39%)</title><rect x="733.8" y="403.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$68/1163379456.get$Lambda (86 samples, 0.39%)</title><rect x="733.8" y="387.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$68 (86 samples, 0.39%)</title><rect x="733.8" y="371.0" width="4.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="736.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.22%)</title><rect x="738.4" y="419.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (48 samples, 0.22%)</title><rect x="738.4" y="403.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="741.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (46 samples, 0.21%)</title><rect x="738.4" y="387.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="741.4" y="398.0"></text>
</g>
<g>
<title>RequestHandler5_putRep.handleRequest (310 samples, 1.42%)</title><rect x="741.0" y="451.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (167 samples, 0.76%)</title><rect x="741.0" y="435.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (167 samples, 0.76%)</title><rect x="741.0" y="419.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (167 samples, 0.76%)</title><rect x="741.0" y="403.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.37%)</title><rect x="741.0" y="387.0" width="4.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="744.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.40%)</title><rect x="745.3" y="387.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.3" y="398.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.40%)</title><rect x="745.3" y="371.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="748.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putRep (143 samples, 0.65%)</title><rect x="750.0" y="435.0" width="7.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.40%)</title><rect x="750.0" y="419.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.40%)</title><rect x="750.0" y="403.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$119/1785725247.get$Lambda (88 samples, 0.40%)</title><rect x="750.0" y="387.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$119 (88 samples, 0.40%)</title><rect x="750.0" y="371.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="753.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (55 samples, 0.25%)</title><rect x="754.8" y="419.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (55 samples, 0.25%)</title><rect x="754.8" y="403.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (55 samples, 0.25%)</title><rect x="754.8" y="387.0" width="3.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="757.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (298 samples, 1.36%)</title><rect x="757.8" y="451.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (298 samples, 1.36%)</title><rect x="757.8" y="435.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (298 samples, 1.36%)</title><rect x="757.8" y="419.0" width="16.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.52%)</title><rect x="757.8" y="403.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="760.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (184 samples, 0.84%)</title><rect x="763.9" y="403.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.9" y="414.0"></text>
</g>
<g>
<title>byte[] (184 samples, 0.84%)</title><rect x="763.9" y="387.0" width="9.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="766.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,308 samples, 10.55%)</title><rect x="773.8" y="483.0" width="124.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.8" y="494.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one.nio.http.Request (433 samples, 1.98%)</title><rect x="773.8" y="467.0" width="23.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="776.8" y="478.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (782 samples, 3.58%)</title><rect x="797.2" y="467.0" width="42.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.2" y="478.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (782 samples, 3.58%)</title><rect x="797.2" y="451.0" width="42.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="800.2" y="462.0">java..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,093 samples, 5.00%)</title><rect x="839.4" y="467.0" width="59.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.4" y="478.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,093 samples, 5.00%)</title><rect x="839.4" y="451.0" width="59.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.4" y="462.0">one/ni..</text>
</g>
<g>
<title>char[] (471 samples, 2.15%)</title><rect x="839.4" y="435.0" width="25.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="842.4" y="446.0">c..</text>
</g>
<g>
<title>java.lang.String (193 samples, 0.88%)</title><rect x="864.8" y="435.0" width="10.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="867.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (429 samples, 1.96%)</title><rect x="875.2" y="435.0" width="23.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.2" y="446.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (429 samples, 1.96%)</title><rect x="875.2" y="419.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="878.2" y="430.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (429 samples, 1.96%)</title><rect x="875.2" y="403.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="878.2" y="414.0">j..</text>
</g>
<g>
<title>byte[] (429 samples, 1.96%)</title><rect x="875.2" y="387.0" width="23.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="878.2" y="398.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (131 samples, 0.60%)</title><rect x="898.4" y="483.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.4" y="494.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.60%)</title><rect x="898.4" y="467.0" width="7.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="901.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (234 samples, 1.07%)</title><rect x="905.5" y="483.0" width="12.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="908.5" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (234 samples, 1.07%)</title><rect x="905.5" y="467.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (234 samples, 1.07%)</title><rect x="905.5" y="451.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.49%)</title><rect x="905.5" y="435.0" width="5.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="908.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (127 samples, 0.58%)</title><rect x="911.2" y="435.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.2" y="446.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.58%)</title><rect x="911.2" y="419.0" width="6.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="914.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,208 samples, 5.52%)</title><rect x="918.1" y="483.0" width="65.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.1" y="494.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,208 samples, 5.52%)</title><rect x="918.1" y="467.0" width="65.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.1" y="478.0">one/nio..</text>
</g>
<g>
<title>char[] (587 samples, 2.68%)</title><rect x="918.1" y="451.0" width="31.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="921.1" y="462.0">ch..</text>
</g>
<g>
<title>java.lang.String (227 samples, 1.04%)</title><rect x="949.8" y="451.0" width="12.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="952.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (394 samples, 1.80%)</title><rect x="962.0" y="451.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.0" y="462.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (394 samples, 1.80%)</title><rect x="962.0" y="435.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.0" y="446.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (394 samples, 1.80%)</title><rect x="962.0" y="419.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.0" y="430.0">j..</text>
</g>
<g>
<title>byte[] (394 samples, 1.80%)</title><rect x="962.0" y="403.0" width="21.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="965.0" y="414.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.read (3,831 samples, 17.52%)</title><rect x="983.3" y="499.0" width="206.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.3" y="510.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3,831 samples, 17.52%)</title><rect x="983.3" y="483.0" width="206.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.3" y="494.0">one/nio/net/NativeSocket.read</text>
</g>
<g>
<title>byte[] (138 samples, 0.63%)</title><rect x="983.3" y="467.0" width="7.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="986.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.42%)</title><rect x="990.7" y="467.0" width="4.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="993.7" y="478.0"></text>
</g>
<g>
<title>one.nio.net.SocketClosedException (164 samples, 0.75%)</title><rect x="995.6" y="467.0" width="8.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="998.6" y="478.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (3,438 samples, 15.72%)</title><rect x="1004.5" y="467.0" width="185.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.5" y="478.0">one/nio/net/SocketClosed..</text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (3,438 samples, 15.72%)</title><rect x="1004.5" y="451.0" width="185.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.5" y="462.0">java/net/SocketException..</text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (3,438 samples, 15.72%)</title><rect x="1004.5" y="435.0" width="185.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.5" y="446.0">java/io/IOException.&lt;init&gt;</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3,438 samples, 15.72%)</title><rect x="1004.5" y="419.0" width="185.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.5" y="430.0">java/lang/Exception.&lt;init&gt;</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3,438 samples, 15.72%)</title><rect x="1004.5" y="403.0" width="185.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.5" y="414.0">java/lang/Throwable.&lt;init&gt;</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,438 samples, 15.72%)</title><rect x="1004.5" y="387.0" width="185.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1007.5" y="398.0">java/lang/Throwable.fill..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3,438 samples, 15.72%)</title><rect x="1004.5" y="371.0" width="185.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.5" y="382.0">java/lang/Throwable.fill..</text>
</g>
<g>
<title>int[] (386 samples, 1.77%)</title><rect x="1004.5" y="355.0" width="20.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1007.5" y="366.0"></text>
</g>
<g>
<title>int[] (129 samples, 0.59%)</title><rect x="1025.3" y="355.0" width="7.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1028.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (763 samples, 3.49%)</title><rect x="1032.3" y="355.0" width="41.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1035.3" y="366.0">jav..</text>
</g>
<g>
<title>java.lang.Object[] (224 samples, 1.02%)</title><rect x="1073.4" y="355.0" width="12.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.4" y="366.0"></text>
</g>
<g>
<title>long[] (835 samples, 3.82%)</title><rect x="1085.5" y="355.0" width="45.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1088.5" y="366.0">long[]</text>
</g>
<g>
<title>long[] (779 samples, 3.56%)</title><rect x="1130.6" y="355.0" width="42.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1133.6" y="366.0">long[]</text>
</g>
<g>
<title>short[] (322 samples, 1.47%)</title><rect x="1172.6" y="355.0" width="17.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1175.6" y="366.0"></text>
</g>
</g>
</svg>
