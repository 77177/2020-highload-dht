<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="453"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="453"> </text>
<g id="frames">
<g>
<title>all (10,492 samples, 100.00%)</title><rect x="10.0" y="419.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="430.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (7,923 samples, 75.51%)</title><rect x="10.0" y="403.0" width="891.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="414.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,923 samples, 75.51%)</title><rect x="10.0" y="387.0" width="891.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="398.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,923 samples, 75.51%)</title><rect x="10.0" y="371.0" width="891.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (84 samples, 0.80%)</title><rect x="10.0" y="355.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (84 samples, 0.80%)</title><rect x="10.0" y="339.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (84 samples, 0.80%)</title><rect x="10.0" y="323.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (84 samples, 0.80%)</title><rect x="10.0" y="307.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (84 samples, 0.80%)</title><rect x="10.0" y="291.0" width="9.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$76/301499389.run (5,001 samples, 47.66%)</title><rect x="19.4" y="355.0" width="562.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.4" y="366.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$76/301499389.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$5 (5,001 samples, 47.66%)</title><rect x="19.4" y="339.0" width="562.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.4" y="350.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$5</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.58%)</title><rect x="19.4" y="323.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.58%)</title><rect x="19.4" y="307.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$82/977738926.get$Lambda (61 samples, 0.58%)</title><rect x="19.4" y="291.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.4" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$82 (61 samples, 0.58%)</title><rect x="19.4" y="275.0" width="6.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="22.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (4,940 samples, 47.08%)</title><rect x="26.3" y="323.0" width="555.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="29.3" y="334.0">ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (134 samples, 1.28%)</title><rect x="26.3" y="307.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 0.90%)</title><rect x="26.3" y="291.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 0.63%)</title><rect x="26.3" y="275.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.3" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (66 samples, 0.63%)</title><rect x="26.3" y="259.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.3" y="270.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.63%)</title><rect x="26.3" y="243.0" width="7.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="29.3" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.27%)</title><rect x="33.7" y="275.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.7" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 0.27%)</title><rect x="33.7" y="259.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="36.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (40 samples, 0.38%)</title><rect x="36.9" y="291.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (40 samples, 0.38%)</title><rect x="36.9" y="275.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.38%)</title><rect x="36.9" y="259.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.17%)</title><rect x="36.9" y="243.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="39.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.21%)</title><rect x="38.9" y="243.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.9" y="254.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.21%)</title><rect x="38.9" y="227.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="41.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$82/977738926.get (4,806 samples, 45.81%)</title><rect x="41.4" y="307.0" width="540.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.4" y="318.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$82/977738926.get</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$4 (4,806 samples, 45.81%)</title><rect x="41.4" y="291.0" width="540.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.4" y="302.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$4</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (4,806 samples, 45.81%)</title><rect x="41.4" y="275.0" width="540.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.4" y="286.0">ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAnd..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (32 samples, 0.30%)</title><rect x="41.4" y="259.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (32 samples, 0.30%)</title><rect x="41.4" y="243.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.4" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.30%)</title><rect x="41.4" y="227.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.30%)</title><rect x="41.4" y="211.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.18%)</title><rect x="41.4" y="195.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="44.4" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.12%)</title><rect x="43.5" y="195.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.5" y="206.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.12%)</title><rect x="43.5" y="179.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="46.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getNode (17 samples, 0.16%)</title><rect x="45.0" y="259.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.16%)</title><rect x="45.0" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.16%)</title><rect x="45.0" y="227.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.16%)</title><rect x="45.0" y="211.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.16%)</title><rect x="45.0" y="195.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="48.0" y="206.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.16%)</title><rect x="45.0" y="179.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="48.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (1,165 samples, 11.10%)</title><rect x="46.9" y="259.0" width="131.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.9" y="270.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (809 samples, 7.71%)</title><rect x="46.9" y="243.0" width="91.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.9" y="254.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (768 samples, 7.32%)</title><rect x="46.9" y="227.0" width="86.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.9" y="238.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (768 samples, 7.32%)</title><rect x="46.9" y="211.0" width="86.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.9" y="222.0">org/rocksd..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (768 samples, 7.32%)</title><rect x="46.9" y="195.0" width="86.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.9" y="206.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (768 samples, 7.32%)</title><rect x="46.9" y="179.0" width="86.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.9" y="190.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (768 samples, 7.32%)</title><rect x="46.9" y="163.0" width="86.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.9" y="174.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (768 samples, 7.32%)</title><rect x="46.9" y="147.0" width="86.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.9" y="158.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (768 samples, 7.32%)</title><rect x="46.9" y="131.0" width="86.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.9" y="142.0">org/rocksd..</text>
</g>
<g>
<title>byte[] (768 samples, 7.32%)</title><rect x="46.9" y="115.0" width="86.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="49.9" y="126.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (41 samples, 0.39%)</title><rect x="133.3" y="227.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.3" y="238.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.39%)</title><rect x="133.3" y="211.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="136.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (266 samples, 2.54%)</title><rect x="137.9" y="243.0" width="29.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.9" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (36 samples, 0.34%)</title><rect x="137.9" y="227.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.34%)</title><rect x="137.9" y="211.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (36 samples, 0.34%)</title><rect x="137.9" y="195.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.34%)</title><rect x="137.9" y="179.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="140.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (230 samples, 2.19%)</title><rect x="141.9" y="227.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.9" y="238.0">r..</text>
</g>
<g>
<title>byte[] (40 samples, 0.38%)</title><rect x="141.9" y="211.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="144.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (190 samples, 1.81%)</title><rect x="146.4" y="211.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.4" y="222.0">r..</text>
</g>
<g>
<title>byte[] (19 samples, 0.18%)</title><rect x="146.4" y="195.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="149.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.chars (74 samples, 0.71%)</title><rect x="148.6" y="195.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.6" y="206.0"></text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (27 samples, 0.26%)</title><rect x="148.6" y="179.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="151.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (47 samples, 0.45%)</title><rect x="151.6" y="179.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.6" y="190.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (47 samples, 0.45%)</title><rect x="151.6" y="163.0" width="5.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="154.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (28 samples, 0.27%)</title><rect x="156.9" y="195.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.9" y="206.0"></text>
</g>
<g>
<title>java/lang/Long.toString (28 samples, 0.27%)</title><rect x="156.9" y="179.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.9" y="190.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.27%)</title><rect x="156.9" y="163.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="159.9" y="174.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (69 samples, 0.66%)</title><rect x="160.0" y="195.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.0" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (69 samples, 0.66%)</title><rect x="160.0" y="179.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.0" y="190.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (69 samples, 0.66%)</title><rect x="160.0" y="163.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.0" y="174.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (69 samples, 0.66%)</title><rect x="160.0" y="147.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="163.0" y="158.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (69 samples, 0.66%)</title><rect x="160.0" y="131.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.0" y="142.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$IntFixedNodeBuilder (20 samples, 0.19%)</title><rect x="160.0" y="115.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="163.0" y="126.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (49 samples, 0.47%)</title><rect x="162.3" y="115.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.3" y="126.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (49 samples, 0.47%)</title><rect x="162.3" y="99.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="165.3" y="110.0"></text>
</g>
<g>
<title>int[] (49 samples, 0.47%)</title><rect x="162.3" y="83.0" width="5.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="165.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (49 samples, 0.47%)</title><rect x="167.8" y="243.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.16%)</title><rect x="167.8" y="227.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.16%)</title><rect x="167.8" y="211.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.16%)</title><rect x="167.8" y="195.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.16%)</title><rect x="167.8" y="179.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.8" y="190.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.16%)</title><rect x="167.8" y="163.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="170.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (32 samples, 0.30%)</title><rect x="169.7" y="227.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.30%)</title><rect x="169.7" y="211.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (32 samples, 0.30%)</title><rect x="169.7" y="195.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.30%)</title><rect x="169.7" y="179.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="172.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (41 samples, 0.39%)</title><rect x="173.3" y="243.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.3" y="254.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.21%)</title><rect x="173.3" y="227.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="176.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 0.18%)</title><rect x="175.8" y="227.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.18%)</title><rect x="175.8" y="211.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="178.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicatePutOrDelete (2,660 samples, 25.35%)</title><rect x="177.9" y="259.0" width="299.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.9" y="270.0">ru/mail/polis/service/stasyanoi/server/C..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.mergePutDeleteResponses (7 samples, 0.07%)</title><rect x="177.9" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.05%)</title><rect x="177.9" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.9" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.05%)</title><rect x="177.9" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.9" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.05%)</title><rect x="177.9" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.9" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.05%)</title><rect x="177.9" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (5 samples, 0.05%)</title><rect x="177.9" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (5 samples, 0.05%)</title><rect x="177.9" y="147.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="180.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (2,653 samples, 25.29%)</title><rect x="178.7" y="243.0" width="298.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.7" y="254.0">ru/mail/polis/service/stasyanoi/server/C..</text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.09%)</title><rect x="178.7" y="227.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="181.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (17 samples, 0.16%)</title><rect x="179.7" y="227.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (17 samples, 0.16%)</title><rect x="179.7" y="211.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.7" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (5 samples, 0.05%)</title><rect x="179.7" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="182.7" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (5 samples, 0.05%)</title><rect x="179.7" y="179.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="182.7" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (12 samples, 0.11%)</title><rect x="180.3" y="195.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (12 samples, 0.11%)</title><rect x="180.3" y="179.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.3" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (5 samples, 0.05%)</title><rect x="180.3" y="163.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="183.3" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (7 samples, 0.07%)</title><rect x="180.8" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (7 samples, 0.07%)</title><rect x="180.8" y="147.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="183.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (2,627 samples, 25.04%)</title><rect x="181.6" y="227.0" width="295.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.6" y="238.0">ru/mail/polis/service/stasyanoi/server/C..</text>
</g>
<g>
<title>java.util.ArrayList (5 samples, 0.05%)</title><rect x="181.6" y="211.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="184.6" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (13 samples, 0.12%)</title><rect x="182.4" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.4" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (4 samples, 0.04%)</title><rect x="182.4" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="185.4" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.09%)</title><rect x="182.9" y="195.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.9" y="206.0"></text>
</g>
<g>
<title>java.lang.Object[] (6 samples, 0.06%)</title><rect x="182.9" y="179.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="185.9" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (3 samples, 0.03%)</title><rect x="183.5" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.5" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (3 samples, 0.03%)</title><rect x="183.5" y="163.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="186.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestToReplicas (2,603 samples, 24.81%)</title><rect x="184.3" y="211.0" width="292.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.3" y="222.0">ru/mail/polis/service/stasyanoi/Util.se..</text>
</g>
<g>
<title>java.lang.String[] (3 samples, 0.03%)</title><rect x="184.3" y="195.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="187.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.16%)</title><rect x="184.7" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (17 samples, 0.16%)</title><rect x="184.7" y="179.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1316061703.invoke (17 samples, 0.16%)</title><rect x="184.7" y="163.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="187.7" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.16%)</title><rect x="184.7" y="147.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.7" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.05%)</title><rect x="184.7" y="131.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.7" y="142.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.05%)</title><rect x="184.7" y="115.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.7" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (12 samples, 0.11%)</title><rect x="185.2" y="131.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (12 samples, 0.11%)</title><rect x="185.2" y="115.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.2" y="126.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.11%)</title><rect x="185.2" y="99.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="188.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (2,566 samples, 24.46%)</title><rect x="186.6" y="195.0" width="288.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.6" y="206.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="186.6" y="179.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="189.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.04%)</title><rect x="187.6" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.6" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.04%)</title><rect x="187.6" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.6" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.04%)</title><rect x="187.6" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.04%)</title><rect x="187.6" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="190.6" y="142.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="187.6" y="115.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="190.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (15 samples, 0.14%)</title><rect x="188.3" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.3" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 0.05%)</title><rect x="188.3" y="163.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="191.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.10%)</title><rect x="188.8" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.8" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.10%)</title><rect x="188.8" y="147.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="191.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,536 samples, 24.17%)</title><rect x="189.9" y="179.0" width="285.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.9" y="190.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,536 samples, 24.17%)</title><rect x="189.9" y="163.0" width="285.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.9" y="174.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (4 samples, 0.04%)</title><rect x="189.9" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="192.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,380 samples, 22.68%)</title><rect x="190.4" y="147.0" width="267.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.4" y="158.0">one/nio/http/HttpClient$ResponseRead..</text>
</g>
<g>
<title>byte[] (832 samples, 7.93%)</title><rect x="190.4" y="131.0" width="93.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="193.4" y="142.0">byte[]</text>
</g>
<g>
<title>byte[] (1,548 samples, 14.75%)</title><rect x="284.0" y="131.0" width="174.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="287.0" y="142.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (120 samples, 1.14%)</title><rect x="458.1" y="147.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.1" y="158.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="458.1" y="131.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="461.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.07%)</title><rect x="458.4" y="131.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.07%)</title><rect x="458.4" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.05%)</title><rect x="458.4" y="99.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="461.4" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 0.04%)</title><rect x="459.2" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="462.2" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (91 samples, 0.87%)</title><rect x="459.6" y="131.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (91 samples, 0.87%)</title><rect x="459.6" y="115.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (91 samples, 0.87%)</title><rect x="459.6" y="99.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.6" y="110.0"></text>
</g>
<g>
<title>char[] (64 samples, 0.61%)</title><rect x="459.6" y="83.0" width="7.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="462.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.10%)</title><rect x="466.8" y="83.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="469.8" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.15%)</title><rect x="468.1" y="83.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 0.15%)</title><rect x="468.1" y="67.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.1" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 0.15%)</title><rect x="468.1" y="51.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.1" y="62.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.15%)</title><rect x="468.1" y="35.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="471.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.05%)</title><rect x="469.9" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.05%)</title><rect x="469.9" y="115.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="472.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (10 samples, 0.10%)</title><rect x="470.4" y="131.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.10%)</title><rect x="470.4" y="115.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.10%)</title><rect x="470.4" y="99.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="470.4" y="83.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="473.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.06%)</title><rect x="470.9" y="83.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.9" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="470.9" y="67.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="473.9" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (24 samples, 0.23%)</title><rect x="471.6" y="147.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (24 samples, 0.23%)</title><rect x="471.6" y="131.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.6" y="142.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.23%)</title><rect x="471.6" y="115.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="474.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.04%)</title><rect x="474.3" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="474.3" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="474.3" y="115.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.3" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.04%)</title><rect x="474.7" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.7" y="158.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (4 samples, 0.04%)</title><rect x="474.7" y="131.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.7" y="142.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (4 samples, 0.04%)</title><rect x="474.7" y="115.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.7" y="126.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (4 samples, 0.04%)</title><rect x="474.7" y="99.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="477.7" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (10 samples, 0.10%)</title><rect x="475.2" y="195.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.10%)</title><rect x="475.2" y="179.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.10%)</title><rect x="475.2" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="478.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="475.2" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="478.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.06%)</title><rect x="475.6" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.6" y="158.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.06%)</title><rect x="475.6" y="131.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="478.6" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (7 samples, 0.07%)</title><rect x="476.3" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.07%)</title><rect x="476.3" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.07%)</title><rect x="476.3" y="163.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="476.3" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="479.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.03%)</title><rect x="476.7" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.7" y="158.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.03%)</title><rect x="476.7" y="131.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="479.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (932 samples, 8.88%)</title><rect x="477.1" y="259.0" width="104.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.1" y="270.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.sendRequestToRemote (932 samples, 8.88%)</title><rect x="477.1" y="243.0" width="104.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.1" y="254.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.10%)</title><rect x="477.1" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/954444077.invoke (10 samples, 0.10%)</title><rect x="477.1" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="480.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1804921111.invoke (10 samples, 0.10%)</title><rect x="477.1" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.10%)</title><rect x="477.1" y="179.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="480.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.08%)</title><rect x="477.3" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.08%)</title><rect x="477.3" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.3" y="158.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.08%)</title><rect x="477.3" y="131.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="480.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (912 samples, 8.69%)</title><rect x="478.2" y="227.0" width="102.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.2" y="238.0">one/nio/http..</text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="478.2" y="211.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="481.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (10 samples, 0.10%)</title><rect x="478.9" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.9" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 0.04%)</title><rect x="478.9" y="195.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="481.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.06%)</title><rect x="479.3" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (6 samples, 0.06%)</title><rect x="479.3" y="179.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="482.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (896 samples, 8.54%)</title><rect x="480.0" y="211.0" width="100.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.0" y="222.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (896 samples, 8.54%)</title><rect x="480.0" y="195.0" width="100.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.0" y="206.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (841 samples, 8.02%)</title><rect x="480.1" y="179.0" width="94.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.1" y="190.0">one/nio/htt..</text>
</g>
<g>
<title>byte[] (305 samples, 2.91%)</title><rect x="480.1" y="163.0" width="34.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="483.1" y="174.0">by..</text>
</g>
<g>
<title>byte[] (536 samples, 5.11%)</title><rect x="514.4" y="163.0" width="60.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="517.4" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (45 samples, 0.43%)</title><rect x="574.7" y="179.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.7" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.04%)</title><rect x="574.7" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.04%)</title><rect x="574.7" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (34 samples, 0.32%)</title><rect x="575.3" y="163.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.3" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.32%)</title><rect x="575.3" y="147.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.3" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.32%)</title><rect x="575.3" y="131.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.3" y="142.0"></text>
</g>
<g>
<title>char[] (23 samples, 0.22%)</title><rect x="575.3" y="115.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="578.3" y="126.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.06%)</title><rect x="577.8" y="115.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="580.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.05%)</title><rect x="578.5" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.05%)</title><rect x="578.5" y="99.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.05%)</title><rect x="578.5" y="83.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.5" y="94.0"></text>
</g>
<g>
<title>byte[] (5 samples, 0.05%)</title><rect x="578.5" y="67.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="581.5" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.04%)</title><rect x="579.1" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 0.04%)</title><rect x="579.1" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="582.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.07%)</title><rect x="579.8" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.8" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (7 samples, 0.07%)</title><rect x="579.8" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.8" y="174.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.07%)</title><rect x="579.8" y="147.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="582.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.05%)</title><rect x="580.8" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="580.8" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="580.8" y="195.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="583.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.04%)</title><rect x="580.9" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.9" y="190.0"></text>
</g>
<g>
<title>byte[] (4 samples, 0.04%)</title><rect x="580.9" y="163.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="583.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (5 samples, 0.05%)</title><rect x="581.3" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.05%)</title><rect x="581.3" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.05%)</title><rect x="581.3" y="195.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.04%)</title><rect x="581.3" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="584.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$86/1309188278.run (2,838 samples, 27.05%)</title><rect x="581.9" y="355.0" width="319.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.9" y="366.0">ru/mail/polis/service/stasyanoi/server/Cust..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$putReplication$7 (2,838 samples, 27.05%)</title><rect x="581.9" y="339.0" width="319.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.9" y="350.0">ru/mail/polis/service/stasyanoi/server/Cust..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.78%)</title><rect x="581.9" y="323.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.78%)</title><rect x="581.9" y="307.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$88/1750862512.get$Lambda (82 samples, 0.78%)</title><rect x="581.9" y="291.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.9" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$88 (82 samples, 0.78%)</title><rect x="581.9" y="275.0" width="9.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="584.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (2,756 samples, 26.27%)</title><rect x="591.1" y="323.0" width="310.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="594.1" y="334.0">ru/mail/polis/service/stasyanoi/server/Cus..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (289 samples, 2.75%)</title><rect x="591.1" y="307.0" width="32.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.1" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (203 samples, 1.93%)</title><rect x="591.1" y="291.0" width="22.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.1" y="302.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (130 samples, 1.24%)</title><rect x="591.1" y="275.0" width="14.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.1" y="286.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (130 samples, 1.24%)</title><rect x="591.1" y="259.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.1" y="270.0"></text>
</g>
<g>
<title>byte[] (130 samples, 1.24%)</title><rect x="591.1" y="243.0" width="14.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="594.1" y="254.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (73 samples, 0.70%)</title><rect x="605.7" y="275.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.7" y="286.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (73 samples, 0.70%)</title><rect x="605.7" y="259.0" width="8.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="608.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (86 samples, 0.82%)</title><rect x="613.9" y="291.0" width="9.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (86 samples, 0.82%)</title><rect x="613.9" y="275.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 0.82%)</title><rect x="613.9" y="259.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.32%)</title><rect x="613.9" y="243.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="616.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (52 samples, 0.50%)</title><rect x="617.8" y="243.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.8" y="254.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.50%)</title><rect x="617.8" y="227.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="620.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$88/1750862512.get (2,467 samples, 23.51%)</title><rect x="623.6" y="307.0" width="277.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.6" y="318.0">ru/mail/polis/service/stasyanoi/serve..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$putReplication$6 (2,467 samples, 23.51%)</title><rect x="623.6" y="291.0" width="277.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.6" y="302.0">ru/mail/polis/service/stasyanoi/serve..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (2,467 samples, 23.51%)</title><rect x="623.6" y="275.0" width="277.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.6" y="286.0">ru/mail/polis/service/stasyanoi/serve..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (1,777 samples, 16.94%)</title><rect x="623.6" y="259.0" width="199.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.6" y="270.0">ru/mail/polis/dao/stasyano..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,683 samples, 16.04%)</title><rect x="623.6" y="243.0" width="189.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.6" y="254.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1,683 samples, 16.04%)</title><rect x="623.6" y="227.0" width="189.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.6" y="238.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,683 samples, 16.04%)</title><rect x="623.6" y="211.0" width="189.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.6" y="222.0">ru/mail/polis/dao/stasyan..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,683 samples, 16.04%)</title><rect x="623.6" y="195.0" width="189.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.6" y="206.0">ru/mail/polis/dao/stasyan..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1,683 samples, 16.04%)</title><rect x="623.6" y="179.0" width="189.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.6" y="190.0">org/rocksdb/AbstractSlice..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,683 samples, 16.04%)</title><rect x="623.6" y="163.0" width="189.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.6" y="174.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,683 samples, 16.04%)</title><rect x="623.6" y="147.0" width="189.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.6" y="158.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (1,683 samples, 16.04%)</title><rect x="623.6" y="131.0" width="189.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="626.6" y="142.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (94 samples, 0.90%)</title><rect x="812.9" y="243.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.9" y="254.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.90%)</title><rect x="812.9" y="227.0" width="10.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="815.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (518 samples, 4.94%)</title><rect x="823.5" y="259.0" width="58.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.5" y="270.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (76 samples, 0.72%)</title><rect x="823.5" y="243.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (76 samples, 0.72%)</title><rect x="823.5" y="227.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (76 samples, 0.72%)</title><rect x="823.5" y="211.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.72%)</title><rect x="823.5" y="195.0" width="8.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="826.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (442 samples, 4.21%)</title><rect x="832.0" y="243.0" width="49.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.0" y="254.0">ru/ma..</text>
</g>
<g>
<title>byte[] (74 samples, 0.71%)</title><rect x="832.0" y="227.0" width="8.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="835.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (368 samples, 3.51%)</title><rect x="840.3" y="227.0" width="41.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.3" y="238.0">ru/..</text>
</g>
<g>
<title>byte[] (40 samples, 0.38%)</title><rect x="840.3" y="211.0" width="4.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="843.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.chars (134 samples, 1.28%)</title><rect x="844.8" y="211.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="847.8" y="222.0"></text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (58 samples, 0.55%)</title><rect x="844.8" y="195.0" width="6.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="847.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (76 samples, 0.72%)</title><rect x="851.4" y="195.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (76 samples, 0.72%)</title><rect x="851.4" y="179.0" width="8.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="854.4" y="190.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (46 samples, 0.44%)</title><rect x="859.9" y="211.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.9" y="222.0"></text>
</g>
<g>
<title>java/lang/Long.toString (46 samples, 0.44%)</title><rect x="859.9" y="195.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.9" y="206.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.44%)</title><rect x="859.9" y="179.0" width="5.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="862.9" y="190.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (148 samples, 1.41%)</title><rect x="865.1" y="211.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (148 samples, 1.41%)</title><rect x="865.1" y="195.0" width="16.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="868.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (148 samples, 1.41%)</title><rect x="865.1" y="179.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (148 samples, 1.41%)</title><rect x="865.1" y="163.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.1" y="174.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (148 samples, 1.41%)</title><rect x="865.1" y="147.0" width="16.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.1" y="158.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$IntFixedNodeBuilder (38 samples, 0.36%)</title><rect x="865.1" y="131.0" width="4.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="868.1" y="142.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (110 samples, 1.05%)</title><rect x="869.4" y="131.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="872.4" y="142.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (110 samples, 1.05%)</title><rect x="869.4" y="115.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.4" y="126.0"></text>
</g>
<g>
<title>int[] (110 samples, 1.05%)</title><rect x="869.4" y="99.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="872.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (93 samples, 0.89%)</title><rect x="881.7" y="259.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (24 samples, 0.23%)</title><rect x="881.7" y="243.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (24 samples, 0.23%)</title><rect x="881.7" y="227.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.7" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (24 samples, 0.23%)</title><rect x="881.7" y="211.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.23%)</title><rect x="881.7" y="195.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.7" y="206.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.23%)</title><rect x="881.7" y="179.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="884.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (69 samples, 0.66%)</title><rect x="884.4" y="243.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.66%)</title><rect x="884.4" y="227.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (69 samples, 0.66%)</title><rect x="884.4" y="211.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (69 samples, 0.66%)</title><rect x="884.4" y="195.0" width="7.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="887.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (79 samples, 0.75%)</title><rect x="892.2" y="259.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Response (35 samples, 0.33%)</title><rect x="892.2" y="243.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="895.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (44 samples, 0.42%)</title><rect x="896.1" y="243.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (44 samples, 0.42%)</title><rect x="896.1" y="227.0" width="5.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="899.1" y="238.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,568 samples, 24.48%)</title><rect x="901.2" y="403.0" width="288.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.2" y="414.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (166 samples, 1.58%)</title><rect x="901.2" y="387.0" width="18.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.2" y="398.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (166 samples, 1.58%)</title><rect x="901.2" y="371.0" width="18.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="904.2" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,402 samples, 22.89%)</title><rect x="919.9" y="387.0" width="270.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.9" y="398.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,402 samples, 22.89%)</title><rect x="919.9" y="371.0" width="270.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.9" y="382.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,402 samples, 22.89%)</title><rect x="919.9" y="355.0" width="270.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="922.9" y="366.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (501 samples, 4.78%)</title><rect x="919.9" y="339.0" width="56.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.9" y="350.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (501 samples, 4.78%)</title><rect x="919.9" y="323.0" width="56.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.9" y="334.0">one/ni..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (160 samples, 1.52%)</title><rect x="919.9" y="307.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (59 samples, 0.56%)</title><rect x="919.9" y="291.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.9" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (59 samples, 0.56%)</title><rect x="919.9" y="275.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.56%)</title><rect x="919.9" y="259.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.9" y="270.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.33%)</title><rect x="919.9" y="243.0" width="3.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="922.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.23%)</title><rect x="923.8" y="243.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.8" y="254.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.23%)</title><rect x="923.8" y="227.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="926.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (101 samples, 0.96%)</title><rect x="926.5" y="291.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="929.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.53%)</title><rect x="926.5" y="275.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.53%)</title><rect x="926.5" y="259.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$76/301499389.get$Lambda (56 samples, 0.53%)</title><rect x="926.5" y="243.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.5" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$76 (56 samples, 0.53%)</title><rect x="926.5" y="227.0" width="6.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="929.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (45 samples, 0.43%)</title><rect x="932.8" y="275.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (45 samples, 0.43%)</title><rect x="932.8" y="259.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (44 samples, 0.42%)</title><rect x="932.8" y="243.0" width="4.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="935.8" y="254.0"></text>
</g>
<g>
<title>RequestHandler5_putReplication.handleRequest (168 samples, 1.60%)</title><rect x="937.8" y="307.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="940.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (70 samples, 0.67%)</title><rect x="937.8" y="291.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.8" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (70 samples, 0.67%)</title><rect x="937.8" y="275.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.67%)</title><rect x="937.8" y="259.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.30%)</title><rect x="937.8" y="243.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="940.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (38 samples, 0.36%)</title><rect x="941.4" y="243.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.4" y="254.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.36%)</title><rect x="941.4" y="227.0" width="4.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="944.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putReplication (98 samples, 0.93%)</title><rect x="945.7" y="291.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.50%)</title><rect x="945.7" y="275.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.50%)</title><rect x="945.7" y="259.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$86/1309188278.get$Lambda (52 samples, 0.50%)</title><rect x="945.7" y="243.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.7" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$86 (52 samples, 0.50%)</title><rect x="945.7" y="227.0" width="5.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="948.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.44%)</title><rect x="951.6" y="275.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.44%)</title><rect x="951.6" y="259.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (45 samples, 0.43%)</title><rect x="951.6" y="243.0" width="5.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="954.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (173 samples, 1.65%)</title><rect x="956.7" y="307.0" width="19.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="959.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (173 samples, 1.65%)</title><rect x="956.7" y="291.0" width="19.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="959.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (173 samples, 1.65%)</title><rect x="956.7" y="275.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.81%)</title><rect x="956.7" y="259.0" width="9.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="959.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (88 samples, 0.84%)</title><rect x="966.3" y="259.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.3" y="270.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.84%)</title><rect x="966.3" y="243.0" width="9.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="969.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (708 samples, 6.75%)</title><rect x="976.2" y="339.0" width="79.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.2" y="350.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (109 samples, 1.04%)</title><rect x="976.2" y="323.0" width="12.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="979.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (228 samples, 2.17%)</title><rect x="988.5" y="323.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.5" y="334.0">o..</text>
</g>
<g>
<title>java.lang.String[] (228 samples, 2.17%)</title><rect x="988.5" y="307.0" width="25.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="991.5" y="318.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (371 samples, 3.54%)</title><rect x="1014.1" y="323.0" width="41.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1017.1" y="334.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (371 samples, 3.54%)</title><rect x="1014.1" y="307.0" width="41.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.1" y="318.0">one..</text>
</g>
<g>
<title>char[] (201 samples, 1.92%)</title><rect x="1014.1" y="291.0" width="22.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1017.1" y="302.0">c..</text>
</g>
<g>
<title>java.lang.String (53 samples, 0.51%)</title><rect x="1036.7" y="291.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1039.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (117 samples, 1.12%)</title><rect x="1042.7" y="291.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.7" y="302.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (117 samples, 1.12%)</title><rect x="1042.7" y="275.0" width="13.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1045.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (117 samples, 1.12%)</title><rect x="1042.7" y="259.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.7" y="270.0"></text>
</g>
<g>
<title>byte[] (117 samples, 1.12%)</title><rect x="1042.7" y="243.0" width="13.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1045.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (104 samples, 0.99%)</title><rect x="1055.8" y="339.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1058.8" y="350.0"></text>
</g>
<g>
<title>byte[] (104 samples, 0.99%)</title><rect x="1055.8" y="323.0" width="11.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1058.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (140 samples, 1.33%)</title><rect x="1067.5" y="339.0" width="15.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (140 samples, 1.33%)</title><rect x="1067.5" y="323.0" width="15.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (140 samples, 1.33%)</title><rect x="1067.5" y="307.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1070.5" y="318.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.67%)</title><rect x="1067.5" y="291.0" width="7.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1070.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (70 samples, 0.67%)</title><rect x="1075.4" y="291.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1078.4" y="302.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.67%)</title><rect x="1075.4" y="275.0" width="7.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1078.4" y="286.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (949 samples, 9.04%)</title><rect x="1083.3" y="339.0" width="106.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.3" y="350.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (949 samples, 9.04%)</title><rect x="1083.3" y="323.0" width="106.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1086.3" y="334.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (456 samples, 4.35%)</title><rect x="1083.3" y="307.0" width="51.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1086.3" y="318.0">char[]</text>
</g>
<g>
<title>java.lang.String (167 samples, 1.59%)</title><rect x="1134.6" y="307.0" width="18.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1137.6" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (326 samples, 3.11%)</title><rect x="1153.3" y="307.0" width="36.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.3" y="318.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (326 samples, 3.11%)</title><rect x="1153.3" y="291.0" width="36.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.3" y="302.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (326 samples, 3.11%)</title><rect x="1153.3" y="275.0" width="36.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1156.3" y="286.0">jav..</text>
</g>
<g>
<title>byte[] (326 samples, 3.11%)</title><rect x="1153.3" y="259.0" width="36.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1156.3" y="270.0">byt..</text>
</g>
</g>
</svg>
