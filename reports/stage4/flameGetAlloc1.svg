<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (3,727 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,384 samples, 63.97%)</title><rect x="10.0" y="339.0" width="754.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,384 samples, 63.97%)</title><rect x="10.0" y="323.0" width="754.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,384 samples, 63.97%)</title><rect x="10.0" y="307.0" width="754.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.80%)</title><rect x="10.0" y="291.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (30 samples, 0.80%)</title><rect x="10.0" y="275.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.80%)</title><rect x="10.0" y="259.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (30 samples, 0.80%)</title><rect x="10.0" y="243.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (30 samples, 0.80%)</title><rect x="10.0" y="227.0" width="9.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$69/1860770818.run (2,354 samples, 63.16%)</title><rect x="19.5" y="291.0" width="745.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.5" y="302.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$69/1860770818.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0 (2,354 samples, 63.16%)</title><rect x="19.5" y="275.0" width="745.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.5" y="286.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getInternal (2,354 samples, 63.16%)</title><rect x="19.5" y="259.0" width="745.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.5" y="270.0">ru/mail/polis/service/stasyanoi/CustomServer.getInternal</text>
</g>
<g>
<title>java/lang/String.getBytes (66 samples, 1.77%)</title><rect x="19.5" y="243.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (66 samples, 1.77%)</title><rect x="19.5" y="227.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (66 samples, 1.77%)</title><rect x="19.5" y="211.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 1.77%)</title><rect x="19.5" y="195.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.5" y="206.0"></text>
</g>
<g>
<title>byte[] (66 samples, 1.77%)</title><rect x="19.5" y="179.0" width="20.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="22.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (121 samples, 3.25%)</title><rect x="40.4" y="243.0" width="38.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.4" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (121 samples, 3.25%)</title><rect x="40.4" y="227.0" width="38.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.4" y="238.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (84 samples, 2.25%)</title><rect x="40.4" y="211.0" width="26.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.4" y="222.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (84 samples, 2.25%)</title><rect x="40.4" y="195.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.4" y="206.0">o..</text>
</g>
<g>
<title>byte[] (84 samples, 2.25%)</title><rect x="40.4" y="179.0" width="26.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="43.4" y="190.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 0.99%)</title><rect x="67.0" y="211.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.0" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (37 samples, 0.99%)</title><rect x="67.0" y="195.0" width="11.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="70.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (40 samples, 1.07%)</title><rect x="78.7" y="243.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 1.07%)</title><rect x="78.7" y="227.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 1.07%)</title><rect x="78.7" y="211.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 1.07%)</title><rect x="78.7" y="195.0" width="12.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="81.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getProxy (2,127 samples, 57.07%)</title><rect x="91.4" y="243.0" width="673.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.4" y="254.0">ru/mail/polis/service/stasyanoi/CustomServer.getProxy</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getResponseIfIdNotNull (1,082 samples, 29.03%)</title><rect x="91.4" y="227.0" width="342.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.4" y="238.0">ru/mail/polis/service/stasyanoi/CustomServer.g..</text>
</g>
<g>
<title>one/nio/http/Response.ok (92 samples, 2.47%)</title><rect x="91.4" y="211.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.4" y="222.0">on..</text>
</g>
<g>
<title>one.nio.http.Response (19 samples, 0.51%)</title><rect x="91.4" y="195.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="94.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (73 samples, 1.96%)</title><rect x="97.4" y="195.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.4" y="206.0">o..</text>
</g>
<g>
<title>byte[] (31 samples, 0.83%)</title><rect x="97.4" y="179.0" width="9.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="100.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.70%)</title><rect x="107.2" y="179.0" width="8.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="110.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.43%)</title><rect x="115.4" y="179.0" width="5.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="118.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (970 samples, 26.03%)</title><rect x="120.5" y="211.0" width="307.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.5" y="222.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (912 samples, 24.47%)</title><rect x="120.5" y="195.0" width="288.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.5" y="206.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (912 samples, 24.47%)</title><rect x="120.5" y="179.0" width="288.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.5" y="190.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>byte[] (25 samples, 0.67%)</title><rect x="120.5" y="163.0" width="7.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="123.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (887 samples, 23.80%)</title><rect x="128.4" y="163.0" width="280.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.4" y="174.0">ru/mail/polis/dao/stasyanoi/Comparator..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (887 samples, 23.80%)</title><rect x="128.4" y="147.0" width="280.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.4" y="158.0">ru/mail/polis/dao/stasyanoi/Comparator..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (887 samples, 23.80%)</title><rect x="128.4" y="131.0" width="280.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.4" y="142.0">org/rocksdb/AbstractSlice.data</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (887 samples, 23.80%)</title><rect x="128.4" y="115.0" width="280.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.4" y="126.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (887 samples, 23.80%)</title><rect x="128.4" y="99.0" width="280.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.4" y="110.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (887 samples, 23.80%)</title><rect x="128.4" y="83.0" width="280.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="131.4" y="94.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (38 samples, 1.02%)</title><rect x="409.2" y="195.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 1.02%)</title><rect x="409.2" y="179.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="412.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 1.02%)</title><rect x="409.2" y="163.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="412.2" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 1.02%)</title><rect x="409.2" y="147.0" width="12.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="412.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (20 samples, 0.54%)</title><rect x="421.3" y="195.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.3" y="206.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.54%)</title><rect x="421.3" y="179.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="424.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (20 samples, 0.54%)</title><rect x="427.6" y="211.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.6" y="222.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.54%)</title><rect x="427.6" y="195.0" width="6.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="430.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.routeRequest (1,045 samples, 28.04%)</title><rect x="433.9" y="227.0" width="330.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.9" y="238.0">ru/mail/polis/service/stasyanoi/CustomServer...</text>
</g>
<g>
<title>one.nio.http.HttpClient (4 samples, 0.11%)</title><rect x="433.9" y="211.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="436.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.&lt;init&gt; (9 samples, 0.24%)</title><rect x="435.2" y="211.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.2" y="222.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="435.2" y="195.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="438.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 0.13%)</title><rect x="435.8" y="195.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="438.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.05%)</title><rect x="437.4" y="195.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="440.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (988 samples, 26.51%)</title><rect x="438.1" y="211.0" width="312.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.1" y="222.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (988 samples, 26.51%)</title><rect x="438.1" y="195.0" width="312.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.1" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (3 samples, 0.08%)</title><rect x="438.1" y="179.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="441.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (921 samples, 24.71%)</title><rect x="439.0" y="179.0" width="291.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.0" y="190.0">one/nio/http/HttpClient$ResponseReader...</text>
</g>
<g>
<title>byte[] (324 samples, 8.69%)</title><rect x="439.0" y="163.0" width="102.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="442.0" y="174.0">byte[]</text>
</g>
<g>
<title>byte[] (597 samples, 16.02%)</title><rect x="541.6" y="163.0" width="189.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.6" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (41 samples, 1.10%)</title><rect x="730.6" y="179.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.6" y="190.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="730.6" y="163.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.08%)</title><rect x="731.2" y="163.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.2" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.08%)</title><rect x="731.2" y="147.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="734.2" y="158.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.08%)</title><rect x="731.2" y="131.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="734.2" y="142.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.05%)</title><rect x="732.2" y="163.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="735.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (30 samples, 0.80%)</title><rect x="732.8" y="163.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.8" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.80%)</title><rect x="732.8" y="147.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.8" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.80%)</title><rect x="732.8" y="131.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.8" y="142.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.54%)</title><rect x="732.8" y="115.0" width="6.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="735.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (4 samples, 0.11%)</title><rect x="739.1" y="115.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="742.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.16%)</title><rect x="740.4" y="115.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.16%)</title><rect x="740.4" y="99.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 0.16%)</title><rect x="740.4" y="83.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="743.4" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.16%)</title><rect x="740.4" y="67.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="743.4" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="742.3" y="163.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.03%)</title><rect x="742.3" y="147.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="745.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.08%)</title><rect x="742.6" y="163.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.6" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.08%)</title><rect x="742.6" y="147.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="745.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.08%)</title><rect x="742.6" y="131.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.03%)</title><rect x="742.6" y="115.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="745.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="742.9" y="115.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.9" y="126.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="742.9" y="99.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="745.9" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (14 samples, 0.38%)</title><rect x="743.6" y="179.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.6" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (14 samples, 0.38%)</title><rect x="743.6" y="163.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.6" y="174.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.38%)</title><rect x="743.6" y="147.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="746.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.05%)</title><rect x="748.0" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="748.0" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="748.0" y="147.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.0" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="748.0" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.0" y="142.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.05%)</title><rect x="748.0" y="115.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="751.0" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (7 samples, 0.19%)</title><rect x="748.6" y="179.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.6" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (7 samples, 0.19%)</title><rect x="748.6" y="163.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="751.6" y="174.0"></text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (7 samples, 0.19%)</title><rect x="748.6" y="147.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.6" y="158.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (7 samples, 0.19%)</title><rect x="748.6" y="131.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.6" y="142.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.toNativeAddr (7 samples, 0.19%)</title><rect x="748.6" y="115.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.6" y="126.0"></text>
</g>
<g>
<title>java/net/Inet4Address.getAddress (3 samples, 0.08%)</title><rect x="748.6" y="99.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.6" y="110.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.08%)</title><rect x="748.6" y="83.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="751.6" y="94.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.11%)</title><rect x="749.6" y="99.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.6" y="110.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.11%)</title><rect x="749.6" y="83.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="752.6" y="94.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.11%)</title><rect x="749.6" y="67.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.6" y="78.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.11%)</title><rect x="749.6" y="51.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.6" y="62.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (4 samples, 0.11%)</title><rect x="749.6" y="35.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="752.6" y="46.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (42 samples, 1.13%)</title><rect x="750.9" y="211.0" width="13.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.9" y="222.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (42 samples, 1.13%)</title><rect x="750.9" y="195.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.56%)</title><rect x="750.9" y="179.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.56%)</title><rect x="750.9" y="163.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.38%)</title><rect x="750.9" y="147.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="753.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.19%)</title><rect x="755.3" y="147.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.3" y="158.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.19%)</title><rect x="755.3" y="131.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="758.3" y="142.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (21 samples, 0.56%)</title><rect x="757.5" y="179.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.5" y="190.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (21 samples, 0.56%)</title><rect x="757.5" y="163.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.5" y="174.0"></text>
</g>
<g>
<title>java.util.regex.Matcher (6 samples, 0.16%)</title><rect x="757.5" y="147.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="760.5" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (15 samples, 0.40%)</title><rect x="759.4" y="147.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.4" y="158.0"></text>
</g>
<g>
<title>int[] (13 samples, 0.35%)</title><rect x="759.4" y="131.0" width="4.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="762.4" y="142.0"></text>
</g>
<g>
<title>java.util.regex.IntHashSet[] (2 samples, 0.05%)</title><rect x="763.5" y="131.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="766.5" y="142.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.close (2 samples, 0.05%)</title><rect x="764.2" y="211.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.2" y="222.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.invalidateAll (2 samples, 0.05%)</title><rect x="764.2" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.2" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.05%)</title><rect x="764.2" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.2" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.05%)</title><rect x="764.2" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.2" y="174.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.05%)</title><rect x="764.2" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.2" y="158.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (2 samples, 0.05%)</title><rect x="764.2" y="131.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="767.2" y="142.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (237 samples, 6.36%)</title><rect x="764.8" y="339.0" width="75.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.8" y="350.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (232 samples, 6.22%)</title><rect x="764.8" y="323.0" width="73.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.8" y="334.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (232 samples, 6.22%)</title><rect x="764.8" y="307.0" width="73.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.8" y="318.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpSession (4 samples, 0.11%)</title><rect x="764.8" y="291.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="767.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (228 samples, 6.12%)</title><rect x="766.1" y="291.0" width="72.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.1" y="302.0">one/nio/..</text>
</g>
<g>
<title>byte[] (143 samples, 3.84%)</title><rect x="766.1" y="275.0" width="45.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="769.1" y="286.0">byte[]</text>
</g>
<g>
<title>byte[] (85 samples, 2.28%)</title><rect x="811.3" y="275.0" width="26.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="814.3" y="286.0">b..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (5 samples, 0.13%)</title><rect x="838.2" y="323.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.2" y="334.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (5 samples, 0.13%)</title><rect x="838.2" y="307.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.2" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (5 samples, 0.13%)</title><rect x="838.2" y="291.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="841.2" y="302.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,106 samples, 29.68%)</title><rect x="839.8" y="339.0" width="350.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.8" y="350.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 1.18%)</title><rect x="839.8" y="323.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.8" y="334.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (44 samples, 1.18%)</title><rect x="839.8" y="307.0" width="14.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="842.8" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,062 samples, 28.49%)</title><rect x="853.8" y="323.0" width="336.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.8" y="334.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,062 samples, 28.49%)</title><rect x="853.8" y="307.0" width="336.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.8" y="318.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (611 samples, 16.39%)</title><rect x="853.8" y="291.0" width="193.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.8" y="302.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (177 samples, 4.75%)</title><rect x="853.8" y="275.0" width="56.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.8" y="286.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (177 samples, 4.75%)</title><rect x="853.8" y="259.0" width="56.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.8" y="270.0">one/ni..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (125 samples, 3.35%)</title><rect x="853.8" y="243.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.8" y="254.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (49 samples, 1.31%)</title><rect x="853.8" y="227.0" width="15.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 1.31%)</title><rect x="853.8" y="211.0" width="15.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 1.31%)</title><rect x="853.8" y="195.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.78%)</title><rect x="853.8" y="179.0" width="9.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="856.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.54%)</title><rect x="862.9" y="179.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.9" y="190.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.54%)</title><rect x="862.9" y="163.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="865.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (76 samples, 2.04%)</title><rect x="869.3" y="227.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="872.3" y="238.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 1.18%)</title><rect x="869.3" y="211.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 1.18%)</title><rect x="869.3" y="195.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="872.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$69/1860770818.get$Lambda (44 samples, 1.18%)</title><rect x="869.3" y="179.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.3" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.CustomServer$$Lambda$69 (44 samples, 1.18%)</title><rect x="869.3" y="163.0" width="13.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="872.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.86%)</title><rect x="883.2" y="211.0" width="10.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.86%)</title><rect x="883.2" y="195.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (32 samples, 0.86%)</title><rect x="883.2" y="179.0" width="10.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="886.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (52 samples, 1.40%)</title><rect x="893.3" y="243.0" width="16.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.3" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 1.40%)</title><rect x="893.3" y="227.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 1.40%)</title><rect x="893.3" y="211.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.67%)</title><rect x="893.3" y="195.0" width="8.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="896.3" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (27 samples, 0.72%)</title><rect x="901.3" y="195.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.3" y="206.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.72%)</title><rect x="901.3" y="179.0" width="8.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="904.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (327 samples, 8.77%)</title><rect x="909.8" y="275.0" width="103.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.8" y="286.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (38 samples, 1.02%)</title><rect x="909.8" y="259.0" width="12.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="912.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (163 samples, 4.37%)</title><rect x="921.8" y="259.0" width="51.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.8" y="270.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (163 samples, 4.37%)</title><rect x="921.8" y="243.0" width="51.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="924.8" y="254.0">java...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (126 samples, 3.38%)</title><rect x="973.4" y="259.0" width="39.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.4" y="270.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (126 samples, 3.38%)</title><rect x="973.4" y="243.0" width="39.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.4" y="254.0">one..</text>
</g>
<g>
<title>char[] (72 samples, 1.93%)</title><rect x="973.4" y="227.0" width="22.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="976.4" y="238.0">c..</text>
</g>
<g>
<title>java.lang.String (22 samples, 0.59%)</title><rect x="996.2" y="227.0" width="7.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="999.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.86%)</title><rect x="1003.2" y="227.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.86%)</title><rect x="1003.2" y="211.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 0.86%)</title><rect x="1003.2" y="195.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.2" y="206.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.86%)</title><rect x="1003.2" y="179.0" width="10.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1006.2" y="190.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 2.87%)</title><rect x="1013.3" y="275.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.3" y="286.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (107 samples, 2.87%)</title><rect x="1013.3" y="259.0" width="33.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.3" y="270.0">on..</text>
</g>
<g>
<title>char[] (47 samples, 1.26%)</title><rect x="1013.3" y="243.0" width="14.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1016.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.56%)</title><rect x="1028.2" y="243.0" width="6.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1031.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 1.05%)</title><rect x="1034.9" y="243.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 1.05%)</title><rect x="1034.9" y="227.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (39 samples, 1.05%)</title><rect x="1034.9" y="211.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.9" y="222.0"></text>
</g>
<g>
<title>byte[] (39 samples, 1.05%)</title><rect x="1034.9" y="195.0" width="12.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1037.9" y="206.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (451 samples, 12.10%)</title><rect x="1047.2" y="291.0" width="142.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.2" y="302.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (451 samples, 12.10%)</title><rect x="1047.2" y="275.0" width="142.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.2" y="286.0">one/nio/net/Native..</text>
</g>
<g>
<title>byte[] (7 samples, 0.19%)</title><rect x="1047.2" y="259.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1050.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.30%)</title><rect x="1049.4" y="259.0" width="3.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1052.4" y="270.0"></text>
</g>
<g>
<title>one.nio.net.SocketClosedException (22 samples, 0.59%)</title><rect x="1052.9" y="259.0" width="7.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1055.9" y="270.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (411 samples, 11.03%)</title><rect x="1059.9" y="259.0" width="130.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.9" y="270.0">one/nio/net/Sock..</text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (411 samples, 11.03%)</title><rect x="1059.9" y="243.0" width="130.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1062.9" y="254.0">java/net/SocketE..</text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (411 samples, 11.03%)</title><rect x="1059.9" y="227.0" width="130.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.9" y="238.0">java/io/IOExcept..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (411 samples, 11.03%)</title><rect x="1059.9" y="211.0" width="130.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.9" y="222.0">java/lang/Except..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (411 samples, 11.03%)</title><rect x="1059.9" y="195.0" width="130.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.9" y="206.0">java/lang/Throwa..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (411 samples, 11.03%)</title><rect x="1059.9" y="179.0" width="130.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.9" y="190.0">java/lang/Throwa..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (411 samples, 11.03%)</title><rect x="1059.9" y="163.0" width="130.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.9" y="174.0">java/lang/Throwa..</text>
</g>
<g>
<title>int[] (37 samples, 0.99%)</title><rect x="1059.9" y="147.0" width="11.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1062.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (88 samples, 2.36%)</title><rect x="1071.6" y="147.0" width="27.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1074.6" y="158.0">j..</text>
</g>
<g>
<title>long[] (221 samples, 5.93%)</title><rect x="1099.4" y="147.0" width="70.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1102.4" y="158.0">long[]</text>
</g>
<g>
<title>long[] (15 samples, 0.40%)</title><rect x="1169.4" y="147.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1172.4" y="158.0"></text>
</g>
<g>
<title>short[] (50 samples, 1.34%)</title><rect x="1174.2" y="147.0" width="15.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1177.2" y="158.0"></text>
</g>
</g>
</svg>
