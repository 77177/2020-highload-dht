<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (336 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.30%)</title><rect x="10.0" y="915.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.30%)</title><rect x="10.0" y="899.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.30%)</title><rect x="13.5" y="915.0" width="3.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="16.5" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.30%)</title><rect x="13.5" y="899.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.5" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="13.5" y="883.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>__new_sem_wait_slow.constprop.0 (1 samples, 0.30%)</title><rect x="17.0" y="915.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="20.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.run (258 samples, 76.79%)</title><rect x="20.5" y="915.0" width="906.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.5" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="20.5" y="899.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (257 samples, 76.49%)</title><rect x="24.0" y="899.0" width="902.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (256 samples, 76.19%)</title><rect x="27.6" y="883.0" width="899.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.6" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="41.6" y="867.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 1.79%)</title><rect x="45.1" y="867.0" width="21.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.1" y="878.0">j..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 1.79%)</title><rect x="45.1" y="851.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.1" y="862.0">j..</text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 1.19%)</title><rect x="45.1" y="835.0" width="14.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="48.1" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="45.1" y="819.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="48.1" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="48.6" y="819.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="51.6" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.30%)</title><rect x="52.1" y="819.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="55.1" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.30%)</title><rect x="55.7" y="819.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="58.7" y="830.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.30%)</title><rect x="59.2" y="835.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="62.2" y="846.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.30%)</title><rect x="62.7" y="835.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="65.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.89%)</title><rect x="66.2" y="867.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.60%)</title><rect x="69.7" y="851.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.60%)</title><rect x="69.7" y="835.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.60%)</title><rect x="69.7" y="819.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.30%)</title><rect x="69.7" y="803.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.7" y="814.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.30%)</title><rect x="73.2" y="803.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="76.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.afterExecute (1 samples, 0.30%)</title><rect x="76.7" y="867.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 8.33%)</title><rect x="80.2" y="867.0" width="98.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.2" y="878.0">java/util/co..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="97.8" y="851.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (22 samples, 6.55%)</title><rect x="101.3" y="851.0" width="77.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.3" y="862.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 5.36%)</title><rect x="101.3" y="835.0" width="63.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.3" y="846.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 5.36%)</title><rect x="101.3" y="819.0" width="63.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.3" y="830.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 5.36%)</title><rect x="101.3" y="803.0" width="63.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.3" y="814.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Park (5 samples, 1.49%)</title><rect x="111.8" y="787.0" width="17.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="114.8" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.30%)</title><rect x="111.8" y="771.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="114.8" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.60%)</title><rect x="115.4" y="771.0" width="7.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="118.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="115.4" y="755.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="115.4" y="739.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="118.9" y="739.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="121.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="118.9" y="723.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="121.9" y="734.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="118.9" y="707.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="118.9" y="691.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="121.9" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.60%)</title><rect x="122.4" y="771.0" width="7.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="125.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 2.68%)</title><rect x="129.4" y="787.0" width="31.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="132.4" y="798.0">[u..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.30%)</title><rect x="129.4" y="771.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="132.4" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.30%)</title><rect x="132.9" y="771.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="135.9" y="782.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 2.08%)</title><rect x="136.4" y="771.0" width="24.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="139.4" y="782.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.79%)</title><rect x="139.9" y="755.0" width="21.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.9" y="766.0">e..</text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.49%)</title><rect x="139.9" y="739.0" width="17.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.9" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.19%)</title><rect x="139.9" y="723.0" width="14.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.9" y="734.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.19%)</title><rect x="139.9" y="707.0" width="14.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.9" y="718.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 1.19%)</title><rect x="139.9" y="691.0" width="14.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="142.9" y="702.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.89%)</title><rect x="139.9" y="675.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="142.9" y="686.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.89%)</title><rect x="139.9" y="659.0" width="10.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="142.9" y="670.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.89%)</title><rect x="139.9" y="643.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.9" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="143.5" y="627.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.5" y="638.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.30%)</title><rect x="150.5" y="675.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="153.5" y="686.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.30%)</title><rect x="154.0" y="723.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.0" y="734.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.30%)</title><rect x="154.0" y="707.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.0" y="718.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.30%)</title><rect x="154.0" y="691.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="157.0" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.30%)</title><rect x="157.5" y="739.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="160.5" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.30%)</title><rect x="161.0" y="787.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="164.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.30%)</title><rect x="164.5" y="835.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.30%)</title><rect x="164.5" y="819.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.30%)</title><rect x="164.5" y="803.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.30%)</title><rect x="164.5" y="787.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.89%)</title><rect x="168.0" y="835.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.89%)</title><rect x="168.0" y="819.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.89%)</title><rect x="168.0" y="803.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.89%)</title><rect x="168.0" y="787.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.89%)</title><rect x="168.0" y="771.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.0" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.30%)</title><rect x="168.0" y="755.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="171.0" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="168.0" y="739.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="171.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.60%)</title><rect x="171.5" y="755.0" width="7.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="174.5" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="171.5" y="739.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="174.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="171.5" y="723.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="171.5" y="707.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="174.5" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="171.5" y="691.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="174.5" y="702.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.60%)</title><rect x="171.5" y="675.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.5" y="686.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.60%)</title><rect x="171.5" y="659.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.60%)</title><rect x="171.5" y="643.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="174.5" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="171.5" y="627.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="174.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="178.6" y="867.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$78/854819606.run (212 samples, 63.10%)</title><rect x="182.1" y="867.0" width="744.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.1" y="878.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$78/854819606.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$1 (212 samples, 63.10%)</title><rect x="182.1" y="851.0" width="744.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.1" y="862.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$1</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getInternal (212 samples, 63.10%)</title><rect x="182.1" y="835.0" width="744.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.1" y="846.0">ru/mail/polis/service/stasyanoi/CustomServer.getInternal</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (60 samples, 17.86%)</title><rect x="182.1" y="819.0" width="210.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.1" y="830.0">one/nio/http/HttpSession.sen..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (59 samples, 17.56%)</title><rect x="182.1" y="803.0" width="207.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.1" y="814.0">one/nio/http/HttpSession.wr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.60%)</title><rect x="182.1" y="787.0" width="7.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.30%)</title><rect x="185.6" y="771.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="188.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.30%)</title><rect x="185.6" y="755.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.30%)</title><rect x="185.6" y="739.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.30%)</title><rect x="185.6" y="723.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.30%)</title><rect x="185.6" y="707.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="188.6" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.30%)</title><rect x="185.6" y="691.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="188.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 16.96%)</title><rect x="189.1" y="787.0" width="200.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.1" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.30%)</title><rect x="189.1" y="771.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="192.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 16.67%)</title><rect x="192.6" y="771.0" width="196.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.6" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.30%)</title><rect x="196.1" y="755.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (54 samples, 16.07%)</title><rect x="199.6" y="755.0" width="189.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.6" y="766.0">one/nio/net/Session$Array..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (53 samples, 15.77%)</title><rect x="203.2" y="739.0" width="186.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.2" y="750.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>__libc_send (51 samples, 15.18%)</title><rect x="206.7" y="723.0" width="179.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.7" y="734.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 14.88%)</title><rect x="210.2" y="707.0" width="175.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="213.2" y="718.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.30%)</title><rect x="210.2" y="691.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="213.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 14.58%)</title><rect x="213.7" y="691.0" width="172.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="216.7" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.30%)</title><rect x="217.2" y="675.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_sendto (46 samples, 13.69%)</title><rect x="220.7" y="675.0" width="161.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.7" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (45 samples, 13.39%)</title><rect x="220.7" y="659.0" width="158.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="223.7" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (45 samples, 13.39%)</title><rect x="220.7" y="643.0" width="158.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="223.7" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (42 samples, 12.50%)</title><rect x="220.7" y="627.0" width="147.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="223.7" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 12.50%)</title><rect x="220.7" y="611.0" width="147.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="223.7" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (42 samples, 12.50%)</title><rect x="220.7" y="595.0" width="147.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="223.7" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>tcp_push (39 samples, 11.61%)</title><rect x="220.7" y="579.0" width="137.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="223.7" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (39 samples, 11.61%)</title><rect x="220.7" y="563.0" width="137.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="223.7" y="574.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (39 samples, 11.61%)</title><rect x="220.7" y="547.0" width="137.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.7" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 10.71%)</title><rect x="227.7" y="531.0" width="126.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="230.7" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (35 samples, 10.42%)</title><rect x="227.7" y="515.0" width="123.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="230.7" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (35 samples, 10.42%)</title><rect x="227.7" y="499.0" width="123.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="230.7" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (35 samples, 10.42%)</title><rect x="227.7" y="483.0" width="123.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="230.7" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (8 samples, 2.38%)</title><rect x="227.7" y="467.0" width="28.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="230.7" y="478.0">__..</text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.60%)</title><rect x="227.7" y="451.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="230.7" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 1.79%)</title><rect x="234.8" y="451.0" width="21.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.8" y="462.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.89%)</title><rect x="238.3" y="435.0" width="10.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="241.3" y="446.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.89%)</title><rect x="238.3" y="419.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.3" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.60%)</title><rect x="248.8" y="435.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="251.8" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.60%)</title><rect x="248.8" y="419.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.8" y="430.0"></text>
</g>
<g>
<title>ip_output (27 samples, 8.04%)</title><rect x="255.8" y="467.0" width="94.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="258.8" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (27 samples, 8.04%)</title><rect x="255.8" y="451.0" width="94.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="258.8" y="462.0">ip_finish_o..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.30%)</title><rect x="255.8" y="435.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="258.8" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (26 samples, 7.74%)</title><rect x="259.3" y="435.0" width="91.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.3" y="446.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 7.74%)</title><rect x="259.3" y="419.0" width="91.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="262.3" y="430.0">ip_finish_o..</text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 7.14%)</title><rect x="262.9" y="403.0" width="84.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="265.9" y="414.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.20 (24 samples, 7.14%)</title><rect x="262.9" y="387.0" width="84.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="265.9" y="398.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 7.14%)</title><rect x="262.9" y="371.0" width="84.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="265.9" y="382.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 7.14%)</title><rect x="262.9" y="355.0" width="84.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="265.9" y="366.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (24 samples, 7.14%)</title><rect x="262.9" y="339.0" width="84.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="265.9" y="350.0">net_rx_act..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.30%)</title><rect x="266.4" y="323.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.4" y="334.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 6.55%)</title><rect x="269.9" y="323.0" width="77.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="272.9" y="334.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 6.55%)</title><rect x="269.9" y="307.0" width="77.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.9" y="318.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 6.55%)</title><rect x="269.9" y="291.0" width="77.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.9" y="302.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.30%)</title><rect x="269.9" y="275.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="272.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 6.25%)</title><rect x="273.4" y="275.0" width="73.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.4" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 6.25%)</title><rect x="273.4" y="259.0" width="73.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="276.4" y="270.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (21 samples, 6.25%)</title><rect x="273.4" y="243.0" width="73.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="276.4" y="254.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 5.95%)</title><rect x="273.4" y="227.0" width="70.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="276.4" y="238.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 5.95%)</title><rect x="273.4" y="211.0" width="70.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.4" y="222.0">ip_proto..</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.60%)</title><rect x="273.4" y="195.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.30%)</title><rect x="280.4" y="195.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="283.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 5.06%)</title><rect x="283.9" y="195.0" width="59.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.9" y="206.0">tcp_v4..</text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 4.17%)</title><rect x="291.0" y="179.0" width="49.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="294.0" y="190.0">tcp_v..</text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 4.17%)</title><rect x="291.0" y="163.0" width="49.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.0" y="174.0">tcp_r..</text>
</g>
<g>
<title>tcp_ack (5 samples, 1.49%)</title><rect x="291.0" y="147.0" width="17.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.0" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.30%)</title><rect x="291.0" y="131.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="294.0" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.30%)</title><rect x="294.5" y="131.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.60%)</title><rect x="298.0" y="131.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="301.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.60%)</title><rect x="298.0" y="115.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.0" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.60%)</title><rect x="298.0" y="99.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.0" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.60%)</title><rect x="298.0" y="83.0" width="7.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="301.0" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.60%)</title><rect x="298.0" y="67.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="301.0" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.60%)</title><rect x="298.0" y="51.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.30%)</title><rect x="301.5" y="35.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="304.5" y="46.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.30%)</title><rect x="305.0" y="131.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (9 samples, 2.68%)</title><rect x="308.5" y="147.0" width="31.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.5" y="158.0">tc..</text>
</g>
<g>
<title>sock_def_readable (9 samples, 2.68%)</title><rect x="308.5" y="131.0" width="31.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="311.5" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 2.68%)</title><rect x="308.5" y="115.0" width="31.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.5" y="126.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 2.68%)</title><rect x="308.5" y="99.0" width="31.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="311.5" y="110.0">__..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 2.68%)</title><rect x="308.5" y="83.0" width="31.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="311.5" y="94.0">__..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.30%)</title><rect x="340.1" y="179.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="343.1" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.30%)</title><rect x="343.6" y="227.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="346.6" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.30%)</title><rect x="343.6" y="211.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.6" y="222.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.30%)</title><rect x="343.6" y="195.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.6" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.30%)</title><rect x="347.1" y="403.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="350.1" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.30%)</title><rect x="347.1" y="387.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.1" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.30%)</title><rect x="347.1" y="371.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="350.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.30%)</title><rect x="347.1" y="355.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.1" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.30%)</title><rect x="347.1" y="339.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="350.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.30%)</title><rect x="347.1" y="323.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.30%)</title><rect x="347.1" y="307.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="350.1" y="318.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.30%)</title><rect x="350.7" y="515.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.7" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.30%)</title><rect x="354.2" y="531.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="357.2" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.89%)</title><rect x="357.7" y="579.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.7" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.60%)</title><rect x="357.7" y="563.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.30%)</title><rect x="364.7" y="563.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.7" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.89%)</title><rect x="368.2" y="627.0" width="10.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="371.2" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.89%)</title><rect x="368.2" y="611.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.2" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.89%)</title><rect x="368.2" y="595.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.2" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.89%)</title><rect x="368.2" y="579.0" width="10.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.2" y="590.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.60%)</title><rect x="371.7" y="563.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="374.7" y="574.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.30%)</title><rect x="375.2" y="547.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="378.2" y="558.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.30%)</title><rect x="378.7" y="659.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.7" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.30%)</title><rect x="382.3" y="675.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.3" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.30%)</title><rect x="382.3" y="659.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="385.3" y="670.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.30%)</title><rect x="382.3" y="643.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.3" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.30%)</title><rect x="385.8" y="723.0" width="3.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="388.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.30%)</title><rect x="389.3" y="803.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.30%)</title><rect x="392.8" y="819.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.30%)</title><rect x="392.8" y="803.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.30%)</title><rect x="392.8" y="787.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="392.8" y="771.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="392.8" y="755.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.30%)</title><rect x="392.8" y="739.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="395.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getThisOrProxy (151 samples, 44.94%)</title><rect x="396.3" y="819.0" width="530.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.3" y="830.0">ru/mail/polis/service/stasyanoi/CustomServer.getThisOrProxy</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getResponseIfIdNotNull (103 samples, 30.65%)</title><rect x="396.3" y="803.0" width="361.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.3" y="814.0">ru/mail/polis/service/stasyanoi/CustomServer.getR..</text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.30%)</title><rect x="396.3" y="787.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.30%)</title><rect x="396.3" y="771.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (102 samples, 30.36%)</title><rect x="399.8" y="787.0" width="358.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.8" y="798.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (99 samples, 29.46%)</title><rect x="399.8" y="771.0" width="347.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.8" y="782.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (99 samples, 29.46%)</title><rect x="399.8" y="755.0" width="347.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.8" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (70 samples, 20.83%)</title><rect x="399.8" y="739.0" width="245.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="402.8" y="750.0">Java_org_rocksdb_RocksDB_get__J_3..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.30%)</title><rect x="399.8" y="723.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="402.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.30%)</title><rect x="403.3" y="723.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="406.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (68 samples, 20.24%)</title><rect x="406.8" y="723.0" width="238.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="409.8" y="734.0">rocksdb_get_helper(JNIEnv_*, roc..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="406.8" y="707.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="409.8" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.30%)</title><rect x="410.4" y="707.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="413.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (65 samples, 19.35%)</title><rect x="413.9" y="707.0" width="228.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="416.9" y="718.0">rocksdb::DB::Get(rocksdb::Read..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (65 samples, 19.35%)</title><rect x="413.9" y="691.0" width="228.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="416.9" y="702.0">rocksdb::DB::Get(rocksdb::Read..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (65 samples, 19.35%)</title><rect x="413.9" y="675.0" width="228.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="416.9" y="686.0">rocksdb::DBImpl::Get(rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (61 samples, 18.15%)</title><rect x="417.4" y="659.0" width="214.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="420.4" y="670.0">rocksdb::DBImpl::GetImpl(roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="420.9" y="643.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="423.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="424.4" y="643.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="427.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.30%)</title><rect x="424.4" y="627.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="427.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.30%)</title><rect x="424.4" y="611.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="427.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.30%)</title><rect x="427.9" y="643.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="430.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.30%)</title><rect x="427.9" y="627.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="430.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (56 samples, 16.67%)</title><rect x="431.4" y="643.0" width="196.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="434.4" y="654.0">rocksdb::MemTable::Get(roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni14128013298884155605.so (55 samples, 16.37%)</title><rect x="434.9" y="627.0" width="193.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="437.9" y="638.0">/tmp/librocksdbjni1412801..</text>
</g>
<g>
<title>/tmp/librocksdbjni14128013298884155605.so (2 samples, 0.60%)</title><rect x="438.5" y="611.0" width="7.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="441.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.60%)</title><rect x="438.5" y="595.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="441.5" y="606.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.30%)</title><rect x="438.5" y="579.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="441.5" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="442.0" y="579.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="445.0" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="442.0" y="563.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="445.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (52 samples, 15.48%)</title><rect x="445.5" y="611.0" width="182.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="448.5" y="622.0">rocksdb::InlineSkipList&lt;..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (52 samples, 15.48%)</title><rect x="445.5" y="595.0" width="182.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="448.5" y="606.0">rocksdb::MemTable::KeyCo..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (49 samples, 14.58%)</title><rect x="452.5" y="579.0" width="172.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="455.5" y="590.0">rocksdb::BaseComparato..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (20 samples, 5.95%)</title><rect x="456.0" y="563.0" width="70.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="459.0" y="574.0">JNIEnv_:..</text>
</g>
<g>
<title>jni_CallIntMethodV (20 samples, 5.95%)</title><rect x="456.0" y="547.0" width="70.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="459.0" y="558.0">jni_Call..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 1.19%)</title><rect x="459.5" y="531.0" width="14.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="462.5" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (14 samples, 4.17%)</title><rect x="473.6" y="531.0" width="49.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="476.6" y="542.0">jni_i..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (4 samples, 1.19%)</title><rect x="484.1" y="515.0" width="14.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="487.1" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 1.49%)</title><rect x="498.2" y="515.0" width="17.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="501.2" y="526.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.60%)</title><rect x="498.2" y="499.0" width="7.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="501.2" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.60%)</title><rect x="505.2" y="499.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="508.2" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.30%)</title><rect x="508.7" y="483.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="511.7" y="494.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="512.2" y="499.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="515.2" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.60%)</title><rect x="515.7" y="515.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="518.7" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="522.7" y="531.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="525.7" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (18 samples, 5.36%)</title><rect x="526.2" y="563.0" width="63.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="529.2" y="574.0">JNIEnv_..</text>
</g>
<g>
<title>jni_CallVoidMethodV (17 samples, 5.06%)</title><rect x="529.8" y="547.0" width="59.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="532.8" y="558.0">jni_Ca..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="529.8" y="531.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="532.8" y="542.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.30%)</title><rect x="533.3" y="531.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="536.3" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (15 samples, 4.46%)</title><rect x="536.8" y="531.0" width="52.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="539.8" y="542.0">jni_i..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.30%)</title><rect x="543.8" y="515.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="546.8" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (3 samples, 0.89%)</title><rect x="547.3" y="515.0" width="10.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="550.3" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 1.79%)</title><rect x="557.9" y="515.0" width="21.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="560.9" y="526.0">J..</text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.30%)</title><rect x="564.9" y="499.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="567.9" y="510.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.30%)</title><rect x="568.4" y="499.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="571.4" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.30%)</title><rect x="571.9" y="499.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="574.9" y="510.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.30%)</title><rect x="575.4" y="499.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="578.4" y="510.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="578.9" y="515.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="581.9" y="526.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.30%)</title><rect x="582.4" y="515.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.4" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="586.0" y="515.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="589.0" y="526.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.30%)</title><rect x="589.5" y="563.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="592.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="589.5" y="547.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="589.5" y="531.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="589.5" y="515.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="592.5" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="589.5" y="499.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="592.5" y="510.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="589.5" y="483.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.5" y="494.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="589.5" y="467.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="592.5" y="478.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="589.5" y="451.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.5" y="462.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.30%)</title><rect x="589.5" y="435.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.5" y="446.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="589.5" y="419.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="592.5" y="430.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 1.49%)</title><rect x="593.0" y="563.0" width="17.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="596.0" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.49%)</title><rect x="593.0" y="547.0" width="17.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.0" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.49%)</title><rect x="593.0" y="531.0" width="17.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.0" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.19%)</title><rect x="596.5" y="515.0" width="14.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="599.5" y="526.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.19%)</title><rect x="596.5" y="499.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.5" y="510.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.19%)</title><rect x="596.5" y="483.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="599.5" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.30%)</title><rect x="596.5" y="467.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="599.5" y="478.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.89%)</title><rect x="600.0" y="467.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="603.0" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.89%)</title><rect x="600.0" y="451.0" width="10.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="603.0" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.89%)</title><rect x="600.0" y="435.0" width="10.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.0" y="446.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.89%)</title><rect x="610.5" y="563.0" width="10.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="613.5" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.60%)</title><rect x="614.0" y="547.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="617.0" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="621.1" y="563.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="624.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const [clone .plt] (1 samples, 0.30%)</title><rect x="624.6" y="579.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="627.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.30%)</title><rect x="628.1" y="643.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="631.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long, rocksdb::Slice const*) (1 samples, 0.30%)</title><rect x="631.6" y="659.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="634.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.60%)</title><rect x="635.1" y="659.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="638.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.30%)</title><rect x="642.1" y="707.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="645.1" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.30%)</title><rect x="642.1" y="691.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="645.1" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="642.1" y="675.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="645.1" y="686.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.89%)</title><rect x="645.7" y="739.0" width="10.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="648.7" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.89%)</title><rect x="656.2" y="739.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.30%)</title><rect x="666.7" y="739.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="669.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (22 samples, 6.55%)</title><rect x="670.2" y="739.0" width="77.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.2" y="750.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (22 samples, 6.55%)</title><rect x="670.2" y="723.0" width="77.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.2" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (21 samples, 6.25%)</title><rect x="673.8" y="707.0" width="73.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.8" y="718.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (21 samples, 6.25%)</title><rect x="673.8" y="691.0" width="73.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.8" y="702.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (19 samples, 5.65%)</title><rect x="680.8" y="675.0" width="66.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.8" y="686.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (16 samples, 4.76%)</title><rect x="691.3" y="659.0" width="56.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="694.3" y="670.0">Java_o..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.30%)</title><rect x="691.3" y="643.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="694.3" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.60%)</title><rect x="694.8" y="643.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="697.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.60%)</title><rect x="694.8" y="627.0" width="7.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="697.8" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 2.98%)</title><rect x="701.8" y="643.0" width="35.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="704.8" y="654.0">jni..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.60%)</title><rect x="701.8" y="627.0" width="7.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="704.8" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="708.9" y="627.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="711.9" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.89%)</title><rect x="712.4" y="627.0" width="10.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="715.4" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 1.19%)</title><rect x="722.9" y="627.0" width="14.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="725.9" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="729.9" y="611.0" width="7.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="729.9" y="595.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="732.9" y="606.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.30%)</title><rect x="729.9" y="579.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="732.9" y="590.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.30%)</title><rect x="733.5" y="595.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="736.5" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.89%)</title><rect x="737.0" y="643.0" width="10.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="740.0" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="740.5" y="627.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="743.5" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="744.0" y="627.0" width="3.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="747.0" y="638.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="744.0" y="611.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="747.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.30%)</title><rect x="747.5" y="771.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.30%)</title><rect x="747.5" y="755.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.30%)</title><rect x="747.5" y="739.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="747.5" y="723.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="747.5" y="707.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="747.5" y="691.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (2 samples, 0.60%)</title><rect x="751.0" y="771.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.60%)</title><rect x="751.0" y="755.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.60%)</title><rect x="751.0" y="739.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.30%)</title><rect x="754.5" y="723.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.30%)</title><rect x="754.5" y="707.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.30%)</title><rect x="754.5" y="691.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.routeRequest (48 samples, 14.29%)</title><rect x="758.0" y="803.0" width="168.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.0" y="814.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (47 samples, 13.99%)</title><rect x="758.0" y="787.0" width="165.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.0" y="798.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (47 samples, 13.99%)</title><rect x="758.0" y="771.0" width="165.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.0" y="782.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.30%)</title><rect x="758.0" y="755.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="761.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (14 samples, 4.17%)</title><rect x="761.5" y="755.0" width="49.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.5" y="766.0">one/n..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.30%)</title><rect x="761.5" y="739.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="764.5" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="761.5" y="723.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="764.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="761.5" y="707.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="764.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="761.5" y="691.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="764.5" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.30%)</title><rect x="761.5" y="675.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="764.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 3.87%)</title><rect x="765.1" y="739.0" width="45.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="768.1" y="750.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.30%)</title><rect x="768.6" y="723.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="771.6" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="768.6" y="707.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="771.6" y="718.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="768.6" y="691.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="771.6" y="702.0"></text>
</g>
<g>
<title>__GI___recv (11 samples, 3.27%)</title><rect x="772.1" y="723.0" width="38.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="775.1" y="734.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 2.98%)</title><rect x="775.6" y="707.0" width="35.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.6" y="718.0">ent..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.30%)</title><rect x="775.6" y="691.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="778.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.68%)</title><rect x="779.1" y="691.0" width="31.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="782.1" y="702.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 2.68%)</title><rect x="779.1" y="675.0" width="31.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="782.1" y="686.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 2.68%)</title><rect x="779.1" y="659.0" width="31.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="782.1" y="670.0">__..</text>
</g>
<g>
<title>sock_recvmsg (9 samples, 2.68%)</title><rect x="779.1" y="643.0" width="31.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.1" y="654.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (9 samples, 2.68%)</title><rect x="779.1" y="627.0" width="31.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="782.1" y="638.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 2.68%)</title><rect x="779.1" y="611.0" width="31.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="782.1" y="622.0">tc..</text>
</g>
<g>
<title>sk_wait_data (3 samples, 0.89%)</title><rect x="782.6" y="595.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="785.6" y="606.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.30%)</title><rect x="782.6" y="579.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="785.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.30%)</title><rect x="782.6" y="563.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="785.6" y="574.0"></text>
</g>
<g>
<title>wait_woken (2 samples, 0.60%)</title><rect x="786.1" y="579.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="789.1" y="590.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.60%)</title><rect x="786.1" y="563.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="789.1" y="574.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="786.1" y="547.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.1" y="558.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.60%)</title><rect x="786.1" y="531.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="789.1" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="786.1" y="515.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.1" y="526.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.30%)</title><rect x="793.2" y="595.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="796.2" y="606.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.30%)</title><rect x="793.2" y="579.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="796.2" y="590.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.30%)</title><rect x="793.2" y="563.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.2" y="574.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.30%)</title><rect x="793.2" y="547.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.2" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 1.19%)</title><rect x="796.7" y="595.0" width="14.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="799.7" y="606.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 1.19%)</title><rect x="796.7" y="579.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="799.7" y="590.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (4 samples, 1.19%)</title><rect x="796.7" y="563.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="799.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.30%)</title><rect x="796.7" y="547.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.30%)</title><rect x="796.7" y="531.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="799.7" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.89%)</title><rect x="800.2" y="547.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="803.2" y="558.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.89%)</title><rect x="800.2" y="531.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="803.2" y="542.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.89%)</title><rect x="800.2" y="515.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="803.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.89%)</title><rect x="800.2" y="499.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.2" y="510.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.30%)</title><rect x="800.2" y="483.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.2" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.30%)</title><rect x="800.2" y="467.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="803.2" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.30%)</title><rect x="800.2" y="451.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="803.2" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.30%)</title><rect x="800.2" y="435.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="803.2" y="446.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.60%)</title><rect x="803.7" y="483.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="806.7" y="494.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.60%)</title><rect x="803.7" y="467.0" width="7.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="806.7" y="478.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.60%)</title><rect x="803.7" y="451.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="806.7" y="462.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.60%)</title><rect x="803.7" y="435.0" width="7.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="806.7" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.60%)</title><rect x="803.7" y="419.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="806.7" y="430.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.60%)</title><rect x="803.7" y="403.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.7" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.60%)</title><rect x="803.7" y="387.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="806.7" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.60%)</title><rect x="803.7" y="371.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.7" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.60%)</title><rect x="803.7" y="355.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="806.7" y="366.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.60%)</title><rect x="803.7" y="339.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="806.7" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.60%)</title><rect x="803.7" y="323.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="806.7" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.60%)</title><rect x="803.7" y="307.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="806.7" y="318.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.60%)</title><rect x="803.7" y="291.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="806.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.30%)</title><rect x="803.7" y="275.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.7" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.30%)</title><rect x="803.7" y="259.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="806.7" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.30%)</title><rect x="803.7" y="243.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="806.7" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.30%)</title><rect x="803.7" y="227.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="806.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.30%)</title><rect x="803.7" y="211.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="806.7" y="222.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.30%)</title><rect x="803.7" y="195.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="806.7" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.30%)</title><rect x="807.2" y="275.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="810.2" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.30%)</title><rect x="807.2" y="259.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="810.2" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.30%)</title><rect x="807.2" y="243.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 1.79%)</title><rect x="810.7" y="755.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.7" y="766.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.30%)</title><rect x="810.7" y="739.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.60%)</title><rect x="814.2" y="739.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.60%)</title><rect x="814.2" y="723.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.60%)</title><rect x="814.2" y="707.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.89%)</title><rect x="821.2" y="739.0" width="10.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.30%)</title><rect x="821.2" y="723.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.30%)</title><rect x="821.2" y="707.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.60%)</title><rect x="824.8" y="723.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.89%)</title><rect x="831.8" y="755.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.60%)</title><rect x="835.3" y="739.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="838.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.30%)</title><rect x="835.3" y="723.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.30%)</title><rect x="835.3" y="707.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.30%)</title><rect x="835.3" y="691.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.30%)</title><rect x="838.8" y="723.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.30%)</title><rect x="838.8" y="707.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.30%)</title><rect x="838.8" y="691.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.30%)</title><rect x="838.8" y="675.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.30%)</title><rect x="838.8" y="659.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.30%)</title><rect x="838.8" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.60%)</title><rect x="842.3" y="755.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.60%)</title><rect x="842.3" y="739.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.60%)</title><rect x="842.3" y="723.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.30%)</title><rect x="849.3" y="755.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.3" y="766.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.30%)</title><rect x="849.3" y="739.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="852.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="849.3" y="723.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="849.3" y="707.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.30%)</title><rect x="849.3" y="691.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="852.3" y="702.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.30%)</title><rect x="849.3" y="675.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="852.3" y="686.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.30%)</title><rect x="849.3" y="659.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="852.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (20 samples, 5.95%)</title><rect x="852.9" y="755.0" width="70.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.9" y="766.0">one/nio/..</text>
</g>
<g>
<title>__libc_send (20 samples, 5.95%)</title><rect x="852.9" y="739.0" width="70.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="855.9" y="750.0">__libc_s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 5.95%)</title><rect x="852.9" y="723.0" width="70.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="855.9" y="734.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 5.95%)</title><rect x="852.9" y="707.0" width="70.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="855.9" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (20 samples, 5.95%)</title><rect x="852.9" y="691.0" width="70.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="855.9" y="702.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (20 samples, 5.95%)</title><rect x="852.9" y="675.0" width="70.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="855.9" y="686.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (20 samples, 5.95%)</title><rect x="852.9" y="659.0" width="70.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="855.9" y="670.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (20 samples, 5.95%)</title><rect x="852.9" y="643.0" width="70.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.9" y="654.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (20 samples, 5.95%)</title><rect x="852.9" y="627.0" width="70.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="855.9" y="638.0">tcp_send..</text>
</g>
<g>
<title>release_sock (1 samples, 0.30%)</title><rect x="852.9" y="611.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="855.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.30%)</title><rect x="852.9" y="595.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="855.9" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.30%)</title><rect x="852.9" y="579.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="855.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (19 samples, 5.65%)</title><rect x="856.4" y="611.0" width="66.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="859.4" y="622.0">tcp_sen..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.30%)</title><rect x="856.4" y="595.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="859.4" y="606.0"></text>
</g>
<g>
<title>tcp_push (16 samples, 4.76%)</title><rect x="859.9" y="595.0" width="56.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.9" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (16 samples, 4.76%)</title><rect x="859.9" y="579.0" width="56.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.9" y="590.0">__tcp_..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.30%)</title><rect x="859.9" y="563.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="862.9" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (15 samples, 4.46%)</title><rect x="863.4" y="563.0" width="52.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="866.4" y="574.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 4.17%)</title><rect x="866.9" y="547.0" width="49.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.9" y="558.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (14 samples, 4.17%)</title><rect x="866.9" y="531.0" width="49.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="869.9" y="542.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 3.87%)</title><rect x="866.9" y="515.0" width="45.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.9" y="526.0">__ip..</text>
</g>
<g>
<title>ip_local_out (12 samples, 3.57%)</title><rect x="870.4" y="499.0" width="42.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="873.4" y="510.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.30%)</title><rect x="870.4" y="483.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.4" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.30%)</title><rect x="870.4" y="467.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="873.4" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.30%)</title><rect x="870.4" y="451.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.4" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.30%)</title><rect x="870.4" y="435.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.4" y="446.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.30%)</title><rect x="870.4" y="419.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="873.4" y="430.0"></text>
</g>
<g>
<title>ip_output (11 samples, 3.27%)</title><rect x="873.9" y="483.0" width="38.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="876.9" y="494.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (11 samples, 3.27%)</title><rect x="873.9" y="467.0" width="38.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="876.9" y="478.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (11 samples, 3.27%)</title><rect x="873.9" y="451.0" width="38.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="876.9" y="462.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 3.27%)</title><rect x="873.9" y="435.0" width="38.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.9" y="446.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 3.27%)</title><rect x="873.9" y="419.0" width="38.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="876.9" y="430.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (11 samples, 3.27%)</title><rect x="873.9" y="403.0" width="38.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="876.9" y="414.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 3.27%)</title><rect x="873.9" y="387.0" width="38.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.9" y="398.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 3.27%)</title><rect x="873.9" y="371.0" width="38.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="876.9" y="382.0">__s..</text>
</g>
<g>
<title>net_rx_action (11 samples, 3.27%)</title><rect x="873.9" y="355.0" width="38.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="876.9" y="366.0">net..</text>
</g>
<g>
<title>process_backlog (11 samples, 3.27%)</title><rect x="873.9" y="339.0" width="38.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="876.9" y="350.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 3.27%)</title><rect x="873.9" y="323.0" width="38.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.9" y="334.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 3.27%)</title><rect x="873.9" y="307.0" width="38.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="876.9" y="318.0">__n..</text>
</g>
<g>
<title>ip_rcv (11 samples, 3.27%)</title><rect x="873.9" y="291.0" width="38.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.9" y="302.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 2.98%)</title><rect x="877.4" y="275.0" width="35.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.4" y="286.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 2.98%)</title><rect x="877.4" y="259.0" width="35.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.4" y="270.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 2.98%)</title><rect x="877.4" y="243.0" width="35.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.4" y="254.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 2.98%)</title><rect x="877.4" y="227.0" width="35.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="880.4" y="238.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 2.98%)</title><rect x="877.4" y="211.0" width="35.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="880.4" y="222.0">tcp..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.30%)</title><rect x="877.4" y="195.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="880.4" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.30%)</title><rect x="881.0" y="195.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 2.38%)</title><rect x="884.5" y="195.0" width="28.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="887.5" y="206.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 2.38%)</title><rect x="884.5" y="179.0" width="28.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.5" y="190.0">tc..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.30%)</title><rect x="888.0" y="163.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="891.0" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.30%)</title><rect x="888.0" y="147.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="891.0" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.30%)</title><rect x="888.0" y="131.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.0" y="142.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.30%)</title><rect x="888.0" y="115.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="891.0" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.30%)</title><rect x="888.0" y="99.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 1.79%)</title><rect x="891.5" y="163.0" width="21.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="894.5" y="174.0">t..</text>
</g>
<g>
<title>sock_def_readable (6 samples, 1.79%)</title><rect x="891.5" y="147.0" width="21.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.5" y="158.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.49%)</title><rect x="895.0" y="131.0" width="17.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="898.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.49%)</title><rect x="895.0" y="115.0" width="17.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="898.0" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.49%)</title><rect x="895.0" y="99.0" width="17.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="898.0" y="110.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.30%)</title><rect x="912.6" y="515.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="915.6" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.60%)</title><rect x="916.1" y="595.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.1" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.30%)</title><rect x="916.1" y="579.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.1" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.30%)</title><rect x="919.6" y="579.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="922.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getClient (1 samples, 0.30%)</title><rect x="923.1" y="787.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.30%)</title><rect x="923.1" y="771.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="926.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.30%)</title><rect x="923.1" y="755.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.30%)</title><rect x="923.1" y="739.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (60 samples, 17.86%)</title><rect x="926.6" y="915.0" width="210.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.6" y="926.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 1.19%)</title><rect x="930.1" y="899.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 1.19%)</title><rect x="930.1" y="883.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.30%)</title><rect x="940.7" y="867.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 5.06%)</title><rect x="944.2" y="899.0" width="59.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.2" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 4.76%)</title><rect x="947.7" y="883.0" width="56.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.7" y="894.0">one/ni..</text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 1.19%)</title><rect x="954.7" y="867.0" width="14.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="957.7" y="878.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 1.19%)</title><rect x="954.7" y="851.0" width="14.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="957.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.19%)</title><rect x="954.7" y="835.0" width="14.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="957.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.30%)</title><rect x="954.7" y="819.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.89%)</title><rect x="958.2" y="819.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="961.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.60%)</title><rect x="961.7" y="803.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.7" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.60%)</title><rect x="961.7" y="787.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.7" y="798.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.60%)</title><rect x="961.7" y="771.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="964.7" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.30%)</title><rect x="961.7" y="755.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="964.7" y="766.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.30%)</title><rect x="961.7" y="739.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="964.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.30%)</title><rect x="965.2" y="755.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="968.2" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.30%)</title><rect x="965.2" y="739.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.2" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="965.2" y="723.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.2" y="734.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.30%)</title><rect x="965.2" y="707.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="968.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 2.98%)</title><rect x="968.8" y="867.0" width="35.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="971.8" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="968.8" y="851.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="971.8" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.30%)</title><rect x="968.8" y="835.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="971.8" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.30%)</title><rect x="972.3" y="851.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="975.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 2.38%)</title><rect x="975.8" y="851.0" width="28.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="978.8" y="862.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.79%)</title><rect x="982.8" y="835.0" width="21.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="985.8" y="846.0">e..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.79%)</title><rect x="982.8" y="819.0" width="21.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="985.8" y="830.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 1.49%)</title><rect x="982.8" y="803.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="985.8" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 1.49%)</title><rect x="982.8" y="787.0" width="17.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="985.8" y="798.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.49%)</title><rect x="982.8" y="771.0" width="17.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="985.8" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 0.60%)</title><rect x="986.3" y="755.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="989.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.60%)</title><rect x="986.3" y="739.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="989.3" y="750.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.30%)</title><rect x="989.8" y="723.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="992.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.60%)</title><rect x="993.3" y="755.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.60%)</title><rect x="993.3" y="739.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.3" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="993.3" y="723.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.3" y="734.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.60%)</title><rect x="993.3" y="707.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.3" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="993.3" y="691.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="996.3" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.30%)</title><rect x="1000.4" y="803.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1003.4" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.30%)</title><rect x="1000.4" y="787.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1003.4" y="798.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.30%)</title><rect x="1000.4" y="771.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (38 samples, 11.31%)</title><rect x="1003.9" y="899.0" width="133.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.9" y="910.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (38 samples, 11.31%)</title><rect x="1003.9" y="883.0" width="133.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.9" y="894.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (15 samples, 4.46%)</title><rect x="1007.4" y="867.0" width="52.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.4" y="878.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (1 samples, 0.30%)</title><rect x="1007.4" y="851.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 3.27%)</title><rect x="1010.9" y="851.0" width="38.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1013.9" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 3.27%)</title><rect x="1010.9" y="835.0" width="38.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.9" y="846.0">one..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (11 samples, 3.27%)</title><rect x="1010.9" y="819.0" width="38.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.9" y="830.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2 samples, 0.60%)</title><rect x="1010.9" y="803.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.60%)</title><rect x="1010.9" y="787.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="1010.9" y="771.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.30%)</title><rect x="1010.9" y="755.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.9" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="1010.9" y="739.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1013.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.30%)</title><rect x="1014.4" y="771.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1017.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.30%)</title><rect x="1014.4" y="755.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.4" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.30%)</title><rect x="1014.4" y="739.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1017.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (9 samples, 2.68%)</title><rect x="1017.9" y="803.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.9" y="814.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 2.38%)</title><rect x="1021.4" y="787.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.4" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 2.38%)</title><rect x="1021.4" y="771.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.4" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 2.38%)</title><rect x="1021.4" y="755.0" width="28.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.4" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 2.38%)</title><rect x="1021.4" y="739.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.4" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 2.38%)</title><rect x="1021.4" y="723.0" width="28.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.4" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 2.38%)</title><rect x="1021.4" y="707.0" width="28.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.4" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 2.38%)</title><rect x="1021.4" y="691.0" width="28.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.4" y="702.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 2.38%)</title><rect x="1021.4" y="675.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.4" y="686.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.60%)</title><rect x="1021.4" y="659.0" width="7.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1024.4" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.30%)</title><rect x="1024.9" y="643.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1027.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.49%)</title><rect x="1028.5" y="659.0" width="17.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1031.5" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.49%)</title><rect x="1028.5" y="643.0" width="17.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1031.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.49%)</title><rect x="1028.5" y="627.0" width="17.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1031.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.49%)</title><rect x="1028.5" y="611.0" width="17.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1031.5" y="622.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.49%)</title><rect x="1028.5" y="595.0" width="17.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1031.5" y="606.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.49%)</title><rect x="1028.5" y="579.0" width="17.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1031.5" y="590.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 1.19%)</title><rect x="1032.0" y="563.0" width="14.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.0" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 1.19%)</title><rect x="1032.0" y="547.0" width="14.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 1.19%)</title><rect x="1032.0" y="531.0" width="14.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1035.0" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="1046.0" y="659.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1049.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.30%)</title><rect x="1049.5" y="851.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.30%)</title><rect x="1049.5" y="835.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.30%)</title><rect x="1049.5" y="819.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.60%)</title><rect x="1053.0" y="851.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.60%)</title><rect x="1053.0" y="835.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 6.55%)</title><rect x="1060.1" y="867.0" width="77.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1063.1" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 5.65%)</title><rect x="1067.1" y="851.0" width="66.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.1" y="862.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 1.49%)</title><rect x="1070.6" y="835.0" width="17.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1073.6" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="1070.6" y="819.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1073.6" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.89%)</title><rect x="1074.1" y="819.0" width="10.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1077.1" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1074.1" y="803.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1077.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.60%)</title><rect x="1077.6" y="803.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1080.6" y="814.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.30%)</title><rect x="1084.6" y="819.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1087.6" y="830.0"></text>
</g>
<g>
<title>__GI___recv (13 samples, 3.87%)</title><rect x="1088.2" y="835.0" width="45.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1091.2" y="846.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 3.27%)</title><rect x="1095.2" y="819.0" width="38.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1098.2" y="830.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 3.27%)</title><rect x="1095.2" y="803.0" width="38.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1098.2" y="814.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 2.68%)</title><rect x="1098.7" y="787.0" width="31.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1101.7" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 2.68%)</title><rect x="1098.7" y="771.0" width="31.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1101.7" y="782.0">__..</text>
</g>
<g>
<title>sock_recvmsg (9 samples, 2.68%)</title><rect x="1098.7" y="755.0" width="31.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1101.7" y="766.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 1.49%)</title><rect x="1098.7" y="739.0" width="17.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1101.7" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.30%)</title><rect x="1098.7" y="723.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1101.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.19%)</title><rect x="1102.2" y="723.0" width="14.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1105.2" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.60%)</title><rect x="1105.7" y="707.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1108.7" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.60%)</title><rect x="1105.7" y="691.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1108.7" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.30%)</title><rect x="1109.2" y="675.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1112.2" y="686.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.30%)</title><rect x="1109.2" y="659.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1112.2" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.30%)</title><rect x="1112.7" y="707.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1115.7" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 1.19%)</title><rect x="1116.3" y="739.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1119.3" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.30%)</title><rect x="1116.3" y="723.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1119.3" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.89%)</title><rect x="1119.8" y="723.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1122.8" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.30%)</title><rect x="1119.8" y="707.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.8" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.60%)</title><rect x="1123.3" y="707.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1126.3" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.60%)</title><rect x="1123.3" y="691.0" width="7.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1126.3" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.30%)</title><rect x="1126.8" y="675.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1129.8" y="686.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.30%)</title><rect x="1130.3" y="787.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.3" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.30%)</title><rect x="1130.3" y="771.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1133.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.30%)</title><rect x="1133.8" y="851.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.8" y="862.0"></text>
</g>
<g>
<title>start_thread (15 samples, 4.46%)</title><rect x="1137.3" y="915.0" width="52.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1140.3" y="926.0">start..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 4.46%)</title><rect x="1137.3" y="899.0" width="52.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1140.3" y="910.0">threa..</text>
</g>
<g>
<title>Thread::call_run() (15 samples, 4.46%)</title><rect x="1137.3" y="883.0" width="52.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1140.3" y="894.0">Threa..</text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 2.08%)</title><rect x="1137.3" y="867.0" width="24.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.3" y="878.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 1.79%)</title><rect x="1137.3" y="851.0" width="21.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.3" y="862.0">G..</text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (1 samples, 0.30%)</title><rect x="1137.3" y="835.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.3" y="846.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.30%)</title><rect x="1137.3" y="819.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.3" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (1 samples, 0.30%)</title><rect x="1137.3" y="803.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1140.3" y="814.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (1 samples, 0.30%)</title><rect x="1137.3" y="787.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.3" y="798.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.30%)</title><rect x="1137.3" y="771.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1140.3" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.30%)</title><rect x="1137.3" y="755.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.3" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.30%)</title><rect x="1137.3" y="739.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.3" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.30%)</title><rect x="1137.3" y="723.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1140.3" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 1.49%)</title><rect x="1140.8" y="835.0" width="17.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1143.8" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.60%)</title><rect x="1140.8" y="819.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.8" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.60%)</title><rect x="1140.8" y="803.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.8" y="814.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.30%)</title><rect x="1140.8" y="787.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1143.8" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.30%)</title><rect x="1140.8" y="771.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1143.8" y="782.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.30%)</title><rect x="1140.8" y="755.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.8" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.30%)</title><rect x="1140.8" y="739.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.8" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.30%)</title><rect x="1140.8" y="723.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.8" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="1144.3" y="787.0" width="3.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1147.3" y="798.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (3 samples, 0.89%)</title><rect x="1147.9" y="819.0" width="10.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1150.9" y="830.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.30%)</title><rect x="1147.9" y="803.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.9" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.30%)</title><rect x="1147.9" y="787.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.9" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.60%)</title><rect x="1151.4" y="803.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1154.4" y="814.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.30%)</title><rect x="1158.4" y="851.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.4" y="862.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.30%)</title><rect x="1158.4" y="835.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.4" y="846.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.30%)</title><rect x="1158.4" y="819.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.4" y="830.0"></text>
</g>
<g>
<title>JavaThread::run() (8 samples, 2.38%)</title><rect x="1161.9" y="867.0" width="28.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.9" y="878.0">Ja..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (8 samples, 2.38%)</title><rect x="1161.9" y="851.0" width="28.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.9" y="862.0">Co..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 2.38%)</title><rect x="1161.9" y="835.0" width="28.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.9" y="846.0">Co..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 2.38%)</title><rect x="1161.9" y="819.0" width="28.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.9" y="830.0">C2..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (8 samples, 2.38%)</title><rect x="1161.9" y="803.0" width="28.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.9" y="814.0">Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.89%)</title><rect x="1161.9" y="787.0" width="10.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.9" y="798.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.89%)</title><rect x="1161.9" y="771.0" width="10.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.9" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.30%)</title><rect x="1161.9" y="755.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.9" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.30%)</title><rect x="1165.4" y="755.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.4" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.30%)</title><rect x="1168.9" y="755.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.9" y="766.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.30%)</title><rect x="1168.9" y="739.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.9" y="750.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 1.19%)</title><rect x="1172.4" y="787.0" width="14.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.4" y="798.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (2 samples, 0.60%)</title><rect x="1172.4" y="771.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.4" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.60%)</title><rect x="1172.4" y="755.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.4" y="766.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.30%)</title><rect x="1172.4" y="739.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.4" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.30%)</title><rect x="1172.4" y="723.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.4" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.30%)</title><rect x="1172.4" y="707.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.4" y="718.0"></text>
</g>
<g>
<title>Compile::can_alias(TypePtr const*, int) (1 samples, 0.30%)</title><rect x="1172.4" y="691.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.4" y="702.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.242] (1 samples, 0.30%)</title><rect x="1172.4" y="675.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.4" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.30%)</title><rect x="1176.0" y="739.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.0" y="750.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.30%)</title><rect x="1176.0" y="723.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.0" y="734.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.258] (1 samples, 0.30%)</title><rect x="1179.5" y="771.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.5" y="782.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.30%)</title><rect x="1179.5" y="755.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>CheckCastPPNode::Opcode() const (1 samples, 0.30%)</title><rect x="1179.5" y="739.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.30%)</title><rect x="1183.0" y="771.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.0" y="782.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.30%)</title><rect x="1183.0" y="755.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="766.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.30%)</title><rect x="1186.5" y="787.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.30%)</title><rect x="1186.5" y="771.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
</g>
</svg>
