<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1061"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1061"> </text>
<g id="frames">
<g>
<title>all (413 samples, 100.00%)</title><rect x="10.0" y="1027.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1038.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.73%)</title><rect x="10.0" y="1011.0" width="8.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.24%)</title><rect x="10.0" y="995.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.24%)</title><rect x="10.0" y="979.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="10.0" y="963.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="10.0" y="947.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="10.0" y="931.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.24%)</title><rect x="10.0" y="915.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.24%)</title><rect x="10.0" y="899.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.24%)</title><rect x="10.0" y="883.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.24%)</title><rect x="10.0" y="867.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.24%)</title><rect x="10.0" y="851.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="10.0" y="835.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.24%)</title><rect x="10.0" y="819.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.24%)</title><rect x="10.0" y="803.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.24%)</title><rect x="10.0" y="787.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10793662002943398678.so (1 samples, 0.24%)</title><rect x="10.0" y="771.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="10.0" y="755.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="10.0" y="739.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="10.0" y="723.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="10.0" y="707.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.24%)</title><rect x="10.0" y="691.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="10.0" y="675.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.24%)</title><rect x="10.0" y="659.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.48%)</title><rect x="12.9" y="995.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.9" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.48%)</title><rect x="12.9" y="979.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="15.9" y="990.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.48%)</title><rect x="12.9" y="963.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.9" y="974.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (1 samples, 0.24%)</title><rect x="12.9" y="947.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.9" y="958.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.24%)</title><rect x="15.7" y="947.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="18.7" y="958.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.48%)</title><rect x="18.6" y="1011.0" width="5.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.6" y="1022.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.24%)</title><rect x="18.6" y="995.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.6" y="1006.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.24%)</title><rect x="18.6" y="979.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="18.6" y="963.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.6" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="18.6" y="947.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="18.6" y="931.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.24%)</title><rect x="18.6" y="915.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.24%)</title><rect x="18.6" y="899.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.24%)</title><rect x="18.6" y="883.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.24%)</title><rect x="18.6" y="867.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.24%)</title><rect x="18.6" y="851.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="18.6" y="835.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.24%)</title><rect x="18.6" y="819.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="21.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.24%)</title><rect x="18.6" y="803.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.6" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.24%)</title><rect x="18.6" y="787.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="21.6" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10793662002943398678.so (1 samples, 0.24%)</title><rect x="18.6" y="771.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="18.6" y="755.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="18.6" y="739.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.6" y="750.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="18.6" y="723.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="21.6" y="734.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="18.6" y="707.0" width="2.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="21.6" y="718.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.24%)</title><rect x="18.6" y="691.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="21.6" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="18.6" y="675.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="21.6" y="686.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.24%)</title><rect x="18.6" y="659.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="21.6" y="670.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.24%)</title><rect x="18.6" y="643.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="21.6" y="654.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.24%)</title><rect x="21.4" y="995.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="24.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (310 samples, 75.06%)</title><rect x="24.3" y="1011.0" width="885.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.3" y="1022.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (310 samples, 75.06%)</title><rect x="24.3" y="995.0" width="885.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.3" y="1006.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (310 samples, 75.06%)</title><rect x="24.3" y="979.0" width="885.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.3" y="990.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.24%)</title><rect x="67.1" y="963.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="67.1" y="947.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="67.1" y="931.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="67.1" y="915.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.beforeExecute (1 samples, 0.24%)</title><rect x="70.0" y="963.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (44 samples, 10.65%)</title><rect x="72.9" y="963.0" width="125.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.9" y="974.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (44 samples, 10.65%)</title><rect x="72.9" y="947.0" width="125.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.9" y="958.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (37 samples, 8.96%)</title><rect x="75.7" y="931.0" width="105.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.7" y="942.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.24%)</title><rect x="75.7" y="915.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.24%)</title><rect x="75.7" y="899.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.73%)</title><rect x="78.6" y="915.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.73%)</title><rect x="78.6" y="899.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="84.3" y="883.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="84.3" y="867.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.24%)</title><rect x="84.3" y="851.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.24%)</title><rect x="87.1" y="915.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.24%)</title><rect x="87.1" y="899.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 7.75%)</title><rect x="90.0" y="915.0" width="91.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.0" y="926.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 7.75%)</title><rect x="90.0" y="899.0" width="91.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.0" y="910.0">jdk/interna..</text>
</g>
<g>
<title>Unsafe_Park (12 samples, 2.91%)</title><rect x="90.0" y="883.0" width="34.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="93.0" y="894.0">Un..</text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.24%)</title><rect x="95.7" y="867.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="98.7" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.73%)</title><rect x="98.6" y="867.0" width="8.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="101.6" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.24%)</title><rect x="104.3" y="851.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="107.3" y="862.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.24%)</title><rect x="107.1" y="867.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="110.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="107.1" y="851.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="107.1" y="835.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.1" y="846.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.24%)</title><rect x="107.1" y="819.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.1" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.24%)</title><rect x="110.0" y="867.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="113.0" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.48%)</title><rect x="112.9" y="867.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="115.9" y="878.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.48%)</title><rect x="118.6" y="867.0" width="5.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="121.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 4.84%)</title><rect x="124.3" y="883.0" width="57.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="127.3" y="894.0">[unkno..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.24%)</title><rect x="124.3" y="867.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="127.3" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.24%)</title><rect x="127.1" y="867.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="130.1" y="878.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (18 samples, 4.36%)</title><rect x="130.0" y="867.0" width="51.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="133.0" y="878.0">pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 3.15%)</title><rect x="144.3" y="851.0" width="37.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="147.3" y="862.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 3.15%)</title><rect x="144.3" y="835.0" width="37.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.3" y="846.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 2.66%)</title><rect x="144.3" y="819.0" width="31.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="147.3" y="830.0">__..</text>
</g>
<g>
<title>do_futex (11 samples, 2.66%)</title><rect x="144.3" y="803.0" width="31.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="147.3" y="814.0">do..</text>
</g>
<g>
<title>futex_wait (9 samples, 2.18%)</title><rect x="150.0" y="787.0" width="25.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="153.0" y="798.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 1.94%)</title><rect x="152.9" y="771.0" width="22.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="155.9" y="782.0">f..</text>
</g>
<g>
<title>schedule (8 samples, 1.94%)</title><rect x="152.9" y="755.0" width="22.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.9" y="766.0">s..</text>
</g>
<g>
<title>__schedule (8 samples, 1.94%)</title><rect x="152.9" y="739.0" width="22.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="155.9" y="750.0">_..</text>
</g>
<g>
<title>finish_task_switch (7 samples, 1.69%)</title><rect x="155.7" y="723.0" width="20.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.7" y="734.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.24%)</title><rect x="175.7" y="819.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="178.7" y="830.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.24%)</title><rect x="178.6" y="819.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 1.45%)</title><rect x="181.4" y="931.0" width="17.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="184.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.45%)</title><rect x="181.4" y="915.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.45%)</title><rect x="181.4" y="899.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="184.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.45%)</title><rect x="181.4" y="883.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.45%)</title><rect x="181.4" y="867.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.4" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 1.45%)</title><rect x="181.4" y="851.0" width="17.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="184.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.21%)</title><rect x="184.3" y="835.0" width="14.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.21%)</title><rect x="184.3" y="819.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.21%)</title><rect x="184.3" y="803.0" width="14.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="187.3" y="814.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.21%)</title><rect x="184.3" y="787.0" width="14.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.3" y="798.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.21%)</title><rect x="184.3" y="771.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="187.3" y="782.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.21%)</title><rect x="184.3" y="755.0" width="14.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="187.3" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.21%)</title><rect x="184.3" y="739.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.3" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.21%)</title><rect x="184.3" y="723.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.24%)</title><rect x="198.6" y="963.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$69/2030009067.run (248 samples, 60.05%)</title><rect x="201.4" y="963.0" width="708.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.4" y="974.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$69/2030009067.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$put$2 (248 samples, 60.05%)</title><rect x="201.4" y="947.0" width="708.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.4" y="958.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$put$2</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putInternal (248 samples, 60.05%)</title><rect x="201.4" y="931.0" width="708.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.4" y="942.0">ru/mail/polis/service/stasyanoi/CustomServer.putInternal</text>
</g>
<g>
<title>java/util/Arrays.hashCode (3 samples, 0.73%)</title><rect x="201.4" y="915.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.4" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.48%)</title><rect x="204.3" y="899.0" width="5.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="207.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (56 samples, 13.56%)</title><rect x="210.0" y="915.0" width="160.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.0" y="926.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (55 samples, 13.32%)</title><rect x="210.0" y="899.0" width="157.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.0" y="910.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="210.0" y="883.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.24%)</title><rect x="210.0" y="867.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="210.0" y="851.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="210.0" y="835.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.24%)</title><rect x="210.0" y="819.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.24%)</title><rect x="210.0" y="803.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.24%)</title><rect x="210.0" y="787.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.24%)</title><rect x="210.0" y="771.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 13.08%)</title><rect x="212.9" y="883.0" width="154.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.9" y="894.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session.write (54 samples, 13.08%)</title><rect x="212.9" y="867.0" width="154.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.9" y="878.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (54 samples, 13.08%)</title><rect x="212.9" y="851.0" width="154.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.9" y="862.0">one/nio/net/Session$..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (54 samples, 13.08%)</title><rect x="212.9" y="835.0" width="154.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.9" y="846.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>__libc_send (53 samples, 12.83%)</title><rect x="212.9" y="819.0" width="151.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="215.9" y="830.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 12.83%)</title><rect x="212.9" y="803.0" width="151.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.9" y="814.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (53 samples, 12.83%)</title><rect x="212.9" y="787.0" width="151.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="215.9" y="798.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (51 samples, 12.35%)</title><rect x="212.9" y="771.0" width="145.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.9" y="782.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (51 samples, 12.35%)</title><rect x="212.9" y="755.0" width="145.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="215.9" y="766.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (49 samples, 11.86%)</title><rect x="215.7" y="739.0" width="140.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="218.7" y="750.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (49 samples, 11.86%)</title><rect x="215.7" y="723.0" width="140.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.7" y="734.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (49 samples, 11.86%)</title><rect x="215.7" y="707.0" width="140.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="218.7" y="718.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.73%)</title><rect x="215.7" y="691.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="218.7" y="702.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.73%)</title><rect x="215.7" y="675.0" width="8.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="218.7" y="686.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.73%)</title><rect x="215.7" y="659.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="218.7" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.73%)</title><rect x="215.7" y="643.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.7" y="654.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.48%)</title><rect x="215.7" y="627.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="218.7" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.24%)</title><rect x="221.4" y="627.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.4" y="638.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.24%)</title><rect x="221.4" y="611.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.4" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.24%)</title><rect x="224.3" y="691.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.3" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (45 samples, 10.90%)</title><rect x="227.1" y="691.0" width="128.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.1" y="702.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.73%)</title><rect x="230.0" y="675.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.0" y="686.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.73%)</title><rect x="230.0" y="659.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="233.0" y="670.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.24%)</title><rect x="230.0" y="643.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.0" y="654.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.24%)</title><rect x="230.0" y="627.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.0" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.24%)</title><rect x="232.9" y="643.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="235.9" y="654.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.24%)</title><rect x="235.7" y="643.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.7" y="654.0"></text>
</g>
<g>
<title>tcp_push (40 samples, 9.69%)</title><rect x="238.6" y="675.0" width="114.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.6" y="686.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (39 samples, 9.44%)</title><rect x="241.4" y="659.0" width="111.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="244.4" y="670.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (39 samples, 9.44%)</title><rect x="241.4" y="643.0" width="111.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.4" y="654.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (33 samples, 7.99%)</title><rect x="252.9" y="627.0" width="94.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.9" y="638.0">__tcp_trans..</text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 7.99%)</title><rect x="252.9" y="611.0" width="94.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="255.9" y="622.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (33 samples, 7.99%)</title><rect x="252.9" y="595.0" width="94.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="255.9" y="606.0">__ip_queue_..</text>
</g>
<g>
<title>ip_local_out (32 samples, 7.75%)</title><rect x="252.9" y="579.0" width="91.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="255.9" y="590.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (6 samples, 1.45%)</title><rect x="252.9" y="563.0" width="17.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.9" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.24%)</title><rect x="252.9" y="547.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.9" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 1.21%)</title><rect x="255.7" y="547.0" width="14.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.7" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.48%)</title><rect x="258.6" y="531.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="261.6" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.48%)</title><rect x="258.6" y="515.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.6" y="526.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.48%)</title><rect x="258.6" y="499.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.6" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.24%)</title><rect x="264.3" y="531.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="267.3" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="267.1" y="531.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="270.1" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="267.1" y="515.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.1" y="526.0"></text>
</g>
<g>
<title>nf_nat_packet?[nf_nat] (1 samples, 0.24%)</title><rect x="267.1" y="499.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="270.1" y="510.0"></text>
</g>
<g>
<title>ip_output (26 samples, 6.30%)</title><rect x="270.0" y="563.0" width="74.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.0" y="574.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (26 samples, 6.30%)</title><rect x="270.0" y="547.0" width="74.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="273.0" y="558.0">ip_finis..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.24%)</title><rect x="270.0" y="531.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="273.0" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (25 samples, 6.05%)</title><rect x="272.9" y="531.0" width="71.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.9" y="542.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (25 samples, 6.05%)</title><rect x="272.9" y="515.0" width="71.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.9" y="526.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (23 samples, 5.57%)</title><rect x="275.7" y="499.0" width="65.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.7" y="510.0">__local..</text>
</g>
<g>
<title>do_softirq.part.20 (23 samples, 5.57%)</title><rect x="275.7" y="483.0" width="65.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.7" y="494.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (23 samples, 5.57%)</title><rect x="275.7" y="467.0" width="65.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="278.7" y="478.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 5.57%)</title><rect x="275.7" y="451.0" width="65.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="278.7" y="462.0">__softi..</text>
</g>
<g>
<title>net_rx_action (23 samples, 5.57%)</title><rect x="275.7" y="435.0" width="65.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.7" y="446.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (23 samples, 5.57%)</title><rect x="275.7" y="419.0" width="65.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="278.7" y="430.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (23 samples, 5.57%)</title><rect x="275.7" y="403.0" width="65.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.7" y="414.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 5.57%)</title><rect x="275.7" y="387.0" width="65.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="278.7" y="398.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.24%)</title><rect x="275.7" y="371.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="278.7" y="382.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 5.08%)</title><rect x="278.6" y="371.0" width="60.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="281.6" y="382.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 5.08%)</title><rect x="278.6" y="355.0" width="60.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="281.6" y="366.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (20 samples, 4.84%)</title><rect x="278.6" y="339.0" width="57.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="281.6" y="350.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 4.60%)</title><rect x="281.4" y="323.0" width="54.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="284.4" y="334.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 4.60%)</title><rect x="281.4" y="307.0" width="54.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="284.4" y="318.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 4.12%)</title><rect x="287.1" y="291.0" width="48.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.1" y="302.0">tcp_..</text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.24%)</title><rect x="287.1" y="275.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="290.1" y="286.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="290.0" y="275.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.0" y="286.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.24%)</title><rect x="290.0" y="259.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.0" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (15 samples, 3.63%)</title><rect x="292.9" y="275.0" width="42.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="295.9" y="286.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (15 samples, 3.63%)</title><rect x="292.9" y="259.0" width="42.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="295.9" y="270.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.73%)</title><rect x="292.9" y="243.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.9" y="254.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.48%)</title><rect x="292.9" y="227.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.9" y="238.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.48%)</title><rect x="292.9" y="211.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="295.9" y="222.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.48%)</title><rect x="292.9" y="195.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.9" y="206.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.48%)</title><rect x="292.9" y="179.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.9" y="190.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.48%)</title><rect x="292.9" y="163.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.9" y="174.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.24%)</title><rect x="292.9" y="147.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="295.9" y="158.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.24%)</title><rect x="292.9" y="131.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.9" y="142.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.24%)</title><rect x="292.9" y="115.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="295.9" y="126.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.24%)</title><rect x="292.9" y="99.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="295.9" y="110.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="292.9" y="83.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.9" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.24%)</title><rect x="292.9" y="67.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.9" y="78.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="292.9" y="51.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="295.9" y="62.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="292.9" y="35.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="295.9" y="46.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="295.7" y="147.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.7" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.24%)</title><rect x="298.6" y="227.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="301.6" y="238.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="298.6" y="211.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.6" y="222.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="298.6" y="195.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.6" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.24%)</title><rect x="298.6" y="179.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.6" y="190.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.73%)</title><rect x="301.4" y="243.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="304.4" y="254.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.48%)</title><rect x="304.3" y="227.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.3" y="238.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="304.3" y="211.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="307.3" y="222.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="304.3" y="195.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="307.3" y="206.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.24%)</title><rect x="304.3" y="179.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="307.3" y="190.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.24%)</title><rect x="307.1" y="211.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="310.1" y="222.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.48%)</title><rect x="310.0" y="243.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.0" y="254.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.48%)</title><rect x="310.0" y="227.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="313.0" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.48%)</title><rect x="310.0" y="211.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.0" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.48%)</title><rect x="310.0" y="195.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.0" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.48%)</title><rect x="310.0" y="179.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.0" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.48%)</title><rect x="310.0" y="163.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.0" y="174.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.21%)</title><rect x="315.7" y="243.0" width="14.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="318.7" y="254.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.24%)</title><rect x="315.7" y="227.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="318.7" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.97%)</title><rect x="318.6" y="227.0" width="11.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="321.6" y="238.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.97%)</title><rect x="318.6" y="211.0" width="11.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="321.6" y="222.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.97%)</title><rect x="318.6" y="195.0" width="11.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.6" y="206.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.97%)</title><rect x="318.6" y="179.0" width="11.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="321.6" y="190.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.24%)</title><rect x="330.0" y="243.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="333.0" y="254.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.24%)</title><rect x="332.9" y="243.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="335.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.24%)</title><rect x="335.7" y="339.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.7" y="350.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.24%)</title><rect x="338.6" y="371.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.6" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.24%)</title><rect x="341.4" y="499.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="344.4" y="510.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="341.4" y="483.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.4" y="494.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="341.4" y="467.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="344.4" y="478.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="341.4" y="451.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.4" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.24%)</title><rect x="344.3" y="579.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="347.3" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="347.1" y="627.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="350.1" y="638.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.24%)</title><rect x="347.1" y="611.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="350.1" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="347.1" y="595.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.1" y="606.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="347.1" y="579.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.1" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.24%)</title><rect x="347.1" y="563.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="350.1" y="574.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.24%)</title><rect x="350.0" y="627.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.0" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="350.0" y="611.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="353.0" y="622.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="350.0" y="595.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="353.0" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="352.9" y="675.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.9" y="686.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.24%)</title><rect x="352.9" y="659.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="355.7" y="739.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="358.7" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="355.7" y="723.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.7" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="355.7" y="707.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.7" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="355.7" y="691.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.7" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.48%)</title><rect x="358.6" y="771.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="361.6" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.24%)</title><rect x="361.4" y="755.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.4" y="766.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="364.3" y="819.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="367.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="367.1" y="899.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putProxy (189 samples, 45.76%)</title><rect x="370.0" y="915.0" width="540.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.0" y="926.0">ru/mail/polis/service/stasyanoi/CustomServer.putProxy</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (62 samples, 15.01%)</title><rect x="370.0" y="899.0" width="177.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.0" y="910.0">ru/mail/polis/dao/stasy..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (62 samples, 15.01%)</title><rect x="370.0" y="883.0" width="177.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.0" y="894.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (62 samples, 15.01%)</title><rect x="370.0" y="867.0" width="177.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.0" y="878.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (42 samples, 10.17%)</title><rect x="370.0" y="851.0" width="120.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="373.0" y="862.0">Java_org_rocksd..</text>
</g>
<g>
<title>__malloc (1 samples, 0.24%)</title><rect x="370.0" y="835.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="373.0" y="846.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (41 samples, 9.93%)</title><rect x="372.9" y="835.0" width="117.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="375.9" y="846.0">rocksdb_put_he..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="378.6" y="819.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="381.6" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="378.6" y="803.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="381.6" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.24%)</title><rect x="378.6" y="787.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="381.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 9.20%)</title><rect x="381.4" y="819.0" width="108.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.4" y="830.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 9.20%)</title><rect x="381.4" y="803.0" width="108.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="384.4" y="814.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (37 samples, 8.96%)</title><rect x="381.4" y="787.0" width="105.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="384.4" y="798.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (35 samples, 8.47%)</title><rect x="381.4" y="771.0" width="100.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="384.4" y="782.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.24%)</title><rect x="381.4" y="755.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="384.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (32 samples, 7.75%)</title><rect x="384.3" y="755.0" width="91.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="387.3" y="766.0">rocksdb::DB..</text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.24%)</title><rect x="395.7" y="739.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="398.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 0.97%)</title><rect x="398.6" y="739.0" width="11.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="401.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.73%)</title><rect x="401.4" y="723.0" width="8.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="404.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.73%)</title><rect x="401.4" y="707.0" width="8.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="404.4" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10793662002943398678.so (1 samples, 0.24%)</title><rect x="401.4" y="691.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="404.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.24%)</title><rect x="404.3" y="691.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="407.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.24%)</title><rect x="404.3" y="675.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="407.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.24%)</title><rect x="407.1" y="691.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="410.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.24%)</title><rect x="410.0" y="739.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="413.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (19 samples, 4.60%)</title><rect x="412.9" y="739.0" width="54.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="415.9" y="750.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (18 samples, 4.36%)</title><rect x="412.9" y="723.0" width="51.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="415.9" y="734.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (18 samples, 4.36%)</title><rect x="412.9" y="707.0" width="51.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="415.9" y="718.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (17 samples, 4.12%)</title><rect x="412.9" y="691.0" width="48.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="415.9" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (17 samples, 4.12%)</title><rect x="412.9" y="675.0" width="48.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="415.9" y="686.0">rock..</text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.24%)</title><rect x="412.9" y="659.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="415.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (16 samples, 3.87%)</title><rect x="415.7" y="659.0" width="45.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="418.7" y="670.0">rock..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (14 samples, 3.39%)</title><rect x="415.7" y="643.0" width="40.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="418.7" y="654.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni10793662002943398678.so (9 samples, 2.18%)</title><rect x="415.7" y="627.0" width="25.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="418.7" y="638.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni10793662002943398678.so (2 samples, 0.48%)</title><rect x="418.6" y="611.0" width="5.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="421.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.48%)</title><rect x="418.6" y="595.0" width="5.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="421.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.48%)</title><rect x="418.6" y="579.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="421.6" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="418.6" y="563.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="421.6" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="418.6" y="547.0" width="2.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="421.6" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.24%)</title><rect x="418.6" y="531.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="421.6" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.24%)</title><rect x="421.4" y="563.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="424.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="424.3" y="611.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="427.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.21%)</title><rect x="427.1" y="611.0" width="14.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="430.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.97%)</title><rect x="427.1" y="595.0" width="11.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="430.1" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="427.1" y="579.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="430.1" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="427.1" y="563.0" width="2.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="430.1" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.24%)</title><rect x="427.1" y="547.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="430.1" y="558.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="430.0" y="579.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="433.0" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.24%)</title><rect x="430.0" y="563.0" width="2.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="433.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.24%)</title><rect x="430.0" y="547.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="433.0" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.48%)</title><rect x="432.9" y="579.0" width="5.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="435.9" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.24%)</title><rect x="435.7" y="563.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="438.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (1 samples, 0.24%)</title><rect x="438.6" y="595.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="441.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (5 samples, 1.21%)</title><rect x="441.4" y="627.0" width="14.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="444.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.21%)</title><rect x="441.4" y="611.0" width="14.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="444.4" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.24%)</title><rect x="441.4" y="595.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="444.4" y="606.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.24%)</title><rect x="441.4" y="579.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="444.4" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.24%)</title><rect x="441.4" y="563.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="444.4" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.24%)</title><rect x="441.4" y="547.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="444.4" y="558.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.24%)</title><rect x="441.4" y="531.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="444.4" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.73%)</title><rect x="444.3" y="595.0" width="8.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="447.3" y="606.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.73%)</title><rect x="444.3" y="579.0" width="8.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="447.3" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.48%)</title><rect x="447.1" y="563.0" width="5.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="450.1" y="574.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.24%)</title><rect x="450.0" y="547.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="453.0" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="452.9" y="595.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="455.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.24%)</title><rect x="452.9" y="579.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="455.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.24%)</title><rect x="455.7" y="643.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="458.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.24%)</title><rect x="458.6" y="643.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="461.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.24%)</title><rect x="458.6" y="627.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="461.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.24%)</title><rect x="461.4" y="691.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="464.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.24%)</title><rect x="464.3" y="723.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="467.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.24%)</title><rect x="467.1" y="739.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="470.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.24%)</title><rect x="470.0" y="739.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.0" y="750.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.24%)</title><rect x="472.9" y="739.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="475.9" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="472.9" y="723.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="472.9" y="707.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.24%)</title><rect x="472.9" y="691.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="475.9" y="702.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.24%)</title><rect x="472.9" y="675.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="475.9" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="472.9" y="659.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.9" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="472.9" y="643.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="475.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.24%)</title><rect x="475.7" y="755.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="478.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.24%)</title><rect x="478.6" y="755.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="481.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.24%)</title><rect x="481.4" y="771.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="484.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="484.3" y="771.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="487.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.24%)</title><rect x="484.3" y="755.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="487.3" y="766.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.24%)</title><rect x="484.3" y="739.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="487.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.24%)</title><rect x="487.1" y="787.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="490.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 2.66%)</title><rect x="490.0" y="851.0" width="31.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="493.0" y="862.0">[u..</text>
</g>
<g>
<title>__GI_write (11 samples, 2.66%)</title><rect x="490.0" y="835.0" width="31.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="493.0" y="846.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.66%)</title><rect x="490.0" y="819.0" width="31.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.0" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.66%)</title><rect x="490.0" y="803.0" width="31.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="493.0" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_write (11 samples, 2.66%)</title><rect x="490.0" y="787.0" width="31.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.0" y="798.0">__..</text>
</g>
<g>
<title>ksys_write (11 samples, 2.66%)</title><rect x="490.0" y="771.0" width="31.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="493.0" y="782.0">ks..</text>
</g>
<g>
<title>vfs_write (11 samples, 2.66%)</title><rect x="490.0" y="755.0" width="31.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.0" y="766.0">vf..</text>
</g>
<g>
<title>__vfs_write (10 samples, 2.42%)</title><rect x="490.0" y="739.0" width="28.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="493.0" y="750.0">__..</text>
</g>
<g>
<title>new_sync_write (10 samples, 2.42%)</title><rect x="490.0" y="723.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.0" y="734.0">ne..</text>
</g>
<g>
<title>ext4_file_write_iter (9 samples, 2.18%)</title><rect x="492.9" y="707.0" width="25.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.9" y="718.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 2.18%)</title><rect x="492.9" y="691.0" width="25.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.9" y="702.0">_..</text>
</g>
<g>
<title>file_update_time (6 samples, 1.45%)</title><rect x="492.9" y="675.0" width="17.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.9" y="686.0"></text>
</g>
<g>
<title>generic_update_time (6 samples, 1.45%)</title><rect x="492.9" y="659.0" width="17.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="495.9" y="670.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 1.45%)</title><rect x="492.9" y="643.0" width="17.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="495.9" y="654.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 1.45%)</title><rect x="492.9" y="627.0" width="17.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.9" y="638.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.48%)</title><rect x="492.9" y="611.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.9" y="622.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.48%)</title><rect x="492.9" y="595.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="495.9" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.48%)</title><rect x="492.9" y="579.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="495.9" y="590.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.24%)</title><rect x="498.6" y="611.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="501.6" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.24%)</title><rect x="498.6" y="595.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.6" y="606.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.73%)</title><rect x="501.4" y="611.0" width="8.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="504.4" y="622.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.24%)</title><rect x="501.4" y="595.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="504.4" y="606.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.24%)</title><rect x="504.3" y="595.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.3" y="606.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.24%)</title><rect x="504.3" y="579.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.3" y="590.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.24%)</title><rect x="507.1" y="595.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.1" y="606.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.24%)</title><rect x="507.1" y="579.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.1" y="590.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.24%)</title><rect x="507.1" y="563.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.1" y="574.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.24%)</title><rect x="507.1" y="547.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="510.1" y="558.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.24%)</title><rect x="507.1" y="531.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="510.1" y="542.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 0.73%)</title><rect x="510.0" y="675.0" width="8.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="513.0" y="686.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.24%)</title><rect x="510.0" y="659.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="513.0" y="670.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.24%)</title><rect x="510.0" y="643.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="513.0" y="654.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.24%)</title><rect x="510.0" y="627.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="513.0" y="638.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.24%)</title><rect x="510.0" y="611.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="513.0" y="622.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.24%)</title><rect x="510.0" y="595.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="513.0" y="606.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.48%)</title><rect x="512.9" y="659.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.9" y="670.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.48%)</title><rect x="512.9" y="643.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.9" y="654.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.24%)</title><rect x="512.9" y="627.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="515.9" y="638.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.24%)</title><rect x="512.9" y="611.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.9" y="622.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.24%)</title><rect x="512.9" y="595.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="515.9" y="606.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.24%)</title><rect x="512.9" y="579.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.9" y="590.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.24%)</title><rect x="512.9" y="563.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.9" y="574.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.24%)</title><rect x="515.7" y="627.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="518.7" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.24%)</title><rect x="518.6" y="739.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.6" y="750.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.24%)</title><rect x="518.6" y="723.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.6" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.24%)</title><rect x="518.6" y="707.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.6" y="718.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.24%)</title><rect x="518.6" y="691.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="521.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.24%)</title><rect x="521.4" y="851.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (7 samples, 1.69%)</title><rect x="524.3" y="851.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (7 samples, 1.69%)</title><rect x="524.3" y="835.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.3" y="846.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.24%)</title><rect x="524.3" y="819.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.3" y="830.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.24%)</title><rect x="524.3" y="803.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.3" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.24%)</title><rect x="524.3" y="787.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.3" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (6 samples, 1.45%)</title><rect x="527.1" y="819.0" width="17.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.1" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (6 samples, 1.45%)</title><rect x="527.1" y="803.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.1" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (6 samples, 1.45%)</title><rect x="527.1" y="787.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.1" y="798.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (5 samples, 1.21%)</title><rect x="530.0" y="771.0" width="14.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="533.0" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.24%)</title><rect x="530.0" y="755.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="533.0" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.24%)</title><rect x="532.9" y="755.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="535.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.24%)</title><rect x="532.9" y="739.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="535.9" y="750.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.73%)</title><rect x="535.7" y="755.0" width="8.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="538.7" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="535.7" y="739.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="538.7" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.48%)</title><rect x="538.6" y="739.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="541.6" y="750.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="541.4" y="723.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="544.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.24%)</title><rect x="541.4" y="707.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="544.4" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.24%)</title><rect x="544.3" y="851.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="547.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.24%)</title><rect x="547.1" y="899.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.1" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.24%)</title><rect x="547.1" y="883.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="550.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.24%)</title><rect x="547.1" y="867.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getResponseWithNoBody (1 samples, 0.24%)</title><rect x="550.0" y="899.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.24%)</title><rect x="550.0" y="883.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.routeRequest (125 samples, 30.27%)</title><rect x="552.9" y="899.0" width="357.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.9" y="910.0">ru/mail/polis/service/stasyanoi/CustomServer.rout..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (123 samples, 29.78%)</title><rect x="552.9" y="883.0" width="351.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.9" y="894.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (123 samples, 29.78%)</title><rect x="552.9" y="867.0" width="351.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.9" y="878.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (14 samples, 3.39%)</title><rect x="552.9" y="851.0" width="40.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.9" y="862.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.48%)</title><rect x="552.9" y="835.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="555.9" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.48%)</title><rect x="552.9" y="819.0" width="5.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="555.9" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.48%)</title><rect x="552.9" y="803.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="555.9" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.48%)</title><rect x="552.9" y="787.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="555.9" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.24%)</title><rect x="552.9" y="771.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="555.9" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.24%)</title><rect x="552.9" y="755.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="555.9" y="766.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.24%)</title><rect x="552.9" y="739.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="555.9" y="750.0"></text>
</g>
<g>
<title>G1MonitoringSupport::update_eden_size() (1 samples, 0.24%)</title><rect x="552.9" y="723.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="555.9" y="734.0"></text>
</g>
<g>
<title>G1SurvivorRegions::length() const (1 samples, 0.24%)</title><rect x="552.9" y="707.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="555.9" y="718.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.24%)</title><rect x="555.7" y="771.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="558.7" y="782.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.24%)</title><rect x="555.7" y="755.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="558.7" y="766.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.24%)</title><rect x="555.7" y="739.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.7" y="750.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.24%)</title><rect x="555.7" y="723.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="558.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 2.66%)</title><rect x="558.6" y="835.0" width="31.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.6" y="846.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.97%)</title><rect x="558.6" y="819.0" width="11.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="561.6" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.73%)</title><rect x="561.4" y="803.0" width="8.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="564.4" y="814.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.24%)</title><rect x="561.4" y="787.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="564.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.48%)</title><rect x="564.3" y="787.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="567.3" y="798.0"></text>
</g>
<g>
<title>__GI___recv (7 samples, 1.69%)</title><rect x="570.0" y="819.0" width="20.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="573.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.69%)</title><rect x="570.0" y="803.0" width="20.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="573.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.69%)</title><rect x="570.0" y="787.0" width="20.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="573.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 1.69%)</title><rect x="570.0" y="771.0" width="20.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.0" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 1.69%)</title><rect x="570.0" y="755.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="573.0" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 1.69%)</title><rect x="570.0" y="739.0" width="20.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="573.0" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 1.69%)</title><rect x="570.0" y="723.0" width="20.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="573.0" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 1.45%)</title><rect x="572.9" y="707.0" width="17.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="572.9" y="691.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="575.9" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="572.9" y="675.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="575.9" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.24%)</title><rect x="572.9" y="659.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.9" y="670.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.24%)</title><rect x="572.9" y="643.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.9" y="654.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.24%)</title><rect x="572.9" y="627.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="575.9" y="638.0"></text>
</g>
<g>
<title>sk_wait_data (5 samples, 1.21%)</title><rect x="575.7" y="691.0" width="14.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.7" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="575.7" y="675.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="578.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="575.7" y="659.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.7" y="670.0"></text>
</g>
<g>
<title>remove_wait_queue (1 samples, 0.24%)</title><rect x="578.6" y="675.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.6" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.24%)</title><rect x="578.6" y="659.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.6" y="670.0"></text>
</g>
<g>
<title>wait_woken (3 samples, 0.73%)</title><rect x="581.4" y="675.0" width="8.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="584.4" y="686.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.73%)</title><rect x="581.4" y="659.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.4" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.48%)</title><rect x="584.3" y="643.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.3" y="654.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.24%)</title><rect x="590.0" y="835.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="593.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.97%)</title><rect x="592.9" y="851.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="592.9" y="835.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.24%)</title><rect x="592.9" y="819.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.9" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="592.9" y="803.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="595.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.48%)</title><rect x="595.7" y="835.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="598.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.48%)</title><rect x="595.7" y="819.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.48%)</title><rect x="595.7" y="803.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.24%)</title><rect x="601.4" y="835.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.97%)</title><rect x="604.3" y="851.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.48%)</title><rect x="610.0" y="835.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.48%)</title><rect x="610.0" y="819.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.48%)</title><rect x="610.0" y="803.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.24%)</title><rect x="612.9" y="787.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.9" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (2 samples, 0.48%)</title><rect x="615.7" y="851.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.7" y="862.0"></text>
</g>
<g>
<title>__GI___setsockopt (2 samples, 0.48%)</title><rect x="615.7" y="835.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="618.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.48%)</title><rect x="615.7" y="819.0" width="5.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="618.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.48%)</title><rect x="615.7" y="803.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="618.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.48%)</title><rect x="615.7" y="787.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.7" y="798.0"></text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.48%)</title><rect x="615.7" y="771.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.7" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.24%)</title><rect x="615.7" y="755.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="618.7" y="766.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.24%)</title><rect x="615.7" y="739.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="618.7" y="750.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.24%)</title><rect x="618.6" y="755.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.6" y="766.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="618.6" y="739.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="621.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="618.6" y="723.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="621.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (11 samples, 2.66%)</title><rect x="621.4" y="851.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.4" y="862.0">on..</text>
</g>
<g>
<title>__libc_send (11 samples, 2.66%)</title><rect x="621.4" y="835.0" width="31.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="624.4" y="846.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.66%)</title><rect x="621.4" y="819.0" width="31.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="624.4" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.66%)</title><rect x="621.4" y="803.0" width="31.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="624.4" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (11 samples, 2.66%)</title><rect x="621.4" y="787.0" width="31.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.4" y="798.0">__..</text>
</g>
<g>
<title>__sys_sendto (11 samples, 2.66%)</title><rect x="621.4" y="771.0" width="31.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="624.4" y="782.0">__..</text>
</g>
<g>
<title>sock_sendmsg (10 samples, 2.42%)</title><rect x="621.4" y="755.0" width="28.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.4" y="766.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (10 samples, 2.42%)</title><rect x="621.4" y="739.0" width="28.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="624.4" y="750.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (10 samples, 2.42%)</title><rect x="621.4" y="723.0" width="28.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.4" y="734.0">tc..</text>
</g>
<g>
<title>release_sock (4 samples, 0.97%)</title><rect x="621.4" y="707.0" width="11.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="624.4" y="718.0"></text>
</g>
<g>
<title>__release_sock (4 samples, 0.97%)</title><rect x="621.4" y="691.0" width="11.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.4" y="702.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.97%)</title><rect x="621.4" y="675.0" width="11.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="624.4" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.97%)</title><rect x="621.4" y="659.0" width="11.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.4" y="670.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.73%)</title><rect x="621.4" y="643.0" width="8.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.4" y="654.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.73%)</title><rect x="621.4" y="627.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="624.4" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="621.4" y="611.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="624.4" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="621.4" y="595.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="624.4" y="606.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.24%)</title><rect x="624.3" y="611.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="627.3" y="622.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.24%)</title><rect x="627.1" y="611.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="630.1" y="622.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="630.0" y="643.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.0" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="630.0" y="627.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.0" y="638.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="630.0" y="611.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.0" y="622.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.24%)</title><rect x="630.0" y="595.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="633.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 1.45%)</title><rect x="632.9" y="707.0" width="17.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="635.9" y="718.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 1.45%)</title><rect x="632.9" y="691.0" width="17.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="635.9" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.45%)</title><rect x="632.9" y="675.0" width="17.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="635.9" y="686.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.45%)</title><rect x="632.9" y="659.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.9" y="670.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.45%)</title><rect x="632.9" y="643.0" width="17.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="635.9" y="654.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.21%)</title><rect x="635.7" y="627.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="638.7" y="638.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.21%)</title><rect x="635.7" y="611.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.7" y="622.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.21%)</title><rect x="635.7" y="595.0" width="14.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.7" y="606.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.21%)</title><rect x="635.7" y="579.0" width="14.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="638.7" y="590.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.21%)</title><rect x="635.7" y="563.0" width="14.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="638.7" y="574.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.21%)</title><rect x="635.7" y="547.0" width="14.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.7" y="558.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.21%)</title><rect x="635.7" y="531.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="638.7" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.21%)</title><rect x="635.7" y="515.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.7" y="526.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 1.21%)</title><rect x="635.7" y="499.0" width="14.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.7" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.97%)</title><rect x="638.6" y="483.0" width="11.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.6" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.97%)</title><rect x="638.6" y="467.0" width="11.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.6" y="478.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.97%)</title><rect x="638.6" y="451.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="641.6" y="462.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.97%)</title><rect x="638.6" y="435.0" width="11.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="641.6" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.97%)</title><rect x="638.6" y="419.0" width="11.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.6" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.97%)</title><rect x="638.6" y="403.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="641.6" y="414.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.73%)</title><rect x="641.4" y="387.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="644.4" y="398.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.73%)</title><rect x="641.4" y="371.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.4" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.48%)</title><rect x="644.3" y="355.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.3" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.48%)</title><rect x="644.3" y="339.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.3" y="350.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.48%)</title><rect x="644.3" y="323.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.3" y="334.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.48%)</title><rect x="644.3" y="307.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="647.3" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.48%)</title><rect x="644.3" y="291.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="647.3" y="302.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.24%)</title><rect x="647.1" y="275.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="650.1" y="286.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.24%)</title><rect x="647.1" y="259.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.1" y="270.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="650.0" y="755.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="653.0" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="650.0" y="739.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="653.0" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="650.0" y="723.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="653.0" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="650.0" y="707.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="653.0" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (88 samples, 21.31%)</title><rect x="652.9" y="851.0" width="251.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.9" y="862.0">one/nio/pool/Pool.borrowObject</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (88 samples, 21.31%)</title><rect x="652.9" y="835.0" width="251.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.9" y="846.0">one/nio/pool/SocketPool.createObj..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (88 samples, 21.31%)</title><rect x="652.9" y="819.0" width="251.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.9" y="830.0">one/nio/pool/SocketPool.createObj..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (58 samples, 14.04%)</title><rect x="652.9" y="803.0" width="165.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.9" y="814.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (58 samples, 14.04%)</title><rect x="652.9" y="787.0" width="165.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.9" y="798.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>[unknown] (58 samples, 14.04%)</title><rect x="652.9" y="771.0" width="165.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="655.9" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="652.9" y="755.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="655.9" y="766.0"></text>
</g>
<g>
<title>jni_GetArrayLength (1 samples, 0.24%)</title><rect x="652.9" y="739.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="655.9" y="750.0"></text>
</g>
<g>
<title>__libc_connect (57 samples, 13.80%)</title><rect x="655.7" y="755.0" width="162.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="658.7" y="766.0">__libc_connect</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 13.80%)</title><rect x="655.7" y="739.0" width="162.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.7" y="750.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (57 samples, 13.80%)</title><rect x="655.7" y="723.0" width="162.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.7" y="734.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_connect (57 samples, 13.80%)</title><rect x="655.7" y="707.0" width="162.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.7" y="718.0">__x64_sys_connect</text>
</g>
<g>
<title>__sys_connect (57 samples, 13.80%)</title><rect x="655.7" y="691.0" width="162.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.7" y="702.0">__sys_connect</text>
</g>
<g>
<title>inet_stream_connect (56 samples, 13.56%)</title><rect x="655.7" y="675.0" width="160.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="658.7" y="686.0">inet_stream_connect</text>
</g>
<g>
<title>__inet_stream_connect (56 samples, 13.56%)</title><rect x="655.7" y="659.0" width="160.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.7" y="670.0">__inet_stream_connect</text>
</g>
<g>
<title>release_sock (19 samples, 4.60%)</title><rect x="655.7" y="643.0" width="54.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="658.7" y="654.0">relea..</text>
</g>
<g>
<title>__release_sock (19 samples, 4.60%)</title><rect x="655.7" y="627.0" width="54.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="658.7" y="638.0">__rel..</text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 4.60%)</title><rect x="655.7" y="611.0" width="54.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="658.7" y="622.0">tcp_v..</text>
</g>
<g>
<title>tcp_rcv_state_process (18 samples, 4.36%)</title><rect x="658.6" y="595.0" width="51.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="661.6" y="606.0">tcp_r..</text>
</g>
<g>
<title>sock_def_wakeup (1 samples, 0.24%)</title><rect x="658.6" y="579.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="661.6" y="590.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.24%)</title><rect x="658.6" y="563.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="661.6" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.24%)</title><rect x="658.6" y="547.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="661.6" y="558.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.97%)</title><rect x="661.4" y="579.0" width="11.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="664.4" y="590.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.48%)</title><rect x="661.4" y="563.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="664.4" y="574.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.48%)</title><rect x="667.1" y="563.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="670.1" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.48%)</title><rect x="667.1" y="547.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="670.1" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.24%)</title><rect x="667.1" y="531.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.1" y="542.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.24%)</title><rect x="667.1" y="515.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="670.1" y="526.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="670.0" y="531.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="673.0" y="542.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.24%)</title><rect x="670.0" y="515.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="673.0" y="526.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.24%)</title><rect x="670.0" y="499.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="673.0" y="510.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.24%)</title><rect x="670.0" y="483.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="673.0" y="494.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.24%)</title><rect x="670.0" y="467.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.0" y="478.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.24%)</title><rect x="670.0" y="451.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.0" y="462.0"></text>
</g>
<g>
<title>tcp_finish_connect (1 samples, 0.24%)</title><rect x="672.9" y="579.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="675.9" y="590.0"></text>
</g>
<g>
<title>tcp_init_transfer (1 samples, 0.24%)</title><rect x="672.9" y="563.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.9" y="574.0"></text>
</g>
<g>
<title>tcp_send_ack (12 samples, 2.91%)</title><rect x="675.7" y="579.0" width="34.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.7" y="590.0">tc..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (12 samples, 2.91%)</title><rect x="675.7" y="563.0" width="34.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="678.7" y="574.0">__..</text>
</g>
<g>
<title>__tcp_transmit_skb (12 samples, 2.91%)</title><rect x="675.7" y="547.0" width="34.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.7" y="558.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (12 samples, 2.91%)</title><rect x="675.7" y="531.0" width="34.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="678.7" y="542.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (12 samples, 2.91%)</title><rect x="675.7" y="515.0" width="34.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="678.7" y="526.0">__..</text>
</g>
<g>
<title>ip_local_out (12 samples, 2.91%)</title><rect x="675.7" y="499.0" width="34.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="678.7" y="510.0">ip..</text>
</g>
<g>
<title>ip_output (12 samples, 2.91%)</title><rect x="675.7" y="483.0" width="34.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="678.7" y="494.0">ip..</text>
</g>
<g>
<title>ip_finish_output (12 samples, 2.91%)</title><rect x="675.7" y="467.0" width="34.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.7" y="478.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (12 samples, 2.91%)</title><rect x="675.7" y="451.0" width="34.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="678.7" y="462.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (12 samples, 2.91%)</title><rect x="675.7" y="435.0" width="34.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="678.7" y="446.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 2.91%)</title><rect x="675.7" y="419.0" width="34.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.7" y="430.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (12 samples, 2.91%)</title><rect x="675.7" y="403.0" width="34.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.7" y="414.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (12 samples, 2.91%)</title><rect x="675.7" y="387.0" width="34.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="678.7" y="398.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 2.91%)</title><rect x="675.7" y="371.0" width="34.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.7" y="382.0">__..</text>
</g>
<g>
<title>net_rx_action (10 samples, 2.42%)</title><rect x="681.4" y="355.0" width="28.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.4" y="366.0">ne..</text>
</g>
<g>
<title>process_backlog (10 samples, 2.42%)</title><rect x="681.4" y="339.0" width="28.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="684.4" y="350.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (10 samples, 2.42%)</title><rect x="681.4" y="323.0" width="28.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="684.4" y="334.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (10 samples, 2.42%)</title><rect x="681.4" y="307.0" width="28.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.4" y="318.0">__..</text>
</g>
<g>
<title>ip_rcv (10 samples, 2.42%)</title><rect x="681.4" y="291.0" width="28.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.4" y="302.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 2.42%)</title><rect x="681.4" y="275.0" width="28.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.4" y="286.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 2.42%)</title><rect x="681.4" y="259.0" width="28.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.4" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 2.42%)</title><rect x="681.4" y="243.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.4" y="254.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 2.42%)</title><rect x="681.4" y="227.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.4" y="238.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 2.42%)</title><rect x="681.4" y="211.0" width="28.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="684.4" y="222.0">tc..</text>
</g>
<g>
<title>tcp_check_req (5 samples, 1.21%)</title><rect x="681.4" y="195.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="684.4" y="206.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (5 samples, 1.21%)</title><rect x="681.4" y="179.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (5 samples, 1.21%)</title><rect x="681.4" y="163.0" width="14.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="684.4" y="174.0"></text>
</g>
<g>
<title>__inet_inherit_port (1 samples, 0.24%)</title><rect x="681.4" y="147.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="684.4" y="158.0"></text>
</g>
<g>
<title>bictcp_state (1 samples, 0.24%)</title><rect x="684.3" y="147.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="687.3" y="158.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (3 samples, 0.73%)</title><rect x="687.1" y="147.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.1" y="158.0"></text>
</g>
<g>
<title>inet_csk_clone_lock (2 samples, 0.48%)</title><rect x="687.1" y="131.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="690.1" y="142.0"></text>
</g>
<g>
<title>bpf_sk_storage_clone (1 samples, 0.24%)</title><rect x="687.1" y="115.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="690.1" y="126.0"></text>
</g>
<g>
<title>sk_clone_lock (1 samples, 0.24%)</title><rect x="690.0" y="115.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.0" y="126.0"></text>
</g>
<g>
<title>sk_prot_alloc (1 samples, 0.24%)</title><rect x="690.0" y="99.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.0" y="110.0"></text>
</g>
<g>
<title>security_sk_alloc (1 samples, 0.24%)</title><rect x="690.0" y="83.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.0" y="94.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.24%)</title><rect x="690.0" y="67.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="693.0" y="78.0"></text>
</g>
<g>
<title>tcp_init_xmit_timers (1 samples, 0.24%)</title><rect x="692.9" y="131.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="695.9" y="142.0"></text>
</g>
<g>
<title>init_timer_key (1 samples, 0.24%)</title><rect x="692.9" y="115.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="695.9" y="126.0"></text>
</g>
<g>
<title>tcp_child_process (5 samples, 1.21%)</title><rect x="695.7" y="195.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.7" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.48%)</title><rect x="698.6" y="179.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.6" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.48%)</title><rect x="698.6" y="163.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.6" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.48%)</title><rect x="698.6" y="147.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.6" y="158.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.48%)</title><rect x="698.6" y="131.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="701.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (2 samples, 0.48%)</title><rect x="704.3" y="179.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.3" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.24%)</title><rect x="704.3" y="163.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="707.3" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="704.3" y="147.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="707.3" y="158.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="704.3" y="131.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.3" y="142.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.24%)</title><rect x="704.3" y="115.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="707.3" y="126.0"></text>
</g>
<g>
<title>tcp_init_transfer (1 samples, 0.24%)</title><rect x="707.1" y="163.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.1" y="174.0"></text>
</g>
<g>
<title>tcp_init_buffer_space (1 samples, 0.24%)</title><rect x="707.1" y="147.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.1" y="158.0"></text>
</g>
<g>
<title>tcp_sndbuf_expand (1 samples, 0.24%)</title><rect x="707.1" y="131.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="710.1" y="142.0"></text>
</g>
<g>
<title>tcp_v6_connect (37 samples, 8.96%)</title><rect x="710.0" y="643.0" width="105.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="713.0" y="654.0">tcp_v6_connect</text>
</g>
<g>
<title>tcp_v4_connect (37 samples, 8.96%)</title><rect x="710.0" y="627.0" width="105.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.0" y="638.0">tcp_v4_connect</text>
</g>
<g>
<title>inet_hash_connect (2 samples, 0.48%)</title><rect x="710.0" y="611.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.0" y="622.0"></text>
</g>
<g>
<title>__inet_hash_connect (1 samples, 0.24%)</title><rect x="710.0" y="595.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.0" y="606.0"></text>
</g>
<g>
<title>siphash_3u32 (1 samples, 0.24%)</title><rect x="712.9" y="595.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.9" y="606.0"></text>
</g>
<g>
<title>ip_route_output_flow (1 samples, 0.24%)</title><rect x="715.7" y="611.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="718.7" y="622.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (1 samples, 0.24%)</title><rect x="715.7" y="595.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="718.7" y="606.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (1 samples, 0.24%)</title><rect x="715.7" y="579.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="718.7" y="590.0"></text>
</g>
<g>
<title>__ip_dev_find (1 samples, 0.24%)</title><rect x="715.7" y="563.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="718.7" y="574.0"></text>
</g>
<g>
<title>inet_lookup_ifaddr_rcu (1 samples, 0.24%)</title><rect x="715.7" y="547.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="718.7" y="558.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (2 samples, 0.48%)</title><rect x="718.6" y="611.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.6" y="622.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (2 samples, 0.48%)</title><rect x="718.6" y="595.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.6" y="606.0"></text>
</g>
<g>
<title>fib_table_lookup (1 samples, 0.24%)</title><rect x="721.4" y="579.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="724.4" y="590.0"></text>
</g>
<g>
<title>tcp_connect (32 samples, 7.75%)</title><rect x="724.3" y="611.0" width="91.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="727.3" y="622.0">tcp_connect</text>
</g>
<g>
<title>__tcp_transmit_skb (31 samples, 7.51%)</title><rect x="724.3" y="595.0" width="88.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="727.3" y="606.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (30 samples, 7.26%)</title><rect x="724.3" y="579.0" width="85.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="727.3" y="590.0">ip_queue_x..</text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 7.26%)</title><rect x="724.3" y="563.0" width="85.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.3" y="574.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (29 samples, 7.02%)</title><rect x="727.1" y="547.0" width="82.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="730.1" y="558.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (16 samples, 3.87%)</title><rect x="727.1" y="531.0" width="45.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="730.1" y="542.0">__ip..</text>
</g>
<g>
<title>nf_hook_slow (16 samples, 3.87%)</title><rect x="727.1" y="515.0" width="45.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.1" y="526.0">nf_h..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.24%)</title><rect x="727.1" y="499.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="730.1" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.24%)</title><rect x="727.1" y="483.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.1" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (14 samples, 3.39%)</title><rect x="730.0" y="499.0" width="40.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="733.0" y="510.0">ipv..</text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.24%)</title><rect x="730.0" y="483.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.0" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (13 samples, 3.15%)</title><rect x="732.9" y="483.0" width="37.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="494.0">nf_..</text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.24%)</title><rect x="735.7" y="467.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="738.7" y="478.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.24%)</title><rect x="738.6" y="467.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="741.6" y="478.0"></text>
</g>
<g>
<title>destroy_conntrack?[nf_conntrack] (1 samples, 0.24%)</title><rect x="741.4" y="467.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="744.4" y="478.0"></text>
</g>
<g>
<title>init_conntrack.isra.43?[nf_conntrack] (1 samples, 0.24%)</title><rect x="744.3" y="467.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.3" y="478.0"></text>
</g>
<g>
<title>__nf_conntrack_alloc?[nf_conntrack] (1 samples, 0.24%)</title><rect x="744.3" y="451.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="747.3" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="744.3" y="435.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="747.3" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_destroy (4 samples, 0.97%)</title><rect x="747.1" y="467.0" width="11.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="750.1" y="478.0"></text>
</g>
<g>
<title>destroy_conntrack?[nf_conntrack] (4 samples, 0.97%)</title><rect x="747.1" y="451.0" width="11.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.1" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_free?[nf_conntrack] (4 samples, 0.97%)</title><rect x="747.1" y="435.0" width="11.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.1" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.48%)</title><rect x="747.1" y="419.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="750.1" y="430.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.24%)</title><rect x="750.0" y="403.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.0" y="414.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.24%)</title><rect x="750.0" y="387.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_ext_destroy?[nf_conntrack] (1 samples, 0.24%)</title><rect x="752.9" y="419.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="755.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_cleanup_conntrack?[nf_nat] (1 samples, 0.24%)</title><rect x="752.9" y="403.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.9" y="414.0"></text>
</g>
<g>
<title>__nf_nat_cleanup_conntrack?[nf_nat] (1 samples, 0.24%)</title><rect x="752.9" y="387.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="755.9" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="752.9" y="371.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.9" y="382.0"></text>
</g>
<g>
<title>nf_nat_cleanup_conntrack?[nf_nat] (1 samples, 0.24%)</title><rect x="755.7" y="419.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="758.7" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.48%)</title><rect x="758.6" y="467.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="761.6" y="478.0"></text>
</g>
<g>
<title>nf_ct_delete?[nf_conntrack] (1 samples, 0.24%)</title><rect x="758.6" y="451.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="761.6" y="462.0"></text>
</g>
<g>
<title>nf_conntrack_eventmask_report?[nf_conntrack] (1 samples, 0.24%)</title><rect x="758.6" y="435.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.6" y="446.0"></text>
</g>
<g>
<title>ctnetlink_conntrack_event?[nf_conntrack_netlink] (1 samples, 0.24%)</title><rect x="758.6" y="419.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="761.6" y="430.0"></text>
</g>
<g>
<title>nfnetlink_has_listeners?[nfnetlink] (1 samples, 0.24%)</title><rect x="758.6" y="403.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="761.6" y="414.0"></text>
</g>
<g>
<title>netlink_has_listeners (1 samples, 0.24%)</title><rect x="758.6" y="387.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.6" y="398.0"></text>
</g>
<g>
<title>tcp_options.isra.15?[nf_conntrack] (1 samples, 0.24%)</title><rect x="761.4" y="451.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.4" y="462.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.24%)</title><rect x="764.3" y="467.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.3" y="478.0"></text>
</g>
<g>
<title>tcp_new?[nf_conntrack] (1 samples, 0.24%)</title><rect x="767.1" y="467.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.1" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="770.0" y="499.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.0" y="510.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="770.0" y="483.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.0" y="494.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="770.0" y="467.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.0" y="478.0"></text>
</g>
<g>
<title>ip_output (13 samples, 3.15%)</title><rect x="772.9" y="531.0" width="37.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="775.9" y="542.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (13 samples, 3.15%)</title><rect x="772.9" y="515.0" width="37.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.9" y="526.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (13 samples, 3.15%)</title><rect x="772.9" y="499.0" width="37.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="775.9" y="510.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 3.15%)</title><rect x="772.9" y="483.0" width="37.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.9" y="494.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 2.91%)</title><rect x="772.9" y="467.0" width="34.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="775.9" y="478.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (12 samples, 2.91%)</title><rect x="772.9" y="451.0" width="34.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="775.9" y="462.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (12 samples, 2.91%)</title><rect x="772.9" y="435.0" width="34.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="775.9" y="446.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 2.91%)</title><rect x="772.9" y="419.0" width="34.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="775.9" y="430.0">__..</text>
</g>
<g>
<title>net_rx_action (11 samples, 2.66%)</title><rect x="775.7" y="403.0" width="31.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.7" y="414.0">ne..</text>
</g>
<g>
<title>process_backlog (11 samples, 2.66%)</title><rect x="775.7" y="387.0" width="31.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="778.7" y="398.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 2.66%)</title><rect x="775.7" y="371.0" width="31.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="778.7" y="382.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 2.66%)</title><rect x="775.7" y="355.0" width="31.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="778.7" y="366.0">__..</text>
</g>
<g>
<title>ip_rcv (11 samples, 2.66%)</title><rect x="775.7" y="339.0" width="31.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="778.7" y="350.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 2.42%)</title><rect x="775.7" y="323.0" width="28.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.7" y="334.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 2.42%)</title><rect x="775.7" y="307.0" width="28.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="778.7" y="318.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 2.18%)</title><rect x="775.7" y="291.0" width="25.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="778.7" y="302.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 2.18%)</title><rect x="775.7" y="275.0" width="25.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="778.7" y="286.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 2.18%)</title><rect x="775.7" y="259.0" width="25.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="778.7" y="270.0">t..</text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 1.94%)</title><rect x="778.6" y="243.0" width="22.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.6" y="254.0">t..</text>
</g>
<g>
<title>tcp_rcv_state_process (8 samples, 1.94%)</title><rect x="778.6" y="227.0" width="22.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.6" y="238.0">t..</text>
</g>
<g>
<title>tcp_v6_conn_request (8 samples, 1.94%)</title><rect x="778.6" y="211.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.6" y="222.0">t..</text>
</g>
<g>
<title>tcp_v4_conn_request (8 samples, 1.94%)</title><rect x="778.6" y="195.0" width="22.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="781.6" y="206.0">t..</text>
</g>
<g>
<title>tcp_conn_request (8 samples, 1.94%)</title><rect x="778.6" y="179.0" width="22.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="781.6" y="190.0">t..</text>
</g>
<g>
<title>inet_csk_reqsk_queue_hash_add (1 samples, 0.24%)</title><rect x="778.6" y="163.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="781.6" y="174.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="778.6" y="147.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.6" y="158.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.24%)</title><rect x="778.6" y="131.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="781.6" y="142.0"></text>
</g>
<g>
<title>inet_reqsk_alloc (1 samples, 0.24%)</title><rect x="781.4" y="163.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.4" y="174.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="781.4" y="147.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="784.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_init_seq (1 samples, 0.24%)</title><rect x="784.3" y="163.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="787.3" y="174.0"></text>
</g>
<g>
<title>siphash_3u32 (1 samples, 0.24%)</title><rect x="784.3" y="147.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_init_ts_off (1 samples, 0.24%)</title><rect x="787.1" y="163.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="790.1" y="174.0"></text>
</g>
<g>
<title>secure_tcp_ts_off (1 samples, 0.24%)</title><rect x="787.1" y="147.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="790.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_send_synack (4 samples, 0.97%)</title><rect x="790.0" y="163.0" width="11.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.0" y="174.0"></text>
</g>
<g>
<title>ip_build_and_send_pkt (2 samples, 0.48%)</title><rect x="790.0" y="147.0" width="5.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="793.0" y="158.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.48%)</title><rect x="790.0" y="131.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.0" y="142.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.48%)</title><rect x="790.0" y="115.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.0" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.48%)</title><rect x="790.0" y="99.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="793.0" y="110.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.24%)</title><rect x="790.0" y="83.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.0" y="94.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.24%)</title><rect x="790.0" y="67.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="793.0" y="78.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.24%)</title><rect x="792.9" y="83.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="795.9" y="94.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.24%)</title><rect x="792.9" y="67.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="795.9" y="78.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.24%)</title><rect x="792.9" y="51.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="795.9" y="62.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.24%)</title><rect x="792.9" y="35.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="795.9" y="46.0"></text>
</g>
<g>
<title>ipv4_default_advmss (1 samples, 0.24%)</title><rect x="795.7" y="147.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.7" y="158.0"></text>
</g>
<g>
<title>tcp_make_synack (1 samples, 0.24%)</title><rect x="798.6" y="147.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="801.6" y="158.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.24%)</title><rect x="798.6" y="131.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.6" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.24%)</title><rect x="801.4" y="291.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.4" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.24%)</title><rect x="801.4" y="275.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="804.4" y="286.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.24%)</title><rect x="801.4" y="259.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="804.4" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.24%)</title><rect x="804.3" y="323.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="807.3" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in?[nf_nat] (1 samples, 0.24%)</title><rect x="804.3" y="307.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="807.3" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="804.3" y="291.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="807.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn?[nf_nat] (1 samples, 0.24%)</title><rect x="804.3" y="275.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="807.3" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.24%)</title><rect x="807.1" y="467.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="810.1" y="478.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.24%)</title><rect x="807.1" y="451.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="810.1" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.24%)</title><rect x="807.1" y="435.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="810.1" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="807.1" y="419.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="810.1" y="430.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.24%)</title><rect x="807.1" y="403.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="810.1" y="414.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.24%)</title><rect x="810.0" y="579.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="813.0" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.24%)</title><rect x="812.9" y="595.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="815.9" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.24%)</title><rect x="812.9" y="579.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="815.9" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.24%)</title><rect x="812.9" y="563.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="815.9" y="574.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.24%)</title><rect x="812.9" y="547.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.9" y="558.0"></text>
</g>
<g>
<title>move_addr_to_kernel.part.23 (1 samples, 0.24%)</title><rect x="815.7" y="675.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.7" y="686.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.24%)</title><rect x="815.7" y="659.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setKeepAlive (4 samples, 0.97%)</title><rect x="818.6" y="803.0" width="11.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.6" y="814.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.73%)</title><rect x="821.4" y="787.0" width="8.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="824.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.73%)</title><rect x="821.4" y="771.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="824.4" y="782.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.24%)</title><rect x="821.4" y="755.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.4" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.48%)</title><rect x="824.3" y="755.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="827.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.48%)</title><rect x="824.3" y="739.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.3" y="750.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.24%)</title><rect x="824.3" y="723.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.3" y="734.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.24%)</title><rect x="824.3" y="707.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.3" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.24%)</title><rect x="824.3" y="691.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.3" y="702.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.24%)</title><rect x="824.3" y="675.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="827.3" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.24%)</title><rect x="824.3" y="659.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="827.3" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.24%)</title><rect x="824.3" y="643.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.3" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.24%)</title><rect x="824.3" y="627.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="827.3" y="638.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.24%)</title><rect x="824.3" y="611.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.3" y="622.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.24%)</title><rect x="827.1" y="723.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="830.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setNoDelay (3 samples, 0.73%)</title><rect x="830.0" y="803.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.0" y="814.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.73%)</title><rect x="830.0" y="787.0" width="8.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="833.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.48%)</title><rect x="832.9" y="771.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.48%)</title><rect x="832.9" y="755.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="835.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.48%)</title><rect x="832.9" y="739.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="835.9" y="750.0"></text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.48%)</title><rect x="832.9" y="723.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="835.9" y="734.0"></text>
</g>
<g>
<title>sock_common_setsockopt (2 samples, 0.48%)</title><rect x="832.9" y="707.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.9" y="718.0"></text>
</g>
<g>
<title>do_tcp_setsockopt.isra.44 (1 samples, 0.24%)</title><rect x="832.9" y="691.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="835.9" y="702.0"></text>
</g>
<g>
<title>tcp_setsockopt (1 samples, 0.24%)</title><rect x="835.7" y="691.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.7" y="702.0"></text>
</g>
<g>
<title>do_tcp_setsockopt.isra.44 (1 samples, 0.24%)</title><rect x="835.7" y="675.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.7" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="835.7" y="659.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.7" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.24%)</title><rect x="835.7" y="643.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (3 samples, 0.73%)</title><rect x="838.6" y="803.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.6" y="814.0"></text>
</g>
<g>
<title>__GI___setsockopt (2 samples, 0.48%)</title><rect x="841.4" y="787.0" width="5.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="844.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="844.3" y="771.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="844.3" y="755.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="847.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.24%)</title><rect x="844.3" y="739.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.3" y="750.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.24%)</title><rect x="844.3" y="723.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="847.3" y="734.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.24%)</title><rect x="844.3" y="707.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="847.3" y="718.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.24%)</title><rect x="844.3" y="691.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="847.3" y="702.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.24%)</title><rect x="844.3" y="675.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="847.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (20 samples, 4.84%)</title><rect x="847.1" y="803.0" width="57.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.1" y="814.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (20 samples, 4.84%)</title><rect x="847.1" y="787.0" width="57.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.1" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.socket0 (20 samples, 4.84%)</title><rect x="847.1" y="771.0" width="57.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.1" y="782.0">one/ni..</text>
</g>
<g>
<title>__GI_socket (20 samples, 4.84%)</title><rect x="847.1" y="755.0" width="57.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="850.1" y="766.0">__GI_s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 4.84%)</title><rect x="847.1" y="739.0" width="57.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.1" y="750.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 4.84%)</title><rect x="847.1" y="723.0" width="57.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="850.1" y="734.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_socket (19 samples, 4.60%)</title><rect x="850.0" y="707.0" width="54.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="853.0" y="718.0">__x64..</text>
</g>
<g>
<title>__sys_socket (19 samples, 4.60%)</title><rect x="850.0" y="691.0" width="54.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="853.0" y="702.0">__sys..</text>
</g>
<g>
<title>__sock_create (10 samples, 2.42%)</title><rect x="850.0" y="675.0" width="28.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.0" y="686.0">__..</text>
</g>
<g>
<title>inet6_create (7 samples, 1.69%)</title><rect x="850.0" y="659.0" width="20.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.0" y="670.0"></text>
</g>
<g>
<title>sk_alloc (6 samples, 1.45%)</title><rect x="850.0" y="643.0" width="17.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="853.0" y="654.0"></text>
</g>
<g>
<title>cgroup_sk_alloc (1 samples, 0.24%)</title><rect x="850.0" y="627.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.0" y="638.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.24%)</title><rect x="852.9" y="627.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="855.9" y="638.0"></text>
</g>
<g>
<title>sk_prot_alloc (4 samples, 0.97%)</title><rect x="855.7" y="627.0" width="11.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="858.7" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.73%)</title><rect x="855.7" y="611.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="858.7" y="622.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (3 samples, 0.73%)</title><rect x="855.7" y="595.0" width="8.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="858.7" y="606.0"></text>
</g>
<g>
<title>security_sk_alloc (1 samples, 0.24%)</title><rect x="864.3" y="611.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.3" y="622.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.24%)</title><rect x="864.3" y="595.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.3" y="606.0"></text>
</g>
<g>
<title>tcp_v6_init_sock (1 samples, 0.24%)</title><rect x="867.1" y="643.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="870.1" y="654.0"></text>
</g>
<g>
<title>tcp_init_sock (1 samples, 0.24%)</title><rect x="867.1" y="627.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.1" y="638.0"></text>
</g>
<g>
<title>tcp_assign_congestion_control (1 samples, 0.24%)</title><rect x="867.1" y="611.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.1" y="622.0"></text>
</g>
<g>
<title>security_socket_create (1 samples, 0.24%)</title><rect x="870.0" y="659.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.0" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_create (1 samples, 0.24%)</title><rect x="870.0" y="643.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.0" y="654.0"></text>
</g>
<g>
<title>aa_af_perm (1 samples, 0.24%)</title><rect x="870.0" y="627.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.0" y="638.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.24%)</title><rect x="872.9" y="659.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="875.9" y="670.0"></text>
</g>
<g>
<title>try_module_get (1 samples, 0.24%)</title><rect x="875.7" y="659.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="878.7" y="670.0"></text>
</g>
<g>
<title>get_unused_fd_flags (3 samples, 0.73%)</title><rect x="878.6" y="675.0" width="8.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="881.6" y="686.0"></text>
</g>
<g>
<title>__alloc_fd (2 samples, 0.48%)</title><rect x="878.6" y="659.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.6" y="670.0"></text>
</g>
<g>
<title>find_next_zero_bit (1 samples, 0.24%)</title><rect x="884.3" y="659.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.3" y="670.0"></text>
</g>
<g>
<title>sock_alloc (1 samples, 0.24%)</title><rect x="887.1" y="675.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="890.1" y="686.0"></text>
</g>
<g>
<title>sock_alloc_file (5 samples, 1.21%)</title><rect x="890.0" y="675.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.0" y="686.0"></text>
</g>
<g>
<title>alloc_file_pseudo (5 samples, 1.21%)</title><rect x="890.0" y="659.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="893.0" y="670.0"></text>
</g>
<g>
<title>alloc_file (4 samples, 0.97%)</title><rect x="890.0" y="643.0" width="11.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="893.0" y="654.0"></text>
</g>
<g>
<title>alloc_empty_file (4 samples, 0.97%)</title><rect x="890.0" y="627.0" width="11.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.0" y="638.0"></text>
</g>
<g>
<title>__alloc_file (4 samples, 0.97%)</title><rect x="890.0" y="611.0" width="11.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="893.0" y="622.0"></text>
</g>
<g>
<title>kmem_cache_alloc (4 samples, 0.97%)</title><rect x="890.0" y="595.0" width="11.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="893.0" y="606.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.48%)</title><rect x="892.9" y="579.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.9" y="590.0"></text>
</g>
<g>
<title>___slab_alloc (2 samples, 0.48%)</title><rect x="892.9" y="563.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="895.9" y="574.0"></text>
</g>
<g>
<title>new_slab (2 samples, 0.48%)</title><rect x="892.9" y="547.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="895.9" y="558.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.24%)</title><rect x="895.7" y="531.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="898.7" y="542.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.24%)</title><rect x="895.7" y="515.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.7" y="526.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.24%)</title><rect x="895.7" y="499.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="898.7" y="510.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.24%)</title><rect x="895.7" y="483.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="898.7" y="494.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.24%)</title><rect x="895.7" y="467.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="898.7" y="478.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.24%)</title><rect x="898.6" y="579.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="901.6" y="590.0"></text>
</g>
<g>
<title>mntget (1 samples, 0.24%)</title><rect x="901.4" y="643.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (2 samples, 0.48%)</title><rect x="904.3" y="883.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (2 samples, 0.48%)</title><rect x="904.3" y="867.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.48%)</title><rect x="904.3" y="851.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.48%)</title><rect x="904.3" y="835.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.3" y="846.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (30 samples, 7.26%)</title><rect x="910.0" y="1011.0" width="85.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.0" y="1022.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (2 samples, 0.48%)</title><rect x="921.4" y="995.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (2 samples, 0.48%)</title><rect x="921.4" y="979.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.4" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.24%)</title><rect x="924.3" y="963.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.3" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.24%)</title><rect x="924.3" y="947.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="927.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (14 samples, 3.39%)</title><rect x="927.1" y="995.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="930.1" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (14 samples, 3.39%)</title><rect x="927.1" y="979.0" width="40.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="930.1" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (14 samples, 3.39%)</title><rect x="927.1" y="963.0" width="40.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.1" y="974.0">one..</text>
</g>
<g>
<title>__GI_accept (10 samples, 2.42%)</title><rect x="932.9" y="947.0" width="28.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="935.9" y="958.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 2.42%)</title><rect x="932.9" y="931.0" width="28.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="935.9" y="942.0">en..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.42%)</title><rect x="932.9" y="915.0" width="28.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.9" y="926.0">do..</text>
</g>
<g>
<title>__x64_sys_accept (10 samples, 2.42%)</title><rect x="932.9" y="899.0" width="28.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="935.9" y="910.0">__..</text>
</g>
<g>
<title>__sys_accept4 (10 samples, 2.42%)</title><rect x="932.9" y="883.0" width="28.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.9" y="894.0">__..</text>
</g>
<g>
<title>inet_accept (3 samples, 0.73%)</title><rect x="932.9" y="867.0" width="8.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.9" y="878.0"></text>
</g>
<g>
<title>inet_csk_accept (2 samples, 0.48%)</title><rect x="932.9" y="851.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.9" y="862.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.48%)</title><rect x="932.9" y="835.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="935.9" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="935.7" y="819.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.7" y="830.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.24%)</title><rect x="935.7" y="803.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.7" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.24%)</title><rect x="935.7" y="787.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.7" y="798.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="938.6" y="851.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.6" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.24%)</title><rect x="938.6" y="835.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.6" y="846.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.24%)</title><rect x="938.6" y="819.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="941.6" y="830.0"></text>
</g>
<g>
<title>sock_alloc (3 samples, 0.73%)</title><rect x="941.4" y="867.0" width="8.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="944.4" y="878.0"></text>
</g>
<g>
<title>new_inode_pseudo (3 samples, 0.73%)</title><rect x="941.4" y="851.0" width="8.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="944.4" y="862.0"></text>
</g>
<g>
<title>alloc_inode (2 samples, 0.48%)</title><rect x="941.4" y="835.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="944.4" y="846.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.24%)</title><rect x="941.4" y="819.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="944.4" y="830.0"></text>
</g>
<g>
<title>map_id_range_down (1 samples, 0.24%)</title><rect x="941.4" y="803.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="944.4" y="814.0"></text>
</g>
<g>
<title>sock_alloc_inode (1 samples, 0.24%)</title><rect x="944.3" y="819.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="947.3" y="830.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="944.3" y="803.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="947.3" y="814.0"></text>
</g>
<g>
<title>sock_alloc_inode (1 samples, 0.24%)</title><rect x="947.1" y="835.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.1" y="846.0"></text>
</g>
<g>
<title>sock_alloc_file (4 samples, 0.97%)</title><rect x="950.0" y="867.0" width="11.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="953.0" y="878.0"></text>
</g>
<g>
<title>alloc_file_pseudo (4 samples, 0.97%)</title><rect x="950.0" y="851.0" width="11.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="953.0" y="862.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.24%)</title><rect x="950.0" y="835.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.0" y="846.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.24%)</title><rect x="950.0" y="819.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="953.0" y="830.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.24%)</title><rect x="950.0" y="803.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.0" y="814.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.24%)</title><rect x="950.0" y="787.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.0" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.24%)</title><rect x="950.0" y="771.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="953.0" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="950.0" y="755.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="953.0" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.24%)</title><rect x="950.0" y="739.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.0" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.24%)</title><rect x="950.0" y="723.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.0" y="734.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.24%)</title><rect x="950.0" y="707.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="953.0" y="718.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.24%)</title><rect x="950.0" y="691.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.0" y="702.0"></text>
</g>
<g>
<title>d_alloc_pseudo (2 samples, 0.48%)</title><rect x="952.9" y="835.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.9" y="846.0"></text>
</g>
<g>
<title>__d_alloc (1 samples, 0.24%)</title><rect x="952.9" y="819.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="955.9" y="830.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.24%)</title><rect x="955.7" y="819.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="958.7" y="830.0"></text>
</g>
<g>
<title>mntget (1 samples, 0.24%)</title><rect x="958.6" y="835.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="961.6" y="846.0"></text>
</g>
<g>
<title>__libc_fcntl (2 samples, 0.48%)</title><rect x="961.4" y="947.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="964.4" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.24%)</title><rect x="964.3" y="931.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.3" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="964.3" y="915.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.3" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.24%)</title><rect x="964.3" y="899.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="967.3" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.24%)</title><rect x="964.3" y="883.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="967.3" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.24%)</title><rect x="964.3" y="867.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="967.3" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.24%)</title><rect x="964.3" y="851.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.3" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.24%)</title><rect x="964.3" y="835.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="967.3" y="846.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (10 samples, 2.42%)</title><rect x="967.1" y="995.0" width="28.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.1" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (10 samples, 2.42%)</title><rect x="967.1" y="979.0" width="28.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="970.1" y="990.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.add (3 samples, 0.73%)</title><rect x="967.1" y="963.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.48%)</title><rect x="970.0" y="947.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.0" y="958.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.48%)</title><rect x="970.0" y="931.0" width="5.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="973.0" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.24%)</title><rect x="970.0" y="915.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="973.0" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.24%)</title><rect x="972.9" y="915.0" width="2.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="975.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (7 samples, 1.69%)</title><rect x="975.7" y="963.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="978.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (7 samples, 1.69%)</title><rect x="975.7" y="947.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.7" y="958.0"></text>
</g>
<g>
<title>epoll_ctl (7 samples, 1.69%)</title><rect x="975.7" y="931.0" width="20.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="978.7" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.69%)</title><rect x="975.7" y="915.0" width="20.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="978.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.69%)</title><rect x="975.7" y="899.0" width="20.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="978.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (7 samples, 1.69%)</title><rect x="975.7" y="883.0" width="20.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.7" y="894.0"></text>
</g>
<g>
<title>ep_insert (6 samples, 1.45%)</title><rect x="978.6" y="867.0" width="17.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="981.6" y="878.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.48%)</title><rect x="990.0" y="851.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="993.0" y="862.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.48%)</title><rect x="990.0" y="835.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="993.0" y="846.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.48%)</title><rect x="990.0" y="819.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="993.0" y="830.0"></text>
</g>
<g>
<title>ep_ptable_queue_proc (2 samples, 0.48%)</title><rect x="990.0" y="803.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.0" y="814.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.48%)</title><rect x="990.0" y="787.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (62 samples, 15.01%)</title><rect x="995.7" y="1011.0" width="177.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.7" y="1022.0">one/nio/server/Selector..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.24%)</title><rect x="1027.1" y="995.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 4.36%)</title><rect x="1030.0" y="995.0" width="51.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.0" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 4.36%)</title><rect x="1030.0" y="979.0" width="51.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.0" y="990.0">one/n..</text>
</g>
<g>
<title>[unknown] (14 samples, 3.39%)</title><rect x="1032.9" y="963.0" width="40.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1035.9" y="974.0">[un..</text>
</g>
<g>
<title>epoll_wait (14 samples, 3.39%)</title><rect x="1032.9" y="947.0" width="40.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1035.9" y="958.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.66%)</title><rect x="1041.4" y="931.0" width="31.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.4" y="942.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.66%)</title><rect x="1041.4" y="915.0" width="31.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.4" y="926.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 2.18%)</title><rect x="1041.4" y="899.0" width="25.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.4" y="910.0">_..</text>
</g>
<g>
<title>do_epoll_wait (9 samples, 2.18%)</title><rect x="1041.4" y="883.0" width="25.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1044.4" y="894.0">d..</text>
</g>
<g>
<title>ep_poll (9 samples, 2.18%)</title><rect x="1041.4" y="867.0" width="25.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.4" y="878.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (3 samples, 0.73%)</title><rect x="1041.4" y="851.0" width="8.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1044.4" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.73%)</title><rect x="1041.4" y="835.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1044.4" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.73%)</title><rect x="1041.4" y="819.0" width="8.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.4" y="830.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.73%)</title><rect x="1041.4" y="803.0" width="8.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.4" y="814.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.24%)</title><rect x="1044.3" y="787.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1047.3" y="798.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.24%)</title><rect x="1047.1" y="787.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1050.1" y="798.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 1.45%)</title><rect x="1050.0" y="851.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1053.0" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.24%)</title><rect x="1050.0" y="835.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1053.0" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 1.21%)</title><rect x="1052.9" y="835.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.9" y="846.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.97%)</title><rect x="1055.7" y="819.0" width="11.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1058.7" y="830.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.97%)</title><rect x="1055.7" y="803.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1058.7" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.97%)</title><rect x="1055.7" y="787.0" width="11.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1058.7" y="798.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.48%)</title><rect x="1067.1" y="899.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.1" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.24%)</title><rect x="1067.1" y="883.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1070.1" y="894.0"></text>
</g>
<g>
<title>dput (1 samples, 0.24%)</title><rect x="1067.1" y="867.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1070.1" y="878.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.24%)</title><rect x="1070.0" y="883.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1073.0" y="894.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.24%)</title><rect x="1072.9" y="963.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1075.9" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.48%)</title><rect x="1075.7" y="963.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1078.7" y="974.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.48%)</title><rect x="1075.7" y="947.0" width="5.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1078.7" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.48%)</title><rect x="1075.7" y="931.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1078.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (32 samples, 7.75%)</title><rect x="1081.4" y="995.0" width="91.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1084.4" y="1006.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 7.51%)</title><rect x="1081.4" y="979.0" width="88.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.4" y="990.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18 samples, 4.36%)</title><rect x="1081.4" y="963.0" width="51.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.4" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 3.15%)</title><rect x="1087.1" y="947.0" width="37.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.1" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 3.15%)</title><rect x="1087.1" y="931.0" width="37.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.1" y="942.0">one..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (10 samples, 2.42%)</title><rect x="1090.0" y="915.0" width="28.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.0" y="926.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.24%)</title><rect x="1090.0" y="899.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="1090.0" y="883.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.24%)</title><rect x="1090.0" y="867.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (9 samples, 2.18%)</title><rect x="1092.9" y="899.0" width="25.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.9" y="910.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 2.18%)</title><rect x="1092.9" y="883.0" width="25.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1095.9" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 2.18%)</title><rect x="1092.9" y="867.0" width="25.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1095.9" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 2.18%)</title><rect x="1092.9" y="851.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 2.18%)</title><rect x="1092.9" y="835.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.9" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 2.18%)</title><rect x="1092.9" y="819.0" width="25.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.9" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 2.18%)</title><rect x="1092.9" y="803.0" width="25.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.9" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 2.18%)</title><rect x="1092.9" y="787.0" width="25.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.9" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 2.18%)</title><rect x="1092.9" y="771.0" width="25.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.9" y="782.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.73%)</title><rect x="1095.7" y="755.0" width="8.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1098.7" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.24%)</title><rect x="1095.7" y="739.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1098.7" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.48%)</title><rect x="1098.6" y="739.0" width="5.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1101.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.21%)</title><rect x="1104.3" y="755.0" width="14.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1107.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.21%)</title><rect x="1104.3" y="739.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1107.3" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.21%)</title><rect x="1104.3" y="723.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1107.3" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.21%)</title><rect x="1104.3" y="707.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1107.3" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.21%)</title><rect x="1104.3" y="691.0" width="14.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.3" y="702.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.21%)</title><rect x="1104.3" y="675.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.3" y="686.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.21%)</title><rect x="1104.3" y="659.0" width="14.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.3" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.21%)</title><rect x="1104.3" y="643.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1107.3" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.21%)</title><rect x="1104.3" y="627.0" width="14.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.48%)</title><rect x="1118.6" y="915.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.48%)</title><rect x="1118.6" y="899.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.48%)</title><rect x="1118.6" y="883.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.6" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.48%)</title><rect x="1118.6" y="867.0" width="5.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1121.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.48%)</title><rect x="1124.3" y="947.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.3" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1124.3" y="931.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1124.3" y="915.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.3" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.24%)</title><rect x="1127.1" y="931.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="1130.0" y="947.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="1130.0" y="931.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="1130.0" y="915.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.0" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 3.15%)</title><rect x="1132.9" y="963.0" width="37.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.9" y="974.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 3.15%)</title><rect x="1132.9" y="947.0" width="37.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.9" y="958.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.97%)</title><rect x="1132.9" y="931.0" width="11.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1135.9" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.48%)</title><rect x="1132.9" y="915.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.9" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.24%)</title><rect x="1138.6" y="915.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1141.6" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="1141.4" y="915.0" width="2.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1144.4" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.24%)</title><rect x="1141.4" y="899.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.4" y="910.0"></text>
</g>
<g>
<title>__GI___recv (9 samples, 2.18%)</title><rect x="1144.3" y="931.0" width="25.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1147.3" y="942.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 2.18%)</title><rect x="1144.3" y="915.0" width="25.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1147.3" y="926.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.18%)</title><rect x="1144.3" y="899.0" width="25.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1147.3" y="910.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 1.94%)</title><rect x="1147.1" y="883.0" width="22.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.1" y="894.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (8 samples, 1.94%)</title><rect x="1147.1" y="867.0" width="22.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.1" y="878.0">_..</text>
</g>
<g>
<title>sock_recvmsg (7 samples, 1.69%)</title><rect x="1147.1" y="851.0" width="20.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.1" y="862.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.24%)</title><rect x="1147.1" y="835.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.1" y="846.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.97%)</title><rect x="1150.0" y="835.0" width="11.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.0" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.97%)</title><rect x="1150.0" y="819.0" width="11.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.0" y="830.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.24%)</title><rect x="1150.0" y="803.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.0" y="814.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="1150.0" y="787.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1153.0" y="798.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.24%)</title><rect x="1150.0" y="771.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1153.0" y="782.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.24%)</title><rect x="1152.9" y="803.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.9" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.48%)</title><rect x="1155.7" y="803.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1158.7" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.24%)</title><rect x="1155.7" y="787.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.7" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.24%)</title><rect x="1155.7" y="771.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.7" y="782.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.24%)</title><rect x="1155.7" y="755.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.7" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.24%)</title><rect x="1155.7" y="739.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1158.7" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.24%)</title><rect x="1158.6" y="787.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.6" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.48%)</title><rect x="1161.4" y="835.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1164.4" y="846.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.48%)</title><rect x="1161.4" y="819.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1164.4" y="830.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.48%)</title><rect x="1161.4" y="803.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.4" y="814.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.48%)</title><rect x="1161.4" y="787.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1164.4" y="798.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="1167.1" y="851.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1170.1" y="862.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="1167.1" y="835.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1170.1" y="846.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="1167.1" y="819.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.1" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="1167.1" y="803.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.1" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.24%)</title><rect x="1170.0" y="979.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.0" y="990.0"></text>
</g>
<g>
<title>start_thread (6 samples, 1.45%)</title><rect x="1172.9" y="1011.0" width="17.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1175.9" y="1022.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 1.45%)</title><rect x="1172.9" y="995.0" width="17.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1175.9" y="1006.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 1.45%)</title><rect x="1172.9" y="979.0" width="17.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.9" y="990.0"></text>
</g>
<g>
<title>JavaThread::run() (6 samples, 1.45%)</title><rect x="1172.9" y="963.0" width="17.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.9" y="974.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 1.45%)</title><rect x="1172.9" y="947.0" width="17.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.9" y="958.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 1.45%)</title><rect x="1172.9" y="931.0" width="17.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.9" y="942.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 1.21%)</title><rect x="1172.9" y="915.0" width="14.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.9" y="926.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 1.21%)</title><rect x="1172.9" y="899.0" width="14.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.9" y="910.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.73%)</title><rect x="1172.9" y="883.0" width="8.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.9" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.73%)</title><rect x="1172.9" y="867.0" width="8.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.48%)</title><rect x="1172.9" y="851.0" width="5.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.9" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.24%)</title><rect x="1172.9" y="835.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.9" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.24%)</title><rect x="1172.9" y="819.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.9" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.24%)</title><rect x="1175.7" y="835.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.7" y="846.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.24%)</title><rect x="1175.7" y="819.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.24%)</title><rect x="1178.6" y="851.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.6" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.24%)</title><rect x="1178.6" y="835.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.6" y="846.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.48%)</title><rect x="1181.4" y="883.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.4" y="894.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.24%)</title><rect x="1181.4" y="867.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.4" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.24%)</title><rect x="1181.4" y="851.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.4" y="862.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.24%)</title><rect x="1181.4" y="835.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.24%)</title><rect x="1184.3" y="867.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.24%)</title><rect x="1184.3" y="851.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.24%)</title><rect x="1184.3" y="835.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.24%)</title><rect x="1184.3" y="819.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.24%)</title><rect x="1187.1" y="915.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.24%)</title><rect x="1187.1" y="899.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.24%)</title><rect x="1187.1" y="883.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.24%)</title><rect x="1187.1" y="867.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.24%)</title><rect x="1187.1" y="851.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (1 samples, 0.24%)</title><rect x="1187.1" y="835.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>NMethodSweeper::notify(int) (1 samples, 0.24%)</title><rect x="1187.1" y="819.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
</g>
</svg>
