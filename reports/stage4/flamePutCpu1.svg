<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (395 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.51%)</title><rect x="10.0" y="867.0" width="6.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.51%)</title><rect x="10.0" y="851.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="16.0" y="867.0" width="3.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="19.0" y="878.0"></text>
</g>
<g>
<title>__uflow (1 samples, 0.25%)</title><rect x="16.0" y="851.0" width="3.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="19.0" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.51%)</title><rect x="19.0" y="867.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="22.0" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.51%)</title><rect x="19.0" y="851.0" width="5.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="22.0" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.51%)</title><rect x="19.0" y="835.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.51%)</title><rect x="19.0" y="819.0" width="5.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.51%)</title><rect x="19.0" y="803.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="22.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.51%)</title><rect x="19.0" y="787.0" width="5.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.51%)</title><rect x="19.0" y="771.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.51%)</title><rect x="19.0" y="755.0" width="5.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="22.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.51%)</title><rect x="19.0" y="739.0" width="5.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.51%)</title><rect x="19.0" y="723.0" width="5.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="22.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.51%)</title><rect x="19.0" y="707.0" width="5.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="22.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.51%)</title><rect x="19.0" y="691.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.51%)</title><rect x="19.0" y="675.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="22.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.51%)</title><rect x="19.0" y="659.0" width="5.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.0" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.51%)</title><rect x="19.0" y="643.0" width="5.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.0" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14128013298884155605.so (2 samples, 0.51%)</title><rect x="19.0" y="627.0" width="5.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="22.0" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14128013298884155605.so (2 samples, 0.51%)</title><rect x="19.0" y="611.0" width="5.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="22.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.51%)</title><rect x="19.0" y="595.0" width="5.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.51%)</title><rect x="19.0" y="579.0" width="5.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="22.0" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.25%)</title><rect x="19.0" y="563.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="22.0" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.25%)</title><rect x="19.0" y="547.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="22.0" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.25%)</title><rect x="19.0" y="531.0" width="2.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="22.0" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="19.0" y="515.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.0" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.25%)</title><rect x="21.9" y="563.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="24.9" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.25%)</title><rect x="21.9" y="547.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="24.9" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.25%)</title><rect x="21.9" y="531.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.9" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="21.9" y="515.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="24.9" y="526.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.25%)</title><rect x="21.9" y="499.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="24.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (295 samples, 74.68%)</title><rect x="24.9" y="867.0" width="881.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.9" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (295 samples, 74.68%)</title><rect x="24.9" y="851.0" width="881.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.9" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (295 samples, 74.68%)</title><rect x="24.9" y="835.0" width="881.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.9" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.25%)</title><rect x="69.7" y="819.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.51%)</title><rect x="72.7" y="819.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="75.7" y="803.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="75.7" y="787.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="75.7" y="771.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 8.86%)</title><rect x="78.7" y="819.0" width="104.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.7" y="830.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (35 samples, 8.86%)</title><rect x="78.7" y="803.0" width="104.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.7" y="814.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 7.09%)</title><rect x="84.7" y="787.0" width="83.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.7" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.25%)</title><rect x="84.7" y="771.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="84.7" y="755.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 6.84%)</title><rect x="87.7" y="771.0" width="80.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.7" y="782.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 6.58%)</title><rect x="90.7" y="755.0" width="77.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.7" y="766.0">jdk/inter..</text>
</g>
<g>
<title>Unsafe_Park (14 samples, 3.54%)</title><rect x="93.6" y="739.0" width="41.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="96.6" y="750.0">Uns..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.25%)</title><rect x="93.6" y="723.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="96.6" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 1.27%)</title><rect x="96.6" y="723.0" width="15.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="99.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="105.6" y="707.0" width="3.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.25%)</title><rect x="108.6" y="707.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="111.6" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="111.6" y="723.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="114.6" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.25%)</title><rect x="114.6" y="723.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="117.6" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.76%)</title><rect x="117.5" y="723.0" width="9.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="120.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.51%)</title><rect x="120.5" y="707.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="123.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.51%)</title><rect x="120.5" y="691.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.51%)</title><rect x="120.5" y="675.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.5" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.51%)</title><rect x="120.5" y="659.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="123.5" y="670.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.51%)</title><rect x="120.5" y="643.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="123.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.25%)</title><rect x="126.5" y="723.0" width="3.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="129.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.25%)</title><rect x="129.5" y="723.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="132.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.25%)</title><rect x="132.5" y="723.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="135.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 2.78%)</title><rect x="135.5" y="739.0" width="32.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="138.5" y="750.0">[u..</text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (11 samples, 2.78%)</title><rect x="135.5" y="723.0" width="32.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="138.5" y="734.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.52%)</title><rect x="150.4" y="707.0" width="17.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="153.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.52%)</title><rect x="150.4" y="691.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="153.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.27%)</title><rect x="150.4" y="675.0" width="14.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.4" y="686.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.27%)</title><rect x="150.4" y="659.0" width="14.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.4" y="670.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 1.27%)</title><rect x="150.4" y="643.0" width="14.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.4" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 1.27%)</title><rect x="150.4" y="627.0" width="14.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.4" y="638.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.27%)</title><rect x="150.4" y="611.0" width="14.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.4" y="622.0"></text>
</g>
<g>
<title>__schedule (4 samples, 1.01%)</title><rect x="153.4" y="595.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="156.4" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 1.01%)</title><rect x="153.4" y="579.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="156.4" y="590.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.25%)</title><rect x="165.3" y="675.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="168.3" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.25%)</title><rect x="165.3" y="659.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 1.27%)</title><rect x="168.3" y="787.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.27%)</title><rect x="168.3" y="771.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.27%)</title><rect x="168.3" y="755.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.27%)</title><rect x="168.3" y="739.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 1.01%)</title><rect x="171.3" y="723.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.25%)</title><rect x="171.3" y="707.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="174.3" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.25%)</title><rect x="171.3" y="691.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="174.3" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.76%)</title><rect x="174.3" y="707.0" width="9.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="177.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.51%)</title><rect x="177.3" y="691.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.51%)</title><rect x="177.3" y="675.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="180.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.51%)</title><rect x="177.3" y="659.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="180.3" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.51%)</title><rect x="177.3" y="643.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.51%)</title><rect x="177.3" y="627.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.3" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.51%)</title><rect x="177.3" y="611.0" width="6.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="180.3" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.51%)</title><rect x="177.3" y="595.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.3" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.51%)</title><rect x="177.3" y="579.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="180.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.25%)</title><rect x="183.3" y="819.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$76/378698550.run (241 samples, 61.01%)</title><rect x="186.3" y="819.0" width="719.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.3" y="830.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$76/378698550.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$runPut$2 (241 samples, 61.01%)</title><rect x="186.3" y="803.0" width="719.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.3" y="814.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$runPut$2</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putInternal (241 samples, 61.01%)</title><rect x="186.3" y="787.0" width="719.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.3" y="798.0">ru/mail/polis/service/stasyanoi/CustomServer.putInternal</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (65 samples, 16.46%)</title><rect x="186.3" y="771.0" width="194.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.3" y="782.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (65 samples, 16.46%)</title><rect x="186.3" y="755.0" width="194.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.3" y="766.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.25%)</title><rect x="189.2" y="739.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.25%)</title><rect x="189.2" y="723.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.25%)</title><rect x="189.2" y="707.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="192.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.25%)</title><rect x="189.2" y="691.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.25%)</title><rect x="189.2" y="675.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.25%)</title><rect x="189.2" y="659.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (63 samples, 15.95%)</title><rect x="192.2" y="739.0" width="188.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="195.2" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (1 samples, 0.25%)</title><rect x="192.2" y="723.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="195.2" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.25%)</title><rect x="192.2" y="707.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="195.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 15.44%)</title><rect x="195.2" y="723.0" width="182.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="198.2" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (61 samples, 15.44%)</title><rect x="195.2" y="707.0" width="182.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.2" y="718.0">one/nio/net/Session$Arra..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (61 samples, 15.44%)</title><rect x="195.2" y="691.0" width="182.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.2" y="702.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.25%)</title><rect x="198.2" y="675.0" width="3.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="201.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="198.2" y="659.0" width="3.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="201.2" y="670.0"></text>
</g>
<g>
<title>__libc_send (59 samples, 14.94%)</title><rect x="201.2" y="675.0" width="176.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="204.2" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 14.68%)</title><rect x="204.2" y="659.0" width="173.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.2" y="670.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 14.68%)</title><rect x="204.2" y="643.0" width="173.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="207.2" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (57 samples, 14.43%)</title><rect x="204.2" y="627.0" width="170.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.2" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (57 samples, 14.43%)</title><rect x="204.2" y="611.0" width="170.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.2" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (56 samples, 14.18%)</title><rect x="204.2" y="595.0" width="167.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.2" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (54 samples, 13.67%)</title><rect x="204.2" y="579.0" width="161.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.2" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (54 samples, 13.67%)</title><rect x="204.2" y="563.0" width="161.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.2" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (53 samples, 13.42%)</title><rect x="204.2" y="547.0" width="158.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.2" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.51%)</title><rect x="207.2" y="531.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.2" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.51%)</title><rect x="207.2" y="515.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.2" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.25%)</title><rect x="210.2" y="499.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="213.2" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.25%)</title><rect x="210.2" y="483.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="213.2" y="494.0"></text>
</g>
<g>
<title>tcp_push (49 samples, 12.41%)</title><rect x="213.1" y="531.0" width="146.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.1" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (48 samples, 12.15%)</title><rect x="216.1" y="515.0" width="143.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="219.1" y="526.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.33 (1 samples, 0.25%)</title><rect x="216.1" y="499.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="219.1" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (47 samples, 11.90%)</title><rect x="219.1" y="499.0" width="140.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.1" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (43 samples, 10.89%)</title><rect x="219.1" y="483.0" width="128.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.1" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (42 samples, 10.63%)</title><rect x="222.1" y="467.0" width="125.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.1" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (42 samples, 10.63%)</title><rect x="222.1" y="451.0" width="125.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="225.1" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (41 samples, 10.38%)</title><rect x="225.1" y="435.0" width="122.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="228.1" y="446.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (8 samples, 2.03%)</title><rect x="225.1" y="419.0" width="23.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.1" y="430.0">_..</text>
</g>
<g>
<title>nf_hook_slow (8 samples, 2.03%)</title><rect x="225.1" y="403.0" width="23.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="228.1" y="414.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.76%)</title><rect x="225.1" y="387.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="228.1" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.51%)</title><rect x="228.1" y="371.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="231.1" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.25%)</title><rect x="231.1" y="355.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.1" y="366.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (5 samples, 1.27%)</title><rect x="234.1" y="387.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.1" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.25%)</title><rect x="234.1" y="371.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.1" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 1.01%)</title><rect x="237.0" y="371.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="240.0" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.25%)</title><rect x="240.0" y="355.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="243.0" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.51%)</title><rect x="243.0" y="355.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="246.0" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.25%)</title><rect x="246.0" y="339.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.0" y="350.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.25%)</title><rect x="246.0" y="323.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="249.0" y="334.0"></text>
</g>
<g>
<title>ip_output (32 samples, 8.10%)</title><rect x="249.0" y="419.0" width="95.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="252.0" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (32 samples, 8.10%)</title><rect x="249.0" y="403.0" width="95.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="252.0" y="414.0">ip_finish_o..</text>
</g>
<g>
<title>__ip_finish_output (32 samples, 8.10%)</title><rect x="249.0" y="387.0" width="95.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.0" y="398.0">__ip_finish..</text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 7.59%)</title><rect x="255.0" y="371.0" width="89.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.0" y="382.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 6.08%)</title><rect x="257.9" y="355.0" width="71.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.9" y="366.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.20 (24 samples, 6.08%)</title><rect x="257.9" y="339.0" width="71.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="260.9" y="350.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 6.08%)</title><rect x="257.9" y="323.0" width="71.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.9" y="334.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 6.08%)</title><rect x="257.9" y="307.0" width="71.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.9" y="318.0">__softir..</text>
</g>
<g>
<title>net_rx_action (24 samples, 6.08%)</title><rect x="257.9" y="291.0" width="71.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="260.9" y="302.0">net_rx_a..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.51%)</title><rect x="257.9" y="275.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.9" y="286.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 5.57%)</title><rect x="263.9" y="275.0" width="65.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.9" y="286.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 5.57%)</title><rect x="263.9" y="259.0" width="65.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="266.9" y="270.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 5.57%)</title><rect x="263.9" y="243.0" width="65.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="266.9" y="254.0">__netif..</text>
</g>
<g>
<title>ip_rcv (22 samples, 5.57%)</title><rect x="263.9" y="227.0" width="65.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="266.9" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (22 samples, 5.57%)</title><rect x="263.9" y="211.0" width="65.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="266.9" y="222.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (22 samples, 5.57%)</title><rect x="263.9" y="195.0" width="65.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.9" y="206.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 5.57%)</title><rect x="263.9" y="179.0" width="65.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="266.9" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (22 samples, 5.57%)</title><rect x="263.9" y="163.0" width="65.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.9" y="174.0">ip_prot..</text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.25%)</title><rect x="263.9" y="147.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="266.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 5.32%)</title><rect x="266.9" y="147.0" width="62.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.9" y="158.0">tcp_v4..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.25%)</title><rect x="269.9" y="131.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.9" y="142.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.25%)</title><rect x="269.9" y="115.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="272.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 4.81%)</title><rect x="272.9" y="131.0" width="56.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.9" y="142.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 4.81%)</title><rect x="272.9" y="115.0" width="56.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.9" y="126.0">tcp_rc..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.76%)</title><rect x="272.9" y="99.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.9" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="275.9" y="83.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.9" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.25%)</title><rect x="278.9" y="83.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.9" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.25%)</title><rect x="278.9" y="67.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.9" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (16 samples, 4.05%)</title><rect x="281.8" y="99.0" width="47.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.8" y="110.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (16 samples, 4.05%)</title><rect x="281.8" y="83.0" width="47.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="284.8" y="94.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 3.80%)</title><rect x="284.8" y="67.0" width="44.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="287.8" y="78.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 3.80%)</title><rect x="284.8" y="51.0" width="44.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="287.8" y="62.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (15 samples, 3.80%)</title><rect x="284.8" y="35.0" width="44.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.8" y="46.0">__lo..</text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 1.27%)</title><rect x="329.6" y="355.0" width="15.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 1.27%)</title><rect x="329.6" y="339.0" width="15.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="332.6" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.76%)</title><rect x="329.6" y="323.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.51%)</title><rect x="332.6" y="307.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="335.6" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.25%)</title><rect x="332.6" y="291.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.6" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.25%)</title><rect x="335.6" y="291.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.6" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.51%)</title><rect x="338.6" y="323.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="341.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.25%)</title><rect x="344.6" y="419.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="347.6" y="430.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.25%)</title><rect x="347.6" y="483.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="350.6" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.76%)</title><rect x="350.6" y="483.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="353.6" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.76%)</title><rect x="350.6" y="467.0" width="8.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="353.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.51%)</title><rect x="353.5" y="451.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="356.5" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.51%)</title><rect x="353.5" y="435.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.5" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.51%)</title><rect x="353.5" y="419.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="356.5" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.25%)</title><rect x="359.5" y="531.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.5" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.25%)</title><rect x="359.5" y="515.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="362.5" y="526.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.25%)</title><rect x="362.5" y="547.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.5" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.51%)</title><rect x="365.5" y="579.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="368.5" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.51%)</title><rect x="365.5" y="563.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.51%)</title><rect x="365.5" y="547.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="368.5" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.51%)</title><rect x="365.5" y="531.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="368.5" y="542.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.25%)</title><rect x="368.5" y="515.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.25%)</title><rect x="368.5" y="499.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.5" y="510.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.25%)</title><rect x="371.5" y="595.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="374.5" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.25%)</title><rect x="371.5" y="579.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.5" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="371.5" y="563.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="374.5" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.25%)</title><rect x="371.5" y="547.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="374.5" y="558.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.25%)</title><rect x="374.5" y="627.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.5" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.25%)</title><rect x="374.5" y="611.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.5" y="622.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.25%)</title><rect x="374.5" y="595.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="377.5" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.25%)</title><rect x="377.4" y="723.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="380.4" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.25%)</title><rect x="377.4" y="707.0" width="3.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="380.4" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.25%)</title><rect x="377.4" y="691.0" width="3.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="380.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getPutResponse (176 samples, 44.56%)</title><rect x="380.4" y="771.0" width="525.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="782.0">ru/mail/polis/service/stasyanoi/CustomServer.getPutResponse</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putProxy (175 samples, 44.30%)</title><rect x="383.4" y="755.0" width="522.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.4" y="766.0">ru/mail/polis/service/stasyanoi/CustomServer.putProxy</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (134 samples, 33.92%)</title><rect x="386.4" y="739.0" width="400.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.4" y="750.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (134 samples, 33.92%)</title><rect x="386.4" y="723.0" width="400.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.4" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (133 samples, 33.67%)</title><rect x="389.4" y="707.0" width="397.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="392.4" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (84 samples, 21.27%)</title><rect x="395.4" y="691.0" width="250.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="398.4" y="702.0">Java_org_rocksdb_RocksDB_put__J_3..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (84 samples, 21.27%)</title><rect x="395.4" y="675.0" width="250.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="398.4" y="686.0">rocksdb_put_helper(JNIEnv_*, rock..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.25%)</title><rect x="395.4" y="659.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="398.4" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.25%)</title><rect x="398.4" y="659.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="401.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (82 samples, 20.76%)</title><rect x="401.3" y="659.0" width="245.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="404.3" y="670.0">rocksdb::DB::Put(rocksdb::WriteO..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (82 samples, 20.76%)</title><rect x="401.3" y="643.0" width="245.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="404.3" y="654.0">rocksdb::DBImpl::Put(rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (80 samples, 20.25%)</title><rect x="401.3" y="627.0" width="239.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="404.3" y="638.0">rocksdb::DB::Put(rocksdb::WriteO..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.25%)</title><rect x="404.3" y="611.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="407.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (74 samples, 18.73%)</title><rect x="407.3" y="611.0" width="221.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="410.3" y="622.0">rocksdb::DBImpl::Write(rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (73 samples, 18.48%)</title><rect x="407.3" y="595.0" width="218.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="410.3" y="606.0">rocksdb::DBImpl::WriteImpl(ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (6 samples, 1.52%)</title><rect x="413.3" y="579.0" width="17.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="416.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (5 samples, 1.27%)</title><rect x="413.3" y="563.0" width="14.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="416.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.25%)</title><rect x="413.3" y="547.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="416.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 1.01%)</title><rect x="416.3" y="547.0" width="11.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="419.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.25%)</title><rect x="422.3" y="531.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="425.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.25%)</title><rect x="422.3" y="515.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="425.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.25%)</title><rect x="425.2" y="531.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="428.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="425.2" y="515.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="428.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.25%)</title><rect x="428.2" y="563.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="431.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (57 samples, 14.43%)</title><rect x="431.2" y="579.0" width="170.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="434.2" y="590.0">rocksdb::WriteBatchInt..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (56 samples, 14.18%)</title><rect x="434.2" y="563.0" width="167.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="437.2" y="574.0">rocksdb::WriteBatch::..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.25%)</title><rect x="434.2" y="547.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="437.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.25%)</title><rect x="437.2" y="547.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="440.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (54 samples, 13.67%)</title><rect x="440.2" y="547.0" width="161.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="443.2" y="558.0">rocksdb::WriteBatchIn..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 13.16%)</title><rect x="443.2" y="531.0" width="155.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="446.2" y="542.0">rocksdb::MemTableIns..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (52 samples, 13.16%)</title><rect x="443.2" y="515.0" width="155.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="446.2" y="526.0">rocksdb::MemTableIns..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.25%)</title><rect x="443.2" y="499.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="446.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (51 samples, 12.91%)</title><rect x="446.2" y="499.0" width="152.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="449.2" y="510.0">rocksdb::MemTable::..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (50 samples, 12.66%)</title><rect x="449.1" y="483.0" width="149.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="452.1" y="494.0">bool rocksdb::Inlin..</text>
</g>
<g>
<title>/tmp/librocksdbjni14128013298884155605.so (46 samples, 11.65%)</title><rect x="452.1" y="467.0" width="137.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="455.1" y="478.0">/tmp/librocksdbjn..</text>
</g>
<g>
<title>/tmp/librocksdbjni14128013298884155605.so (35 samples, 8.86%)</title><rect x="461.1" y="451.0" width="104.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="464.1" y="462.0">/tmp/librock..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (35 samples, 8.86%)</title><rect x="461.1" y="435.0" width="104.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="464.1" y="446.0">rocksdb::Mem..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.25%)</title><rect x="461.1" y="419.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="464.1" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (32 samples, 8.10%)</title><rect x="464.1" y="419.0" width="95.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="467.1" y="430.0">rocksdb::Ba..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.51%)</title><rect x="464.1" y="403.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="467.1" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.51%)</title><rect x="464.1" y="387.0" width="6.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="467.1" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.51%)</title><rect x="464.1" y="371.0" width="6.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="467.1" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="464.1" y="355.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="467.1" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.25%)</title><rect x="464.1" y="339.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="467.1" y="350.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.25%)</title><rect x="467.1" y="355.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="470.1" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (22 samples, 5.57%)</title><rect x="470.1" y="403.0" width="65.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="473.1" y="414.0">JNIEnv_..</text>
</g>
<g>
<title>jni_CallVoidMethodV (22 samples, 5.57%)</title><rect x="470.1" y="387.0" width="65.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="473.1" y="398.0">jni_Cal..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.25%)</title><rect x="470.1" y="371.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="473.1" y="382.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.76%)</title><rect x="473.0" y="371.0" width="9.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="476.0" y="382.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.51%)</title><rect x="482.0" y="371.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="485.0" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (15 samples, 3.80%)</title><rect x="488.0" y="371.0" width="44.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="491.0" y="382.0">jni_..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.51%)</title><rect x="499.9" y="355.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="502.9" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 1.52%)</title><rect x="505.9" y="355.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="508.9" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.51%)</title><rect x="511.9" y="339.0" width="5.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="514.9" y="350.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.25%)</title><rect x="517.8" y="339.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="520.8" y="350.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.25%)</title><rect x="520.8" y="339.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="523.8" y="350.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.25%)</title><rect x="523.8" y="355.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="526.8" y="366.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.25%)</title><rect x="526.8" y="355.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="529.8" y="366.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.25%)</title><rect x="529.8" y="355.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="532.8" y="366.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="532.8" y="371.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="535.8" y="382.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.25%)</title><rect x="535.8" y="403.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="538.8" y="414.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.76%)</title><rect x="538.8" y="403.0" width="8.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="541.8" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.51%)</title><rect x="538.8" y="387.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="541.8" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.25%)</title><rect x="544.7" y="387.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="547.7" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.51%)</title><rect x="547.7" y="403.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="550.7" y="414.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.25%)</title><rect x="553.7" y="403.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="556.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.25%)</title><rect x="556.7" y="403.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="559.7" y="414.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.25%)</title><rect x="556.7" y="387.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="559.7" y="398.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.25%)</title><rect x="556.7" y="371.0" width="3.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="559.7" y="382.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (1 samples, 0.25%)</title><rect x="559.7" y="419.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="562.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.25%)</title><rect x="562.7" y="419.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="565.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 2.03%)</title><rect x="565.6" y="451.0" width="23.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="568.6" y="462.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 1.77%)</title><rect x="568.6" y="435.0" width="20.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="571.6" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (7 samples, 1.77%)</title><rect x="568.6" y="419.0" width="20.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.6" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (7 samples, 1.77%)</title><rect x="568.6" y="403.0" width="20.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="571.6" y="414.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.25%)</title><rect x="568.6" y="387.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="571.6" y="398.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="571.6" y="387.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="574.6" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.25%)</title><rect x="574.6" y="387.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="577.6" y="398.0"></text>
</g>
<g>
<title>JavaThread::check_safepoint_and_suspend_for_native_trans(JavaThread*) (1 samples, 0.25%)</title><rect x="574.6" y="371.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="577.6" y="382.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.25%)</title><rect x="574.6" y="355.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="577.6" y="366.0"></text>
</g>
<g>
<title>syscall@plt (1 samples, 0.25%)</title><rect x="574.6" y="339.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="577.6" y="350.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.01%)</title><rect x="577.6" y="387.0" width="11.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="580.6" y="398.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.25%)</title><rect x="577.6" y="371.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="580.6" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.51%)</title><rect x="580.6" y="371.0" width="6.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="583.6" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.25%)</title><rect x="580.6" y="355.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="583.6" y="366.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.25%)</title><rect x="583.6" y="355.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="586.6" y="366.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.25%)</title><rect x="586.6" y="371.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="589.6" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.76%)</title><rect x="589.5" y="467.0" width="9.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="592.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.51%)</title><rect x="589.5" y="451.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="592.5" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.51%)</title><rect x="589.5" y="435.0" width="6.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="592.5" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.51%)</title><rect x="589.5" y="419.0" width="6.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="592.5" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.25%)</title><rect x="592.5" y="403.0" width="3.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="595.5" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.25%)</title><rect x="592.5" y="387.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="595.5" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.25%)</title><rect x="592.5" y="371.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="595.5" y="382.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.25%)</title><rect x="595.5" y="451.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="598.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.25%)</title><rect x="598.5" y="531.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="601.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.76%)</title><rect x="601.5" y="579.0" width="9.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="604.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.25%)</title><rect x="610.5" y="579.0" width="2.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="613.5" y="590.0"></text>
</g>
<g>
<title>sched_yield (4 samples, 1.01%)</title><rect x="613.4" y="579.0" width="12.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="616.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.01%)</title><rect x="613.4" y="563.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="616.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.01%)</title><rect x="613.4" y="547.0" width="12.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.25%)</title><rect x="613.4" y="531.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="616.4" y="542.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.25%)</title><rect x="613.4" y="515.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="616.4" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="613.4" y="499.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.4" y="510.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="613.4" y="483.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.4" y="494.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.51%)</title><rect x="616.4" y="531.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="619.4" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.25%)</title><rect x="616.4" y="515.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="619.4" y="526.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.25%)</title><rect x="619.4" y="515.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.4" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.25%)</title><rect x="622.4" y="531.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="625.4" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.25%)</title><rect x="622.4" y="515.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="625.4" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.25%)</title><rect x="622.4" y="499.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.25%)</title><rect x="625.4" y="595.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="628.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.25%)</title><rect x="628.4" y="611.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="631.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.25%)</title><rect x="631.4" y="611.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="634.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.25%)</title><rect x="631.4" y="595.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="634.4" y="606.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.25%)</title><rect x="631.4" y="579.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="634.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.25%)</title><rect x="634.4" y="611.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="637.4" y="622.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.25%)</title><rect x="637.3" y="611.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="640.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.25%)</title><rect x="640.3" y="627.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="643.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.25%)</title><rect x="643.3" y="627.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="646.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 5.32%)</title><rect x="646.3" y="691.0" width="62.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="649.3" y="702.0">[unkno..</text>
</g>
<g>
<title>__GI_write (18 samples, 4.56%)</title><rect x="646.3" y="675.0" width="53.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="649.3" y="686.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 4.56%)</title><rect x="646.3" y="659.0" width="53.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.3" y="670.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 4.56%)</title><rect x="646.3" y="643.0" width="53.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="649.3" y="654.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_write (17 samples, 4.30%)</title><rect x="646.3" y="627.0" width="50.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="649.3" y="638.0">__x64..</text>
</g>
<g>
<title>ksys_write (17 samples, 4.30%)</title><rect x="646.3" y="611.0" width="50.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="649.3" y="622.0">ksys_..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.51%)</title><rect x="646.3" y="595.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.51%)</title><rect x="646.3" y="579.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="649.3" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.51%)</title><rect x="646.3" y="563.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.3" y="574.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.25%)</title><rect x="652.3" y="595.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.3" y="606.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 3.54%)</title><rect x="655.3" y="595.0" width="41.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="658.3" y="606.0">vfs..</text>
</g>
<g>
<title>__vfs_write (13 samples, 3.29%)</title><rect x="655.3" y="579.0" width="38.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.3" y="590.0">__v..</text>
</g>
<g>
<title>new_sync_write (13 samples, 3.29%)</title><rect x="655.3" y="563.0" width="38.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="658.3" y="574.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (12 samples, 3.04%)</title><rect x="658.3" y="547.0" width="35.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="661.3" y="558.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (12 samples, 3.04%)</title><rect x="658.3" y="531.0" width="35.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.3" y="542.0">__g..</text>
</g>
<g>
<title>file_update_time (5 samples, 1.27%)</title><rect x="661.2" y="515.0" width="15.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="664.2" y="526.0"></text>
</g>
<g>
<title>generic_update_time (5 samples, 1.27%)</title><rect x="661.2" y="499.0" width="15.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.2" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 1.01%)</title><rect x="664.2" y="483.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="667.2" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 1.01%)</title><rect x="664.2" y="467.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.2" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 1.01%)</title><rect x="664.2" y="451.0" width="12.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="667.2" y="462.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.25%)</title><rect x="664.2" y="435.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="667.2" y="446.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.25%)</title><rect x="664.2" y="419.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="667.2" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.76%)</title><rect x="667.2" y="435.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.2" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.76%)</title><rect x="667.2" y="419.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.2" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.51%)</title><rect x="670.2" y="403.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.2" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (2 samples, 0.51%)</title><rect x="670.2" y="387.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="673.2" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.25%)</title><rect x="670.2" y="371.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="673.2" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.25%)</title><rect x="673.2" y="371.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="676.2" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.25%)</title><rect x="673.2" y="355.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="676.2" y="366.0"></text>
</g>
<g>
<title>generic_perform_write (6 samples, 1.52%)</title><rect x="676.2" y="515.0" width="17.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.2" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.76%)</title><rect x="676.2" y="499.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="679.2" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.25%)</title><rect x="676.2" y="483.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="679.2" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.25%)</title><rect x="676.2" y="467.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="679.2" y="478.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.25%)</title><rect x="676.2" y="451.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="679.2" y="462.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.25%)</title><rect x="676.2" y="435.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.2" y="446.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.25%)</title><rect x="679.2" y="483.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="682.2" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.25%)</title><rect x="682.2" y="483.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.2" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.25%)</title><rect x="682.2" y="467.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.2" y="478.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.25%)</title><rect x="682.2" y="451.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="685.2" y="462.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.25%)</title><rect x="682.2" y="435.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.2" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_end (3 samples, 0.76%)</title><rect x="685.1" y="499.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="688.1" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.25%)</title><rect x="685.1" y="483.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="688.1" y="494.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.25%)</title><rect x="685.1" y="467.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="688.1" y="478.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.25%)</title><rect x="685.1" y="451.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="688.1" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.25%)</title><rect x="685.1" y="435.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.1" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.25%)</title><rect x="685.1" y="419.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="688.1" y="430.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.51%)</title><rect x="688.1" y="483.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="691.1" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.51%)</title><rect x="688.1" y="467.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="691.1" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.51%)</title><rect x="688.1" y="451.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="691.1" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.25%)</title><rect x="688.1" y="435.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="691.1" y="446.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.25%)</title><rect x="688.1" y="419.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="691.1" y="430.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.25%)</title><rect x="691.1" y="435.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.1" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.25%)</title><rect x="691.1" y="419.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.1" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.25%)</title><rect x="691.1" y="403.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="694.1" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.25%)</title><rect x="691.1" y="387.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="694.1" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.25%)</title><rect x="691.1" y="371.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.1" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.25%)</title><rect x="691.1" y="355.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="694.1" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.25%)</title><rect x="691.1" y="339.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.1" y="350.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.25%)</title><rect x="694.1" y="579.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="697.1" y="590.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.25%)</title><rect x="694.1" y="563.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.1" y="574.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.25%)</title><rect x="694.1" y="547.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.1" y="558.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.25%)</title><rect x="694.1" y="531.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.1" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.25%)</title><rect x="697.1" y="627.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.1" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.25%)</title><rect x="697.1" y="611.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.1" y="622.0"></text>
</g>
<g>
<title>dput (1 samples, 0.25%)</title><rect x="697.1" y="595.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="700.1" y="606.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.51%)</title><rect x="700.1" y="675.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="703.1" y="686.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.51%)</title><rect x="700.1" y="659.0" width="6.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="703.1" y="670.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.51%)</title><rect x="700.1" y="643.0" width="6.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="703.1" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.25%)</title><rect x="706.1" y="675.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="709.1" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (4 samples, 1.01%)</title><rect x="709.0" y="691.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (22 samples, 5.57%)</title><rect x="721.0" y="691.0" width="65.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.0" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (21 samples, 5.32%)</title><rect x="724.0" y="675.0" width="62.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.0" y="686.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (21 samples, 5.32%)</title><rect x="724.0" y="659.0" width="62.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.0" y="670.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (2 samples, 0.51%)</title><rect x="724.0" y="643.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.0" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (19 samples, 4.81%)</title><rect x="729.9" y="643.0" width="56.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.9" y="654.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (18 samples, 4.56%)</title><rect x="732.9" y="627.0" width="53.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.9" y="638.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (17 samples, 4.30%)</title><rect x="735.9" y="611.0" width="50.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="738.9" y="622.0">Java_..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="738.9" y="595.0" width="3.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="741.9" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 1.77%)</title><rect x="741.9" y="595.0" width="20.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="744.9" y="606.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.25%)</title><rect x="744.9" y="579.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="747.9" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 1.27%)</title><rect x="747.9" y="579.0" width="14.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="750.9" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 1.01%)</title><rect x="750.9" y="563.0" width="11.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="753.9" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.51%)</title><rect x="750.9" y="547.0" width="5.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="753.9" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.51%)</title><rect x="756.8" y="547.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="759.8" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 2.03%)</title><rect x="762.8" y="595.0" width="23.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="765.8" y="606.0">j..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.51%)</title><rect x="768.8" y="579.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="771.8" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.76%)</title><rect x="774.8" y="579.0" width="8.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="777.8" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.25%)</title><rect x="783.7" y="579.0" width="3.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="786.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.routeRequest (40 samples, 10.13%)</title><rect x="786.7" y="739.0" width="119.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.7" y="750.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (40 samples, 10.13%)</title><rect x="786.7" y="723.0" width="119.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.7" y="734.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (40 samples, 10.13%)</title><rect x="786.7" y="707.0" width="119.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.7" y="718.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (13 samples, 3.29%)</title><rect x="789.7" y="691.0" width="38.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.7" y="702.0">one..</text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.25%)</title><rect x="795.7" y="675.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="798.7" y="686.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.25%)</title><rect x="795.7" y="659.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="798.7" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.25%)</title><rect x="795.7" y="643.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="798.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 2.53%)</title><rect x="798.7" y="675.0" width="29.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.7" y="686.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.51%)</title><rect x="798.7" y="659.0" width="5.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="801.7" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.25%)</title><rect x="798.7" y="643.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="801.7" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="801.6" y="643.0" width="3.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="804.6" y="654.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 2.03%)</title><rect x="804.6" y="659.0" width="23.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="807.6" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.77%)</title><rect x="807.6" y="643.0" width="20.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="810.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.77%)</title><rect x="807.6" y="627.0" width="20.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="810.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 1.52%)</title><rect x="807.6" y="611.0" width="17.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="810.6" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 1.52%)</title><rect x="807.6" y="595.0" width="17.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="810.6" y="606.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 1.52%)</title><rect x="807.6" y="579.0" width="17.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="810.6" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 1.27%)</title><rect x="810.6" y="563.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="813.6" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 1.27%)</title><rect x="810.6" y="547.0" width="14.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="813.6" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (1 samples, 0.25%)</title><rect x="810.6" y="531.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.6" y="542.0"></text>
</g>
<g>
<title>wait_woken (1 samples, 0.25%)</title><rect x="810.6" y="515.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.6" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (1 samples, 0.25%)</title><rect x="810.6" y="499.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.6" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="810.6" y="483.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="813.6" y="494.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="810.6" y="467.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.6" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.25%)</title><rect x="810.6" y="451.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="813.6" y="462.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 1.01%)</title><rect x="813.6" y="531.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="816.6" y="542.0"></text>
</g>
<g>
<title>tcp_send_ack (4 samples, 1.01%)</title><rect x="813.6" y="515.0" width="11.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="816.6" y="526.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (4 samples, 1.01%)</title><rect x="813.6" y="499.0" width="11.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="816.6" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (4 samples, 1.01%)</title><rect x="813.6" y="483.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.6" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (4 samples, 1.01%)</title><rect x="813.6" y="467.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="816.6" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (4 samples, 1.01%)</title><rect x="813.6" y="451.0" width="11.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.6" y="462.0"></text>
</g>
<g>
<title>ip_local_out (4 samples, 1.01%)</title><rect x="813.6" y="435.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="816.6" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.51%)</title><rect x="813.6" y="419.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="816.6" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.25%)</title><rect x="813.6" y="403.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="816.6" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.25%)</title><rect x="816.6" y="403.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="819.6" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.25%)</title><rect x="816.6" y="387.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="819.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.25%)</title><rect x="816.6" y="371.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="819.6" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.25%)</title><rect x="816.6" y="355.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="819.6" y="366.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.51%)</title><rect x="819.6" y="419.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="822.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.51%)</title><rect x="819.6" y="403.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="822.6" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.51%)</title><rect x="819.6" y="387.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.6" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.51%)</title><rect x="819.6" y="371.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.6" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.51%)</title><rect x="819.6" y="355.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.6" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.51%)</title><rect x="819.6" y="339.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="822.6" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.51%)</title><rect x="819.6" y="323.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="822.6" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.51%)</title><rect x="819.6" y="307.0" width="5.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="822.6" y="318.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.51%)</title><rect x="819.6" y="291.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.6" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.51%)</title><rect x="819.6" y="275.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="822.6" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.51%)</title><rect x="819.6" y="259.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="822.6" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.51%)</title><rect x="819.6" y="243.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="822.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.51%)</title><rect x="819.6" y="227.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.51%)</title><rect x="819.6" y="211.0" width="5.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="822.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.51%)</title><rect x="819.6" y="195.0" width="5.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="822.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.51%)</title><rect x="819.6" y="179.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="822.6" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.51%)</title><rect x="819.6" y="163.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.51%)</title><rect x="819.6" y="147.0" width="5.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.51%)</title><rect x="819.6" y="131.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.6" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.51%)</title><rect x="819.6" y="115.0" width="5.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="822.6" y="126.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.51%)</title><rect x="819.6" y="99.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="822.6" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.25%)</title><rect x="822.6" y="83.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="825.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="822.6" y="67.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="825.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.25%)</title><rect x="822.6" y="51.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="825.6" y="62.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.25%)</title><rect x="822.6" y="35.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="825.6" y="46.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.25%)</title><rect x="825.5" y="611.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.5" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.25%)</title><rect x="825.5" y="595.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="828.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 1.01%)</title><rect x="828.5" y="691.0" width="12.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.76%)</title><rect x="828.5" y="675.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.51%)</title><rect x="831.5" y="659.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.51%)</title><rect x="831.5" y="643.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.25%)</title><rect x="837.5" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.25%)</title><rect x="837.5" y="659.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.25%)</title><rect x="837.5" y="643.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (5 samples, 1.27%)</title><rect x="840.5" y="691.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.5" y="702.0"></text>
</g>
<g>
<title>__GI___setsockopt (4 samples, 1.01%)</title><rect x="840.5" y="675.0" width="11.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="843.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.76%)</title><rect x="843.5" y="659.0" width="8.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.76%)</title><rect x="843.5" y="643.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.5" y="654.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.51%)</title><rect x="846.5" y="627.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="849.5" y="638.0"></text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.51%)</title><rect x="846.5" y="611.0" width="5.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="849.5" y="622.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.25%)</title><rect x="846.5" y="595.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="849.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.25%)</title><rect x="846.5" y="579.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.5" y="590.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.25%)</title><rect x="846.5" y="563.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="849.5" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.25%)</title><rect x="849.4" y="595.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.4" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.25%)</title><rect x="849.4" y="579.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="852.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.25%)</title><rect x="849.4" y="563.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.4" y="574.0"></text>
</g>
<g>
<title>setsockopt@plt (1 samples, 0.25%)</title><rect x="852.4" y="675.0" width="3.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="855.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (16 samples, 4.05%)</title><rect x="855.4" y="691.0" width="47.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.4" y="702.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.25%)</title><rect x="855.4" y="675.0" width="3.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="858.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.25%)</title><rect x="855.4" y="659.0" width="3.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="858.4" y="670.0"></text>
</g>
<g>
<title>__libc_send (15 samples, 3.80%)</title><rect x="858.4" y="675.0" width="44.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="861.4" y="686.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 3.80%)</title><rect x="858.4" y="659.0" width="44.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="861.4" y="670.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 3.80%)</title><rect x="858.4" y="643.0" width="44.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="861.4" y="654.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (14 samples, 3.54%)</title><rect x="861.4" y="627.0" width="41.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="864.4" y="638.0">__x..</text>
</g>
<g>
<title>__sys_sendto (14 samples, 3.54%)</title><rect x="861.4" y="611.0" width="41.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="864.4" y="622.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (14 samples, 3.54%)</title><rect x="861.4" y="595.0" width="41.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.4" y="606.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (14 samples, 3.54%)</title><rect x="861.4" y="579.0" width="41.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="864.4" y="590.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (14 samples, 3.54%)</title><rect x="861.4" y="563.0" width="41.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="864.4" y="574.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 3.54%)</title><rect x="861.4" y="547.0" width="41.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.4" y="558.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.25%)</title><rect x="861.4" y="531.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.4" y="542.0"></text>
</g>
<g>
<title>tcp_push (13 samples, 3.29%)</title><rect x="864.4" y="531.0" width="38.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="867.4" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 3.29%)</title><rect x="864.4" y="515.0" width="38.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.4" y="526.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 3.29%)</title><rect x="864.4" y="499.0" width="38.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="867.4" y="510.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 3.29%)</title><rect x="864.4" y="483.0" width="38.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.4" y="494.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (12 samples, 3.04%)</title><rect x="864.4" y="467.0" width="35.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="867.4" y="478.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (12 samples, 3.04%)</title><rect x="864.4" y="451.0" width="35.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="867.4" y="462.0">__i..</text>
</g>
<g>
<title>ip_local_out (12 samples, 3.04%)</title><rect x="864.4" y="435.0" width="35.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.4" y="446.0">ip_..</text>
</g>
<g>
<title>ip_output (12 samples, 3.04%)</title><rect x="864.4" y="419.0" width="35.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="867.4" y="430.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (11 samples, 2.78%)</title><rect x="867.4" y="403.0" width="32.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="870.4" y="414.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (11 samples, 2.78%)</title><rect x="867.4" y="387.0" width="32.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="870.4" y="398.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 2.78%)</title><rect x="867.4" y="371.0" width="32.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.4" y="382.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 1.77%)</title><rect x="873.3" y="355.0" width="21.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="876.3" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (7 samples, 1.77%)</title><rect x="873.3" y="339.0" width="21.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="876.3" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 1.77%)</title><rect x="873.3" y="323.0" width="21.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="876.3" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 1.77%)</title><rect x="873.3" y="307.0" width="21.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="876.3" y="318.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.25%)</title><rect x="873.3" y="291.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="876.3" y="302.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 1.52%)</title><rect x="876.3" y="291.0" width="18.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="879.3" y="302.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 1.52%)</title><rect x="876.3" y="275.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.3" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 1.52%)</title><rect x="876.3" y="259.0" width="18.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="879.3" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 1.52%)</title><rect x="876.3" y="243.0" width="18.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 1.52%)</title><rect x="876.3" y="227.0" width="18.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 1.52%)</title><rect x="876.3" y="211.0" width="18.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="879.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 1.52%)</title><rect x="876.3" y="195.0" width="18.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 1.52%)</title><rect x="876.3" y="179.0" width="18.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.3" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 1.52%)</title><rect x="876.3" y="163.0" width="18.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (6 samples, 1.52%)</title><rect x="876.3" y="147.0" width="18.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 1.52%)</title><rect x="876.3" y="131.0" width="18.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.3" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.25%)</title><rect x="876.3" y="115.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="879.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.27%)</title><rect x="879.3" y="115.0" width="15.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="882.3" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.25%)</title><rect x="879.3" y="99.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="882.3" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.25%)</title><rect x="879.3" y="83.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="882.3" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.25%)</title><rect x="879.3" y="67.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="882.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.25%)</title><rect x="882.3" y="99.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="885.3" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.25%)</title><rect x="882.3" y="83.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="885.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.76%)</title><rect x="885.3" y="99.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="888.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.76%)</title><rect x="885.3" y="83.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="888.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.76%)</title><rect x="885.3" y="67.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="888.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.76%)</title><rect x="885.3" y="51.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="888.3" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.76%)</title><rect x="885.3" y="35.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.3" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.51%)</title><rect x="894.3" y="355.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.3" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.51%)</title><rect x="894.3" y="339.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="897.3" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.25%)</title><rect x="897.2" y="323.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="900.2" y="334.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.25%)</title><rect x="900.2" y="467.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="903.2" y="478.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.25%)</title><rect x="903.2" y="691.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="906.2" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.25%)</title><rect x="903.2" y="675.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.2" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.25%)</title><rect x="903.2" y="659.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="906.2" y="670.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.25%)</title><rect x="903.2" y="643.0" width="3.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="906.2" y="654.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (65 samples, 16.46%)</title><rect x="906.2" y="867.0" width="194.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.2" y="878.0">one/nio/server/SelectorTh..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.25%)</title><rect x="918.2" y="851.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="921.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.51%)</title><rect x="921.1" y="851.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 4.81%)</title><rect x="927.1" y="851.0" width="56.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.1" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 3.80%)</title><rect x="939.1" y="835.0" width="44.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.1" y="846.0">one/..</text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.25%)</title><rect x="942.1" y="819.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="945.1" y="830.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.25%)</title><rect x="942.1" y="803.0" width="2.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="945.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title><rect x="942.1" y="787.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="945.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.25%)</title><rect x="942.1" y="771.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="945.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.25%)</title><rect x="942.1" y="755.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="945.1" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.25%)</title><rect x="942.1" y="739.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="945.1" y="750.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.25%)</title><rect x="942.1" y="723.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="945.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.25%)</title><rect x="942.1" y="707.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.1" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.25%)</title><rect x="942.1" y="691.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="945.1" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.25%)</title><rect x="942.1" y="675.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="945.1" y="686.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.25%)</title><rect x="942.1" y="659.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="945.1" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.25%)</title><rect x="942.1" y="643.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="945.1" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.25%)</title><rect x="945.0" y="819.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="948.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 2.28%)</title><rect x="948.0" y="819.0" width="26.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="951.0" y="830.0">[..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.25%)</title><rect x="948.0" y="803.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="951.0" y="814.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 2.03%)</title><rect x="951.0" y="803.0" width="23.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="954.0" y="814.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.77%)</title><rect x="954.0" y="787.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.25%)</title><rect x="954.0" y="771.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.52%)</title><rect x="957.0" y="771.0" width="17.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 1.01%)</title><rect x="957.0" y="755.0" width="11.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="960.0" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 1.01%)</title><rect x="957.0" y="739.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="960.0" y="750.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 1.01%)</title><rect x="957.0" y="723.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.0" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (3 samples, 0.76%)</title><rect x="960.0" y="707.0" width="8.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.0" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.51%)</title><rect x="963.0" y="691.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.0" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.51%)</title><rect x="968.9" y="755.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="971.9" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.51%)</title><rect x="968.9" y="739.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="971.9" y="750.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.25%)</title><rect x="971.9" y="723.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.9" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.76%)</title><rect x="974.9" y="819.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="977.9" y="830.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.76%)</title><rect x="974.9" y="803.0" width="9.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="977.9" y="814.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.76%)</title><rect x="974.9" y="787.0" width="9.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="977.9" y="798.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.25%)</title><rect x="980.9" y="771.0" width="3.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="983.9" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.25%)</title><rect x="980.9" y="755.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="983.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 9.87%)</title><rect x="983.9" y="851.0" width="116.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.9" y="862.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 9.87%)</title><rect x="983.9" y="835.0" width="116.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="986.9" y="846.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 5.57%)</title><rect x="983.9" y="819.0" width="65.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.9" y="830.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 4.05%)</title><rect x="986.9" y="803.0" width="47.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="989.9" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 4.05%)</title><rect x="986.9" y="787.0" width="47.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.9" y="798.0">one/..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (15 samples, 3.80%)</title><rect x="986.9" y="771.0" width="44.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="989.9" y="782.0">Requ..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (15 samples, 3.80%)</title><rect x="986.9" y="755.0" width="44.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.9" y="766.0">ru/m..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.25%)</title><rect x="986.9" y="739.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="989.9" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.25%)</title><rect x="986.9" y="723.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="989.9" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.25%)</title><rect x="986.9" y="707.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="989.9" y="718.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.25%)</title><rect x="986.9" y="691.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="989.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.runPut (14 samples, 3.54%)</title><rect x="989.8" y="739.0" width="41.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="992.8" y="750.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 3.29%)</title><rect x="992.8" y="723.0" width="38.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.8" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 3.29%)</title><rect x="992.8" y="707.0" width="38.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.8" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 3.04%)</title><rect x="992.8" y="691.0" width="35.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.8" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 3.04%)</title><rect x="992.8" y="675.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="995.8" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 3.04%)</title><rect x="992.8" y="659.0" width="35.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.8" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 3.04%)</title><rect x="992.8" y="643.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.8" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 3.04%)</title><rect x="992.8" y="627.0" width="35.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.8" y="638.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 3.04%)</title><rect x="992.8" y="611.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.8" y="622.0">jdk..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.25%)</title><rect x="992.8" y="595.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.8" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.76%)</title><rect x="995.8" y="595.0" width="9.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="998.8" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.25%)</title><rect x="998.8" y="579.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1001.8" y="590.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.25%)</title><rect x="1001.8" y="579.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1004.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 2.03%)</title><rect x="1004.8" y="595.0" width="23.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1007.8" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.52%)</title><rect x="1010.8" y="579.0" width="17.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1013.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.52%)</title><rect x="1010.8" y="563.0" width="17.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1013.8" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 1.52%)</title><rect x="1010.8" y="547.0" width="17.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1013.8" y="558.0"></text>
</g>
<g>
<title>do_futex (6 samples, 1.52%)</title><rect x="1010.8" y="531.0" width="17.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1013.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 1.52%)</title><rect x="1010.8" y="515.0" width="17.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1013.8" y="526.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.25%)</title><rect x="1010.8" y="499.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1013.8" y="510.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.27%)</title><rect x="1013.7" y="499.0" width="15.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1016.7" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.27%)</title><rect x="1013.7" y="483.0" width="15.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.7" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.27%)</title><rect x="1013.7" y="467.0" width="15.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1016.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.25%)</title><rect x="1028.7" y="691.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.25%)</title><rect x="1028.7" y="675.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1031.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.25%)</title><rect x="1028.7" y="659.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1031.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.25%)</title><rect x="1028.7" y="643.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.25%)</title><rect x="1031.7" y="771.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1034.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.25%)</title><rect x="1031.7" y="755.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.25%)</title><rect x="1031.7" y="739.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.25%)</title><rect x="1031.7" y="723.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.25%)</title><rect x="1031.7" y="707.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1034.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.76%)</title><rect x="1034.7" y="803.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="1034.7" y="787.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="1034.7" y="771.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.51%)</title><rect x="1037.6" y="787.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.25%)</title><rect x="1043.6" y="803.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.25%)</title><rect x="1043.6" y="787.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.25%)</title><rect x="1043.6" y="771.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.25%)</title><rect x="1046.6" y="803.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 4.30%)</title><rect x="1049.6" y="819.0" width="50.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.6" y="830.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 4.30%)</title><rect x="1049.6" y="803.0" width="50.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.6" y="814.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 1.01%)</title><rect x="1052.6" y="787.0" width="11.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1055.6" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.25%)</title><rect x="1058.6" y="771.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1061.6" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.25%)</title><rect x="1061.5" y="771.0" width="3.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1064.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.25%)</title><rect x="1061.5" y="755.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1064.5" y="766.0"></text>
</g>
<g>
<title>__GI___recv (12 samples, 3.04%)</title><rect x="1064.5" y="787.0" width="35.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1067.5" y="798.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 2.53%)</title><rect x="1070.5" y="771.0" width="29.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1073.5" y="782.0">en..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.53%)</title><rect x="1070.5" y="755.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1073.5" y="766.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 1.52%)</title><rect x="1079.5" y="739.0" width="17.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1082.5" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 1.52%)</title><rect x="1079.5" y="723.0" width="17.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1082.5" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 1.01%)</title><rect x="1079.5" y="707.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1082.5" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 1.01%)</title><rect x="1079.5" y="691.0" width="11.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1082.5" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.01%)</title><rect x="1079.5" y="675.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1082.5" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.25%)</title><rect x="1085.4" y="659.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1088.4" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.25%)</title><rect x="1085.4" y="643.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1088.4" y="654.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.25%)</title><rect x="1085.4" y="627.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1088.4" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.25%)</title><rect x="1088.4" y="659.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.4" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.25%)</title><rect x="1088.4" y="643.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1091.4" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.25%)</title><rect x="1088.4" y="627.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1091.4" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.25%)</title><rect x="1088.4" y="611.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.4" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.51%)</title><rect x="1091.4" y="707.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1094.4" y="718.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.51%)</title><rect x="1091.4" y="691.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.51%)</title><rect x="1091.4" y="675.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1094.4" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.25%)</title><rect x="1094.4" y="659.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1097.4" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.25%)</title><rect x="1097.4" y="739.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1100.4" y="750.0"></text>
</g>
<g>
<title>start_thread (30 samples, 7.59%)</title><rect x="1100.4" y="867.0" width="89.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1103.4" y="878.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (30 samples, 7.59%)</title><rect x="1100.4" y="851.0" width="89.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1103.4" y="862.0">thread_nat..</text>
</g>
<g>
<title>Thread::call_run() (30 samples, 7.59%)</title><rect x="1100.4" y="835.0" width="89.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1103.4" y="846.0">Thread::ca..</text>
</g>
<g>
<title>JavaThread::run() (30 samples, 7.59%)</title><rect x="1100.4" y="819.0" width="89.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.4" y="830.0">JavaThread..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (30 samples, 7.59%)</title><rect x="1100.4" y="803.0" width="89.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1103.4" y="814.0">CompileBro..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (30 samples, 7.59%)</title><rect x="1100.4" y="787.0" width="89.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1103.4" y="798.0">CompileBro..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (29 samples, 7.34%)</title><rect x="1100.4" y="771.0" width="86.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.4" y="782.0">C2Compiler..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (29 samples, 7.34%)</title><rect x="1100.4" y="755.0" width="86.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1103.4" y="766.0">Compile::C..</text>
</g>
<g>
<title>Compile::Code_Gen() (15 samples, 3.80%)</title><rect x="1100.4" y="739.0" width="44.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1103.4" y="750.0">Comp..</text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.25%)</title><rect x="1100.4" y="723.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1103.4" y="734.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.25%)</title><rect x="1100.4" y="707.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.4" y="718.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.25%)</title><rect x="1100.4" y="691.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.4" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (4 samples, 1.01%)</title><rect x="1103.4" y="723.0" width="11.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1106.4" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 1.01%)</title><rect x="1103.4" y="707.0" width="11.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.4" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.25%)</title><rect x="1103.4" y="691.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1106.4" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.25%)</title><rect x="1103.4" y="675.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1106.4" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.51%)</title><rect x="1106.4" y="691.0" width="5.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1109.4" y="702.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.51%)</title><rect x="1106.4" y="675.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.4" y="686.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.25%)</title><rect x="1112.3" y="691.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1115.3" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 2.53%)</title><rect x="1115.3" y="723.0" width="29.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.3" y="734.0">Ph..</text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.25%)</title><rect x="1115.3" y="707.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.3" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.25%)</title><rect x="1115.3" y="691.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1118.3" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.25%)</title><rect x="1118.3" y="707.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.3" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.25%)</title><rect x="1121.3" y="707.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.3" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.25%)</title><rect x="1124.3" y="707.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.3" y="718.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.25%)</title><rect x="1124.3" y="691.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1127.3" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.25%)</title><rect x="1127.3" y="707.0" width="3.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.3" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.25%)</title><rect x="1130.3" y="707.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1133.3" y="718.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.25%)</title><rect x="1133.2" y="707.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.2" y="718.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.25%)</title><rect x="1133.2" y="691.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1136.2" y="702.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.25%)</title><rect x="1133.2" y="675.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.2" y="686.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.25%)</title><rect x="1136.2" y="707.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.2" y="718.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.25%)</title><rect x="1136.2" y="691.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.2" y="702.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.25%)</title><rect x="1139.2" y="707.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1142.2" y="718.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.25%)</title><rect x="1142.2" y="707.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1145.2" y="718.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.25%)</title><rect x="1142.2" y="691.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1145.2" y="702.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.25%)</title><rect x="1142.2" y="675.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.2" y="686.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.25%)</title><rect x="1142.2" y="659.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.2" y="670.0"></text>
</g>
<g>
<title>up_read (1 samples, 0.25%)</title><rect x="1142.2" y="643.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1145.2" y="654.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 2.78%)</title><rect x="1145.2" y="739.0" width="32.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.2" y="750.0">Co..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.76%)</title><rect x="1145.2" y="723.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.2" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.76%)</title><rect x="1145.2" y="707.0" width="9.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.2" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.51%)</title><rect x="1145.2" y="691.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.2" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.25%)</title><rect x="1148.2" y="675.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.2" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.25%)</title><rect x="1148.2" y="659.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.2" y="670.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.25%)</title><rect x="1148.2" y="643.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.2" y="654.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.25%)</title><rect x="1148.2" y="627.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.2" y="638.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.25%)</title><rect x="1148.2" y="611.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.2" y="622.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.25%)</title><rect x="1148.2" y="595.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.2" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.25%)</title><rect x="1151.2" y="691.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.2" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.25%)</title><rect x="1151.2" y="675.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.2" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::replace_node(Node*, Node*) (1 samples, 0.25%)</title><rect x="1151.2" y="659.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.2" y="670.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.25%)</title><rect x="1151.2" y="643.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.2" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.51%)</title><rect x="1154.2" y="723.0" width="5.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.2" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.51%)</title><rect x="1154.2" y="707.0" width="5.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.2" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.172] (1 samples, 0.25%)</title><rect x="1154.2" y="691.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.2" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.25%)</title><rect x="1154.2" y="675.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.2" y="686.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.25%)</title><rect x="1154.2" y="659.0" width="2.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.2" y="670.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.25%)</title><rect x="1154.2" y="643.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.2" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.25%)</title><rect x="1157.1" y="691.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.1" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.25%)</title><rect x="1157.1" y="675.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.1" y="686.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.25%)</title><rect x="1157.1" y="659.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.1" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.76%)</title><rect x="1160.1" y="723.0" width="9.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.76%)</title><rect x="1160.1" y="707.0" width="9.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.51%)</title><rect x="1163.1" y="691.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.1" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.51%)</title><rect x="1163.1" y="675.0" width="6.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.1" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.25%)</title><rect x="1166.1" y="659.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.1" y="670.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.76%)</title><rect x="1169.1" y="723.0" width="9.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.1" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.76%)</title><rect x="1169.1" y="707.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.1" y="718.0"></text>
</g>
<g>
<title>CmpINode::Ideal(PhaseGVN*, bool) (1 samples, 0.25%)</title><rect x="1169.1" y="691.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.1" y="702.0"></text>
</g>
<g>
<title>LShiftLNode::Opcode() const (1 samples, 0.25%)</title><rect x="1172.1" y="691.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.1" y="702.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.25%)</title><rect x="1175.1" y="691.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.1" y="702.0"></text>
</g>
<g>
<title>NodeHash::grow() (1 samples, 0.25%)</title><rect x="1175.1" y="675.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.1" y="686.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.25%)</title><rect x="1178.1" y="739.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.1" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1181.0" y="739.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.0" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1181.0" y="723.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1181.0" y="707.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1181.0" y="691.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1181.0" y="675.0" width="6.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1181.0" y="659.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1181.0" y="643.0" width="6.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1181.0" y="627.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1181.0" y="611.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1181.0" y="595.0" width="6.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1181.0" y="579.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1181.0" y="563.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1181.0" y="547.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1181.0" y="531.0" width="6.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1181.0" y="515.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1181.0" y="499.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1181.0" y="483.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1181.0" y="467.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.0" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1181.0" y="451.0" width="6.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.0" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1181.0" y="435.0" width="6.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1181.0" y="419.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1181.0" y="403.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1181.0" y="387.0" width="6.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1181.0" y="371.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1181.0" y="355.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1181.0" y="339.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.51%)</title><rect x="1181.0" y="323.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.51%)</title><rect x="1181.0" y="307.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.51%)</title><rect x="1181.0" y="291.0" width="6.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.51%)</title><rect x="1181.0" y="275.0" width="6.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.0" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.51%)</title><rect x="1181.0" y="259.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.0" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.51%)</title><rect x="1181.0" y="243.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.0" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.25%)</title><rect x="1181.0" y="227.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.25%)</title><rect x="1181.0" y="211.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.25%)</title><rect x="1181.0" y="195.0" width="3.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.25%)</title><rect x="1181.0" y="179.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.0" y="190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.25%)</title><rect x="1181.0" y="163.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.0" y="174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.25%)</title><rect x="1181.0" y="147.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.0" y="158.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.25%)</title><rect x="1181.0" y="131.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.0" y="142.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.25%)</title><rect x="1181.0" y="115.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.0" y="126.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.25%)</title><rect x="1181.0" y="99.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.0" y="110.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.25%)</title><rect x="1181.0" y="83.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.0" y="94.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.25%)</title><rect x="1184.0" y="227.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.0" y="238.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.25%)</title><rect x="1184.0" y="211.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.0" y="222.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.25%)</title><rect x="1184.0" y="195.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="206.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.25%)</title><rect x="1184.0" y="179.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.0" y="190.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.25%)</title><rect x="1187.0" y="771.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.0" y="782.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.25%)</title><rect x="1187.0" y="755.0" width="3.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="766.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.25%)</title><rect x="1187.0" y="739.0" width="3.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.0" y="750.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.25%)</title><rect x="1187.0" y="723.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.0" y="734.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.25%)</title><rect x="1187.0" y="707.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.0" y="718.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.25%)</title><rect x="1187.0" y="691.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.0" y="702.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.25%)</title><rect x="1187.0" y="675.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.0" y="686.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.25%)</title><rect x="1187.0" y="659.0" width="3.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
</g>
</svg>
