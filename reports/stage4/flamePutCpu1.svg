<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1109"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1109"> </text>
<g id="frames">
<g>
<title>all (467 samples, 100.00%)</title><rect x="10.0" y="1075.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1086.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.43%)</title><rect x="10.0" y="1059.0" width="5.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.43%)</title><rect x="10.0" y="1043.0" width="5.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 1.50%)</title><rect x="15.1" y="1059.0" width="17.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="18.1" y="1070.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (5 samples, 1.07%)</title><rect x="15.1" y="1043.0" width="12.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.1" y="1054.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (5 samples, 1.07%)</title><rect x="15.1" y="1027.0" width="12.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.07%)</title><rect x="15.1" y="1011.0" width="12.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.1" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.07%)</title><rect x="15.1" y="995.0" width="12.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.1" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.07%)</title><rect x="15.1" y="979.0" width="12.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (5 samples, 1.07%)</title><rect x="15.1" y="963.0" width="12.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="18.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (5 samples, 1.07%)</title><rect x="15.1" y="947.0" width="12.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (5 samples, 1.07%)</title><rect x="15.1" y="931.0" width="12.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="18.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 1.07%)</title><rect x="15.1" y="915.0" width="12.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (5 samples, 1.07%)</title><rect x="15.1" y="899.0" width="12.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 1.07%)</title><rect x="15.1" y="883.0" width="12.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 1.07%)</title><rect x="15.1" y="867.0" width="12.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 1.07%)</title><rect x="15.1" y="851.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.1" y="862.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 1.07%)</title><rect x="15.1" y="835.0" width="12.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.1" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni778068003219737210.so (5 samples, 1.07%)</title><rect x="15.1" y="819.0" width="12.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.1" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni778068003219737210.so (3 samples, 0.64%)</title><rect x="15.1" y="803.0" width="7.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="18.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.64%)</title><rect x="15.1" y="787.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.64%)</title><rect x="15.1" y="771.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="18.1" y="782.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.64%)</title><rect x="15.1" y="755.0" width="7.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.1" y="766.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.64%)</title><rect x="15.1" y="739.0" width="7.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="18.1" y="750.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.64%)</title><rect x="15.1" y="723.0" width="7.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="18.1" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.64%)</title><rect x="15.1" y="707.0" width="7.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.1" y="718.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.64%)</title><rect x="15.1" y="691.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.43%)</title><rect x="22.6" y="803.0" width="5.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="25.6" y="814.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.43%)</title><rect x="22.6" y="787.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="25.6" y="798.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.21%)</title><rect x="22.6" y="771.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.6" y="782.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.21%)</title><rect x="22.6" y="755.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.6" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.21%)</title><rect x="22.6" y="739.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="25.6" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="22.6" y="723.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="25.6" y="734.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.21%)</title><rect x="22.6" y="707.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.6" y="718.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.21%)</title><rect x="25.2" y="771.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="28.2" y="782.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.21%)</title><rect x="25.2" y="755.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="28.2" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.21%)</title><rect x="25.2" y="739.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="28.2" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="25.2" y="723.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="28.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="27.7" y="1043.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="30.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="27.7" y="1027.0" width="2.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="30.7" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.21%)</title><rect x="27.7" y="1011.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="30.7" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.21%)</title><rect x="27.7" y="995.0" width="2.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="30.7" y="1006.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.21%)</title><rect x="30.2" y="1043.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="33.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.run (304 samples, 65.10%)</title><rect x="32.7" y="1059.0" width="768.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="35.7" y="1070.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (304 samples, 65.10%)</title><rect x="32.7" y="1043.0" width="768.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.7" y="1054.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (304 samples, 65.10%)</title><rect x="32.7" y="1027.0" width="768.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="35.7" y="1038.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.43%)</title><rect x="50.4" y="1011.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.21%)</title><rect x="55.5" y="1011.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.21%)</title><rect x="58.0" y="1011.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 6.42%)</title><rect x="60.5" y="1011.0" width="75.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.5" y="1022.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (28 samples, 6.00%)</title><rect x="65.6" y="995.0" width="70.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.6" y="1006.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (20 samples, 4.28%)</title><rect x="65.6" y="979.0" width="50.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.6" y="990.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.21%)</title><rect x="68.1" y="963.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.21%)</title><rect x="68.1" y="947.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 3.85%)</title><rect x="70.6" y="963.0" width="45.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.6" y="974.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 3.64%)</title><rect x="73.2" y="947.0" width="42.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.2" y="958.0">jdk/..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.21%)</title><rect x="73.2" y="931.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="76.2" y="942.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 1.71%)</title><rect x="75.7" y="931.0" width="20.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="78.7" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.21%)</title><rect x="78.2" y="915.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="81.2" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.86%)</title><rect x="80.7" y="915.0" width="10.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="83.7" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.86%)</title><rect x="80.7" y="899.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.7" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.43%)</title><rect x="80.7" y="883.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="83.7" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.21%)</title><rect x="80.7" y="867.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.7" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.21%)</title><rect x="80.7" y="851.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="83.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.21%)</title><rect x="80.7" y="835.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.7" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.21%)</title><rect x="80.7" y="819.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="83.7" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.21%)</title><rect x="83.3" y="867.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.3" y="878.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.43%)</title><rect x="85.8" y="883.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="88.8" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.21%)</title><rect x="90.9" y="915.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="93.9" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="93.4" y="915.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="96.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 1.71%)</title><rect x="95.9" y="931.0" width="20.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="98.9" y="942.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (8 samples, 1.71%)</title><rect x="95.9" y="915.0" width="20.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="98.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.28%)</title><rect x="101.0" y="899.0" width="15.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="104.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.28%)</title><rect x="101.0" y="883.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="104.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.86%)</title><rect x="103.5" y="867.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.5" y="878.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.86%)</title><rect x="103.5" y="851.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="106.5" y="862.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.86%)</title><rect x="103.5" y="835.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.5" y="846.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.43%)</title><rect x="103.5" y="819.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="106.5" y="830.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.43%)</title><rect x="103.5" y="803.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.5" y="814.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.43%)</title><rect x="103.5" y="787.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.5" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.43%)</title><rect x="103.5" y="771.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="106.5" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.43%)</title><rect x="108.5" y="819.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.5" y="830.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.21%)</title><rect x="111.1" y="803.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.1" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.21%)</title><rect x="113.6" y="867.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 1.71%)</title><rect x="116.1" y="979.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 1.71%)</title><rect x="116.1" y="963.0" width="20.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 1.71%)</title><rect x="116.1" y="947.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 1.71%)</title><rect x="116.1" y="931.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="119.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 1.50%)</title><rect x="118.7" y="915.0" width="17.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.7" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.43%)</title><rect x="118.7" y="899.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="121.7" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.21%)</title><rect x="118.7" y="883.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="121.7" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.21%)</title><rect x="121.2" y="883.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="124.2" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.07%)</title><rect x="123.7" y="899.0" width="12.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="126.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.07%)</title><rect x="123.7" y="883.0" width="12.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.07%)</title><rect x="123.7" y="867.0" width="12.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="126.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.07%)</title><rect x="123.7" y="851.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.7" y="862.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.07%)</title><rect x="123.7" y="835.0" width="12.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="126.7" y="846.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.07%)</title><rect x="123.7" y="819.0" width="12.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.7" y="830.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.21%)</title><rect x="123.7" y="803.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="126.7" y="814.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.21%)</title><rect x="123.7" y="787.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.86%)</title><rect x="126.2" y="803.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="129.2" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.86%)</title><rect x="126.2" y="787.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="129.2" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.86%)</title><rect x="126.2" y="771.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="129.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.21%)</title><rect x="136.3" y="1011.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$67/393605361.run (262 samples, 56.10%)</title><rect x="138.9" y="1011.0" width="662.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.9" y="1022.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$67/393605361.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$runPut$1 (262 samples, 56.10%)</title><rect x="138.9" y="995.0" width="662.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.9" y="1006.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$runPut$1</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putInternal (262 samples, 56.10%)</title><rect x="138.9" y="979.0" width="662.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.9" y="990.0">ru/mail/polis/service/stasyanoi/CustomServer.putInternal</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 10.92%)</title><rect x="138.9" y="963.0" width="128.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="141.9" y="974.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (47 samples, 10.06%)</title><rect x="141.4" y="947.0" width="118.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.4" y="958.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.43%)</title><rect x="141.4" y="931.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 9.64%)</title><rect x="146.4" y="931.0" width="113.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.4" y="942.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (45 samples, 9.64%)</title><rect x="146.4" y="915.0" width="113.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="926.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (44 samples, 9.42%)</title><rect x="149.0" y="899.0" width="111.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.0" y="910.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (44 samples, 9.42%)</title><rect x="149.0" y="883.0" width="111.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.0" y="894.0">one/nio/net/N..</text>
</g>
<g>
<title>__libc_send (44 samples, 9.42%)</title><rect x="149.0" y="867.0" width="111.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="152.0" y="878.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 9.42%)</title><rect x="149.0" y="851.0" width="111.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.0" y="862.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (44 samples, 9.42%)</title><rect x="149.0" y="835.0" width="111.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="152.0" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (43 samples, 9.21%)</title><rect x="149.0" y="819.0" width="108.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="152.0" y="830.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (43 samples, 9.21%)</title><rect x="149.0" y="803.0" width="108.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="152.0" y="814.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (42 samples, 8.99%)</title><rect x="149.0" y="787.0" width="106.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="152.0" y="798.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (42 samples, 8.99%)</title><rect x="149.0" y="771.0" width="106.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.0" y="782.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 8.99%)</title><rect x="149.0" y="755.0" width="106.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.0" y="766.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.43%)</title><rect x="149.0" y="739.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="152.0" y="750.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.43%)</title><rect x="149.0" y="723.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.0" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.21%)</title><rect x="149.0" y="707.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.0" y="718.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.21%)</title><rect x="151.5" y="707.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="154.5" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.21%)</title><rect x="151.5" y="691.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.5" y="702.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.21%)</title><rect x="151.5" y="675.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.5" y="686.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.21%)</title><rect x="151.5" y="659.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.5" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.21%)</title><rect x="151.5" y="643.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.5" y="654.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.21%)</title><rect x="151.5" y="627.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="154.5" y="638.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.21%)</title><rect x="154.0" y="739.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.0" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (39 samples, 8.35%)</title><rect x="156.6" y="739.0" width="98.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="159.6" y="750.0">tcp_sendmsg_..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.64%)</title><rect x="156.6" y="723.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.6" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.21%)</title><rect x="159.1" y="707.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="162.1" y="718.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.21%)</title><rect x="161.6" y="707.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.6" y="718.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.43%)</title><rect x="164.1" y="723.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="167.1" y="734.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.43%)</title><rect x="164.1" y="707.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="167.1" y="718.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.43%)</title><rect x="169.2" y="723.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.2" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.43%)</title><rect x="169.2" y="707.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="172.2" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.21%)</title><rect x="171.7" y="691.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.7" y="702.0"></text>
</g>
<g>
<title>tcp_push (32 samples, 6.85%)</title><rect x="174.2" y="723.0" width="80.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="177.2" y="734.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (32 samples, 6.85%)</title><rect x="174.2" y="707.0" width="80.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="177.2" y="718.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (31 samples, 6.64%)</title><rect x="176.8" y="691.0" width="78.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.8" y="702.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (30 samples, 6.42%)</title><rect x="176.8" y="675.0" width="75.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.8" y="686.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (29 samples, 6.21%)</title><rect x="176.8" y="659.0" width="73.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="179.8" y="670.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (29 samples, 6.21%)</title><rect x="176.8" y="643.0" width="73.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="179.8" y="654.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (29 samples, 6.21%)</title><rect x="176.8" y="627.0" width="73.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="179.8" y="638.0">ip_local..</text>
</g>
<g>
<title>__ip_local_out (9 samples, 1.93%)</title><rect x="176.8" y="611.0" width="22.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.8" y="622.0">_..</text>
</g>
<g>
<title>ip_send_check (1 samples, 0.21%)</title><rect x="176.8" y="595.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.8" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.21%)</title><rect x="179.3" y="595.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.3" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 1.50%)</title><rect x="181.8" y="595.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.8" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 1.50%)</title><rect x="181.8" y="579.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="184.8" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 1.50%)</title><rect x="181.8" y="563.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.8" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.21%)</title><rect x="181.8" y="547.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.8" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (6 samples, 1.28%)</title><rect x="184.3" y="547.0" width="15.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.21%)</title><rect x="191.9" y="531.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="194.9" y="542.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.43%)</title><rect x="194.5" y="531.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.5" y="542.0"></text>
</g>
<g>
<title>ip_output (20 samples, 4.28%)</title><rect x="199.5" y="611.0" width="50.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.5" y="622.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (20 samples, 4.28%)</title><rect x="199.5" y="595.0" width="50.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.5" y="606.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (20 samples, 4.28%)</title><rect x="199.5" y="579.0" width="50.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="202.5" y="590.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (20 samples, 4.28%)</title><rect x="199.5" y="563.0" width="50.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="202.5" y="574.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 3.85%)</title><rect x="199.5" y="547.0" width="45.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="202.5" y="558.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.20 (18 samples, 3.85%)</title><rect x="199.5" y="531.0" width="45.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.5" y="542.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (18 samples, 3.85%)</title><rect x="199.5" y="515.0" width="45.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="202.5" y="526.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 3.85%)</title><rect x="199.5" y="499.0" width="45.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="202.5" y="510.0">__so..</text>
</g>
<g>
<title>net_rx_action (18 samples, 3.85%)</title><rect x="199.5" y="483.0" width="45.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="202.5" y="494.0">net_..</text>
</g>
<g>
<title>process_backlog (18 samples, 3.85%)</title><rect x="199.5" y="467.0" width="45.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="202.5" y="478.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (16 samples, 3.43%)</title><rect x="202.0" y="451.0" width="40.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="205.0" y="462.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 3.43%)</title><rect x="202.0" y="435.0" width="40.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="205.0" y="446.0">__n..</text>
</g>
<g>
<title>ip_rcv (15 samples, 3.21%)</title><rect x="202.0" y="419.0" width="37.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.0" y="430.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (15 samples, 3.21%)</title><rect x="202.0" y="403.0" width="37.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.0" y="414.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (14 samples, 3.00%)</title><rect x="202.0" y="387.0" width="35.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="205.0" y="398.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 3.00%)</title><rect x="202.0" y="371.0" width="35.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.0" y="382.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 3.00%)</title><rect x="202.0" y="355.0" width="35.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.0" y="366.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (14 samples, 3.00%)</title><rect x="202.0" y="339.0" width="35.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.0" y="350.0">tcp..</text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 3.00%)</title><rect x="202.0" y="323.0" width="35.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="205.0" y="334.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 3.00%)</title><rect x="202.0" y="307.0" width="35.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.0" y="318.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.21%)</title><rect x="202.0" y="291.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.0" y="302.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.21%)</title><rect x="202.0" y="275.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.0" y="286.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (1 samples, 0.21%)</title><rect x="202.0" y="259.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="205.0" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.21%)</title><rect x="202.0" y="243.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="205.0" y="254.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.21%)</title><rect x="202.0" y="227.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.0" y="238.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.21%)</title><rect x="202.0" y="211.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.0" y="222.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.21%)</title><rect x="202.0" y="195.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.0" y="206.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.21%)</title><rect x="202.0" y="179.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.0" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="202.0" y="163.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="205.0" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.21%)</title><rect x="202.0" y="147.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.0" y="158.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.21%)</title><rect x="202.0" y="131.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="205.0" y="142.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.21%)</title><rect x="202.0" y="115.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="205.0" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.21%)</title><rect x="202.0" y="99.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.43%)</title><rect x="204.6" y="291.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.6" y="302.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.43%)</title><rect x="204.6" y="275.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.6" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.43%)</title><rect x="204.6" y="259.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.6" y="270.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.43%)</title><rect x="204.6" y="243.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.6" y="254.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.43%)</title><rect x="204.6" y="227.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="207.6" y="238.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.43%)</title><rect x="204.6" y="211.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.6" y="222.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.43%)</title><rect x="204.6" y="195.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.6" y="206.0"></text>
</g>
<g>
<title>tcp_data_queue (4 samples, 0.86%)</title><rect x="209.6" y="291.0" width="10.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="212.6" y="302.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.64%)</title><rect x="212.1" y="275.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="215.1" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.64%)</title><rect x="212.1" y="259.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="215.1" y="270.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.64%)</title><rect x="212.1" y="243.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.1" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.64%)</title><rect x="212.1" y="227.0" width="7.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="215.1" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.64%)</title><rect x="212.1" y="211.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="215.1" y="222.0"></text>
</g>
<g>
<title>tcp_data_ready (7 samples, 1.50%)</title><rect x="219.7" y="291.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.7" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 1.50%)</title><rect x="219.7" y="275.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.7" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 1.50%)</title><rect x="219.7" y="259.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="222.7" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 1.50%)</title><rect x="219.7" y="243.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.7" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 1.50%)</title><rect x="219.7" y="227.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.7" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="237.4" y="387.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="239.9" y="419.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.9" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.21%)</title><rect x="242.5" y="451.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="245.5" y="462.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.43%)</title><rect x="245.0" y="547.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="248.0" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.43%)</title><rect x="245.0" y="531.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="248.0" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.21%)</title><rect x="247.5" y="515.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="250.5" y="526.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.21%)</title><rect x="247.5" y="499.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="250.5" y="510.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.21%)</title><rect x="247.5" y="483.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="250.5" y="494.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.21%)</title><rect x="247.5" y="467.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="250.5" y="478.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.21%)</title><rect x="247.5" y="451.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="250.5" y="462.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.21%)</title><rect x="250.0" y="659.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.0" y="670.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.21%)</title><rect x="252.6" y="675.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="255.6" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.21%)</title><rect x="255.1" y="787.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="258.1" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.21%)</title><rect x="255.1" y="771.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="258.1" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.21%)</title><rect x="255.1" y="755.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.1" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.21%)</title><rect x="255.1" y="739.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="258.1" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.21%)</title><rect x="257.6" y="819.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="260.6" y="830.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.21%)</title><rect x="257.6" y="803.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="260.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.64%)</title><rect x="260.1" y="947.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.21%)</title><rect x="265.2" y="931.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.21%)</title><rect x="265.2" y="915.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.2" y="926.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="265.2" y="899.0" width="2.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="268.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getPutResponse (211 samples, 45.18%)</title><rect x="267.7" y="963.0" width="533.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.7" y="974.0">ru/mail/polis/service/stasyanoi/CustomServer.getPutResponse</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.putProxy (211 samples, 45.18%)</title><rect x="267.7" y="947.0" width="533.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.7" y="958.0">ru/mail/polis/service/stasyanoi/CustomServer.putProxy</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (94 samples, 20.13%)</title><rect x="267.7" y="931.0" width="237.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.7" y="942.0">ru/mail/polis/dao/stasyanoi/DAO..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (94 samples, 20.13%)</title><rect x="267.7" y="915.0" width="237.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.7" y="926.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (94 samples, 20.13%)</title><rect x="267.7" y="899.0" width="237.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.7" y="910.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.21%)</title><rect x="270.3" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.3" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (61 samples, 13.06%)</title><rect x="272.8" y="883.0" width="154.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="275.8" y="894.0">Java_org_rocksdb_Roc..</text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.21%)</title><rect x="272.8" y="867.0" width="2.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="275.8" y="878.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.21%)</title><rect x="275.3" y="867.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="278.3" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (59 samples, 12.63%)</title><rect x="277.8" y="867.0" width="149.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.8" y="878.0">rocksdb_put_helper(..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.21%)</title><rect x="277.8" y="851.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="280.8" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.21%)</title><rect x="280.4" y="851.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="283.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (57 samples, 12.21%)</title><rect x="282.9" y="851.0" width="144.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="285.9" y="862.0">rocksdb::DB::Put(r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (57 samples, 12.21%)</title><rect x="282.9" y="835.0" width="144.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="285.9" y="846.0">rocksdb::DBImpl::P..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 11.99%)</title><rect x="282.9" y="819.0" width="141.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="285.9" y="830.0">rocksdb::DB::Put(r..</text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (1 samples, 0.21%)</title><rect x="282.9" y="803.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="285.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (51 samples, 10.92%)</title><rect x="285.4" y="803.0" width="128.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="288.4" y="814.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (51 samples, 10.92%)</title><rect x="285.4" y="787.0" width="128.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="288.4" y="798.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.21%)</title><rect x="287.9" y="771.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="290.9" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (8 samples, 1.71%)</title><rect x="290.5" y="771.0" width="20.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="293.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 1.71%)</title><rect x="290.5" y="755.0" width="20.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="293.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 1.71%)</title><rect x="290.5" y="739.0" width="20.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="293.5" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni778068003219737210.so (1 samples, 0.21%)</title><rect x="293.0" y="723.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="296.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.21%)</title><rect x="295.5" y="723.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="298.5" y="734.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 0.86%)</title><rect x="298.1" y="723.0" width="10.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="301.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.21%)</title><rect x="300.6" y="707.0" width="2.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="303.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.21%)</title><rect x="303.1" y="707.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="306.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.21%)</title><rect x="305.6" y="707.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="308.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.21%)</title><rect x="308.2" y="723.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="311.2" y="734.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned_erms (1 samples, 0.21%)</title><rect x="308.2" y="707.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="311.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.21%)</title><rect x="310.7" y="771.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="313.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (36 samples, 7.71%)</title><rect x="313.2" y="771.0" width="91.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="316.2" y="782.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (35 samples, 7.49%)</title><rect x="313.2" y="755.0" width="88.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="316.2" y="766.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (35 samples, 7.49%)</title><rect x="313.2" y="739.0" width="88.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="316.2" y="750.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (34 samples, 7.28%)</title><rect x="313.2" y="723.0" width="85.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="316.2" y="734.0">rocksdb::M..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (34 samples, 7.28%)</title><rect x="313.2" y="707.0" width="85.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="316.2" y="718.0">rocksdb::M..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (34 samples, 7.28%)</title><rect x="313.2" y="691.0" width="85.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="316.2" y="702.0">rocksdb::M..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (33 samples, 7.07%)</title><rect x="315.7" y="675.0" width="83.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="318.7" y="686.0">bool rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni778068003219737210.so (33 samples, 7.07%)</title><rect x="315.7" y="659.0" width="83.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="318.7" y="670.0">/tmp/libr..</text>
</g>
<g>
<title>/tmp/librocksdbjni778068003219737210.so (20 samples, 4.28%)</title><rect x="323.3" y="643.0" width="50.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="326.3" y="654.0">/tmp/..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.21%)</title><rect x="325.8" y="627.0" width="2.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="328.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 3.85%)</title><rect x="328.4" y="627.0" width="45.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="331.4" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (18 samples, 3.85%)</title><rect x="328.4" y="611.0" width="45.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="331.4" y="622.0">rock..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (5 samples, 1.07%)</title><rect x="328.4" y="595.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="331.4" y="606.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.21%)</title><rect x="328.4" y="579.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="331.4" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 0.86%)</title><rect x="330.9" y="579.0" width="10.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="333.9" y="590.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.21%)</title><rect x="330.9" y="563.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="333.9" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.64%)</title><rect x="333.4" y="563.0" width="7.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="336.4" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.43%)</title><rect x="336.0" y="547.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="339.0" y="558.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.21%)</title><rect x="336.0" y="531.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="339.0" y="542.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.21%)</title><rect x="338.5" y="531.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="341.5" y="542.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.21%)</title><rect x="338.5" y="515.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="341.5" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.28%)</title><rect x="341.0" y="595.0" width="15.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="344.0" y="606.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.21%)</title><rect x="341.0" y="579.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="344.0" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (5 samples, 1.07%)</title><rect x="343.5" y="579.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="346.5" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 1.07%)</title><rect x="343.5" y="563.0" width="12.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="346.5" y="574.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.21%)</title><rect x="346.1" y="547.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="349.1" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.64%)</title><rect x="348.6" y="547.0" width="7.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="351.6" y="558.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.43%)</title><rect x="348.6" y="531.0" width="5.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="351.6" y="542.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.21%)</title><rect x="353.6" y="531.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="356.6" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.86%)</title><rect x="356.2" y="595.0" width="10.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="359.2" y="606.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.21%)</title><rect x="356.2" y="579.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="359.2" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.43%)</title><rect x="358.7" y="579.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="361.7" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.21%)</title><rect x="363.7" y="579.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="366.7" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.64%)</title><rect x="366.3" y="595.0" width="7.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="369.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 2.14%)</title><rect x="373.9" y="643.0" width="25.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="376.9" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 2.14%)</title><rect x="373.9" y="627.0" width="25.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="376.9" y="638.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.43%)</title><rect x="376.4" y="611.0" width="5.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="379.4" y="622.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.43%)</title><rect x="376.4" y="595.0" width="5.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="379.4" y="606.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.21%)</title><rect x="376.4" y="579.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="379.4" y="590.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.21%)</title><rect x="378.9" y="579.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="381.9" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 1.07%)</title><rect x="381.4" y="611.0" width="12.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="384.4" y="622.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (5 samples, 1.07%)</title><rect x="381.4" y="595.0" width="12.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="384.4" y="606.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.21%)</title><rect x="381.4" y="579.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="384.4" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.64%)</title><rect x="384.0" y="579.0" width="7.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="387.0" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="389.0" y="563.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="392.0" y="574.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.21%)</title><rect x="389.0" y="547.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="392.0" y="558.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="391.5" y="579.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="394.5" y="590.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.21%)</title><rect x="394.1" y="611.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="397.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.21%)</title><rect x="396.6" y="611.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="399.6" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.21%)</title><rect x="396.6" y="595.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="399.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.21%)</title><rect x="399.1" y="723.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="402.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.21%)</title><rect x="401.6" y="755.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="404.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.43%)</title><rect x="404.2" y="771.0" width="5.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="407.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.21%)</title><rect x="409.2" y="771.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="412.2" y="782.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (1 samples, 0.21%)</title><rect x="411.8" y="771.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="414.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.21%)</title><rect x="414.3" y="803.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="417.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.64%)</title><rect x="416.8" y="803.0" width="7.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="419.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.21%)</title><rect x="416.8" y="787.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="419.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.21%)</title><rect x="419.3" y="787.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="422.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.21%)</title><rect x="421.9" y="787.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="424.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.21%)</title><rect x="424.4" y="819.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="427.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 2.36%)</title><rect x="426.9" y="883.0" width="27.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="429.9" y="894.0">[..</text>
</g>
<g>
<title>__GI_write (11 samples, 2.36%)</title><rect x="426.9" y="867.0" width="27.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="429.9" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.36%)</title><rect x="426.9" y="851.0" width="27.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="429.9" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.36%)</title><rect x="426.9" y="835.0" width="27.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.9" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_write (11 samples, 2.36%)</title><rect x="426.9" y="819.0" width="27.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="429.9" y="830.0">_..</text>
</g>
<g>
<title>ksys_write (11 samples, 2.36%)</title><rect x="426.9" y="803.0" width="27.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.9" y="814.0">k..</text>
</g>
<g>
<title>fsnotify (1 samples, 0.21%)</title><rect x="426.9" y="787.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.9" y="798.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 2.14%)</title><rect x="429.4" y="787.0" width="25.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.4" y="798.0">v..</text>
</g>
<g>
<title>__vfs_write (10 samples, 2.14%)</title><rect x="429.4" y="771.0" width="25.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.4" y="782.0">_..</text>
</g>
<g>
<title>new_sync_write (10 samples, 2.14%)</title><rect x="429.4" y="755.0" width="25.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="432.4" y="766.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (10 samples, 2.14%)</title><rect x="429.4" y="739.0" width="25.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="432.4" y="750.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (7 samples, 1.50%)</title><rect x="434.5" y="723.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.5" y="734.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.43%)</title><rect x="434.5" y="707.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="437.5" y="718.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.43%)</title><rect x="434.5" y="691.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="437.5" y="702.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.43%)</title><rect x="434.5" y="675.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.5" y="686.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.43%)</title><rect x="434.5" y="659.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="437.5" y="670.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.21%)</title><rect x="434.5" y="643.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="437.5" y="654.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.21%)</title><rect x="434.5" y="627.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="437.5" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.21%)</title><rect x="434.5" y="611.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="437.5" y="622.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.21%)</title><rect x="437.0" y="643.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.0" y="654.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.21%)</title><rect x="437.0" y="627.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.0" y="638.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.21%)</title><rect x="437.0" y="611.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="440.0" y="622.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 0.86%)</title><rect x="439.6" y="707.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="442.6" y="718.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.43%)</title><rect x="439.6" y="691.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.6" y="702.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.43%)</title><rect x="439.6" y="675.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.6" y="686.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.21%)</title><rect x="439.6" y="659.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.6" y="670.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.21%)</title><rect x="442.1" y="659.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.1" y="670.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.21%)</title><rect x="442.1" y="643.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="445.1" y="654.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.43%)</title><rect x="444.6" y="691.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="447.6" y="702.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.43%)</title><rect x="444.6" y="675.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="447.6" y="686.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.43%)</title><rect x="444.6" y="659.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="447.6" y="670.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.43%)</title><rect x="444.6" y="643.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.6" y="654.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.43%)</title><rect x="444.6" y="627.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.6" y="638.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.43%)</title><rect x="444.6" y="611.0" width="5.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.6" y="622.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.43%)</title><rect x="444.6" y="595.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.6" y="606.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.21%)</title><rect x="447.1" y="579.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="450.1" y="590.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.21%)</title><rect x="447.1" y="563.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.1" y="574.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.21%)</title><rect x="447.1" y="547.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.1" y="558.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.21%)</title><rect x="449.7" y="707.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="452.7" y="718.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.21%)</title><rect x="452.2" y="723.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="455.2" y="734.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.21%)</title><rect x="452.2" y="707.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.2" y="718.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.21%)</title><rect x="452.2" y="691.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.64%)</title><rect x="454.7" y="883.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.7" y="894.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.21%)</title><rect x="462.3" y="883.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="465.3" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 3.43%)</title><rect x="464.8" y="883.0" width="40.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.8" y="894.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 3.43%)</title><rect x="464.8" y="867.0" width="40.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.8" y="878.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (16 samples, 3.43%)</title><rect x="464.8" y="851.0" width="40.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.8" y="862.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (16 samples, 3.43%)</title><rect x="464.8" y="835.0" width="40.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.8" y="846.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (15 samples, 3.21%)</title><rect x="467.3" y="819.0" width="37.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.3" y="830.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (13 samples, 2.78%)</title><rect x="469.9" y="803.0" width="32.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="472.9" y="814.0">Ja..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.21%)</title><rect x="469.9" y="787.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="472.9" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.21%)</title><rect x="469.9" y="771.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="472.9" y="782.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 1.71%)</title><rect x="472.4" y="787.0" width="20.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="475.4" y="798.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.43%)</title><rect x="472.4" y="771.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="475.4" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.21%)</title><rect x="477.5" y="771.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="480.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.64%)</title><rect x="480.0" y="771.0" width="7.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="483.0" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.43%)</title><rect x="487.6" y="771.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="490.6" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.43%)</title><rect x="487.6" y="755.0" width="5.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="490.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="487.6" y="739.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="490.6" y="750.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.21%)</title><rect x="487.6" y="723.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="490.6" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.21%)</title><rect x="490.1" y="739.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="493.1" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.86%)</title><rect x="492.6" y="787.0" width="10.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="495.6" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.21%)</title><rect x="497.7" y="771.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="500.7" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.21%)</title><rect x="500.2" y="771.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="503.2" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.21%)</title><rect x="502.7" y="803.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="505.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.routeRequest (117 samples, 25.05%)</title><rect x="505.2" y="931.0" width="295.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.2" y="942.0">ru/mail/polis/service/stasyanoi/CustomSe..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (89 samples, 19.06%)</title><rect x="505.2" y="915.0" width="224.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.2" y="926.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (89 samples, 19.06%)</title><rect x="505.2" y="899.0" width="224.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="508.2" y="910.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8 samples, 1.71%)</title><rect x="505.2" y="883.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 1.71%)</title><rect x="505.2" y="867.0" width="20.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.2" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.64%)</title><rect x="505.2" y="851.0" width="7.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="508.2" y="862.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.21%)</title><rect x="505.2" y="835.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="508.2" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.43%)</title><rect x="507.8" y="835.0" width="5.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="510.8" y="846.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.64%)</title><rect x="512.8" y="851.0" width="7.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="515.8" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.64%)</title><rect x="512.8" y="835.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.8" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.64%)</title><rect x="512.8" y="819.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.8" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.64%)</title><rect x="512.8" y="803.0" width="7.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="515.8" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.64%)</title><rect x="512.8" y="787.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.8" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.64%)</title><rect x="512.8" y="771.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.8" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.64%)</title><rect x="512.8" y="755.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.8" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.64%)</title><rect x="512.8" y="739.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="515.8" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.21%)</title><rect x="512.8" y="723.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.8" y="734.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.21%)</title><rect x="512.8" y="707.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="515.8" y="718.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.21%)</title><rect x="512.8" y="691.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.8" y="702.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.21%)</title><rect x="512.8" y="675.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="515.8" y="686.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.21%)</title><rect x="512.8" y="659.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="515.8" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.21%)</title><rect x="515.4" y="723.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="518.4" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.21%)</title><rect x="515.4" y="707.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="518.4" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.21%)</title><rect x="517.9" y="723.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.9" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.43%)</title><rect x="520.4" y="851.0" width="5.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="523.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 1.07%)</title><rect x="525.5" y="883.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.21%)</title><rect x="528.0" y="867.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.21%)</title><rect x="530.5" y="867.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.5" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="530.5" y="851.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="530.5" y="835.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.43%)</title><rect x="533.0" y="867.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.21%)</title><rect x="533.0" y="851.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.21%)</title><rect x="533.0" y="835.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="535.6" y="851.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="538.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.21%)</title><rect x="535.6" y="835.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.6" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.21%)</title><rect x="535.6" y="819.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="538.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.86%)</title><rect x="538.1" y="883.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.64%)</title><rect x="540.6" y="867.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.64%)</title><rect x="540.6" y="851.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.64%)</title><rect x="540.6" y="835.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.64%)</title><rect x="540.6" y="819.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (1 samples, 0.21%)</title><rect x="548.2" y="883.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (16 samples, 3.43%)</title><rect x="550.7" y="883.0" width="40.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.7" y="894.0">one..</text>
</g>
<g>
<title>__libc_send (16 samples, 3.43%)</title><rect x="550.7" y="867.0" width="40.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="553.7" y="878.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 3.43%)</title><rect x="550.7" y="851.0" width="40.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.7" y="862.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 3.43%)</title><rect x="550.7" y="835.0" width="40.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.7" y="846.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (16 samples, 3.43%)</title><rect x="550.7" y="819.0" width="40.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="553.7" y="830.0">__x..</text>
</g>
<g>
<title>__sys_sendto (16 samples, 3.43%)</title><rect x="550.7" y="803.0" width="40.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="553.7" y="814.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (16 samples, 3.43%)</title><rect x="550.7" y="787.0" width="40.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.7" y="798.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (16 samples, 3.43%)</title><rect x="550.7" y="771.0" width="40.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.7" y="782.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (16 samples, 3.43%)</title><rect x="550.7" y="755.0" width="40.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="553.7" y="766.0">tcp..</text>
</g>
<g>
<title>skb_entail (1 samples, 0.21%)</title><rect x="550.7" y="739.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="553.7" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (15 samples, 3.21%)</title><rect x="553.3" y="739.0" width="37.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.3" y="750.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.21%)</title><rect x="555.8" y="723.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="558.8" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.21%)</title><rect x="555.8" y="707.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.8" y="718.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.21%)</title><rect x="558.3" y="723.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="561.3" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.21%)</title><rect x="558.3" y="707.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="561.3" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.21%)</title><rect x="558.3" y="691.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="561.3" y="702.0"></text>
</g>
<g>
<title>tcp_push (12 samples, 2.57%)</title><rect x="560.8" y="723.0" width="30.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.8" y="734.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (12 samples, 2.57%)</title><rect x="560.8" y="707.0" width="30.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="563.8" y="718.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (12 samples, 2.57%)</title><rect x="560.8" y="691.0" width="30.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.8" y="702.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (12 samples, 2.57%)</title><rect x="560.8" y="675.0" width="30.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="563.8" y="686.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (10 samples, 2.14%)</title><rect x="565.9" y="659.0" width="25.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.9" y="670.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 2.14%)</title><rect x="565.9" y="643.0" width="25.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="568.9" y="654.0">_..</text>
</g>
<g>
<title>ip_local_out (8 samples, 1.71%)</title><rect x="565.9" y="627.0" width="20.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.9" y="638.0"></text>
</g>
<g>
<title>ip_output (8 samples, 1.71%)</title><rect x="565.9" y="611.0" width="20.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.9" y="622.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 1.71%)</title><rect x="565.9" y="595.0" width="20.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="568.9" y="606.0"></text>
</g>
<g>
<title>__ip_finish_output (8 samples, 1.71%)</title><rect x="565.9" y="579.0" width="20.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="568.9" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (8 samples, 1.71%)</title><rect x="565.9" y="563.0" width="20.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.9" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 1.71%)</title><rect x="565.9" y="547.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.9" y="558.0"></text>
</g>
<g>
<title>do_softirq.part.20 (8 samples, 1.71%)</title><rect x="565.9" y="531.0" width="20.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.9" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (8 samples, 1.71%)</title><rect x="565.9" y="515.0" width="20.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="568.9" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 1.71%)</title><rect x="565.9" y="499.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="568.9" y="510.0"></text>
</g>
<g>
<title>net_rx_action (8 samples, 1.71%)</title><rect x="565.9" y="483.0" width="20.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="568.9" y="494.0"></text>
</g>
<g>
<title>process_backlog (8 samples, 1.71%)</title><rect x="565.9" y="467.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="568.9" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 1.71%)</title><rect x="565.9" y="451.0" width="20.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="568.9" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 1.71%)</title><rect x="565.9" y="435.0" width="20.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.9" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.21%)</title><rect x="565.9" y="419.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="568.9" y="430.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 1.50%)</title><rect x="568.4" y="419.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.4" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 1.50%)</title><rect x="568.4" y="403.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="571.4" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 1.50%)</title><rect x="568.4" y="387.0" width="17.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="571.4" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 1.28%)</title><rect x="568.4" y="371.0" width="15.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.4" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 1.28%)</title><rect x="568.4" y="355.0" width="15.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.4" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.07%)</title><rect x="570.9" y="339.0" width="12.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.9" y="350.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.21%)</title><rect x="570.9" y="323.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="573.9" y="334.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.21%)</title><rect x="570.9" y="307.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="573.9" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.86%)</title><rect x="573.5" y="323.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="576.5" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.64%)</title><rect x="576.0" y="307.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.0" y="318.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.21%)</title><rect x="576.0" y="291.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="579.0" y="302.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.21%)</title><rect x="576.0" y="275.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="579.0" y="286.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (1 samples, 0.21%)</title><rect x="576.0" y="259.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="579.0" y="270.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.21%)</title><rect x="576.0" y="243.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.0" y="254.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.21%)</title><rect x="576.0" y="227.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="579.0" y="238.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.21%)</title><rect x="576.0" y="211.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.0" y="222.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.21%)</title><rect x="576.0" y="195.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.0" y="206.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.21%)</title><rect x="576.0" y="179.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="579.0" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="576.0" y="163.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="579.0" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.21%)</title><rect x="576.0" y="147.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="579.0" y="158.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.21%)</title><rect x="576.0" y="131.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="579.0" y="142.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.21%)</title><rect x="576.0" y="115.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="579.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.21%)</title><rect x="578.5" y="291.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="581.5" y="302.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.21%)</title><rect x="581.0" y="291.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="584.0" y="302.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.21%)</title><rect x="581.0" y="275.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.0" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.21%)</title><rect x="581.0" y="259.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.0" y="270.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.21%)</title><rect x="581.0" y="243.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.0" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.21%)</title><rect x="581.0" y="227.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="584.0" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.21%)</title><rect x="581.0" y="211.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="583.6" y="371.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.6" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.21%)</title><rect x="583.6" y="355.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.21%)</title><rect x="583.6" y="339.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="586.6" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.43%)</title><rect x="586.1" y="627.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="589.1" y="638.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (55 samples, 11.78%)</title><rect x="591.2" y="883.0" width="138.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.2" y="894.0">one/nio/pool/Pool..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (55 samples, 11.78%)</title><rect x="591.2" y="867.0" width="138.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.2" y="878.0">one/nio/pool/Sock..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.createObject (55 samples, 11.78%)</title><rect x="591.2" y="851.0" width="138.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.2" y="862.0">one/nio/pool/Sock..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect (39 samples, 8.35%)</title><rect x="591.2" y="835.0" width="98.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="594.2" y="846.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.connect0 (39 samples, 8.35%)</title><rect x="591.2" y="819.0" width="98.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.2" y="830.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (39 samples, 8.35%)</title><rect x="591.2" y="803.0" width="98.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="594.2" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2 samples, 0.43%)</title><rect x="591.2" y="787.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="594.2" y="798.0"></text>
</g>
<g>
<title>sockaddr_from_java (2 samples, 0.43%)</title><rect x="591.2" y="771.0" width="5.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="594.2" y="782.0"></text>
</g>
<g>
<title>jni_GetArrayLength (2 samples, 0.43%)</title><rect x="591.2" y="755.0" width="5.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="594.2" y="766.0"></text>
</g>
<g>
<title>__libc_connect (37 samples, 7.92%)</title><rect x="596.2" y="787.0" width="93.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="599.2" y="798.0">__libc_conn..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 7.92%)</title><rect x="596.2" y="771.0" width="93.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.2" y="782.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (37 samples, 7.92%)</title><rect x="596.2" y="755.0" width="93.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="599.2" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_connect (37 samples, 7.92%)</title><rect x="596.2" y="739.0" width="93.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.2" y="750.0">__x64_sys_c..</text>
</g>
<g>
<title>__sys_connect (37 samples, 7.92%)</title><rect x="596.2" y="723.0" width="93.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="599.2" y="734.0">__sys_connect</text>
</g>
<g>
<title>inet_stream_connect (37 samples, 7.92%)</title><rect x="596.2" y="707.0" width="93.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="599.2" y="718.0">inet_stream..</text>
</g>
<g>
<title>__inet_stream_connect (37 samples, 7.92%)</title><rect x="596.2" y="691.0" width="93.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="599.2" y="702.0">__inet_stre..</text>
</g>
<g>
<title>release_sock (13 samples, 2.78%)</title><rect x="598.7" y="675.0" width="32.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="601.7" y="686.0">re..</text>
</g>
<g>
<title>__release_sock (13 samples, 2.78%)</title><rect x="598.7" y="659.0" width="32.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.7" y="670.0">__..</text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 2.78%)</title><rect x="598.7" y="643.0" width="32.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="601.7" y="654.0">tc..</text>
</g>
<g>
<title>tcp_rcv_state_process (13 samples, 2.78%)</title><rect x="598.7" y="627.0" width="32.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.7" y="638.0">tc..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.64%)</title><rect x="598.7" y="611.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.7" y="622.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.21%)</title><rect x="598.7" y="595.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="601.7" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.43%)</title><rect x="601.3" y="595.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="604.3" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.21%)</title><rect x="603.8" y="579.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="606.8" y="590.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.21%)</title><rect x="603.8" y="563.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="606.8" y="574.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.21%)</title><rect x="603.8" y="547.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.8" y="558.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.21%)</title><rect x="603.8" y="531.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.21%)</title><rect x="603.8" y="515.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.8" y="526.0"></text>
</g>
<g>
<title>tcp_send_ack (10 samples, 2.14%)</title><rect x="606.3" y="611.0" width="25.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.3" y="622.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (10 samples, 2.14%)</title><rect x="606.3" y="595.0" width="25.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.3" y="606.0">_..</text>
</g>
<g>
<title>__tcp_transmit_skb (10 samples, 2.14%)</title><rect x="606.3" y="579.0" width="25.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.3" y="590.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (10 samples, 2.14%)</title><rect x="606.3" y="563.0" width="25.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.3" y="574.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 2.14%)</title><rect x="606.3" y="547.0" width="25.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="609.3" y="558.0">_..</text>
</g>
<g>
<title>ip_local_out (10 samples, 2.14%)</title><rect x="606.3" y="531.0" width="25.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.3" y="542.0">i..</text>
</g>
<g>
<title>ip_output (10 samples, 2.14%)</title><rect x="606.3" y="515.0" width="25.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="609.3" y="526.0">i..</text>
</g>
<g>
<title>ip_finish_output (10 samples, 2.14%)</title><rect x="606.3" y="499.0" width="25.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.3" y="510.0">i..</text>
</g>
<g>
<title>__ip_finish_output (10 samples, 2.14%)</title><rect x="606.3" y="483.0" width="25.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.3" y="494.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 2.14%)</title><rect x="606.3" y="467.0" width="25.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="609.3" y="478.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 2.14%)</title><rect x="606.3" y="451.0" width="25.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.3" y="462.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (10 samples, 2.14%)</title><rect x="606.3" y="435.0" width="25.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="609.3" y="446.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 2.14%)</title><rect x="606.3" y="419.0" width="25.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="609.3" y="430.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 2.14%)</title><rect x="606.3" y="403.0" width="25.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="609.3" y="414.0">_..</text>
</g>
<g>
<title>net_rx_action (10 samples, 2.14%)</title><rect x="606.3" y="387.0" width="25.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.3" y="398.0">n..</text>
</g>
<g>
<title>process_backlog (10 samples, 2.14%)</title><rect x="606.3" y="371.0" width="25.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="609.3" y="382.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (10 samples, 2.14%)</title><rect x="606.3" y="355.0" width="25.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.3" y="366.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (10 samples, 2.14%)</title><rect x="606.3" y="339.0" width="25.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="609.3" y="350.0">_..</text>
</g>
<g>
<title>ip_rcv (10 samples, 2.14%)</title><rect x="606.3" y="323.0" width="25.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="609.3" y="334.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 2.14%)</title><rect x="606.3" y="307.0" width="25.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="609.3" y="318.0">i..</text>
</g>
<g>
<title>ip_local_deliver (10 samples, 2.14%)</title><rect x="606.3" y="291.0" width="25.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.3" y="302.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 2.14%)</title><rect x="606.3" y="275.0" width="25.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="609.3" y="286.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (10 samples, 2.14%)</title><rect x="606.3" y="259.0" width="25.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.3" y="270.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (10 samples, 2.14%)</title><rect x="606.3" y="243.0" width="25.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="609.3" y="254.0">t..</text>
</g>
<g>
<title>tcp_check_req (4 samples, 0.86%)</title><rect x="606.3" y="227.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.3" y="238.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (4 samples, 0.86%)</title><rect x="606.3" y="211.0" width="10.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="609.3" y="222.0"></text>
</g>
<g>
<title>tcp_v4_syn_recv_sock (4 samples, 0.86%)</title><rect x="606.3" y="195.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.3" y="206.0"></text>
</g>
<g>
<title>tcp_create_openreq_child (4 samples, 0.86%)</title><rect x="606.3" y="179.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="609.3" y="190.0"></text>
</g>
<g>
<title>inet_csk_clone_lock (4 samples, 0.86%)</title><rect x="606.3" y="163.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="609.3" y="174.0"></text>
</g>
<g>
<title>bpf_sk_storage_clone (1 samples, 0.21%)</title><rect x="606.3" y="147.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.3" y="158.0"></text>
</g>
<g>
<title>memcpy_erms (1 samples, 0.21%)</title><rect x="608.8" y="147.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="611.8" y="158.0"></text>
</g>
<g>
<title>sk_clone_lock (2 samples, 0.43%)</title><rect x="611.4" y="147.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.4" y="158.0"></text>
</g>
<g>
<title>security_sk_clone (1 samples, 0.21%)</title><rect x="611.4" y="131.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="614.4" y="142.0"></text>
</g>
<g>
<title>apparmor_sk_clone_security (1 samples, 0.21%)</title><rect x="611.4" y="115.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.4" y="126.0"></text>
</g>
<g>
<title>sk_prot_alloc (1 samples, 0.21%)</title><rect x="613.9" y="131.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="616.9" y="142.0"></text>
</g>
<g>
<title>tcp_child_process (5 samples, 1.07%)</title><rect x="616.4" y="227.0" width="12.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="619.4" y="238.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.86%)</title><rect x="619.0" y="211.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="622.0" y="222.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.86%)</title><rect x="619.0" y="195.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.0" y="206.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.86%)</title><rect x="619.0" y="179.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="622.0" y="190.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.86%)</title><rect x="619.0" y="163.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="622.0" y="174.0"></text>
</g>
<g>
<title>tcp_v6_syn_recv_sock (1 samples, 0.21%)</title><rect x="629.1" y="227.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.1" y="238.0"></text>
</g>
<g>
<title>tcp_v6_connect (23 samples, 4.93%)</title><rect x="631.6" y="675.0" width="58.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="634.6" y="686.0">tcp_v6..</text>
</g>
<g>
<title>tcp_v4_connect (23 samples, 4.93%)</title><rect x="631.6" y="659.0" width="58.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="634.6" y="670.0">tcp_v4..</text>
</g>
<g>
<title>ip_route_output_flow (1 samples, 0.21%)</title><rect x="631.6" y="643.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="634.6" y="654.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (1 samples, 0.21%)</title><rect x="631.6" y="627.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.6" y="638.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (1 samples, 0.21%)</title><rect x="631.6" y="611.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.6" y="622.0"></text>
</g>
<g>
<title>ip_route_output_key_hash (1 samples, 0.21%)</title><rect x="634.1" y="643.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="637.1" y="654.0"></text>
</g>
<g>
<title>ip_route_output_key_hash_rcu (1 samples, 0.21%)</title><rect x="634.1" y="627.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.1" y="638.0"></text>
</g>
<g>
<title>fib_table_lookup (1 samples, 0.21%)</title><rect x="634.1" y="611.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.1" y="622.0"></text>
</g>
<g>
<title>tcp_connect (21 samples, 4.50%)</title><rect x="636.6" y="643.0" width="53.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.6" y="654.0">tcp_c..</text>
</g>
<g>
<title>__tcp_transmit_skb (16 samples, 3.43%)</title><rect x="636.6" y="627.0" width="40.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.6" y="638.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (16 samples, 3.43%)</title><rect x="636.6" y="611.0" width="40.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.6" y="622.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 3.43%)</title><rect x="636.6" y="595.0" width="40.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.6" y="606.0">__i..</text>
</g>
<g>
<title>ip_local_out (15 samples, 3.21%)</title><rect x="636.6" y="579.0" width="37.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="639.6" y="590.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.86%)</title><rect x="636.6" y="563.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.6" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.86%)</title><rect x="636.6" y="547.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.6" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.86%)</title><rect x="636.6" y="531.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.6" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.86%)</title><rect x="636.6" y="515.0" width="10.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.6" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_destroy (3 samples, 0.64%)</title><rect x="636.6" y="499.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="639.6" y="510.0"></text>
</g>
<g>
<title>destroy_conntrack?[nf_conntrack] (3 samples, 0.64%)</title><rect x="636.6" y="483.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="639.6" y="494.0"></text>
</g>
<g>
<title>nf_conntrack_free?[nf_conntrack] (1 samples, 0.21%)</title><rect x="636.6" y="467.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="639.6" y="478.0"></text>
</g>
<g>
<title>nf_nat_cleanup_conntrack?[nf_nat] (1 samples, 0.21%)</title><rect x="636.6" y="451.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.6" y="462.0"></text>
</g>
<g>
<title>nf_ct_del_from_dying_or_unconfirmed_list?[nf_conntrack] (1 samples, 0.21%)</title><rect x="639.2" y="467.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="642.2" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.21%)</title><rect x="639.2" y="451.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.2" y="462.0"></text>
</g>
<g>
<title>nf_ct_ext_destroy?[nf_conntrack] (1 samples, 0.21%)</title><rect x="641.7" y="467.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.7" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.21%)</title><rect x="644.2" y="499.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.2" y="510.0"></text>
</g>
<g>
<title>tcp_new?[nf_conntrack] (1 samples, 0.21%)</title><rect x="644.2" y="483.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.2" y="494.0"></text>
</g>
<g>
<title>tcp_options.isra.15?[nf_conntrack] (1 samples, 0.21%)</title><rect x="644.2" y="467.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.2" y="478.0"></text>
</g>
<g>
<title>ip_output (11 samples, 2.36%)</title><rect x="646.7" y="563.0" width="27.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.7" y="574.0">i..</text>
</g>
<g>
<title>ip_finish_output (10 samples, 2.14%)</title><rect x="646.7" y="547.0" width="25.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.7" y="558.0">i..</text>
</g>
<g>
<title>__ip_finish_output (10 samples, 2.14%)</title><rect x="646.7" y="531.0" width="25.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="649.7" y="542.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 2.14%)</title><rect x="646.7" y="515.0" width="25.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="649.7" y="526.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 2.14%)</title><rect x="646.7" y="499.0" width="25.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="649.7" y="510.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (10 samples, 2.14%)</title><rect x="646.7" y="483.0" width="25.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="649.7" y="494.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (9 samples, 1.93%)</title><rect x="649.3" y="467.0" width="22.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.3" y="478.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 1.93%)</title><rect x="649.3" y="451.0" width="22.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.3" y="462.0">_..</text>
</g>
<g>
<title>net_rx_action (9 samples, 1.93%)</title><rect x="649.3" y="435.0" width="22.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="652.3" y="446.0">n..</text>
</g>
<g>
<title>process_backlog (9 samples, 1.93%)</title><rect x="649.3" y="419.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="652.3" y="430.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (9 samples, 1.93%)</title><rect x="649.3" y="403.0" width="22.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="652.3" y="414.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (9 samples, 1.93%)</title><rect x="649.3" y="387.0" width="22.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.3" y="398.0">_..</text>
</g>
<g>
<title>ip_rcv (8 samples, 1.71%)</title><rect x="649.3" y="371.0" width="20.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="652.3" y="382.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 1.71%)</title><rect x="649.3" y="355.0" width="20.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.3" y="366.0"></text>
</g>
<g>
<title>ip_local_deliver (8 samples, 1.71%)</title><rect x="649.3" y="339.0" width="20.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.3" y="350.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.07%)</title><rect x="651.8" y="323.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.8" y="334.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.86%)</title><rect x="654.3" y="307.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="657.3" y="318.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.64%)</title><rect x="656.9" y="291.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="659.9" y="302.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.21%)</title><rect x="656.9" y="275.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.9" y="286.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.21%)</title><rect x="656.9" y="259.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="659.9" y="270.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.43%)</title><rect x="659.4" y="275.0" width="5.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="662.4" y="286.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (2 samples, 0.43%)</title><rect x="659.4" y="259.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="662.4" y="270.0"></text>
</g>
<g>
<title>tcp_v6_conn_request (2 samples, 0.43%)</title><rect x="659.4" y="243.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.4" y="254.0"></text>
</g>
<g>
<title>tcp_v4_conn_request (2 samples, 0.43%)</title><rect x="659.4" y="227.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="662.4" y="238.0"></text>
</g>
<g>
<title>tcp_conn_request (2 samples, 0.43%)</title><rect x="659.4" y="211.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="662.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_send_synack (2 samples, 0.43%)</title><rect x="659.4" y="195.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.4" y="206.0"></text>
</g>
<g>
<title>ip_build_and_send_pkt (2 samples, 0.43%)</title><rect x="659.4" y="179.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="662.4" y="190.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.43%)</title><rect x="659.4" y="163.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="662.4" y="174.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.21%)</title><rect x="659.4" y="147.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.4" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="659.4" y="131.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.4" y="142.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.21%)</title><rect x="659.4" y="115.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="662.4" y="126.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.21%)</title><rect x="659.4" y="99.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="662.4" y="110.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.21%)</title><rect x="659.4" y="83.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="662.4" y="94.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.21%)</title><rect x="661.9" y="147.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="664.9" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.21%)</title><rect x="661.9" y="131.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="664.9" y="142.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.21%)</title><rect x="661.9" y="115.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.9" y="126.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.21%)</title><rect x="661.9" y="99.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="664.9" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.21%)</title><rect x="661.9" y="83.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="664.9" y="94.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.21%)</title><rect x="661.9" y="67.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="664.9" y="78.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.21%)</title><rect x="661.9" y="51.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="664.9" y="62.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.21%)</title><rect x="661.9" y="35.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.43%)</title><rect x="664.4" y="323.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="667.4" y="334.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.21%)</title><rect x="664.4" y="307.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.4" y="318.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.21%)</title><rect x="664.4" y="291.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="667.4" y="302.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.21%)</title><rect x="667.0" y="307.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="670.0" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.21%)</title><rect x="667.0" y="291.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.0" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="669.5" y="371.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="672.5" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="672.0" y="547.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.0" y="558.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.21%)</title><rect x="672.0" y="531.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="675.0" y="542.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.21%)</title><rect x="672.0" y="515.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="675.0" y="526.0"></text>
</g>
<g>
<title>__nf_conntrack_confirm?[nf_conntrack] (1 samples, 0.21%)</title><rect x="672.0" y="499.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="675.0" y="510.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.21%)</title><rect x="672.0" y="483.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="675.0" y="494.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.21%)</title><rect x="674.5" y="579.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="677.5" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.21%)</title><rect x="677.1" y="627.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="680.1" y="638.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.21%)</title><rect x="677.1" y="611.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="680.1" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.21%)</title><rect x="677.1" y="595.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.1" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.43%)</title><rect x="679.6" y="627.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.6" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.21%)</title><rect x="679.6" y="611.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.6" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.21%)</title><rect x="679.6" y="595.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="682.6" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.21%)</title><rect x="679.6" y="579.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.6" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.21%)</title><rect x="679.6" y="563.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.6" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.21%)</title><rect x="679.6" y="547.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.6" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.21%)</title><rect x="679.6" y="531.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.6" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.21%)</title><rect x="679.6" y="515.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.6" y="526.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.21%)</title><rect x="679.6" y="499.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.6" y="510.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.21%)</title><rect x="679.6" y="483.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="682.6" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.21%)</title><rect x="682.1" y="611.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="685.1" y="622.0"></text>
</g>
<g>
<title>tcp_select_initial_window (1 samples, 0.21%)</title><rect x="684.6" y="627.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="687.6" y="638.0"></text>
</g>
<g>
<title>tcp_write_queue_purge (1 samples, 0.21%)</title><rect x="687.2" y="627.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="690.2" y="638.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.21%)</title><rect x="687.2" y="611.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setKeepAlive (1 samples, 0.21%)</title><rect x="689.7" y="835.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.7" y="846.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.21%)</title><rect x="689.7" y="819.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="692.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.21%)</title><rect x="689.7" y="803.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="692.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.21%)</title><rect x="689.7" y="787.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.21%)</title><rect x="689.7" y="771.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.7" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.21%)</title><rect x="689.7" y="755.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="692.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.86%)</title><rect x="692.2" y="835.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.2" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.21%)</title><rect x="692.2" y="819.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="695.2" y="830.0"></text>
</g>
<g>
<title>__GI___setsockopt (3 samples, 0.64%)</title><rect x="694.8" y="819.0" width="7.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="697.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.64%)</title><rect x="694.8" y="803.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="697.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.64%)</title><rect x="694.8" y="787.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (3 samples, 0.64%)</title><rect x="694.8" y="771.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="697.8" y="782.0"></text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.64%)</title><rect x="694.8" y="755.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="697.8" y="766.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.21%)</title><rect x="694.8" y="739.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.8" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.21%)</title><rect x="694.8" y="723.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="697.8" y="734.0"></text>
</g>
<g>
<title>aa_sock_opt_perm (1 samples, 0.21%)</title><rect x="694.8" y="707.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="697.8" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.21%)</title><rect x="694.8" y="691.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="697.8" y="702.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.21%)</title><rect x="694.8" y="675.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.8" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.21%)</title><rect x="694.8" y="659.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.8" y="670.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.21%)</title><rect x="694.8" y="643.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="697.8" y="654.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.43%)</title><rect x="697.3" y="739.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="700.3" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.21%)</title><rect x="697.3" y="723.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.3" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.21%)</title><rect x="697.3" y="707.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="700.3" y="718.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.21%)</title><rect x="699.8" y="723.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="702.8" y="734.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.21%)</title><rect x="699.8" y="707.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="702.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Socket.create (11 samples, 2.36%)</title><rect x="702.3" y="835.0" width="27.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.3" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.&lt;init&gt; (11 samples, 2.36%)</title><rect x="702.3" y="819.0" width="27.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.3" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.socket0 (10 samples, 2.14%)</title><rect x="704.9" y="803.0" width="25.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.9" y="814.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_socket0 (1 samples, 0.21%)</title><rect x="704.9" y="787.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>__GI_socket (9 samples, 1.93%)</title><rect x="707.4" y="787.0" width="22.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="710.4" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.93%)</title><rect x="707.4" y="771.0" width="22.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.4" y="782.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.93%)</title><rect x="707.4" y="755.0" width="22.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="710.4" y="766.0">d..</text>
</g>
<g>
<title>__x64_sys_socket (9 samples, 1.93%)</title><rect x="707.4" y="739.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="710.4" y="750.0">_..</text>
</g>
<g>
<title>__sys_socket (9 samples, 1.93%)</title><rect x="707.4" y="723.0" width="22.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.4" y="734.0">_..</text>
</g>
<g>
<title>__sock_create (8 samples, 1.71%)</title><rect x="707.4" y="707.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.4" y="718.0"></text>
</g>
<g>
<title>inet6_create (4 samples, 0.86%)</title><rect x="707.4" y="691.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="710.4" y="702.0"></text>
</g>
<g>
<title>sk_alloc (2 samples, 0.43%)</title><rect x="709.9" y="675.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="712.9" y="686.0"></text>
</g>
<g>
<title>sk_prot_alloc (2 samples, 0.43%)</title><rect x="709.9" y="659.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.9" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.21%)</title><rect x="709.9" y="643.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="712.9" y="654.0"></text>
</g>
<g>
<title>security_sk_alloc (1 samples, 0.21%)</title><rect x="712.4" y="643.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="715.4" y="654.0"></text>
</g>
<g>
<title>__kmalloc (1 samples, 0.21%)</title><rect x="712.4" y="627.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.4" y="638.0"></text>
</g>
<g>
<title>tcp_v6_init_sock (1 samples, 0.21%)</title><rect x="715.0" y="675.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.0" y="686.0"></text>
</g>
<g>
<title>tcp_init_sock (1 samples, 0.21%)</title><rect x="715.0" y="659.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="718.0" y="670.0"></text>
</g>
<g>
<title>tcp_init_xmit_timers (1 samples, 0.21%)</title><rect x="715.0" y="643.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="718.0" y="654.0"></text>
</g>
<g>
<title>security_socket_create (2 samples, 0.43%)</title><rect x="717.5" y="691.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.5" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_create (2 samples, 0.43%)</title><rect x="717.5" y="675.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="720.5" y="686.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.43%)</title><rect x="722.5" y="691.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="725.5" y="702.0"></text>
</g>
<g>
<title>new_inode_pseudo (2 samples, 0.43%)</title><rect x="722.5" y="675.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.5" y="686.0"></text>
</g>
<g>
<title>alloc_inode (1 samples, 0.21%)</title><rect x="722.5" y="659.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.5" y="670.0"></text>
</g>
<g>
<title>sock_alloc_inode (1 samples, 0.21%)</title><rect x="725.1" y="659.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="728.1" y="670.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.21%)</title><rect x="727.6" y="707.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="730.6" y="718.0"></text>
</g>
<g>
<title>alloc_file_pseudo (1 samples, 0.21%)</title><rect x="727.6" y="691.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.6" y="702.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.21%)</title><rect x="727.6" y="675.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.6" y="686.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.21%)</title><rect x="727.6" y="659.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="730.6" y="670.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.21%)</title><rect x="727.6" y="643.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.6" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.21%)</title><rect x="727.6" y="627.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (2 samples, 0.43%)</title><rect x="730.1" y="915.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.&lt;init&gt; (2 samples, 0.43%)</title><rect x="730.1" y="899.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="730.1" y="883.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.21%)</title><rect x="730.1" y="867.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/ConnectionString.expand (1 samples, 0.21%)</title><rect x="732.7" y="883.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.7" y="894.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.21%)</title><rect x="732.7" y="867.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.7" y="878.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.21%)</title><rect x="732.7" y="851.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.7" y="862.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.21%)</title><rect x="732.7" y="835.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.7" y="846.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.21%)</title><rect x="732.7" y="819.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.21%)</title><rect x="732.7" y="803.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.7" y="814.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.close (26 samples, 5.57%)</title><rect x="735.2" y="915.0" width="65.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.2" y="926.0">one/nio..</text>
</g>
<g>
<title>one/nio/pool/Pool.invalidateAll (26 samples, 5.57%)</title><rect x="735.2" y="899.0" width="65.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.2" y="910.0">one/nio..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (26 samples, 5.57%)</title><rect x="735.2" y="883.0" width="65.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.2" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/pool/SocketPool.destroyObject (26 samples, 5.57%)</title><rect x="735.2" y="867.0" width="65.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.2" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (26 samples, 5.57%)</title><rect x="735.2" y="851.0" width="65.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.2" y="862.0">one/nio..</text>
</g>
<g>
<title>__GI___shutdown (22 samples, 4.71%)</title><rect x="735.2" y="835.0" width="55.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="738.2" y="846.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 4.71%)</title><rect x="735.2" y="819.0" width="55.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.2" y="830.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 4.71%)</title><rect x="735.2" y="803.0" width="55.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="738.2" y="814.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_shutdown (22 samples, 4.71%)</title><rect x="735.2" y="787.0" width="55.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.2" y="798.0">__x64..</text>
</g>
<g>
<title>__sys_shutdown (22 samples, 4.71%)</title><rect x="735.2" y="771.0" width="55.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.2" y="782.0">__sys..</text>
</g>
<g>
<title>inet_shutdown (21 samples, 4.50%)</title><rect x="735.2" y="755.0" width="53.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.2" y="766.0">inet_..</text>
</g>
<g>
<title>sock_def_wakeup (1 samples, 0.21%)</title><rect x="735.2" y="739.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.2" y="750.0"></text>
</g>
<g>
<title>tcp_shutdown (20 samples, 4.28%)</title><rect x="737.7" y="739.0" width="50.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="740.7" y="750.0">tcp_s..</text>
</g>
<g>
<title>tcp_send_fin (20 samples, 4.28%)</title><rect x="737.7" y="723.0" width="50.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.7" y="734.0">tcp_s..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.21%)</title><rect x="737.7" y="707.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.7" y="718.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.21%)</title><rect x="737.7" y="691.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="740.7" y="702.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.21%)</title><rect x="737.7" y="675.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="740.7" y="686.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (19 samples, 4.07%)</title><rect x="740.2" y="707.0" width="48.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.2" y="718.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (19 samples, 4.07%)</title><rect x="740.2" y="691.0" width="48.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="743.2" y="702.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 3.85%)</title><rect x="740.2" y="675.0" width="45.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.2" y="686.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (18 samples, 3.85%)</title><rect x="740.2" y="659.0" width="45.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="743.2" y="670.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (18 samples, 3.85%)</title><rect x="740.2" y="643.0" width="45.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="743.2" y="654.0">__ip..</text>
</g>
<g>
<title>ip_local_out (17 samples, 3.64%)</title><rect x="742.8" y="627.0" width="42.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="745.8" y="638.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.43%)</title><rect x="742.8" y="611.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.8" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.43%)</title><rect x="742.8" y="595.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.8" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.21%)</title><rect x="742.8" y="579.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="745.8" y="590.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.21%)</title><rect x="742.8" y="563.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="745.8" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.21%)</title><rect x="745.3" y="579.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="748.3" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.21%)</title><rect x="745.3" y="563.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="748.3" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.21%)</title><rect x="745.3" y="547.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="748.3" y="558.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.21%)</title><rect x="745.3" y="531.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="748.3" y="542.0"></text>
</g>
<g>
<title>ip_output (15 samples, 3.21%)</title><rect x="747.8" y="611.0" width="37.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="750.8" y="622.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (14 samples, 3.00%)</title><rect x="747.8" y="595.0" width="35.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.8" y="606.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (14 samples, 3.00%)</title><rect x="747.8" y="579.0" width="35.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="750.8" y="590.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (14 samples, 3.00%)</title><rect x="747.8" y="563.0" width="35.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.8" y="574.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (13 samples, 2.78%)</title><rect x="747.8" y="547.0" width="32.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="750.8" y="558.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (12 samples, 2.57%)</title><rect x="750.3" y="531.0" width="30.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.3" y="542.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (12 samples, 2.57%)</title><rect x="750.3" y="515.0" width="30.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.3" y="526.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 2.57%)</title><rect x="750.3" y="499.0" width="30.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.3" y="510.0">__..</text>
</g>
<g>
<title>net_rx_action (12 samples, 2.57%)</title><rect x="750.3" y="483.0" width="30.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="753.3" y="494.0">ne..</text>
</g>
<g>
<title>process_backlog (12 samples, 2.57%)</title><rect x="750.3" y="467.0" width="30.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.3" y="478.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 2.57%)</title><rect x="750.3" y="451.0" width="30.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="753.3" y="462.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 2.57%)</title><rect x="750.3" y="435.0" width="30.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="753.3" y="446.0">__..</text>
</g>
<g>
<title>ip_rcv (9 samples, 1.93%)</title><rect x="755.4" y="419.0" width="22.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="758.4" y="430.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 1.93%)</title><rect x="755.4" y="403.0" width="22.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="758.4" y="414.0">i..</text>
</g>
<g>
<title>ip_local_deliver (9 samples, 1.93%)</title><rect x="755.4" y="387.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.4" y="398.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 1.71%)</title><rect x="755.4" y="371.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="758.4" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 1.71%)</title><rect x="755.4" y="355.0" width="20.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="758.4" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 1.71%)</title><rect x="755.4" y="339.0" width="20.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="758.4" y="350.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.21%)</title><rect x="755.4" y="323.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="758.4" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 1.50%)</title><rect x="757.9" y="323.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="760.9" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 1.28%)</title><rect x="757.9" y="307.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="760.9" y="318.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.21%)</title><rect x="757.9" y="291.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.9" y="302.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.21%)</title><rect x="757.9" y="275.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="760.9" y="286.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.21%)</title><rect x="757.9" y="259.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="760.9" y="270.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 1.07%)</title><rect x="760.4" y="291.0" width="12.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="763.4" y="302.0"></text>
</g>
<g>
<title>sock_def_wakeup (1 samples, 0.21%)</title><rect x="760.4" y="275.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.4" y="286.0"></text>
</g>
<g>
<title>tcp_fin (4 samples, 0.86%)</title><rect x="763.0" y="275.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="766.0" y="286.0"></text>
</g>
<g>
<title>sock_def_wakeup (3 samples, 0.64%)</title><rect x="765.5" y="259.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="768.5" y="270.0"></text>
</g>
<g>
<title>__wake_up (3 samples, 0.64%)</title><rect x="765.5" y="243.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.5" y="254.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.64%)</title><rect x="765.5" y="227.0" width="7.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="768.5" y="238.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.64%)</title><rect x="765.5" y="211.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="768.5" y="222.0"></text>
</g>
<g>
<title>tcp_validate_incoming (1 samples, 0.21%)</title><rect x="773.1" y="307.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="776.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="775.6" y="371.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.6" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.21%)</title><rect x="775.6" y="355.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="778.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.21%)</title><rect x="775.6" y="339.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.6" y="350.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.21%)</title><rect x="778.1" y="419.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="781.1" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.21%)</title><rect x="780.7" y="547.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="783.7" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.21%)</title><rect x="780.7" y="531.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="783.7" y="542.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.21%)</title><rect x="780.7" y="515.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.7" y="526.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.21%)</title><rect x="780.7" y="499.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="783.7" y="510.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="783.2" y="595.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="786.2" y="606.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.21%)</title><rect x="783.2" y="579.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="786.2" y="590.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.21%)</title><rect x="783.2" y="563.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.2" y="574.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.21%)</title><rect x="785.7" y="675.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="788.7" y="686.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.21%)</title><rect x="785.7" y="659.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="788.7" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.21%)</title><rect x="785.7" y="643.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="788.7" y="654.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.21%)</title><rect x="785.7" y="627.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="788.7" y="638.0"></text>
</g>
<g>
<title>security_socket_shutdown (1 samples, 0.21%)</title><rect x="788.2" y="755.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.2" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_shutdown (1 samples, 0.21%)</title><rect x="788.2" y="739.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="791.2" y="750.0"></text>
</g>
<g>
<title>aa_sock_perm (1 samples, 0.21%)</title><rect x="788.2" y="723.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="791.2" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.21%)</title><rect x="788.2" y="707.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="791.2" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.21%)</title><rect x="788.2" y="691.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="791.2" y="702.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.21%)</title><rect x="788.2" y="675.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="791.2" y="686.0"></text>
</g>
<g>
<title>__libc_close (4 samples, 0.86%)</title><rect x="790.8" y="835.0" width="10.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="793.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.64%)</title><rect x="793.3" y="819.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="796.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.64%)</title><rect x="793.3" y="803.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="796.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.43%)</title><rect x="793.3" y="787.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.3" y="798.0"></text>
</g>
<g>
<title>task_work_run (2 samples, 0.43%)</title><rect x="793.3" y="771.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.3" y="782.0"></text>
</g>
<g>
<title>____fput (2 samples, 0.43%)</title><rect x="793.3" y="755.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.3" y="766.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.21%)</title><rect x="793.3" y="739.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.3" y="750.0"></text>
</g>
<g>
<title>dput (1 samples, 0.21%)</title><rect x="793.3" y="723.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="796.3" y="734.0"></text>
</g>
<g>
<title>__dentry_kill (1 samples, 0.21%)</title><rect x="793.3" y="707.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.3" y="718.0"></text>
</g>
<g>
<title>dentry_free (1 samples, 0.21%)</title><rect x="793.3" y="691.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="796.3" y="702.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.21%)</title><rect x="793.3" y="675.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.3" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.21%)</title><rect x="795.8" y="739.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="798.8" y="750.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.21%)</title><rect x="798.4" y="787.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="801.4" y="798.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (22 samples, 4.71%)</title><rect x="800.9" y="1059.0" width="55.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.9" y="1070.0">one/n..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.21%)</title><rect x="811.0" y="1043.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.21%)</title><rect x="813.5" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.21%)</title><rect x="813.5" y="1027.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.5" y="1038.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.21%)</title><rect x="813.5" y="1011.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.5" y="1022.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.21%)</title><rect x="813.5" y="995.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.5" y="1006.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.21%)</title><rect x="813.5" y="979.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="816.5" y="990.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.21%)</title><rect x="813.5" y="963.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="816.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (9 samples, 1.93%)</title><rect x="816.0" y="1043.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.0" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (9 samples, 1.93%)</title><rect x="816.0" y="1027.0" width="22.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.0" y="1038.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.accept0 (9 samples, 1.93%)</title><rect x="816.0" y="1011.0" width="22.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.0" y="1022.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_accept0 (1 samples, 0.21%)</title><rect x="818.6" y="995.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="821.6" y="1006.0"></text>
</g>
<g>
<title>__GI_accept (6 samples, 1.28%)</title><rect x="821.1" y="995.0" width="15.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="824.1" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.28%)</title><rect x="821.1" y="979.0" width="15.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="824.1" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.28%)</title><rect x="821.1" y="963.0" width="15.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.1" y="974.0"></text>
</g>
<g>
<title>__x64_sys_accept (6 samples, 1.28%)</title><rect x="821.1" y="947.0" width="15.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.1" y="958.0"></text>
</g>
<g>
<title>__sys_accept4 (6 samples, 1.28%)</title><rect x="821.1" y="931.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="824.1" y="942.0"></text>
</g>
<g>
<title>inet_accept (2 samples, 0.43%)</title><rect x="823.6" y="915.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.6" y="926.0"></text>
</g>
<g>
<title>inet_csk_accept (2 samples, 0.43%)</title><rect x="823.6" y="899.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="826.6" y="910.0"></text>
</g>
<g>
<title>sock_alloc (2 samples, 0.43%)</title><rect x="828.7" y="915.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="831.7" y="926.0"></text>
</g>
<g>
<title>new_inode_pseudo (2 samples, 0.43%)</title><rect x="828.7" y="899.0" width="5.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="831.7" y="910.0"></text>
</g>
<g>
<title>alloc_inode (1 samples, 0.21%)</title><rect x="828.7" y="883.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.7" y="894.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.21%)</title><rect x="828.7" y="867.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.7" y="878.0"></text>
</g>
<g>
<title>make_kgid (1 samples, 0.21%)</title><rect x="828.7" y="851.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="831.7" y="862.0"></text>
</g>
<g>
<title>map_id_range_down (1 samples, 0.21%)</title><rect x="828.7" y="835.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="831.7" y="846.0"></text>
</g>
<g>
<title>inode_init_always (1 samples, 0.21%)</title><rect x="831.2" y="883.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="834.2" y="894.0"></text>
</g>
<g>
<title>sock_alloc_file (1 samples, 0.21%)</title><rect x="833.7" y="915.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.7" y="926.0"></text>
</g>
<g>
<title>alloc_file_pseudo (1 samples, 0.21%)</title><rect x="833.7" y="899.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.7" y="910.0"></text>
</g>
<g>
<title>alloc_file (1 samples, 0.21%)</title><rect x="833.7" y="883.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.7" y="894.0"></text>
</g>
<g>
<title>alloc_empty_file (1 samples, 0.21%)</title><rect x="833.7" y="867.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.7" y="878.0"></text>
</g>
<g>
<title>__alloc_file (1 samples, 0.21%)</title><rect x="833.7" y="851.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="836.7" y="862.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.21%)</title><rect x="833.7" y="835.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.7" y="846.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.21%)</title><rect x="833.7" y="819.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.7" y="830.0"></text>
</g>
<g>
<title>__libc_fcntl (1 samples, 0.21%)</title><rect x="836.3" y="995.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="839.3" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.21%)</title><rect x="836.3" y="979.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="839.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.21%)</title><rect x="836.3" y="963.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.3" y="974.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.21%)</title><rect x="836.3" y="947.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.3" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.21%)</title><rect x="836.3" y="931.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.3" y="942.0"></text>
</g>
<g>
<title>one/nio/server/Server.register (7 samples, 1.50%)</title><rect x="838.8" y="1043.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.register (7 samples, 1.50%)</title><rect x="838.8" y="1027.0" width="17.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.add (2 samples, 0.43%)</title><rect x="838.8" y="1011.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="841.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.43%)</title><rect x="838.8" y="995.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.8" y="1006.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.43%)</title><rect x="838.8" y="979.0" width="5.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="841.8" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.21%)</title><rect x="838.8" y="963.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="841.8" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.21%)</title><rect x="841.3" y="963.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="844.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.enable (5 samples, 1.07%)</title><rect x="843.8" y="1011.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (5 samples, 1.07%)</title><rect x="843.8" y="995.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.8" y="1006.0"></text>
</g>
<g>
<title>epoll_ctl (5 samples, 1.07%)</title><rect x="843.8" y="979.0" width="12.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="846.8" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.07%)</title><rect x="843.8" y="963.0" width="12.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.8" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.07%)</title><rect x="843.8" y="947.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="846.8" y="958.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (5 samples, 1.07%)</title><rect x="843.8" y="931.0" width="12.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.8" y="942.0"></text>
</g>
<g>
<title>ep_insert (5 samples, 1.07%)</title><rect x="843.8" y="915.0" width="12.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="846.8" y="926.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.43%)</title><rect x="851.4" y="899.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.4" y="910.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (2 samples, 0.43%)</title><rect x="851.4" y="883.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.4" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (127 samples, 27.19%)</title><rect x="856.5" y="1059.0" width="320.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.5" y="1070.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.43%)</title><rect x="886.8" y="1043.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="889.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.21%)</title><rect x="891.8" y="1043.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 3.43%)</title><rect x="894.4" y="1043.0" width="40.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.4" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 3.43%)</title><rect x="894.4" y="1027.0" width="40.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.4" y="1038.0">one..</text>
</g>
<g>
<title>[unknown] (15 samples, 3.21%)</title><rect x="894.4" y="1011.0" width="37.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="897.4" y="1022.0">[un..</text>
</g>
<g>
<title>epoll_wait (15 samples, 3.21%)</title><rect x="894.4" y="995.0" width="37.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="897.4" y="1006.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 2.57%)</title><rect x="901.9" y="979.0" width="30.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="904.9" y="990.0">en..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 2.57%)</title><rect x="901.9" y="963.0" width="30.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="904.9" y="974.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (9 samples, 1.93%)</title><rect x="904.5" y="947.0" width="22.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="907.5" y="958.0">_..</text>
</g>
<g>
<title>do_epoll_wait (9 samples, 1.93%)</title><rect x="904.5" y="931.0" width="22.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.5" y="942.0">d..</text>
</g>
<g>
<title>ep_poll (9 samples, 1.93%)</title><rect x="904.5" y="915.0" width="22.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.5" y="926.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 0.86%)</title><rect x="904.5" y="899.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="907.5" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.86%)</title><rect x="904.5" y="883.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.5" y="894.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.64%)</title><rect x="907.0" y="867.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="910.0" y="878.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.21%)</title><rect x="914.6" y="899.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.6" y="910.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.86%)</title><rect x="917.1" y="899.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.1" y="910.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.86%)</title><rect x="917.1" y="883.0" width="10.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.1" y="894.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.86%)</title><rect x="917.1" y="867.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="920.1" y="878.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.86%)</title><rect x="917.1" y="851.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="920.1" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.64%)</title><rect x="919.6" y="835.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.6" y="846.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.21%)</title><rect x="927.2" y="947.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="930.2" y="958.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.21%)</title><rect x="929.7" y="947.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="932.7" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.21%)</title><rect x="929.7" y="931.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.7" y="942.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.21%)</title><rect x="932.3" y="1011.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="935.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (96 samples, 20.56%)</title><rect x="934.8" y="1043.0" width="242.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.8" y="1054.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (96 samples, 20.56%)</title><rect x="934.8" y="1027.0" width="242.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.8" y="1038.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (22 samples, 4.71%)</title><rect x="934.8" y="1011.0" width="55.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="937.8" y="1022.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.43%)</title><rect x="934.8" y="995.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (2 samples, 0.43%)</title><rect x="934.8" y="979.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="937.8" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (2 samples, 0.43%)</title><rect x="934.8" y="963.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.8" y="974.0"></text>
</g>
<g>
<title>epoll_ctl (1 samples, 0.21%)</title><rect x="937.3" y="947.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="940.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.21%)</title><rect x="937.3" y="931.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="940.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.21%)</title><rect x="937.3" y="915.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.3" y="926.0"></text>
</g>
<g>
<title>__x64_sys_epoll_ctl (1 samples, 0.21%)</title><rect x="937.3" y="899.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="940.3" y="910.0"></text>
</g>
<g>
<title>ep_modify (1 samples, 0.21%)</title><rect x="937.3" y="883.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (20 samples, 4.28%)</title><rect x="939.9" y="995.0" width="50.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.9" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.close (20 samples, 4.28%)</title><rect x="939.9" y="979.0" width="50.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.9" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.unregister (2 samples, 0.43%)</title><rect x="939.9" y="963.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.disable (2 samples, 0.43%)</title><rect x="939.9" y="947.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollCtl (1 samples, 0.21%)</title><rect x="942.4" y="931.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.4" y="942.0"></text>
</g>
<g>
<title>epoll_ctl (1 samples, 0.21%)</title><rect x="942.4" y="915.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="945.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.21%)</title><rect x="942.4" y="899.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="945.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.21%)</title><rect x="942.4" y="883.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.4" y="894.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.21%)</title><rect x="942.4" y="867.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="945.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (18 samples, 3.85%)</title><rect x="944.9" y="963.0" width="45.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.9" y="974.0">one/..</text>
</g>
<g>
<title>__GI___shutdown (16 samples, 3.43%)</title><rect x="947.4" y="947.0" width="40.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="950.4" y="958.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 3.43%)</title><rect x="947.4" y="931.0" width="40.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="950.4" y="942.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 3.43%)</title><rect x="947.4" y="915.0" width="40.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.4" y="926.0">do_..</text>
</g>
<g>
<title>__x64_sys_shutdown (16 samples, 3.43%)</title><rect x="947.4" y="899.0" width="40.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.4" y="910.0">__x..</text>
</g>
<g>
<title>__sys_shutdown (16 samples, 3.43%)</title><rect x="947.4" y="883.0" width="40.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="950.4" y="894.0">__s..</text>
</g>
<g>
<title>inet_shutdown (16 samples, 3.43%)</title><rect x="947.4" y="867.0" width="40.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="950.4" y="878.0">ine..</text>
</g>
<g>
<title>tcp_shutdown (15 samples, 3.21%)</title><rect x="950.0" y="851.0" width="37.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="953.0" y="862.0">tcp..</text>
</g>
<g>
<title>tcp_send_fin (15 samples, 3.21%)</title><rect x="950.0" y="835.0" width="37.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="953.0" y="846.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (15 samples, 3.21%)</title><rect x="950.0" y="819.0" width="37.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="953.0" y="830.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (15 samples, 3.21%)</title><rect x="950.0" y="803.0" width="37.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="953.0" y="814.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (15 samples, 3.21%)</title><rect x="950.0" y="787.0" width="37.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.0" y="798.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (13 samples, 2.78%)</title><rect x="955.0" y="771.0" width="32.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="958.0" y="782.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 2.78%)</title><rect x="955.0" y="755.0" width="32.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="958.0" y="766.0">__..</text>
</g>
<g>
<title>ip_local_out (13 samples, 2.78%)</title><rect x="955.0" y="739.0" width="32.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="958.0" y="750.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.21%)</title><rect x="955.0" y="723.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="958.0" y="734.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="955.0" y="707.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="958.0" y="718.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.21%)</title><rect x="955.0" y="691.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="958.0" y="702.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.21%)</title><rect x="955.0" y="675.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="958.0" y="686.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.21%)</title><rect x="955.0" y="659.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.0" y="670.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.21%)</title><rect x="955.0" y="643.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.0" y="654.0"></text>
</g>
<g>
<title>ip_output (11 samples, 2.36%)</title><rect x="957.5" y="723.0" width="27.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="960.5" y="734.0">i..</text>
</g>
<g>
<title>ip_finish_output (11 samples, 2.36%)</title><rect x="957.5" y="707.0" width="27.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.5" y="718.0">i..</text>
</g>
<g>
<title>__ip_finish_output (11 samples, 2.36%)</title><rect x="957.5" y="691.0" width="27.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="960.5" y="702.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (11 samples, 2.36%)</title><rect x="957.5" y="675.0" width="27.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="960.5" y="686.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (9 samples, 1.93%)</title><rect x="960.1" y="659.0" width="22.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="963.1" y="670.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (9 samples, 1.93%)</title><rect x="960.1" y="643.0" width="22.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.1" y="654.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (9 samples, 1.93%)</title><rect x="960.1" y="627.0" width="22.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.1" y="638.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (9 samples, 1.93%)</title><rect x="960.1" y="611.0" width="22.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.1" y="622.0">_..</text>
</g>
<g>
<title>net_rx_action (9 samples, 1.93%)</title><rect x="960.1" y="595.0" width="22.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="963.1" y="606.0">n..</text>
</g>
<g>
<title>process_backlog (9 samples, 1.93%)</title><rect x="960.1" y="579.0" width="22.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="963.1" y="590.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (8 samples, 1.71%)</title><rect x="962.6" y="563.0" width="20.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="965.6" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 1.71%)</title><rect x="962.6" y="547.0" width="20.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="965.6" y="558.0"></text>
</g>
<g>
<title>ip_rcv (7 samples, 1.50%)</title><rect x="962.6" y="531.0" width="17.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="965.6" y="542.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 1.28%)</title><rect x="962.6" y="515.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.6" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 1.28%)</title><rect x="962.6" y="499.0" width="15.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="965.6" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.07%)</title><rect x="962.6" y="483.0" width="12.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="965.6" y="494.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.07%)</title><rect x="962.6" y="467.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="965.6" y="478.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.07%)</title><rect x="962.6" y="451.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="965.6" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.86%)</title><rect x="965.1" y="435.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.1" y="446.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.21%)</title><rect x="965.1" y="419.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="968.1" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_state_process (3 samples, 0.64%)</title><rect x="967.6" y="419.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="970.6" y="430.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.21%)</title><rect x="967.6" y="403.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="970.6" y="414.0"></text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.43%)</title><rect x="970.2" y="403.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.2" y="414.0"></text>
</g>
<g>
<title>tcp_fin (2 samples, 0.43%)</title><rect x="970.2" y="387.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.2" y="398.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.43%)</title><rect x="970.2" y="371.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="973.2" y="382.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.43%)</title><rect x="970.2" y="355.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="973.2" y="366.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.43%)</title><rect x="970.2" y="339.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.2" y="350.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.43%)</title><rect x="970.2" y="323.0" width="5.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="973.2" y="334.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.43%)</title><rect x="970.2" y="307.0" width="5.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="973.2" y="318.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.43%)</title><rect x="970.2" y="291.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="973.2" y="302.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.21%)</title><rect x="970.2" y="275.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.2" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="970.2" y="259.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="973.2" y="270.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.21%)</title><rect x="970.2" y="243.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="973.2" y="254.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.21%)</title><rect x="970.2" y="227.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.2" y="238.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.21%)</title><rect x="970.2" y="211.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.2" y="222.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.21%)</title><rect x="972.7" y="275.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="975.7" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.21%)</title><rect x="972.7" y="259.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="975.7" y="270.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.21%)</title><rect x="972.7" y="243.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.7" y="254.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.21%)</title><rect x="972.7" y="227.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.7" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="975.2" y="483.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="978.2" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.21%)</title><rect x="975.2" y="467.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.2" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.21%)</title><rect x="975.2" y="451.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="978.2" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="977.8" y="515.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.8" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="980.3" y="531.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="983.3" y="542.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.21%)</title><rect x="982.8" y="659.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="985.8" y="670.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.21%)</title><rect x="982.8" y="643.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="985.8" y="654.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.21%)</title><rect x="982.8" y="627.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="985.8" y="638.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.21%)</title><rect x="982.8" y="611.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="985.8" y="622.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.21%)</title><rect x="982.8" y="595.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="985.8" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.21%)</title><rect x="985.3" y="723.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.3" y="734.0"></text>
</g>
<g>
<title>__libc_close (1 samples, 0.21%)</title><rect x="987.9" y="947.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="990.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.21%)</title><rect x="987.9" y="931.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="990.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.21%)</title><rect x="987.9" y="915.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.9" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.21%)</title><rect x="987.9" y="899.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.9" y="910.0"></text>
</g>
<g>
<title>task_work_run (1 samples, 0.21%)</title><rect x="987.9" y="883.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="990.9" y="894.0"></text>
</g>
<g>
<title>____fput (1 samples, 0.21%)</title><rect x="987.9" y="867.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="990.9" y="878.0"></text>
</g>
<g>
<title>__fput (1 samples, 0.21%)</title><rect x="987.9" y="851.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="990.9" y="862.0"></text>
</g>
<g>
<title>sock_close (1 samples, 0.21%)</title><rect x="987.9" y="835.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.9" y="846.0"></text>
</g>
<g>
<title>__sock_release (1 samples, 0.21%)</title><rect x="987.9" y="819.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (33 samples, 7.07%)</title><rect x="990.4" y="1011.0" width="83.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="993.4" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 5.35%)</title><rect x="992.9" y="995.0" width="63.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.9" y="1006.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 5.35%)</title><rect x="992.9" y="979.0" width="63.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.9" y="990.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (21 samples, 4.50%)</title><rect x="992.9" y="963.0" width="53.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="995.9" y="974.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.21%)</title><rect x="992.9" y="947.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="992.9" y="931.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="995.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (1 samples, 0.21%)</title><rect x="992.9" y="915.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="995.9" y="926.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.21%)</title><rect x="992.9" y="899.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="995.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (20 samples, 4.28%)</title><rect x="995.4" y="947.0" width="50.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.4" y="958.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.runPut (20 samples, 4.28%)</title><rect x="995.4" y="931.0" width="50.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.4" y="942.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 4.28%)</title><rect x="995.4" y="915.0" width="50.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.4" y="926.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 4.28%)</title><rect x="995.4" y="899.0" width="50.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="998.4" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (18 samples, 3.85%)</title><rect x="995.4" y="883.0" width="45.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.4" y="894.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 3.85%)</title><rect x="995.4" y="867.0" width="45.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.4" y="878.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 3.85%)</title><rect x="995.4" y="851.0" width="45.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.4" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 3.85%)</title><rect x="995.4" y="835.0" width="45.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.4" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 3.85%)</title><rect x="995.4" y="819.0" width="45.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.4" y="830.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 3.85%)</title><rect x="995.4" y="803.0" width="45.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.4" y="814.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.43%)</title><rect x="995.4" y="787.0" width="5.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="998.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.21%)</title><rect x="995.4" y="771.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="998.4" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="998.0" y="771.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1001.0" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 3.43%)</title><rect x="1000.5" y="787.0" width="40.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1003.5" y="798.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 3.00%)</title><rect x="1005.5" y="771.0" width="35.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1008.5" y="782.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 3.00%)</title><rect x="1005.5" y="755.0" width="35.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1008.5" y="766.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 2.57%)</title><rect x="1010.6" y="739.0" width="30.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1013.6" y="750.0">__..</text>
</g>
<g>
<title>do_futex (11 samples, 2.36%)</title><rect x="1010.6" y="723.0" width="27.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1013.6" y="734.0">d..</text>
</g>
<g>
<title>futex_wake (10 samples, 2.14%)</title><rect x="1013.1" y="707.0" width="25.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1016.1" y="718.0">f..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.21%)</title><rect x="1013.1" y="691.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1016.1" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.21%)</title><rect x="1013.1" y="675.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.1" y="686.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 1.93%)</title><rect x="1015.7" y="691.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.7" y="702.0">w..</text>
</g>
<g>
<title>try_to_wake_up (9 samples, 1.93%)</title><rect x="1015.7" y="675.0" width="22.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1018.7" y="686.0">t..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 1.93%)</title><rect x="1015.7" y="659.0" width="22.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.7" y="670.0">_..</text>
</g>
<g>
<title>futex_wake (1 samples, 0.21%)</title><rect x="1038.4" y="723.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1041.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.21%)</title><rect x="1040.9" y="883.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.21%)</title><rect x="1040.9" y="867.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.21%)</title><rect x="1040.9" y="851.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.21%)</title><rect x="1040.9" y="835.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.21%)</title><rect x="1040.9" y="819.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.21%)</title><rect x="1040.9" y="803.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1043.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.21%)</title><rect x="1040.9" y="787.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.21%)</title><rect x="1040.9" y="771.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.21%)</title><rect x="1043.4" y="883.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.21%)</title><rect x="1043.4" y="867.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.21%)</title><rect x="1043.4" y="851.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.21%)</title><rect x="1043.4" y="835.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.86%)</title><rect x="1046.0" y="963.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.86%)</title><rect x="1046.0" y="947.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.21%)</title><rect x="1046.0" y="931.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.64%)</title><rect x="1048.5" y="931.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.64%)</title><rect x="1048.5" y="915.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.64%)</title><rect x="1048.5" y="899.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.5" y="910.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.21%)</title><rect x="1048.5" y="883.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.5" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.43%)</title><rect x="1051.0" y="883.0" width="5.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1054.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 1.28%)</title><rect x="1056.1" y="995.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1056.1" y="979.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1059.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="1056.1" y="963.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1059.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="1056.1" y="947.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1059.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.21%)</title><rect x="1056.1" y="931.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1059.1" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 1.07%)</title><rect x="1058.6" y="979.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.6" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.86%)</title><rect x="1061.1" y="963.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1071.2" y="995.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1071.2" y="979.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (41 samples, 8.78%)</title><rect x="1073.8" y="1011.0" width="103.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1076.8" y="1022.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (40 samples, 8.57%)</title><rect x="1076.3" y="995.0" width="101.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.3" y="1006.0">one/nio/net/..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.21%)</title><rect x="1076.3" y="979.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.3" y="990.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 2.57%)</title><rect x="1078.8" y="979.0" width="30.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1081.8" y="990.0">Ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.21%)</title><rect x="1081.3" y="963.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1084.3" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.21%)</title><rect x="1083.9" y="963.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1086.9" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.21%)</title><rect x="1083.9" y="947.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.9" y="958.0"></text>
</g>
<g>
<title>jni_ThrowNew (9 samples, 1.93%)</title><rect x="1086.4" y="963.0" width="22.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1089.4" y="974.0">j..</text>
</g>
<g>
<title>Exceptions::_throw_msg(Thread*, char const*, int, Symbol*, char const*, Handle, Handle) (9 samples, 1.93%)</title><rect x="1086.4" y="947.0" width="22.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1089.4" y="958.0">E..</text>
</g>
<g>
<title>Exceptions::_throw(Thread*, char const*, int, Handle, char const*) (5 samples, 1.07%)</title><rect x="1086.4" y="931.0" width="12.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1089.4" y="942.0"></text>
</g>
<g>
<title>Events::log_exception(Thread*, char const*, ...) (1 samples, 0.21%)</title><rect x="1086.4" y="915.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.4" y="926.0"></text>
</g>
<g>
<title>os::elapsedTime() (1 samples, 0.21%)</title><rect x="1086.4" y="899.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.4" y="910.0"></text>
</g>
<g>
<title>oopDesc::print_value_string() (4 samples, 0.86%)</title><rect x="1088.9" y="915.0" width="10.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1091.9" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::oop_print_value_on(oopDesc*, outputStream*) (3 samples, 0.64%)</title><rect x="1088.9" y="899.0" width="7.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1091.9" y="910.0"></text>
</g>
<g>
<title>Symbol::print_value_on(outputStream*) const (2 samples, 0.43%)</title><rect x="1088.9" y="883.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1091.9" y="894.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (2 samples, 0.43%)</title><rect x="1088.9" y="867.0" width="5.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1091.9" y="878.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write_with_automatic_buffer(char const*, __va_list_tag*, bool) (2 samples, 0.43%)</title><rect x="1088.9" y="851.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1091.9" y="862.0"></text>
</g>
<g>
<title>__vsnprintf_chk@plt (1 samples, 0.21%)</title><rect x="1091.5" y="835.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1094.5" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::box_klass_type(Klass*) (1 samples, 0.21%)</title><rect x="1094.0" y="883.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.0" y="894.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.21%)</title><rect x="1096.5" y="899.0" width="2.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1099.5" y="910.0"></text>
</g>
<g>
<title>Exceptions::new_exception(Thread*, Symbol*, char const*, Handle, Handle, Handle, Exceptions::ExceptionMsgToUtf8Mode) (4 samples, 0.86%)</title><rect x="1099.0" y="931.0" width="10.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1102.0" y="942.0"></text>
</g>
<g>
<title>JavaCalls::construct_new_instance(InstanceKlass*, Symbol*, JavaCallArguments*, Thread*) (2 samples, 0.43%)</title><rect x="1099.0" y="915.0" width="5.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1102.0" y="926.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="1099.0" y="899.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1102.0" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="1101.6" y="899.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1104.6" y="910.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="1101.6" y="883.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1104.6" y="894.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.21%)</title><rect x="1101.6" y="867.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.6" y="878.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) [clone .part.92] (2 samples, 0.43%)</title><rect x="1104.1" y="915.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1107.1" y="926.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (2 samples, 0.43%)</title><rect x="1104.1" y="899.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.1" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.21%)</title><rect x="1104.1" y="883.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1107.1" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.21%)</title><rect x="1104.1" y="867.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1107.1" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.21%)</title><rect x="1104.1" y="851.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1107.1" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.21%)</title><rect x="1106.6" y="883.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="1106.6" y="867.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.6" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="1106.6" y="851.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.6" y="862.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.21%)</title><rect x="1106.6" y="835.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1109.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.86%)</title><rect x="1109.1" y="979.0" width="10.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1112.1" y="990.0"></text>
</g>
<g>
<title>throw_by_name (4 samples, 0.86%)</title><rect x="1109.1" y="963.0" width="10.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1112.1" y="974.0"></text>
</g>
<g>
<title>jni_FindClass (4 samples, 0.86%)</title><rect x="1109.1" y="947.0" width="10.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1112.1" y="958.0"></text>
</g>
<g>
<title>JavaThread::security_get_caller_class(int) (1 samples, 0.21%)</title><rect x="1111.7" y="931.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1114.7" y="942.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.21%)</title><rect x="1111.7" y="915.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.7" y="926.0"></text>
</g>
<g>
<title>find_class_from_class_loader(JNIEnv_*, Symbol*, unsigned char, Handle, Handle, unsigned char, Thread*) (2 samples, 0.43%)</title><rect x="1114.2" y="931.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1117.2" y="942.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.43%)</title><rect x="1114.2" y="915.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.2" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.43%)</title><rect x="1114.2" y="899.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1117.2" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::is_oop(oopDesc*) const (1 samples, 0.21%)</title><rect x="1116.7" y="883.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1119.7" y="894.0"></text>
</g>
<g>
<title>__GI___recv (17 samples, 3.64%)</title><rect x="1119.3" y="979.0" width="42.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1122.3" y="990.0">__GI..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 3.21%)</title><rect x="1124.3" y="963.0" width="37.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1127.3" y="974.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 3.00%)</title><rect x="1124.3" y="947.0" width="35.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.3" y="958.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 2.78%)</title><rect x="1124.3" y="931.0" width="32.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.3" y="942.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 2.78%)</title><rect x="1124.3" y="915.0" width="32.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.3" y="926.0">__..</text>
</g>
<g>
<title>sock_recvmsg (13 samples, 2.78%)</title><rect x="1124.3" y="899.0" width="32.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.3" y="910.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 2.36%)</title><rect x="1124.3" y="883.0" width="27.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1127.3" y="894.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 2.36%)</title><rect x="1124.3" y="867.0" width="27.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.3" y="878.0">t..</text>
</g>
<g>
<title>__kfree_skb (5 samples, 1.07%)</title><rect x="1131.9" y="851.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1134.9" y="862.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 1.07%)</title><rect x="1131.9" y="835.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1134.9" y="846.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.43%)</title><rect x="1131.9" y="819.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1134.9" y="830.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.21%)</title><rect x="1134.4" y="803.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.4" y="814.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.21%)</title><rect x="1134.4" y="787.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.4" y="798.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.43%)</title><rect x="1136.9" y="819.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1139.9" y="830.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.21%)</title><rect x="1136.9" y="803.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1139.9" y="814.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.21%)</title><rect x="1139.5" y="803.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1142.5" y="814.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.21%)</title><rect x="1142.0" y="819.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.0" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.21%)</title><rect x="1144.5" y="851.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.5" y="862.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.21%)</title><rect x="1147.0" y="851.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.0" y="862.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.21%)</title><rect x="1147.0" y="835.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1150.0" y="846.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.21%)</title><rect x="1149.6" y="851.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1152.6" y="862.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.43%)</title><rect x="1152.1" y="883.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1155.1" y="894.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.43%)</title><rect x="1152.1" y="867.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.1" y="878.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.43%)</title><rect x="1152.1" y="851.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.1" y="862.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.43%)</title><rect x="1152.1" y="835.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.1" y="846.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.43%)</title><rect x="1152.1" y="819.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1155.1" y="830.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.21%)</title><rect x="1152.1" y="803.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1155.1" y="814.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.21%)</title><rect x="1154.6" y="803.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1157.6" y="814.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.21%)</title><rect x="1154.6" y="787.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.6" y="798.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.21%)</title><rect x="1157.2" y="931.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.2" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.21%)</title><rect x="1157.2" y="915.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1160.2" y="926.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.21%)</title><rect x="1159.7" y="947.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1162.7" y="958.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (4 samples, 0.86%)</title><rect x="1162.2" y="979.0" width="10.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1165.2" y="990.0"></text>
</g>
<g>
<title>__GI__IO_vfprintf (4 samples, 0.86%)</title><rect x="1162.2" y="963.0" width="10.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1165.2" y="974.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.21%)</title><rect x="1172.3" y="979.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1175.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1174.8" y="979.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.8" y="990.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1174.8" y="963.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.8" y="974.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1174.8" y="947.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1174.8" y="931.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.21%)</title><rect x="1174.8" y="915.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.21%)</title><rect x="1174.8" y="899.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1177.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.21%)</title><rect x="1174.8" y="883.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1177.8" y="894.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.21%)</title><rect x="1174.8" y="867.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1177.8" y="878.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.21%)</title><rect x="1174.8" y="851.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1177.8" y="862.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.21%)</title><rect x="1174.8" y="835.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.8" y="846.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="1174.8" y="819.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.8" y="830.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.21%)</title><rect x="1174.8" y="803.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.8" y="814.0"></text>
</g>
<g>
<title>start_thread (5 samples, 1.07%)</title><rect x="1177.4" y="1059.0" width="12.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1180.4" y="1070.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 1.07%)</title><rect x="1177.4" y="1043.0" width="12.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1180.4" y="1054.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 1.07%)</title><rect x="1177.4" y="1027.0" width="12.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (5 samples, 1.07%)</title><rect x="1177.4" y="1011.0" width="12.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.4" y="1022.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (5 samples, 1.07%)</title><rect x="1177.4" y="995.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.4" y="1006.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 1.07%)</title><rect x="1177.4" y="979.0" width="12.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.4" y="990.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.86%)</title><rect x="1177.4" y="963.0" width="10.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.4" y="974.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.86%)</title><rect x="1177.4" y="947.0" width="10.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.43%)</title><rect x="1177.4" y="931.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.4" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.43%)</title><rect x="1177.4" y="915.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.4" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.21%)</title><rect x="1177.4" y="899.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.4" y="910.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.21%)</title><rect x="1177.4" y="883.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.4" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.21%)</title><rect x="1179.9" y="899.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.9" y="910.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.21%)</title><rect x="1182.4" y="931.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.4" y="942.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.21%)</title><rect x="1182.4" y="915.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.4" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.21%)</title><rect x="1182.4" y="899.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.21%)</title><rect x="1182.4" y="883.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.4" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.21%)</title><rect x="1182.4" y="867.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>RangeCheckNode::Opcode() const (1 samples, 0.21%)</title><rect x="1182.4" y="851.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.4" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1184.9" y="931.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1184.9" y="915.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.21%)</title><rect x="1184.9" y="899.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.21%)</title><rect x="1184.9" y="883.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.21%)</title><rect x="1184.9" y="867.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.21%)</title><rect x="1184.9" y="851.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1184.9" y="835.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1184.9" y="819.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.21%)</title><rect x="1184.9" y="803.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.21%)</title><rect x="1184.9" y="787.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.21%)</title><rect x="1184.9" y="771.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.21%)</title><rect x="1184.9" y="755.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1184.9" y="739.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1184.9" y="723.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.21%)</title><rect x="1184.9" y="707.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.21%)</title><rect x="1184.9" y="691.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.21%)</title><rect x="1184.9" y="675.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.21%)</title><rect x="1184.9" y="659.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1184.9" y="643.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.9" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1184.9" y="627.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.21%)</title><rect x="1184.9" y="611.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.21%)</title><rect x="1184.9" y="595.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.21%)</title><rect x="1184.9" y="579.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.21%)</title><rect x="1184.9" y="563.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.21%)</title><rect x="1184.9" y="547.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.21%)</title><rect x="1184.9" y="531.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.21%)</title><rect x="1184.9" y="515.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="526.0"></text>
</g>
<g>
<title>MergeMemNode::set_base_memory(Node*) (1 samples, 0.21%)</title><rect x="1184.9" y="499.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.9" y="510.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.21%)</title><rect x="1184.9" y="483.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="494.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="1184.9" y="467.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.21%)</title><rect x="1187.5" y="963.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="974.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.21%)</title><rect x="1187.5" y="947.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.5" y="958.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.21%)</title><rect x="1187.5" y="931.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="942.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.21%)</title><rect x="1187.5" y="915.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.5" y="926.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.21%)</title><rect x="1187.5" y="899.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.21%)</title><rect x="1187.5" y="883.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="894.0"></text>
</g>
<g>
<title>ImplicitNullCheckStub::emit_code(LIR_Assembler*) (1 samples, 0.21%)</title><rect x="1187.5" y="867.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.21%)</title><rect x="1187.5" y="851.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.5" y="862.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.21%)</title><rect x="1187.5" y="835.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="846.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.21%)</title><rect x="1187.5" y="819.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="830.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.21%)</title><rect x="1187.5" y="803.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="814.0"></text>
</g>
</g>
</svg>
