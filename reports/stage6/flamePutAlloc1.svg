<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (383 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (222 samples, 57.96%)</title><rect x="10.0" y="723.0" width="684.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (222 samples, 57.96%)</title><rect x="10.0" y="707.0" width="684.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (222 samples, 57.96%)</title><rect x="10.0" y="691.0" width="684.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (48 samples, 12.53%)</title><rect x="10.0" y="675.0" width="147.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 12.53%)</title><rect x="10.0" y="659.0" width="147.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (48 samples, 12.53%)</title><rect x="10.0" y="643.0" width="147.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/811760192.apply (6 samples, 1.57%)</title><rect x="10.0" y="627.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (6 samples, 1.57%)</title><rect x="10.0" y="611.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.26%)</title><rect x="10.0" y="595.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.26%)</title><rect x="10.0" y="579.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.26%)</title><rect x="10.0" y="563.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.26%)</title><rect x="10.0" y="547.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.26%)</title><rect x="10.0" y="531.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (1 samples, 0.26%)</title><rect x="10.0" y="515.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (5 samples, 1.31%)</title><rect x="13.1" y="595.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.1" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="13.1" y="579.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="13.1" y="563.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.1" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.26%)</title><rect x="13.1" y="547.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="16.1" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.26%)</title><rect x="16.2" y="579.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.2" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.26%)</title><rect x="16.2" y="563.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3 samples, 0.78%)</title><rect x="19.2" y="579.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.26%)</title><rect x="19.2" y="563.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.2" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.26%)</title><rect x="19.2" y="547.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.2" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (1 samples, 0.26%)</title><rect x="19.2" y="531.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="22.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (2 samples, 0.52%)</title><rect x="22.3" y="563.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.52%)</title><rect x="22.3" y="547.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.52%)</title><rect x="22.3" y="531.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.52%)</title><rect x="22.3" y="515.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (2 samples, 0.52%)</title><rect x="22.3" y="499.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.52%)</title><rect x="22.3" y="483.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.3" y="494.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.26%)</title><rect x="22.3" y="467.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.3" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.26%)</title><rect x="22.3" y="451.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.3" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.26%)</title><rect x="22.3" y="435.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.26%)</title><rect x="22.3" y="419.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="25.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.26%)</title><rect x="25.4" y="467.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="28.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.26%)</title><rect x="25.4" y="451.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="28.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1494676242.apply (42 samples, 10.97%)</title><rect x="28.5" y="627.0" width="129.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.5" y="638.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (42 samples, 10.97%)</title><rect x="28.5" y="611.0" width="129.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.5" y="622.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (42 samples, 10.97%)</title><rect x="28.5" y="595.0" width="129.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.5" y="606.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.52%)</title><rect x="28.5" y="579.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.52%)</title><rect x="28.5" y="563.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/388445390.get$Lambda (1 samples, 0.26%)</title><rect x="28.5" y="547.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$361 (1 samples, 0.26%)</title><rect x="28.5" y="531.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="31.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$364/853251833.get$Lambda (1 samples, 0.26%)</title><rect x="31.6" y="547.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$364 (1 samples, 0.26%)</title><rect x="31.6" y="531.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="34.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.78%)</title><rect x="34.6" y="579.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.78%)</title><rect x="34.6" y="563.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.26%)</title><rect x="34.6" y="547.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="37.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.52%)</title><rect x="37.7" y="547.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.52%)</title><rect x="37.7" y="531.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (2 samples, 0.52%)</title><rect x="37.7" y="515.0" width="6.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="40.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (37 samples, 9.66%)</title><rect x="43.9" y="579.0" width="114.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.9" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (37 samples, 9.66%)</title><rect x="43.9" y="563.0" width="114.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.9" y="574.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (37 samples, 9.66%)</title><rect x="43.9" y="547.0" width="114.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.9" y="558.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (18 samples, 4.70%)</title><rect x="43.9" y="531.0" width="55.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.9" y="542.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (18 samples, 4.70%)</title><rect x="43.9" y="515.0" width="55.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="46.9" y="526.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (18 samples, 4.70%)</title><rect x="43.9" y="499.0" width="55.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.9" y="510.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$316/2068090598.apply (18 samples, 4.70%)</title><rect x="43.9" y="483.0" width="55.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.9" y="494.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (18 samples, 4.70%)</title><rect x="43.9" y="467.0" width="55.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.9" y="478.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (18 samples, 4.70%)</title><rect x="43.9" y="451.0" width="55.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.9" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/1588773889.apply (18 samples, 4.70%)</title><rect x="43.9" y="435.0" width="55.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.9" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (18 samples, 4.70%)</title><rect x="43.9" y="419.0" width="55.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.9" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.78%)</title><rect x="43.9" y="403.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.78%)</title><rect x="43.9" y="387.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (2 samples, 0.52%)</title><rect x="43.9" y="371.0" width="6.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="46.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="50.1" y="371.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="50.1" y="355.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="50.1" y="339.0" width="3.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="53.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (15 samples, 3.92%)</title><rect x="53.1" y="403.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.1" y="414.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (14 samples, 3.66%)</title><rect x="53.1" y="387.0" width="43.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.1" y="398.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (14 samples, 3.66%)</title><rect x="53.1" y="371.0" width="43.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.1" y="382.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (1 samples, 0.26%)</title><rect x="53.1" y="355.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="56.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/811760192.apply (12 samples, 3.13%)</title><rect x="56.2" y="355.0" width="37.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.2" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (12 samples, 3.13%)</title><rect x="56.2" y="339.0" width="37.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.2" y="350.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.26%)</title><rect x="56.2" y="323.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (1 samples, 0.26%)</title><rect x="56.2" y="307.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="59.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (11 samples, 2.87%)</title><rect x="59.3" y="323.0" width="33.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.3" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.26%)</title><rect x="59.3" y="307.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.26%)</title><rect x="59.3" y="291.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.26%)</title><rect x="59.3" y="275.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.3" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="59.3" y="259.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="62.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.26%)</title><rect x="62.4" y="307.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.4" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="62.4" y="291.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="62.4" y="275.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.4" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="62.4" y="259.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="65.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="65.5" y="307.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="65.5" y="291.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.26%)</title><rect x="65.5" y="275.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="68.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (6 samples, 1.57%)</title><rect x="68.5" y="307.0" width="18.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4 samples, 1.04%)</title><rect x="68.5" y="291.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.78%)</title><rect x="68.5" y="275.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.5" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.78%)</title><rect x="68.5" y="259.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.5" y="270.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.78%)</title><rect x="68.5" y="243.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.78%)</title><rect x="68.5" y="227.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.5" y="238.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.78%)</title><rect x="68.5" y="211.0" width="9.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="71.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$375/1561480963.test (1 samples, 0.26%)</title><rect x="77.8" y="275.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.8" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.26%)</title><rect x="77.8" y="259.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/898557489.test (1 samples, 0.26%)</title><rect x="77.8" y="243.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.26%)</title><rect x="77.8" y="227.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.8" y="238.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1340565491.test (1 samples, 0.26%)</title><rect x="77.8" y="211.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.8" y="222.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.26%)</title><rect x="77.8" y="195.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1139700454.test (1 samples, 0.26%)</title><rect x="77.8" y="179.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.26%)</title><rect x="77.8" y="163.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.8" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="77.8" y="147.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="77.8" y="131.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="77.8" y="115.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="80.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (2 samples, 0.52%)</title><rect x="80.9" y="291.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.9" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.52%)</title><rect x="80.9" y="275.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.9" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.52%)</title><rect x="80.9" y="259.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.26%)</title><rect x="80.9" y="243.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.26%)</title><rect x="80.9" y="227.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="83.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.26%)</title><rect x="83.9" y="243.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (1 samples, 0.26%)</title><rect x="83.9" y="227.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.9" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.26%)</title><rect x="83.9" y="211.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.9" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.26%)</title><rect x="83.9" y="195.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.9" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.26%)</title><rect x="83.9" y="179.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="86.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.26%)</title><rect x="87.0" y="307.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.26%)</title><rect x="87.0" y="291.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="87.0" y="275.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.26%)</title><rect x="87.0" y="259.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (1 samples, 0.26%)</title><rect x="87.0" y="243.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="87.0" y="227.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.26%)</title><rect x="87.0" y="211.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.26%)</title><rect x="87.0" y="195.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.0" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="87.0" y="179.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="90.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.26%)</title><rect x="90.1" y="307.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="93.1" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.26%)</title><rect x="90.1" y="291.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="93.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="93.2" y="355.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="93.2" y="339.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="93.2" y="323.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="96.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.26%)</title><rect x="96.3" y="387.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.26%)</title><rect x="96.3" y="371.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="96.3" y="355.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="96.3" y="339.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.26%)</title><rect x="96.3" y="323.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.26%)</title><rect x="96.3" y="307.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.26%)</title><rect x="96.3" y="291.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (1 samples, 0.26%)</title><rect x="96.3" y="275.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.26%)</title><rect x="96.3" y="259.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.26%)</title><rect x="96.3" y="243.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (1 samples, 0.26%)</title><rect x="96.3" y="227.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="99.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (19 samples, 4.96%)</title><rect x="99.3" y="531.0" width="58.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.3" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (19 samples, 4.96%)</title><rect x="99.3" y="515.0" width="58.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.3" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="99.3" y="499.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="99.3" y="483.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$226/1232150608.get$Lambda (1 samples, 0.26%)</title><rect x="99.3" y="467.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$226 (1 samples, 0.26%)</title><rect x="99.3" y="451.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="102.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (18 samples, 4.70%)</title><rect x="102.4" y="499.0" width="55.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.4" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (18 samples, 4.70%)</title><rect x="102.4" y="483.0" width="55.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.4" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (18 samples, 4.70%)</title><rect x="102.4" y="467.0" width="55.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.4" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$226/1232150608.apply (18 samples, 4.70%)</title><rect x="102.4" y="451.0" width="55.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.4" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (18 samples, 4.70%)</title><rect x="102.4" y="435.0" width="55.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.4" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (18 samples, 4.70%)</title><rect x="102.4" y="419.0" width="55.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.4" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (5 samples, 1.31%)</title><rect x="102.4" y="403.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 1.31%)</title><rect x="102.4" y="387.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5 samples, 1.31%)</title><rect x="102.4" y="371.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$301/1299234764.apply (5 samples, 1.31%)</title><rect x="102.4" y="355.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (5 samples, 1.31%)</title><rect x="102.4" y="339.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (5 samples, 1.31%)</title><rect x="102.4" y="323.0" width="15.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (5 samples, 1.31%)</title><rect x="102.4" y="307.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (3 samples, 0.78%)</title><rect x="102.4" y="291.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.4" y="302.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (1 samples, 0.26%)</title><rect x="102.4" y="275.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.4" y="286.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (1 samples, 0.26%)</title><rect x="102.4" y="259.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="105.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.26%)</title><rect x="105.5" y="275.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.26%)</title><rect x="105.5" y="259.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.26%)</title><rect x="105.5" y="243.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.5" y="254.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.26%)</title><rect x="105.5" y="227.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="108.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.26%)</title><rect x="108.6" y="275.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.6" y="286.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="108.6" y="259.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="111.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.52%)</title><rect x="111.7" y="291.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.7" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.26%)</title><rect x="111.7" y="275.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="114.7" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.26%)</title><rect x="114.8" y="275.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (1 samples, 0.26%)</title><rect x="114.8" y="259.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="117.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (13 samples, 3.39%)</title><rect x="117.8" y="403.0" width="40.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.8" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (13 samples, 3.39%)</title><rect x="117.8" y="387.0" width="40.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.8" y="398.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (1 samples, 0.26%)</title><rect x="117.8" y="371.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="120.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (2 samples, 0.52%)</title><rect x="120.9" y="371.0" width="6.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="123.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.78%)</title><rect x="127.1" y="371.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (1 samples, 0.26%)</title><rect x="127.1" y="355.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="130.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.26%)</title><rect x="130.2" y="355.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.26%)</title><rect x="130.2" y="339.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="133.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (1 samples, 0.26%)</title><rect x="133.2" y="355.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.52%)</title><rect x="136.3" y="371.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (1 samples, 0.26%)</title><rect x="136.3" y="355.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="139.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.26%)</title><rect x="139.4" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (1 samples, 0.26%)</title><rect x="139.4" y="339.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4 samples, 1.04%)</title><rect x="142.5" y="371.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (4 samples, 1.04%)</title><rect x="142.5" y="355.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (4 samples, 1.04%)</title><rect x="142.5" y="339.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (1 samples, 0.26%)</title><rect x="142.5" y="323.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="145.5" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.open (1 samples, 0.26%)</title><rect x="145.6" y="323.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorProviderImpl.openSocketChannel (1 samples, 0.26%)</title><rect x="145.6" y="307.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.&lt;init&gt; (1 samples, 0.26%)</title><rect x="145.6" y="291.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.&lt;init&gt; (1 samples, 0.26%)</title><rect x="145.6" y="275.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1 samples, 0.26%)</title><rect x="145.6" y="259.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="148.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$PlainHttpPublisher.&lt;init&gt; (1 samples, 0.26%)</title><rect x="148.6" y="323.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.26%)</title><rect x="148.6" y="307.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (1 samples, 0.26%)</title><rect x="148.6" y="291.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="151.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.&lt;init&gt; (1 samples, 0.26%)</title><rect x="151.7" y="323.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.&lt;init&gt; (1 samples, 0.26%)</title><rect x="151.7" y="307.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.7" y="318.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.&lt;init&gt; (1 samples, 0.26%)</title><rect x="151.7" y="291.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.7" y="302.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.init (1 samples, 0.26%)</title><rect x="151.7" y="275.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="151.7" y="259.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="154.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (1 samples, 0.26%)</title><rect x="154.8" y="371.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.8" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.26%)</title><rect x="154.8" y="355.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$252/448246594.run (1 samples, 0.26%)</title><rect x="154.8" y="339.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.26%)</title><rect x="154.8" y="323.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.8" y="334.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.26%)</title><rect x="154.8" y="307.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.8" y="318.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.26%)</title><rect x="154.8" y="291.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="157.8" y="302.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.26%)</title><rect x="154.8" y="275.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.8" y="286.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.26%)</title><rect x="154.8" y="259.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.8" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.26%)</title><rect x="154.8" y="243.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.8" y="254.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (1 samples, 0.26%)</title><rect x="154.8" y="227.0" width="3.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="157.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2 samples, 0.52%)</title><rect x="157.9" y="675.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.26%)</title><rect x="157.9" y="659.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.26%)</title><rect x="157.9" y="643.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.26%)</title><rect x="157.9" y="627.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.26%)</title><rect x="157.9" y="611.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="160.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (1 samples, 0.26%)</title><rect x="161.0" y="659.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.26%)</title><rect x="161.0" y="643.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.26%)</title><rect x="161.0" y="627.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1 samples, 0.26%)</title><rect x="161.0" y="611.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="164.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$489/485574041.run (3 samples, 0.78%)</title><rect x="164.0" y="675.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$cancelImpl$9 (3 samples, 0.78%)</title><rect x="164.0" y="659.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (3 samples, 0.78%)</title><rect x="164.0" y="643.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.78%)</title><rect x="164.0" y="627.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.26%)</title><rect x="164.0" y="611.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.26%)</title><rect x="164.0" y="595.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.26%)</title><rect x="164.0" y="579.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="164.0" y="563.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.0" y="574.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="164.0" y="547.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.26%)</title><rect x="164.0" y="531.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="167.0" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.26%)</title><rect x="164.0" y="515.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.0" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="164.0" y="499.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="164.0" y="483.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.0" y="494.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.26%)</title><rect x="164.0" y="467.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="167.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.52%)</title><rect x="167.1" y="611.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (2 samples, 0.52%)</title><rect x="167.1" y="595.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.52%)</title><rect x="167.1" y="579.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.52%)</title><rect x="167.1" y="563.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.1" y="574.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.52%)</title><rect x="167.1" y="547.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.52%)</title><rect x="167.1" y="531.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.52%)</title><rect x="167.1" y="515.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.52%)</title><rect x="167.1" y="499.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.52%)</title><rect x="167.1" y="483.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.1" y="494.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.52%)</title><rect x="167.1" y="467.0" width="6.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="170.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$377/1207993149.run (15 samples, 3.92%)</title><rect x="173.3" y="675.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.3" y="686.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (15 samples, 3.92%)</title><rect x="173.3" y="659.0" width="46.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.3" y="670.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (15 samples, 3.92%)</title><rect x="173.3" y="643.0" width="46.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.3" y="654.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (15 samples, 3.92%)</title><rect x="173.3" y="627.0" width="46.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.3" y="638.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 3.92%)</title><rect x="173.3" y="611.0" width="46.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.3" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 3.92%)</title><rect x="173.3" y="595.0" width="46.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.3" y="606.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 3.92%)</title><rect x="173.3" y="579.0" width="46.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.3" y="590.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15 samples, 3.92%)</title><rect x="173.3" y="563.0" width="46.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.3" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15 samples, 3.92%)</title><rect x="173.3" y="547.0" width="46.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.3" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15 samples, 3.92%)</title><rect x="173.3" y="531.0" width="46.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.3" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (15 samples, 3.92%)</title><rect x="173.3" y="515.0" width="46.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.3" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (14 samples, 3.66%)</title><rect x="173.3" y="499.0" width="43.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.3" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="173.3" y="483.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="173.3" y="467.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/522227065.get$Lambda (1 samples, 0.26%)</title><rect x="173.3" y="451.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$408 (1 samples, 0.26%)</title><rect x="173.3" y="435.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="176.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 3.39%)</title><rect x="176.4" y="483.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.4" y="494.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 3.39%)</title><rect x="176.4" y="467.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.4" y="478.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 3.39%)</title><rect x="176.4" y="451.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.4" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 3.39%)</title><rect x="176.4" y="435.0" width="40.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.4" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.26%)</title><rect x="176.4" y="419.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/1520963950.apply (1 samples, 0.26%)</title><rect x="176.4" y="403.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.26%)</title><rect x="176.4" y="387.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.26%)</title><rect x="176.4" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.4" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.26%)</title><rect x="176.4" y="355.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.4" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.26%)</title><rect x="176.4" y="339.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.4" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.26%)</title><rect x="176.4" y="323.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="179.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (12 samples, 3.13%)</title><rect x="179.5" y="419.0" width="36.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.5" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 3.13%)</title><rect x="179.5" y="403.0" width="36.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.5" y="414.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/533652067.apply (12 samples, 3.13%)</title><rect x="179.5" y="387.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.5" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (12 samples, 3.13%)</title><rect x="179.5" y="371.0" width="36.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="182.5" y="382.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (12 samples, 3.13%)</title><rect x="179.5" y="355.0" width="36.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.5" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/333725311.apply (12 samples, 3.13%)</title><rect x="179.5" y="339.0" width="36.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.5" y="350.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (12 samples, 3.13%)</title><rect x="179.5" y="323.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.5" y="334.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="179.5" y="307.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="182.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="179.5" y="291.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/1520963950.get$Lambda (1 samples, 0.26%)</title><rect x="179.5" y="275.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$405 (1 samples, 0.26%)</title><rect x="179.5" y="259.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="182.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.26%)</title><rect x="182.5" y="307.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.26%)</title><rect x="182.5" y="291.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="182.5" y="275.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="182.5" y="259.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="182.5" y="243.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="185.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.26%)</title><rect x="185.6" y="307.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.26%)</title><rect x="185.6" y="291.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.26%)</title><rect x="185.6" y="275.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.26%)</title><rect x="185.6" y="259.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="188.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 2.35%)</title><rect x="188.7" y="307.0" width="27.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.7" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="188.7" y="291.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="188.7" y="275.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$400/1018026254.get$Lambda (1 samples, 0.26%)</title><rect x="188.7" y="259.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$400 (1 samples, 0.26%)</title><rect x="188.7" y="243.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="191.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3 samples, 0.78%)</title><rect x="191.8" y="291.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3 samples, 0.78%)</title><rect x="191.8" y="275.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3 samples, 0.78%)</title><rect x="191.8" y="259.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$391/1442041176.accept (1 samples, 0.26%)</title><rect x="191.8" y="243.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.26%)</title><rect x="191.8" y="227.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.26%)</title><rect x="191.8" y="211.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.26%)</title><rect x="191.8" y="195.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.26%)</title><rect x="191.8" y="179.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="191.8" y="163.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="191.8" y="147.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="191.8" y="131.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="194.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$400/1018026254.accept (1 samples, 0.26%)</title><rect x="194.9" y="243.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.26%)</title><rect x="194.9" y="227.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.26%)</title><rect x="194.9" y="211.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.26%)</title><rect x="194.9" y="195.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.26%)</title><rect x="194.9" y="179.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="194.9" y="163.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="197.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="194.9" y="147.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.26%)</title><rect x="194.9" y="131.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.26%)</title><rect x="194.9" y="115.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.26%)</title><rect x="194.9" y="99.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.26%)</title><rect x="194.9" y="83.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.26%)</title><rect x="194.9" y="67.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.9" y="78.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.26%)</title><rect x="194.9" y="51.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.9" y="62.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (1 samples, 0.26%)</title><rect x="194.9" y="35.0" width="3.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="197.9" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="197.9" y="243.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="197.9" y="227.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="197.9" y="211.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="200.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (5 samples, 1.31%)</title><rect x="201.0" y="291.0" width="15.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5 samples, 1.31%)</title><rect x="201.0" y="275.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (3 samples, 0.78%)</title><rect x="201.0" y="259.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (1 samples, 0.26%)</title><rect x="201.0" y="243.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="204.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (2 samples, 0.52%)</title><rect x="204.1" y="243.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.26%)</title><rect x="204.1" y="227.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (1 samples, 0.26%)</title><rect x="204.1" y="211.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="207.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.26%)</title><rect x="207.2" y="227.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (1 samples, 0.26%)</title><rect x="207.2" y="211.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="210.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2 samples, 0.52%)</title><rect x="210.3" y="259.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.3" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.52%)</title><rect x="210.3" y="243.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="213.3" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2 samples, 0.52%)</title><rect x="210.3" y="227.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="213.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.26%)</title><rect x="216.4" y="499.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.26%)</title><rect x="216.4" y="483.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.26%)</title><rect x="216.4" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.26%)</title><rect x="216.4" y="451.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.26%)</title><rect x="216.4" y="435.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.4" y="446.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.26%)</title><rect x="216.4" y="419.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="219.4" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.26%)</title><rect x="216.4" y="403.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.4" y="414.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (1 samples, 0.26%)</title><rect x="216.4" y="387.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="219.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (24 samples, 6.27%)</title><rect x="219.5" y="675.0" width="73.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.5" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (24 samples, 6.27%)</title><rect x="219.5" y="659.0" width="73.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.5" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (23 samples, 6.01%)</title><rect x="219.5" y="643.0" width="70.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.5" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (23 samples, 6.01%)</title><rect x="219.5" y="627.0" width="70.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.5" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (23 samples, 6.01%)</title><rect x="219.5" y="611.0" width="70.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.5" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (7 samples, 1.83%)</title><rect x="219.5" y="595.0" width="21.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (3 samples, 0.78%)</title><rect x="219.5" y="579.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.78%)</title><rect x="219.5" y="563.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.78%)</title><rect x="219.5" y="547.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.78%)</title><rect x="219.5" y="531.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.78%)</title><rect x="219.5" y="515.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.78%)</title><rect x="219.5" y="499.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.78%)</title><rect x="219.5" y="483.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.78%)</title><rect x="219.5" y="467.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.78%)</title><rect x="219.5" y="451.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.78%)</title><rect x="219.5" y="435.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (3 samples, 0.78%)</title><rect x="219.5" y="419.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (3 samples, 0.78%)</title><rect x="219.5" y="403.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.5" y="414.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.78%)</title><rect x="219.5" y="387.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.78%)</title><rect x="219.5" y="371.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.78%)</title><rect x="219.5" y="355.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.78%)</title><rect x="219.5" y="339.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (3 samples, 0.78%)</title><rect x="219.5" y="323.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.5" y="334.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.26%)</title><rect x="219.5" y="307.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="222.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2 samples, 0.52%)</title><rect x="222.6" y="307.0" width="6.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="225.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onReadError (4 samples, 1.04%)</title><rect x="228.7" y="579.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="231.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onReadError (1 samples, 0.26%)</title><rect x="228.7" y="563.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.26%)</title><rect x="228.7" y="547.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.26%)</title><rect x="228.7" y="531.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.26%)</title><rect x="228.7" y="515.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.26%)</title><rect x="228.7" y="499.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$364/853251833.apply (1 samples, 0.26%)</title><rect x="228.7" y="483.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="231.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.26%)</title><rect x="228.7" y="467.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExceptionalCF (1 samples, 0.26%)</title><rect x="228.7" y="451.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.toTimeoutException (1 samples, 0.26%)</title><rect x="228.7" y="435.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpTimeoutException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="228.7" y="419.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.7" y="430.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="228.7" y="403.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.26%)</title><rect x="228.7" y="387.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="231.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.26%)</title><rect x="228.7" y="371.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="228.7" y="355.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="228.7" y="339.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.7" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="228.7" y="323.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="231.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapWithExtraDetail (3 samples, 0.78%)</title><rect x="231.8" y="563.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.8" y="574.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="231.8" y="547.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.26%)</title><rect x="231.8" y="531.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.26%)</title><rect x="231.8" y="515.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="231.8" y="499.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.8" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="231.8" y="483.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.8" y="494.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.26%)</title><rect x="231.8" y="467.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="234.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader$$Lambda$491/550495277.get (2 samples, 0.52%)</title><rect x="234.9" y="547.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.currentStateMessage (2 samples, 0.52%)</title><rect x="234.9" y="531.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.52%)</title><rect x="234.9" y="515.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.9" y="526.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.52%)</title><rect x="234.9" y="499.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.9" y="510.0"></text>
</g>
<g>
<title>java/util/Formatter.format (2 samples, 0.52%)</title><rect x="234.9" y="483.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.9" y="494.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.52%)</title><rect x="234.9" y="467.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.9" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.26%)</title><rect x="234.9" y="451.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="237.9" y="462.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.26%)</title><rect x="238.0" y="451.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="241.0" y="462.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.26%)</title><rect x="238.0" y="435.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.0" y="446.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.26%)</title><rect x="238.0" y="419.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="241.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (16 samples, 4.18%)</title><rect x="241.1" y="595.0" width="49.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.1" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (16 samples, 4.18%)</title><rect x="241.1" y="579.0" width="49.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.1" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16 samples, 4.18%)</title><rect x="241.1" y="563.0" width="49.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.1" y="574.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (16 samples, 4.18%)</title><rect x="241.1" y="547.0" width="49.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.1" y="558.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 2.61%)</title><rect x="241.1" y="531.0" width="30.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 2.61%)</title><rect x="241.1" y="515.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 2.61%)</title><rect x="241.1" y="499.0" width="30.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 2.61%)</title><rect x="241.1" y="483.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.1" y="494.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 2.61%)</title><rect x="241.1" y="467.0" width="30.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.1" y="478.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (10 samples, 2.61%)</title><rect x="241.1" y="451.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.1" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 2.61%)</title><rect x="241.1" y="435.0" width="30.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.1" y="446.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 2.61%)</title><rect x="241.1" y="419.0" width="30.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="244.1" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 2.61%)</title><rect x="241.1" y="403.0" width="30.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.1" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10 samples, 2.61%)</title><rect x="241.1" y="387.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.1" y="398.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/547892778.apply (9 samples, 2.35%)</title><rect x="241.1" y="371.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="244.1" y="382.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (9 samples, 2.35%)</title><rect x="241.1" y="355.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.1" y="366.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (9 samples, 2.35%)</title><rect x="241.1" y="339.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.26%)</title><rect x="241.1" y="323.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.26%)</title><rect x="241.1" y="307.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.26%)</title><rect x="241.1" y="291.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="244.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (8 samples, 2.09%)</title><rect x="244.2" y="323.0" width="24.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.2" y="334.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$167/1889724153.apply (1 samples, 0.26%)</title><rect x="244.2" y="307.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.26%)</title><rect x="244.2" y="291.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.2" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.26%)</title><rect x="244.2" y="275.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (1 samples, 0.26%)</title><rect x="244.2" y="259.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="247.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (7 samples, 1.83%)</title><rect x="247.2" y="307.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.2" y="318.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.26%)</title><rect x="247.2" y="291.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (1 samples, 0.26%)</title><rect x="247.2" y="275.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.2" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (1 samples, 0.26%)</title><rect x="247.2" y="259.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="250.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.26%)</title><rect x="250.3" y="291.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.26%)</title><rect x="250.3" y="275.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="253.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.26%)</title><rect x="250.3" y="259.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.26%)</title><rect x="250.3" y="243.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="253.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (1 samples, 0.26%)</title><rect x="253.4" y="291.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="256.5" y="291.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="259.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.78%)</title><rect x="259.6" y="291.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1981871911.run (3 samples, 0.78%)</title><rect x="259.6" y="275.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.78%)</title><rect x="259.6" y="259.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.52%)</title><rect x="259.6" y="243.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="262.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.52%)</title><rect x="259.6" y="227.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.52%)</title><rect x="259.6" y="211.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.52%)</title><rect x="259.6" y="195.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$454/110210760.get$Lambda (2 samples, 0.52%)</title><rect x="259.6" y="179.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$454 (2 samples, 0.52%)</title><rect x="259.6" y="163.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="262.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.26%)</title><rect x="265.7" y="243.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="265.7" y="227.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1337344609.invoke (1 samples, 0.26%)</title><rect x="265.7" y="211.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="265.7" y="195.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.26%)</title><rect x="265.7" y="179.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.26%)</title><rect x="265.7" y="163.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.7" y="174.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="265.7" y="147.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="268.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/388445390.apply (1 samples, 0.26%)</title><rect x="268.8" y="371.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.26%)</title><rect x="268.8" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.26%)</title><rect x="268.8" y="339.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="268.8" y="323.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="271.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (6 samples, 1.57%)</title><rect x="271.9" y="531.0" width="18.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1 samples, 0.26%)</title><rect x="271.9" y="515.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="271.9" y="499.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="271.9" y="483.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="271.9" y="467.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.9" y="478.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="271.9" y="451.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="274.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3 samples, 0.78%)</title><rect x="275.0" y="515.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.78%)</title><rect x="275.0" y="499.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.0" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.78%)</title><rect x="275.0" y="483.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.0" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.26%)</title><rect x="275.0" y="467.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="278.0" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.52%)</title><rect x="278.0" y="467.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.0" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (2 samples, 0.52%)</title><rect x="278.0" y="451.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.52%)</title><rect x="278.0" y="435.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.26%)</title><rect x="278.0" y="419.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$378/1919901546.accept (1 samples, 0.26%)</title><rect x="278.0" y="403.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.26%)</title><rect x="278.0" y="387.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.26%)</title><rect x="278.0" y="371.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.26%)</title><rect x="278.0" y="355.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.26%)</title><rect x="278.0" y="339.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.26%)</title><rect x="278.0" y="323.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="278.0" y="307.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="278.0" y="291.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="281.0" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.26%)</title><rect x="281.1" y="419.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="284.1" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.26%)</title><rect x="281.1" y="403.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.26%)</title><rect x="281.1" y="387.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="281.1" y="371.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.1" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="281.1" y="355.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="284.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (2 samples, 0.52%)</title><rect x="284.2" y="515.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2 samples, 0.52%)</title><rect x="284.2" y="499.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="284.2" y="483.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="284.2" y="467.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="284.2" y="451.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.2" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="284.2" y="435.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="287.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.26%)</title><rect x="287.3" y="483.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.26%)</title><rect x="287.3" y="467.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.3" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.26%)</title><rect x="287.3" y="451.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="290.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.26%)</title><rect x="290.4" y="643.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.26%)</title><rect x="290.4" y="627.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.26%)</title><rect x="290.4" y="611.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (1 samples, 0.26%)</title><rect x="290.4" y="595.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.26%)</title><rect x="290.4" y="579.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.26%)</title><rect x="290.4" y="563.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.26%)</title><rect x="290.4" y="547.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.26%)</title><rect x="290.4" y="531.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$434/1948962483.run (1 samples, 0.26%)</title><rect x="290.4" y="515.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.26%)</title><rect x="290.4" y="499.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.26%)</title><rect x="290.4" y="483.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.26%)</title><rect x="290.4" y="467.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.4" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.26%)</title><rect x="290.4" y="451.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.4" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.26%)</title><rect x="290.4" y="435.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.4" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.26%)</title><rect x="290.4" y="419.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="293.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/459863900.run (76 samples, 19.84%)</title><rect x="293.4" y="675.0" width="234.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.4" y="686.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2 (76 samples, 19.84%)</title><rect x="293.4" y="659.0" width="234.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.4" y="670.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putInternal (76 samples, 19.84%)</title><rect x="293.4" y="643.0" width="234.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.4" y="654.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.26%)</title><rect x="293.4" y="627.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.26%)</title><rect x="293.4" y="611.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.26%)</title><rect x="293.4" y="595.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="293.4" y="579.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.4" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="293.4" y="563.0" width="3.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="296.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.26%)</title><rect x="296.5" y="627.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.26%)</title><rect x="296.5" y="611.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.26%)</title><rect x="296.5" y="595.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.26%)</title><rect x="296.5" y="579.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.5" y="590.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="296.5" y="563.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="299.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putProxy (33 samples, 8.62%)</title><rect x="299.6" y="627.0" width="101.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="302.6" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.26%)</title><rect x="299.6" y="611.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="299.6" y="595.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="299.6" y="579.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.26%)</title><rect x="299.6" y="563.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putHere (22 samples, 5.74%)</title><rect x="302.7" y="611.0" width="67.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.7" y="622.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (16 samples, 4.18%)</title><rect x="302.7" y="595.0" width="49.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.7" y="606.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 4.18%)</title><rect x="302.7" y="579.0" width="49.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.7" y="590.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (16 samples, 4.18%)</title><rect x="302.7" y="563.0" width="49.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.7" y="574.0">org/r..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 4.18%)</title><rect x="302.7" y="547.0" width="49.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.7" y="558.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 4.18%)</title><rect x="302.7" y="531.0" width="49.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.7" y="542.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (16 samples, 4.18%)</title><rect x="302.7" y="515.0" width="49.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="305.7" y="526.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (16 samples, 4.18%)</title><rect x="302.7" y="499.0" width="49.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="305.7" y="510.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (16 samples, 4.18%)</title><rect x="302.7" y="483.0" width="49.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.7" y="494.0">org/r..</text>
</g>
<g>
<title>byte[] (16 samples, 4.18%)</title><rect x="302.7" y="467.0" width="49.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="305.7" y="478.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (6 samples, 1.57%)</title><rect x="352.0" y="595.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (6 samples, 1.57%)</title><rect x="352.0" y="579.0" width="18.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="355.0" y="590.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.52%)</title><rect x="352.0" y="563.0" width="6.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="355.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (4 samples, 1.04%)</title><rect x="358.1" y="563.0" width="12.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.1" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.52%)</title><rect x="358.1" y="547.0" width="6.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="361.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (2 samples, 0.52%)</title><rect x="364.3" y="547.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (2 samples, 0.52%)</title><rect x="364.3" y="531.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.52%)</title><rect x="364.3" y="515.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (2 samples, 0.52%)</title><rect x="364.3" y="499.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (2 samples, 0.52%)</title><rect x="364.3" y="483.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (2 samples, 0.52%)</title><rect x="364.3" y="467.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (2 samples, 0.52%)</title><rect x="364.3" y="451.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.3" y="462.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.52%)</title><rect x="364.3" y="435.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="367.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/FrameServer.routeRequest (10 samples, 2.61%)</title><rect x="370.5" y="611.0" width="30.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.5" y="622.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 2.61%)</title><rect x="370.5" y="595.0" width="30.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.5" y="606.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (10 samples, 2.61%)</title><rect x="370.5" y="579.0" width="30.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.5" y="590.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (9 samples, 2.35%)</title><rect x="370.5" y="563.0" width="27.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.5" y="574.0">o..</text>
</g>
<g>
<title>byte[] (9 samples, 2.35%)</title><rect x="370.5" y="547.0" width="27.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="373.5" y="558.0">b..</text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.26%)</title><rect x="398.2" y="563.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.26%)</title><rect x="398.2" y="547.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.2" y="558.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="398.2" y="531.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="401.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getNoRepRequest (9 samples, 2.35%)</title><rect x="401.3" y="627.0" width="27.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.3" y="638.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.26%)</title><rect x="401.3" y="611.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="401.3" y="595.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="401.3" y="579.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="404.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="401.3" y="563.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.3" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="401.3" y="547.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="404.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (3 samples, 0.78%)</title><rect x="404.4" y="611.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.78%)</title><rect x="404.4" y="595.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.78%)</title><rect x="404.4" y="579.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.4" y="590.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.78%)</title><rect x="404.4" y="563.0" width="9.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="407.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getCloneRequest (5 samples, 1.31%)</title><rect x="413.6" y="611.0" width="15.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="413.6" y="595.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798154996.invoke (1 samples, 0.26%)</title><rect x="413.6" y="579.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="413.6" y="563.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.26%)</title><rect x="413.6" y="547.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="413.6" y="531.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="416.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (1 samples, 0.26%)</title><rect x="416.7" y="595.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (1 samples, 0.26%)</title><rect x="416.7" y="579.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.26%)</title><rect x="416.7" y="563.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.7" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.26%)</title><rect x="416.7" y="547.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="419.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.52%)</title><rect x="419.8" y="595.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.8" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (2 samples, 0.52%)</title><rect x="419.8" y="579.0" width="6.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="422.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.26%)</title><rect x="425.9" y="595.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.26%)</title><rect x="425.9" y="579.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="428.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/PutDeleteGetMethodServer.getPutReplicaResponse (32 samples, 8.36%)</title><rect x="429.0" y="627.0" width="98.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.0" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.mergePutDeleteResponses (3 samples, 0.78%)</title><rect x="429.0" y="611.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.0" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.26%)</title><rect x="429.0" y="595.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.26%)</title><rect x="429.0" y="579.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.0" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.26%)</title><rect x="429.0" y="563.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="432.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.26%)</title><rect x="432.1" y="595.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.1" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (1 samples, 0.26%)</title><rect x="432.1" y="579.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="435.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (1 samples, 0.26%)</title><rect x="435.2" y="595.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.2" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.26%)</title><rect x="435.2" y="579.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="438.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.ackFromPair (2 samples, 0.52%)</title><rect x="438.3" y="611.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.52%)</title><rect x="438.3" y="595.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.52%)</title><rect x="438.3" y="579.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.3" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.52%)</title><rect x="438.3" y="563.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="441.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.52%)</title><rect x="438.3" y="547.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.26%)</title><rect x="438.3" y="531.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.26%)</title><rect x="438.3" y="515.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.26%)</title><rect x="438.3" y="499.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.3" y="510.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.tryAdvance (1 samples, 0.26%)</title><rect x="438.3" y="483.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1 samples, 0.26%)</title><rect x="438.3" y="467.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$145/1948566048.apply (1 samples, 0.26%)</title><rect x="438.3" y="451.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$ackFromPair$0 (1 samples, 0.26%)</title><rect x="438.3" y="435.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.26%)</title><rect x="438.3" y="419.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.split (1 samples, 0.26%)</title><rect x="438.3" y="403.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="438.3" y="387.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="438.3" y="371.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="438.3" y="355.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.3" y="366.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="438.3" y="339.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="441.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.26%)</title><rect x="441.3" y="531.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.26%)</title><rect x="441.3" y="515.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.3" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (1 samples, 0.26%)</title><rect x="441.3" y="499.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="444.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponsesFromReplicas (27 samples, 7.05%)</title><rect x="444.4" y="611.0" width="83.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.4" y="622.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (1 samples, 0.26%)</title><rect x="444.4" y="595.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.4" y="606.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (1 samples, 0.26%)</title><rect x="444.4" y="579.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.4" y="590.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (1 samples, 0.26%)</title><rect x="444.4" y="563.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="447.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.toArray (26 samples, 6.79%)</title><rect x="447.5" y="595.0" width="80.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.5" y="606.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (25 samples, 6.53%)</title><rect x="447.5" y="579.0" width="77.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.5" y="590.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (25 samples, 6.53%)</title><rect x="447.5" y="563.0" width="77.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.5" y="574.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (25 samples, 6.53%)</title><rect x="447.5" y="547.0" width="77.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.5" y="558.0">java/util..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (24 samples, 6.27%)</title><rect x="447.5" y="531.0" width="73.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.5" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (24 samples, 6.27%)</title><rect x="447.5" y="515.0" width="73.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="450.5" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (24 samples, 6.27%)</title><rect x="447.5" y="499.0" width="73.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.5" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.tryAdvance (24 samples, 6.27%)</title><rect x="447.5" y="483.0" width="73.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.5" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (24 samples, 6.27%)</title><rect x="447.5" y="467.0" width="73.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.5" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (24 samples, 6.27%)</title><rect x="447.5" y="451.0" width="73.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.5" y="462.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (20 samples, 5.22%)</title><rect x="447.5" y="435.0" width="61.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.5" y="446.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$154/571048721.apply (20 samples, 5.22%)</title><rect x="447.5" y="419.0" width="61.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.5" y="430.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$2 (20 samples, 5.22%)</title><rect x="447.5" y="403.0" width="61.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.5" y="414.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="447.5" y="387.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.5" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="447.5" y="371.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$206/1427897007.get$Lambda (1 samples, 0.26%)</title><rect x="447.5" y="355.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.internal.GetMethodServer$$Lambda$206 (1 samples, 0.26%)</title><rect x="447.5" y="339.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="450.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (13 samples, 3.39%)</title><rect x="450.6" y="387.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.6" y="398.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13 samples, 3.39%)</title><rect x="450.6" y="371.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.6" y="382.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13 samples, 3.39%)</title><rect x="450.6" y="355.0" width="40.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.6" y="366.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (13 samples, 3.39%)</title><rect x="450.6" y="339.0" width="40.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.6" y="350.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.52%)</title><rect x="450.6" y="323.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.52%)</title><rect x="450.6" y="307.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (1 samples, 0.26%)</title><rect x="450.6" y="291.0" width="3.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="453.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="453.7" y="291.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.26%)</title><rect x="453.7" y="275.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (1 samples, 0.26%)</title><rect x="453.7" y="259.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="456.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (7 samples, 1.83%)</title><rect x="456.7" y="323.0" width="21.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.7" y="334.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.26%)</title><rect x="456.7" y="307.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.7" y="318.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.26%)</title><rect x="456.7" y="291.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.7" y="302.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.26%)</title><rect x="456.7" y="275.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.7" y="286.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (1 samples, 0.26%)</title><rect x="456.7" y="259.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="459.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.52%)</title><rect x="459.8" y="307.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.52%)</title><rect x="459.8" y="291.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.8" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.26%)</title><rect x="459.8" y="275.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="462.8" y="286.0"></text>
</g>
<g>
<title>java.util.TreeSet (1 samples, 0.26%)</title><rect x="462.9" y="275.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="465.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (4 samples, 1.04%)</title><rect x="466.0" y="307.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.0" y="318.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (4 samples, 1.04%)</title><rect x="466.0" y="291.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.0" y="302.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 1.04%)</title><rect x="466.0" y="275.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.0" y="286.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 1.04%)</title><rect x="466.0" y="259.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.0" y="270.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 1.04%)</title><rect x="466.0" y="243.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.26%)</title><rect x="466.0" y="227.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.0" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.26%)</title><rect x="466.0" y="211.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.0" y="222.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="466.0" y="195.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="469.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.78%)</title><rect x="469.1" y="227.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.78%)</title><rect x="469.1" y="211.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.52%)</title><rect x="469.1" y="195.0" width="6.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="472.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="475.2" y="195.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.2" y="206.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="475.2" y="179.0" width="3.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="478.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2 samples, 0.52%)</title><rect x="478.3" y="323.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (1 samples, 0.26%)</title><rect x="478.3" y="307.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="481.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.26%)</title><rect x="481.4" y="307.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="484.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.26%)</title><rect x="481.4" y="291.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.4" y="302.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.26%)</title><rect x="481.4" y="275.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.26%)</title><rect x="481.4" y="259.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.4" y="270.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.26%)</title><rect x="481.4" y="243.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.4" y="254.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.26%)</title><rect x="481.4" y="227.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.4" y="238.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (1 samples, 0.26%)</title><rect x="481.4" y="211.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="484.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (2 samples, 0.52%)</title><rect x="484.5" y="323.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1 samples, 0.26%)</title><rect x="484.5" y="307.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.26%)</title><rect x="484.5" y="291.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1 samples, 0.26%)</title><rect x="484.5" y="275.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.26%)</title><rect x="484.5" y="259.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.26%)</title><rect x="484.5" y="243.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1 samples, 0.26%)</title><rect x="484.5" y="227.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="487.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.26%)</title><rect x="487.5" y="307.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.26%)</title><rect x="487.5" y="291.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.26%)</title><rect x="487.5" y="275.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (1 samples, 0.26%)</title><rect x="487.5" y="259.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="490.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (6 samples, 1.57%)</title><rect x="490.6" y="387.0" width="18.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.6" y="398.0"></text>
</g>
<g>
<title>java/net/URI.create (5 samples, 1.31%)</title><rect x="490.6" y="371.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.6" y="382.0"></text>
</g>
<g>
<title>java.net.URI (1 samples, 0.26%)</title><rect x="490.6" y="355.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="493.6" y="366.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (4 samples, 1.04%)</title><rect x="493.7" y="355.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.7" y="366.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (4 samples, 1.04%)</title><rect x="493.7" y="339.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.7" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="493.7" y="323.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.7" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="493.7" y="307.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.7" y="318.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="493.7" y="291.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="496.7" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (3 samples, 0.78%)</title><rect x="496.8" y="323.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.8" y="334.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.78%)</title><rect x="496.8" y="307.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.52%)</title><rect x="496.8" y="291.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.52%)</title><rect x="496.8" y="275.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.8" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.52%)</title><rect x="496.8" y="259.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.8" y="270.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.52%)</title><rect x="496.8" y="243.0" width="6.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="499.8" y="254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.26%)</title><rect x="503.0" y="291.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.0" y="302.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.26%)</title><rect x="503.0" y="275.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.0" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="503.0" y="259.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.0" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="503.0" y="243.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.0" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="503.0" y="227.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.0" y="238.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="503.0" y="211.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="506.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (1 samples, 0.26%)</title><rect x="506.0" y="371.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="509.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (1 samples, 0.26%)</title><rect x="506.0" y="355.0" width="3.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="509.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$152/987084221.apply (4 samples, 1.04%)</title><rect x="509.1" y="435.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$0 (4 samples, 1.04%)</title><rect x="509.1" y="419.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.1" y="430.0"></text>
</g>
<g>
<title>org.javatuples.Pair (1 samples, 0.26%)</title><rect x="509.1" y="403.0" width="3.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="512.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getNewRequest (3 samples, 0.78%)</title><rect x="512.2" y="403.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="512.2" y="387.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.26%)</title><rect x="512.2" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (1 samples, 0.26%)</title><rect x="512.2" y="355.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="512.2" y="339.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.26%)</title><rect x="512.2" y="323.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="512.2" y="307.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="515.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getCloneRequest (2 samples, 0.52%)</title><rect x="515.3" y="387.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="515.3" y="371.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798154996.invoke (1 samples, 0.26%)</title><rect x="515.3" y="355.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="515.3" y="339.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.26%)</title><rect x="515.3" y="323.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.26%)</title><rect x="515.3" y="307.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.3" y="318.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="515.3" y="291.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="518.3" y="302.0"></text>
</g>
<g>
<title>one.nio.http.Request (1 samples, 0.26%)</title><rect x="518.4" y="371.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="521.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.26%)</title><rect x="521.4" y="531.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1.opWrapSink (1 samples, 0.26%)</title><rect x="521.4" y="515.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.4" y="526.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1$1 (1 samples, 0.26%)</title><rect x="521.4" y="499.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="524.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$SpinedNodeBuilder.asArray (1 samples, 0.26%)</title><rect x="524.5" y="579.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.asArray (1 samples, 0.26%)</title><rect x="524.5" y="563.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$155/867486556.apply (1 samples, 0.26%)</title><rect x="524.5" y="547.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$3 (1 samples, 0.26%)</title><rect x="524.5" y="531.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (1 samples, 0.26%)</title><rect x="524.5" y="515.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="527.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$415/1656898946.run (54 samples, 14.10%)</title><rect x="527.6" y="675.0" width="166.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.6" y="686.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$putRep$3 (54 samples, 14.10%)</title><rect x="527.6" y="659.0" width="166.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.6" y="670.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putRepInternal (54 samples, 14.10%)</title><rect x="527.6" y="643.0" width="166.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.6" y="654.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 2.09%)</title><rect x="527.6" y="627.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.6" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 1.57%)</title><rect x="527.6" y="611.0" width="18.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 1.31%)</title><rect x="527.6" y="595.0" width="15.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (5 samples, 1.31%)</title><rect x="527.6" y="579.0" width="15.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.6" y="590.0"></text>
</g>
<g>
<title>byte[] (5 samples, 1.31%)</title><rect x="527.6" y="563.0" width="15.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="530.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.26%)</title><rect x="543.0" y="595.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.0" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1 samples, 0.26%)</title><rect x="543.0" y="579.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="546.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.52%)</title><rect x="546.1" y="611.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.52%)</title><rect x="546.1" y="595.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.52%)</title><rect x="546.1" y="579.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.52%)</title><rect x="546.1" y="563.0" width="6.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="549.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (2 samples, 0.52%)</title><rect x="552.2" y="627.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.26%)</title><rect x="552.2" y="611.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.26%)</title><rect x="552.2" y="595.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.26%)</title><rect x="552.2" y="579.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="552.2" y="563.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.2" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="552.2" y="547.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="555.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.26%)</title><rect x="555.3" y="611.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="555.3" y="595.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.26%)</title><rect x="555.3" y="579.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1 samples, 0.26%)</title><rect x="555.3" y="563.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="558.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putHere (44 samples, 11.49%)</title><rect x="558.4" y="627.0" width="135.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.4" y="638.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (36 samples, 9.40%)</title><rect x="558.4" y="611.0" width="110.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.4" y="622.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 8.62%)</title><rect x="558.4" y="595.0" width="101.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.4" y="606.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (33 samples, 8.62%)</title><rect x="558.4" y="579.0" width="101.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.4" y="590.0">org/rocksdb/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (33 samples, 8.62%)</title><rect x="558.4" y="563.0" width="101.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.4" y="574.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (33 samples, 8.62%)</title><rect x="558.4" y="547.0" width="101.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.4" y="558.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (33 samples, 8.62%)</title><rect x="558.4" y="531.0" width="101.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.4" y="542.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (33 samples, 8.62%)</title><rect x="558.4" y="515.0" width="101.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="561.4" y="526.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (33 samples, 8.62%)</title><rect x="558.4" y="499.0" width="101.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.4" y="510.0">org/rocksdb/..</text>
</g>
<g>
<title>byte[] (33 samples, 8.62%)</title><rect x="558.4" y="483.0" width="101.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="561.4" y="494.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (3 samples, 0.78%)</title><rect x="660.1" y="595.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.1" y="606.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.78%)</title><rect x="660.1" y="579.0" width="9.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="663.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getByteBufferValue (4 samples, 1.04%)</title><rect x="669.3" y="611.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestamp (4 samples, 1.04%)</title><rect x="669.3" y="595.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (4 samples, 1.04%)</title><rect x="669.3" y="579.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.chars (2 samples, 0.52%)</title><rect x="669.3" y="563.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.3" y="574.0"></text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (1 samples, 0.26%)</title><rect x="669.3" y="547.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="672.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (1 samples, 0.26%)</title><rect x="672.4" y="547.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.4" y="558.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (1 samples, 0.26%)</title><rect x="672.4" y="531.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="675.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (2 samples, 0.52%)</title><rect x="675.5" y="563.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (2 samples, 0.52%)</title><rect x="675.5" y="547.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.5" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.52%)</title><rect x="675.5" y="531.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (2 samples, 0.52%)</title><rect x="675.5" y="515.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (2 samples, 0.52%)</title><rect x="675.5" y="499.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (2 samples, 0.52%)</title><rect x="675.5" y="483.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.5" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (2 samples, 0.52%)</title><rect x="675.5" y="467.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.5" y="478.0"></text>
</g>
<g>
<title>int[] (2 samples, 0.52%)</title><rect x="675.5" y="451.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="678.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (4 samples, 1.04%)</title><rect x="681.6" y="611.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.6" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.52%)</title><rect x="681.6" y="595.0" width="6.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="684.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.52%)</title><rect x="687.8" y="595.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.52%)</title><rect x="687.8" y="579.0" width="6.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="690.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (27 samples, 7.05%)</title><rect x="694.0" y="723.0" width="83.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.0" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (27 samples, 7.05%)</title><rect x="694.0" y="707.0" width="83.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.0" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (27 samples, 7.05%)</title><rect x="694.0" y="691.0" width="83.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.0" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (27 samples, 7.05%)</title><rect x="694.0" y="675.0" width="83.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.0" y="686.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (27 samples, 7.05%)</title><rect x="694.0" y="659.0" width="83.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.0" y="670.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (27 samples, 7.05%)</title><rect x="694.0" y="643.0" width="83.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.0" y="654.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (3 samples, 0.78%)</title><rect x="694.0" y="627.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$206/1427897007.accept (3 samples, 0.78%)</title><rect x="694.0" y="611.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.78%)</title><rect x="694.0" y="595.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.78%)</title><rect x="694.0" y="579.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.78%)</title><rect x="694.0" y="563.0" width="9.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="697.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (21 samples, 5.48%)</title><rect x="703.2" y="627.0" width="64.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.2" y="638.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$204/3562961.apply (21 samples, 5.48%)</title><rect x="703.2" y="611.0" width="64.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.2" y="622.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (21 samples, 5.48%)</title><rect x="703.2" y="595.0" width="64.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.2" y="606.0">ru/mail..</text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 1.04%)</title><rect x="703.2" y="579.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 1.04%)</title><rect x="703.2" y="563.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.2" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="703.2" y="547.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="706.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.78%)</title><rect x="706.3" y="547.0" width="9.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="709.3" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (8 samples, 2.09%)</title><rect x="715.5" y="579.0" width="24.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.5" y="590.0">j..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (8 samples, 2.09%)</title><rect x="715.5" y="563.0" width="24.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.5" y="574.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$480/944057688.accept (8 samples, 2.09%)</title><rect x="715.5" y="547.0" width="24.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.5" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$6 (8 samples, 2.09%)</title><rect x="715.5" y="531.0" width="24.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.5" y="542.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 2.09%)</title><rect x="715.5" y="515.0" width="24.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.5" y="526.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (8 samples, 2.09%)</title><rect x="715.5" y="499.0" width="24.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.5" y="510.0">j..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (8 samples, 2.09%)</title><rect x="715.5" y="483.0" width="24.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.5" y="494.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 2.09%)</title><rect x="715.5" y="467.0" width="24.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.5" y="478.0">j..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.26%)</title><rect x="715.5" y="451.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="715.5" y="435.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="718.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 1.83%)</title><rect x="718.6" y="451.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.6" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 1.83%)</title><rect x="718.6" y="435.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="721.6" y="446.0">j..</text>
</g>
<g>
<title>byte[] (7 samples, 1.83%)</title><rect x="718.6" y="419.0" width="21.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="721.6" y="430.0">b..</text>
</g>
<g>
<title>one.nio.http.Response (2 samples, 0.52%)</title><rect x="740.2" y="579.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="743.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 1.83%)</title><rect x="746.3" y="579.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.3" y="590.0">o..</text>
</g>
<g>
<title>byte[] (2 samples, 0.52%)</title><rect x="746.3" y="563.0" width="6.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="749.3" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 1.04%)</title><rect x="752.5" y="563.0" width="12.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="755.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.26%)</title><rect x="764.8" y="563.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="767.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.78%)</title><rect x="767.9" y="627.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.78%)</title><rect x="767.9" y="611.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.78%)</title><rect x="767.9" y="595.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.78%)</title><rect x="767.9" y="579.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.78%)</title><rect x="767.9" y="563.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$205/1343995879.apply (3 samples, 0.78%)</title><rect x="767.9" y="547.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="770.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$1 (3 samples, 0.78%)</title><rect x="767.9" y="531.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (3 samples, 0.78%)</title><rect x="767.9" y="515.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="770.9" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.26%)</title><rect x="767.9" y="499.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="770.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.52%)</title><rect x="771.0" y="499.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (2 samples, 0.52%)</title><rect x="771.0" y="483.0" width="6.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="774.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (12 samples, 3.13%)</title><rect x="777.2" y="723.0" width="36.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.2" y="734.0">jdk..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.26%)</title><rect x="777.2" y="707.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/521791657.accept (1 samples, 0.26%)</title><rect x="777.2" y="691.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (1 samples, 0.26%)</title><rect x="777.2" y="675.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="780.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (1 samples, 0.26%)</title><rect x="777.2" y="659.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1 samples, 0.26%)</title><rect x="777.2" y="643.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (1 samples, 0.26%)</title><rect x="777.2" y="627.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="780.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (1 samples, 0.26%)</title><rect x="777.2" y="611.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="777.2" y="595.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="777.2" y="579.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.26%)</title><rect x="777.2" y="563.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.26%)</title><rect x="777.2" y="547.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$272/1574090351.run (1 samples, 0.26%)</title><rect x="777.2" y="531.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.26%)</title><rect x="777.2" y="515.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.26%)</title><rect x="777.2" y="499.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="777.2" y="483.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="777.2" y="467.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379/1517201211.get$Lambda (1 samples, 0.26%)</title><rect x="777.2" y="451.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379 (1 samples, 0.26%)</title><rect x="777.2" y="435.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="780.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.26%)</title><rect x="780.2" y="707.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.2" y="718.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.26%)</title><rect x="780.2" y="691.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.2" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.26%)</title><rect x="780.2" y="675.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.2" y="686.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (1 samples, 0.26%)</title><rect x="780.2" y="659.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="783.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.26%)</title><rect x="783.3" y="707.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.26%)</title><rect x="783.3" y="691.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.26%)</title><rect x="783.3" y="675.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.26%)</title><rect x="783.3" y="659.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.26%)</title><rect x="783.3" y="643.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1 samples, 0.26%)</title><rect x="783.3" y="627.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="786.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (9 samples, 2.35%)</title><rect x="786.4" y="707.0" width="27.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.4" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.handle (9 samples, 2.35%)</title><rect x="786.4" y="691.0" width="27.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.4" y="702.0">j..</text>
</g>
<g>
<title>java.net.http.HttpTimeoutException (1 samples, 0.26%)</title><rect x="786.4" y="675.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="789.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpTimeoutException.&lt;init&gt; (2 samples, 0.52%)</title><rect x="789.5" y="675.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="792.5" y="686.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (2 samples, 0.52%)</title><rect x="789.5" y="659.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.52%)</title><rect x="789.5" y="643.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.52%)</title><rect x="789.5" y="627.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.52%)</title><rect x="789.5" y="611.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.52%)</title><rect x="789.5" y="595.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.5" y="606.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.26%)</title><rect x="789.5" y="579.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="792.5" y="590.0"></text>
</g>
<g>
<title>short[] (1 samples, 0.26%)</title><rect x="792.6" y="579.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="795.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancel (6 samples, 1.57%)</title><rect x="795.6" y="675.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.cancel (6 samples, 1.57%)</title><rect x="795.6" y="659.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancel (6 samples, 1.57%)</title><rect x="795.6" y="643.0" width="18.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelImpl (6 samples, 1.57%)</title><rect x="795.6" y="627.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.close (6 samples, 1.57%)</title><rect x="795.6" y="611.0" width="18.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.toString (3 samples, 0.78%)</title><rect x="795.6" y="595.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.toString (3 samples, 0.78%)</title><rect x="795.6" y="579.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.6" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.toString (3 samples, 0.78%)</title><rect x="795.6" y="563.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.26%)</title><rect x="795.6" y="547.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.26%)</title><rect x="795.6" y="531.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.26%)</title><rect x="795.6" y="515.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="795.6" y="499.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.6" y="510.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="795.6" y="483.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="798.6" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.toString (1 samples, 0.26%)</title><rect x="798.7" y="547.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.7" y="558.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.toString (1 samples, 0.26%)</title><rect x="798.7" y="531.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.26%)</title><rect x="798.7" y="515.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.7" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.26%)</title><rect x="798.7" y="499.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.26%)</title><rect x="798.7" y="483.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.26%)</title><rect x="798.7" y="467.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.7" y="478.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="798.7" y="451.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="801.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.getRevealedLocalAddressAsString (1 samples, 0.26%)</title><rect x="801.8" y="547.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.8" y="558.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.toString (1 samples, 0.26%)</title><rect x="801.8" y="531.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.8" y="542.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.toString (1 samples, 0.26%)</title><rect x="801.8" y="515.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.8" y="526.0"></text>
</g>
<g>
<title>java/net/InetAddress.toString (1 samples, 0.26%)</title><rect x="801.8" y="499.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.26%)</title><rect x="801.8" y="483.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="801.8" y="467.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="801.8" y="451.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.8" y="462.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="801.8" y="435.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="804.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.signalClosed (3 samples, 0.78%)</title><rect x="804.9" y="595.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.9" y="606.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (2 samples, 0.52%)</title><rect x="804.9" y="579.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.52%)</title><rect x="804.9" y="563.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.52%)</title><rect x="804.9" y="547.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.52%)</title><rect x="804.9" y="531.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.52%)</title><rect x="804.9" y="515.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="804.9" y="499.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="807.9" y="510.0"></text>
</g>
<g>
<title>long[] (1 samples, 0.26%)</title><rect x="808.0" y="499.0" width="3.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="811.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalError (1 samples, 0.26%)</title><rect x="811.0" y="579.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="811.0" y="563.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.26%)</title><rect x="811.0" y="547.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.26%)</title><rect x="811.0" y="531.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.26%)</title><rect x="811.0" y="515.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$272/1574090351.run (1 samples, 0.26%)</title><rect x="811.0" y="499.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.26%)</title><rect x="811.0" y="483.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalCompletion (1 samples, 0.26%)</title><rect x="811.0" y="467.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onError (1 samples, 0.26%)</title><rect x="811.0" y="451.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.onReadError (1 samples, 0.26%)</title><rect x="811.0" y="435.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/ConnectionExpiredException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="811.0" y="419.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.0" y="430.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (1 samples, 0.26%)</title><rect x="811.0" y="403.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.26%)</title><rect x="811.0" y="387.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.26%)</title><rect x="811.0" y="371.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="811.0" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.26%)</title><rect x="811.0" y="339.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.26%)</title><rect x="811.0" y="323.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="814.0" y="334.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (21 samples, 5.48%)</title><rect x="814.1" y="723.0" width="64.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.1" y="734.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (20 samples, 5.22%)</title><rect x="814.1" y="707.0" width="61.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="817.1" y="718.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (20 samples, 5.22%)</title><rect x="814.1" y="691.0" width="61.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.1" y="702.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (20 samples, 5.22%)</title><rect x="814.1" y="675.0" width="61.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="817.1" y="686.0">one/ni..</text>
</g>
<g>
<title>byte[] (4 samples, 1.04%)</title><rect x="814.1" y="659.0" width="12.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="817.1" y="670.0"></text>
</g>
<g>
<title>byte[] (16 samples, 4.18%)</title><rect x="826.4" y="659.0" width="49.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="829.4" y="670.0">byte[]</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (1 samples, 0.26%)</title><rect x="875.7" y="707.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (1 samples, 0.26%)</title><rect x="875.7" y="691.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.7" y="702.0"></text>
</g>
<g>
<title>one.nio.net.NativeSocket (1 samples, 0.26%)</title><rect x="875.7" y="675.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="878.7" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (101 samples, 26.37%)</title><rect x="878.8" y="723.0" width="311.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.8" y="734.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 1.04%)</title><rect x="878.8" y="707.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.8" y="718.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4 samples, 1.04%)</title><rect x="878.8" y="691.0" width="12.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="881.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (97 samples, 25.33%)</title><rect x="891.1" y="707.0" width="298.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.1" y="718.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (97 samples, 25.33%)</title><rect x="891.1" y="691.0" width="298.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.1" y="702.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.26%)</title><rect x="891.1" y="675.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.1" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.addLast (1 samples, 0.26%)</title><rect x="891.1" y="659.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.1" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.26%)</title><rect x="891.1" y="643.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.1" y="654.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (1 samples, 0.26%)</title><rect x="891.1" y="627.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="894.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (87 samples, 22.72%)</title><rect x="894.2" y="675.0" width="268.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.2" y="686.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 3.92%)</title><rect x="894.2" y="659.0" width="46.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="897.2" y="670.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 3.92%)</title><rect x="894.2" y="643.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.2" y="654.0">one/..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (2 samples, 0.52%)</title><rect x="894.2" y="627.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.26%)</title><rect x="894.2" y="611.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.26%)</title><rect x="894.2" y="595.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.26%)</title><rect x="894.2" y="579.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="897.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.26%)</title><rect x="894.2" y="563.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.2" y="574.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.26%)</title><rect x="894.2" y="547.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="897.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (1 samples, 0.26%)</title><rect x="897.3" y="611.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.26%)</title><rect x="897.3" y="595.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.26%)</title><rect x="897.3" y="579.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/459863900.get$Lambda (1 samples, 0.26%)</title><rect x="897.3" y="563.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="900.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$121 (1 samples, 0.26%)</title><rect x="897.3" y="547.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.3" y="558.0"></text>
</g>
<g>
<title>RequestHandler6_putRep.handleRequest (6 samples, 1.57%)</title><rect x="900.4" y="627.0" width="18.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.52%)</title><rect x="900.4" y="611.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="903.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.52%)</title><rect x="900.4" y="595.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.52%)</title><rect x="900.4" y="579.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="903.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.52%)</title><rect x="900.4" y="563.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.4" y="574.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.52%)</title><rect x="900.4" y="547.0" width="6.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="903.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putRep (4 samples, 1.04%)</title><rect x="906.6" y="611.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 1.04%)</title><rect x="906.6" y="595.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 1.04%)</title><rect x="906.6" y="579.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$415/1656898946.get$Lambda (4 samples, 1.04%)</title><rect x="906.6" y="563.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.6" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$415 (4 samples, 1.04%)</title><rect x="906.6" y="547.0" width="12.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="909.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 1.83%)</title><rect x="918.9" y="627.0" width="21.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.9" y="638.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 1.83%)</title><rect x="918.9" y="611.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.9" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 1.83%)</title><rect x="918.9" y="595.0" width="21.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.9" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String (2 samples, 0.52%)</title><rect x="918.9" y="579.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="921.9" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 1.31%)</title><rect x="925.0" y="579.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.0" y="590.0"></text>
</g>
<g>
<title>byte[] (5 samples, 1.31%)</title><rect x="925.0" y="563.0" width="15.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="928.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (18 samples, 4.70%)</title><rect x="940.4" y="659.0" width="55.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.4" y="670.0">one/n..</text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 1.04%)</title><rect x="940.4" y="643.0" width="12.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="943.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 2.35%)</title><rect x="952.8" y="643.0" width="27.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.8" y="654.0">o..</text>
</g>
<g>
<title>java.lang.String[] (8 samples, 2.09%)</title><rect x="952.8" y="627.0" width="24.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="955.8" y="638.0">j..</text>
</g>
<g>
<title>java.lang.String[] (1 samples, 0.26%)</title><rect x="977.4" y="627.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 1.31%)</title><rect x="980.5" y="643.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 1.31%)</title><rect x="980.5" y="627.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.5" y="638.0"></text>
</g>
<g>
<title>char[] (2 samples, 0.52%)</title><rect x="980.5" y="611.0" width="6.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="983.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.78%)</title><rect x="986.7" y="611.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.78%)</title><rect x="986.7" y="595.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="989.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.78%)</title><rect x="986.7" y="579.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.7" y="590.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.78%)</title><rect x="986.7" y="563.0" width="9.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="989.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 1.04%)</title><rect x="995.9" y="659.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.9" y="670.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.04%)</title><rect x="995.9" y="643.0" width="12.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="998.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 1.31%)</title><rect x="1008.2" y="659.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1011.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 1.31%)</title><rect x="1008.2" y="643.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 1.31%)</title><rect x="1008.2" y="627.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1011.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.52%)</title><rect x="1008.2" y="611.0" width="6.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1011.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.78%)</title><rect x="1014.4" y="611.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.4" y="622.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.78%)</title><rect x="1014.4" y="595.0" width="9.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1017.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 11.75%)</title><rect x="1023.6" y="659.0" width="138.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.6" y="670.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (45 samples, 11.75%)</title><rect x="1023.6" y="643.0" width="138.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.6" y="654.0">one/nio/util/Utf8..</text>
</g>
<g>
<title>char[] (28 samples, 7.31%)</title><rect x="1023.6" y="627.0" width="86.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1026.6" y="638.0">char[]</text>
</g>
<g>
<title>char[] (2 samples, 0.52%)</title><rect x="1109.9" y="627.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1112.9" y="638.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 1.57%)</title><rect x="1116.1" y="627.0" width="18.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1119.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 2.35%)</title><rect x="1134.5" y="627.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.5" y="638.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 2.35%)</title><rect x="1134.5" y="611.0" width="27.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1137.5" y="622.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (9 samples, 2.35%)</title><rect x="1134.5" y="595.0" width="27.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.5" y="606.0">j..</text>
</g>
<g>
<title>byte[] (9 samples, 2.35%)</title><rect x="1134.5" y="579.0" width="27.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1137.5" y="590.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 2.35%)</title><rect x="1162.3" y="675.0" width="27.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.3" y="686.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 2.35%)</title><rect x="1162.3" y="659.0" width="27.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.3" y="670.0">o..</text>
</g>
<g>
<title>one.nio.net.SocketClosedException (1 samples, 0.26%)</title><rect x="1162.3" y="643.0" width="3.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1165.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (8 samples, 2.09%)</title><rect x="1165.4" y="643.0" width="24.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.4" y="654.0">o..</text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (8 samples, 2.09%)</title><rect x="1165.4" y="627.0" width="24.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.4" y="638.0">j..</text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (8 samples, 2.09%)</title><rect x="1165.4" y="611.0" width="24.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.4" y="622.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 2.09%)</title><rect x="1165.4" y="595.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.4" y="606.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 2.09%)</title><rect x="1165.4" y="579.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1168.4" y="590.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 2.09%)</title><rect x="1165.4" y="563.0" width="24.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.4" y="574.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 2.09%)</title><rect x="1165.4" y="547.0" width="24.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.4" y="558.0">j..</text>
</g>
<g>
<title>int[] (1 samples, 0.26%)</title><rect x="1165.4" y="531.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1168.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.78%)</title><rect x="1168.4" y="531.0" width="9.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1171.4" y="542.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.52%)</title><rect x="1177.7" y="531.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1180.7" y="542.0"></text>
</g>
<g>
<title>long[] (2 samples, 0.52%)</title><rect x="1183.8" y="531.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1186.8" y="542.0"></text>
</g>
</g>
</svg>
