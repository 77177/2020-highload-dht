<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (31,267 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,567 samples, 56.18%)</title><rect x="10.0" y="899.0" width="663.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,567 samples, 56.18%)</title><rect x="10.0" y="883.0" width="663.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,567 samples, 56.18%)</title><rect x="10.0" y="867.0" width="663.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,348 samples, 10.71%)</title><rect x="10.0" y="851.0" width="126.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,348 samples, 10.71%)</title><rect x="10.0" y="835.0" width="126.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,348 samples, 10.71%)</title><rect x="10.0" y="819.0" width="126.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concur..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (13 samples, 0.04%)</title><rect x="10.0" y="803.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (3,335 samples, 10.67%)</title><rect x="10.5" y="803.0" width="125.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="814.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,335 samples, 10.67%)</title><rect x="10.5" y="787.0" width="125.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="798.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,335 samples, 10.67%)</title><rect x="10.5" y="771.0" width="125.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="782.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="10.5" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="10.5" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$348/1406690349.get$Lambda (7 samples, 0.02%)</title><rect x="10.5" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.5" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$348 (7 samples, 0.02%)</title><rect x="10.5" y="707.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.get$Lambda (8 samples, 0.03%)</title><rect x="10.8" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.8" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$351 (8 samples, 0.03%)</title><rect x="10.8" y="707.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (43 samples, 0.14%)</title><rect x="11.1" y="755.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (43 samples, 0.14%)</title><rect x="11.1" y="739.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.1" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (29 samples, 0.09%)</title><rect x="11.1" y="723.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="14.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="12.2" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="12.2" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.2" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="12.2" y="691.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="15.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58 samples, 0.19%)</title><rect x="12.7" y="755.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58 samples, 0.19%)</title><rect x="12.7" y="739.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.7" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (30 samples, 0.10%)</title><rect x="12.7" y="723.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="15.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.09%)</title><rect x="13.8" y="723.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.09%)</title><rect x="13.8" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.09%)</title><rect x="13.8" y="691.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="16.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,139 samples, 10.04%)</title><rect x="14.9" y="755.0" width="118.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.9" y="766.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,139 samples, 10.04%)</title><rect x="14.9" y="739.0" width="118.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="750.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,139 samples, 10.04%)</title><rect x="14.9" y="723.0" width="118.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.9" y="734.0">jdk/internal/n..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.08%)</title><rect x="14.9" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.08%)</title><rect x="14.9" y="691.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.get$Lambda (9 samples, 0.03%)</title><rect x="14.9" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$171 (9 samples, 0.03%)</title><rect x="14.9" y="659.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="17.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.get$Lambda (11 samples, 0.04%)</title><rect x="15.2" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$175 (11 samples, 0.04%)</title><rect x="15.2" y="659.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,037 samples, 6.51%)</title><rect x="15.8" y="707.0" width="76.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.8" y="718.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,037 samples, 6.51%)</title><rect x="15.8" y="691.0" width="76.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="702.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,020 samples, 6.46%)</title><rect x="15.8" y="675.0" width="76.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.8" y="686.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (2,020 samples, 6.46%)</title><rect x="15.8" y="659.0" width="76.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.8" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,020 samples, 6.46%)</title><rect x="15.8" y="643.0" width="76.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.8" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,020 samples, 6.46%)</title><rect x="15.8" y="627.0" width="76.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.8" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (2,020 samples, 6.46%)</title><rect x="15.8" y="611.0" width="76.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,020 samples, 6.46%)</title><rect x="15.8" y="595.0" width="76.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.8" y="606.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="15.8" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="15.8" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.get$Lambda (9 samples, 0.03%)</title><rect x="15.8" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$346 (9 samples, 0.03%)</title><rect x="15.8" y="531.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="18.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (80 samples, 0.26%)</title><rect x="16.2" y="579.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (80 samples, 0.26%)</title><rect x="16.2" y="563.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (21 samples, 0.07%)</title><rect x="16.2" y="547.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="19.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (37 samples, 0.12%)</title><rect x="16.9" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (37 samples, 0.12%)</title><rect x="16.9" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (37 samples, 0.12%)</title><rect x="16.9" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (37 samples, 0.12%)</title><rect x="16.9" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (37 samples, 0.12%)</title><rect x="16.9" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (37 samples, 0.12%)</title><rect x="16.9" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.02%)</title><rect x="17.1" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.02%)</title><rect x="17.1" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (22 samples, 0.07%)</title><rect x="17.5" y="451.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (10 samples, 0.03%)</title><rect x="17.5" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (10 samples, 0.03%)</title><rect x="17.5" y="419.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (10 samples, 0.03%)</title><rect x="17.5" y="403.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (11 samples, 0.04%)</title><rect x="17.9" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (10 samples, 0.03%)</title><rect x="18.0" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="18.3" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="18.3" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.07%)</title><rect x="18.3" y="515.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="21.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (30 samples, 0.10%)</title><rect x="19.2" y="579.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (30 samples, 0.10%)</title><rect x="19.2" y="563.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (14 samples, 0.04%)</title><rect x="19.2" y="547.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="19.7" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="19.7" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="19.7" y="515.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="22.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,901 samples, 6.08%)</title><rect x="20.3" y="579.0" width="71.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.3" y="590.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="20.3" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="20.3" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$343/476350523.get$Lambda (17 samples, 0.05%)</title><rect x="20.5" y="531.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$343 (17 samples, 0.05%)</title><rect x="20.5" y="515.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="23.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,595 samples, 5.10%)</title><rect x="21.2" y="563.0" width="60.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.2" y="574.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,595 samples, 5.10%)</title><rect x="21.2" y="547.0" width="60.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.2" y="558.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (18 samples, 0.06%)</title><rect x="21.2" y="531.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="24.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (1,547 samples, 4.95%)</title><rect x="21.9" y="531.0" width="58.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.9" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,547 samples, 4.95%)</title><rect x="21.9" y="515.0" width="58.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.9" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="21.9" y="499.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="21.9" y="483.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/1898355370.get$Lambda (7 samples, 0.02%)</title><rect x="21.9" y="467.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$359 (7 samples, 0.02%)</title><rect x="21.9" y="451.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.12%)</title><rect x="22.1" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.12%)</title><rect x="22.1" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.06%)</title><rect x="22.1" y="467.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="22.9" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="22.9" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="22.9" y="435.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="23.5" y="499.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="26.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (33 samples, 0.11%)</title><rect x="24.2" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (13 samples, 0.04%)</title><rect x="24.2" y="483.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (20 samples, 0.06%)</title><rect x="24.6" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (13 samples, 0.04%)</title><rect x="24.6" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (13 samples, 0.04%)</title><rect x="24.6" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (13 samples, 0.04%)</title><rect x="24.6" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (13 samples, 0.04%)</title><rect x="24.6" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.04%)</title><rect x="24.6" y="403.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="27.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="25.1" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="25.1" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.02%)</title><rect x="25.1" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7 samples, 0.02%)</title><rect x="25.1" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7 samples, 0.02%)</title><rect x="25.1" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (7 samples, 0.02%)</title><rect x="25.1" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (38 samples, 0.12%)</title><rect x="25.4" y="499.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (38 samples, 0.12%)</title><rect x="25.4" y="483.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="28.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (9 samples, 0.03%)</title><rect x="25.4" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.03%)</title><rect x="25.4" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.03%)</title><rect x="25.4" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (9 samples, 0.03%)</title><rect x="25.4" y="419.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (29 samples, 0.09%)</title><rect x="25.7" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (29 samples, 0.09%)</title><rect x="25.7" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (20 samples, 0.06%)</title><rect x="25.7" y="435.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="28.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (9 samples, 0.03%)</title><rect x="26.5" y="435.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (9 samples, 0.03%)</title><rect x="26.5" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,415 samples, 4.53%)</title><rect x="26.8" y="499.0" width="53.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.8" y="510.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.05%)</title><rect x="26.8" y="483.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.toString (38 samples, 0.12%)</title><rect x="27.4" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.4" y="494.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="27.4" y="467.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="30.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.06%)</title><rect x="28.1" y="467.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="31.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (123 samples, 0.39%)</title><rect x="28.8" y="483.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (123 samples, 0.39%)</title><rect x="28.8" y="467.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (123 samples, 0.39%)</title><rect x="28.8" y="451.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.8" y="462.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.39%)</title><rect x="28.8" y="435.0" width="4.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="31.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (45 samples, 0.14%)</title><rect x="33.5" y="483.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.5" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (45 samples, 0.14%)</title><rect x="33.5" y="467.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.5" y="478.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.14%)</title><rect x="33.5" y="451.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="36.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (128 samples, 0.41%)</title><rect x="35.2" y="483.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (128 samples, 0.41%)</title><rect x="35.2" y="467.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 0.39%)</title><rect x="35.4" y="451.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.4" y="462.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.39%)</title><rect x="35.4" y="435.0" width="4.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="38.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.08%)</title><rect x="40.0" y="483.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.08%)</title><rect x="40.0" y="467.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.0" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.08%)</title><rect x="40.0" y="451.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="43.0" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.05%)</title><rect x="40.9" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.9" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.05%)</title><rect x="40.9" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (877 samples, 2.80%)</title><rect x="41.6" y="483.0" width="33.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.6" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (437 samples, 1.40%)</title><rect x="41.8" y="467.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (229 samples, 0.73%)</title><rect x="41.8" y="451.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (229 samples, 0.73%)</title><rect x="41.8" y="435.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.8" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (229 samples, 0.73%)</title><rect x="41.8" y="419.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (229 samples, 0.73%)</title><rect x="41.8" y="403.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.8" y="414.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.73%)</title><rect x="41.8" y="387.0" width="8.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="44.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (27 samples, 0.09%)</title><rect x="50.4" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.4" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (15 samples, 0.05%)</title><rect x="50.4" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="53.4" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (12 samples, 0.04%)</title><rect x="51.0" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (12 samples, 0.04%)</title><rect x="51.0" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.0" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (12 samples, 0.04%)</title><rect x="51.0" y="403.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="54.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (22 samples, 0.07%)</title><rect x="51.4" y="451.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.4" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (16 samples, 0.05%)</title><rect x="51.4" y="435.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="54.4" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (15 samples, 0.05%)</title><rect x="52.3" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.3" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (15 samples, 0.05%)</title><rect x="52.3" y="435.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="55.3" y="446.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (10 samples, 0.03%)</title><rect x="52.8" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.8" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$1 (10 samples, 0.03%)</title><rect x="52.8" y="435.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="55.8" y="446.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.test (134 samples, 0.43%)</title><rect x="53.2" y="451.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.2" y="462.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (134 samples, 0.43%)</title><rect x="53.2" y="435.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/111156771.test (134 samples, 0.43%)</title><rect x="53.2" y="419.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (134 samples, 0.43%)</title><rect x="53.2" y="403.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.2" y="414.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/282821294.test (134 samples, 0.43%)</title><rect x="53.2" y="387.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.2" y="398.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (134 samples, 0.43%)</title><rect x="53.2" y="371.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/494317290.test (134 samples, 0.43%)</title><rect x="53.2" y="355.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (134 samples, 0.43%)</title><rect x="53.2" y="339.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (134 samples, 0.43%)</title><rect x="53.2" y="323.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (134 samples, 0.43%)</title><rect x="53.2" y="307.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (65 samples, 0.21%)</title><rect x="53.2" y="291.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="56.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.22%)</title><rect x="55.7" y="291.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.7" y="302.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.22%)</title><rect x="55.7" y="275.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="58.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (434 samples, 1.39%)</title><rect x="58.3" y="467.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (434 samples, 1.39%)</title><rect x="58.3" y="451.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (434 samples, 1.39%)</title><rect x="58.3" y="435.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.3" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.04%)</title><rect x="58.4" y="419.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="61.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.07%)</title><rect x="58.9" y="419.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="61.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (8 samples, 0.03%)</title><rect x="59.8" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="62.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="60.1" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="60.1" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (18 samples, 0.06%)</title><rect x="60.1" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.1" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (18 samples, 0.06%)</title><rect x="60.1" y="371.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="63.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (25 samples, 0.08%)</title><rect x="60.8" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.8" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (25 samples, 0.08%)</title><rect x="60.8" y="403.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="63.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (321 samples, 1.03%)</title><rect x="61.7" y="419.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (321 samples, 1.03%)</title><rect x="61.7" y="403.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.7" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (321 samples, 1.03%)</title><rect x="61.7" y="387.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (26 samples, 0.08%)</title><rect x="61.7" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (26 samples, 0.08%)</title><rect x="61.7" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (26 samples, 0.08%)</title><rect x="61.7" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="61.7" y="323.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="61.7" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="61.7" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="61.7" y="275.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.08%)</title><rect x="61.7" y="259.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="61.7" y="243.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="64.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.copyOf (158 samples, 0.51%)</title><rect x="62.7" y="371.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.7" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (158 samples, 0.51%)</title><rect x="62.7" y="355.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (79 samples, 0.25%)</title><rect x="62.7" y="339.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.7" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 0.25%)</title><rect x="62.7" y="323.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.7" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.25%)</title><rect x="62.7" y="307.0" width="3.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="65.7" y="318.0"></text>
</g>
<g>
<title>java/util/List.of (79 samples, 0.25%)</title><rect x="65.7" y="339.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.7" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (79 samples, 0.25%)</title><rect x="65.7" y="323.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="68.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (137 samples, 0.44%)</title><rect x="68.6" y="371.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.6" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (137 samples, 0.44%)</title><rect x="68.6" y="355.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="71.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (22 samples, 0.07%)</title><rect x="73.8" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.8" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (22 samples, 0.07%)</title><rect x="73.8" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="76.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (42 samples, 0.13%)</title><rect x="74.6" y="483.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.6" y="494.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (18 samples, 0.06%)</title><rect x="74.6" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.6" y="478.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="74.6" y="451.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="77.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.08%)</title><rect x="75.3" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (24 samples, 0.08%)</title><rect x="75.3" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (24 samples, 0.08%)</title><rect x="75.3" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.08%)</title><rect x="75.3" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.04%)</title><rect x="75.3" y="403.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.3" y="414.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.04%)</title><rect x="75.3" y="387.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="78.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.04%)</title><rect x="75.7" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.04%)</title><rect x="75.7" y="387.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.7" y="398.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="75.7" y="371.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="78.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (28 samples, 0.09%)</title><rect x="76.2" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (28 samples, 0.09%)</title><rect x="76.2" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.09%)</title><rect x="76.2" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (28 samples, 0.09%)</title><rect x="76.2" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (28 samples, 0.09%)</title><rect x="76.2" y="419.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.09%)</title><rect x="76.2" y="403.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.04%)</title><rect x="76.2" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.04%)</title><rect x="76.2" y="371.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="79.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.05%)</title><rect x="76.6" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.05%)</title><rect x="76.6" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.6" y="382.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="76.6" y="355.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="79.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (78 samples, 0.25%)</title><rect x="77.3" y="483.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.3" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.06%)</title><rect x="77.3" y="467.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="80.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (26 samples, 0.08%)</title><rect x="78.0" y="467.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="78.0" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="81.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.10%)</title><rect x="79.0" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.0" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (32 samples, 0.10%)</title><rect x="79.0" y="451.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="82.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.10%)</title><rect x="80.2" y="531.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.10%)</title><rect x="80.2" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.10%)</title><rect x="80.2" y="499.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="83.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (49 samples, 0.16%)</title><rect x="81.4" y="563.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="84.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="83.2" y="563.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="86.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (216 samples, 0.69%)</title><rect x="83.9" y="563.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="83.9" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="83.9" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/932111771.get$Lambda (9 samples, 0.03%)</title><rect x="83.9" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$300 (9 samples, 0.03%)</title><rect x="83.9" y="499.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$305/93037820.get$Lambda (9 samples, 0.03%)</title><rect x="84.2" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$305 (9 samples, 0.03%)</title><rect x="84.2" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="87.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (32 samples, 0.10%)</title><rect x="84.6" y="547.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="87.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (23 samples, 0.07%)</title><rect x="85.8" y="547.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="88.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (12 samples, 0.04%)</title><rect x="86.6" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="89.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (60 samples, 0.19%)</title><rect x="87.1" y="547.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (60 samples, 0.19%)</title><rect x="87.1" y="531.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (60 samples, 0.19%)</title><rect x="87.1" y="515.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (60 samples, 0.19%)</title><rect x="87.1" y="499.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (60 samples, 0.19%)</title><rect x="87.1" y="483.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (60 samples, 0.19%)</title><rect x="87.1" y="467.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (60 samples, 0.19%)</title><rect x="87.1" y="451.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (60 samples, 0.19%)</title><rect x="87.1" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (60 samples, 0.19%)</title><rect x="87.1" y="419.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.08%)</title><rect x="87.1" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.08%)</title><rect x="87.1" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/837470131.get$Lambda (11 samples, 0.04%)</title><rect x="87.1" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$309 (11 samples, 0.04%)</title><rect x="87.1" y="355.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="90.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$314/737652253.get$Lambda (13 samples, 0.04%)</title><rect x="87.5" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$314 (13 samples, 0.04%)</title><rect x="87.5" y="355.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="90.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (15 samples, 0.05%)</title><rect x="88.0" y="403.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="91.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (21 samples, 0.07%)</title><rect x="88.6" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (21 samples, 0.07%)</title><rect x="88.6" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (9 samples, 0.03%)</title><rect x="88.6" y="371.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="91.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.04%)</title><rect x="88.9" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.9" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.04%)</title><rect x="88.9" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="91.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (52 samples, 0.17%)</title><rect x="89.4" y="547.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (27 samples, 0.09%)</title><rect x="89.6" y="531.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="92.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (19 samples, 0.06%)</title><rect x="90.6" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (19 samples, 0.06%)</title><rect x="90.6" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.6" y="526.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="90.6" y="499.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (19 samples, 0.06%)</title><rect x="91.3" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="91.3" y="531.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="94.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="92.0" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="92.0" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="92.0" y="643.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="95.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39 samples, 0.12%)</title><rect x="92.7" y="707.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39 samples, 0.12%)</title><rect x="92.7" y="691.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.7" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (19 samples, 0.06%)</title><rect x="92.7" y="675.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="95.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="93.4" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="93.4" y="659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.06%)</title><rect x="93.4" y="643.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="96.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,038 samples, 3.32%)</title><rect x="94.2" y="707.0" width="39.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.2" y="718.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="94.2" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="94.2" y="675.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$283/953386476.get$Lambda (11 samples, 0.04%)</title><rect x="94.2" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$283 (11 samples, 0.04%)</title><rect x="94.2" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="97.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29 samples, 0.09%)</title><rect x="94.7" y="691.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29 samples, 0.09%)</title><rect x="94.7" y="675.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/1482169443.apply (16 samples, 0.05%)</title><rect x="94.7" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (16 samples, 0.05%)</title><rect x="94.7" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (16 samples, 0.05%)</title><rect x="94.7" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="94.7" y="611.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="97.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="95.3" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="95.3" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="95.3" y="627.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="98.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (22 samples, 0.07%)</title><rect x="95.8" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (22 samples, 0.07%)</title><rect x="95.8" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="95.8" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="95.8" y="643.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.07%)</title><rect x="95.8" y="627.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (972 samples, 3.11%)</title><rect x="96.6" y="691.0" width="36.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.6" y="702.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (901 samples, 2.88%)</title><rect x="96.9" y="675.0" width="34.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.9" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (901 samples, 2.88%)</title><rect x="96.9" y="659.0" width="34.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.9" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (889 samples, 2.84%)</title><rect x="96.9" y="643.0" width="33.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.9" y="654.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (889 samples, 2.84%)</title><rect x="96.9" y="627.0" width="33.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.9" y="638.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (889 samples, 2.84%)</title><rect x="96.9" y="611.0" width="33.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.9" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (889 samples, 2.84%)</title><rect x="96.9" y="595.0" width="33.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.9" y="606.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="96.9" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="96.9" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.get$Lambda (10 samples, 0.03%)</title><rect x="96.9" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$279 (10 samples, 0.03%)</title><rect x="96.9" y="531.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="99.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (366 samples, 1.17%)</title><rect x="97.3" y="579.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (366 samples, 1.17%)</title><rect x="97.3" y="563.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (366 samples, 1.17%)</title><rect x="97.3" y="547.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (352 samples, 1.13%)</title><rect x="97.3" y="531.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (352 samples, 1.13%)</title><rect x="97.3" y="515.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (352 samples, 1.13%)</title><rect x="97.3" y="499.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (352 samples, 1.13%)</title><rect x="97.3" y="483.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (246 samples, 0.79%)</title><rect x="97.3" y="467.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.3" y="478.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (72 samples, 0.23%)</title><rect x="97.3" y="451.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.05%)</title><rect x="97.3" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="100.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.08%)</title><rect x="97.8" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.08%)</title><rect x="97.8" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.8" y="430.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.08%)</title><rect x="97.8" y="403.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="100.8" y="414.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (31 samples, 0.10%)</title><rect x="98.8" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.8" y="446.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.10%)</title><rect x="98.8" y="419.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="101.8" y="430.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (15 samples, 0.05%)</title><rect x="100.0" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.0" y="462.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (15 samples, 0.05%)</title><rect x="100.0" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="103.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (106 samples, 0.34%)</title><rect x="100.5" y="451.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (10 samples, 0.03%)</title><rect x="100.5" y="435.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="103.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (73 samples, 0.23%)</title><rect x="100.9" y="435.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (73 samples, 0.23%)</title><rect x="100.9" y="419.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (52 samples, 0.17%)</title><rect x="100.9" y="403.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.17%)</title><rect x="100.9" y="387.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.get$Lambda (52 samples, 0.17%)</title><rect x="100.9" y="371.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$76 (52 samples, 0.17%)</title><rect x="100.9" y="355.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="103.9" y="366.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (21 samples, 0.07%)</title><rect x="102.9" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.run (21 samples, 0.07%)</title><rect x="102.9" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (21 samples, 0.07%)</title><rect x="102.9" y="371.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.9" y="382.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (21 samples, 0.07%)</title><rect x="102.9" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.9" y="366.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (21 samples, 0.07%)</title><rect x="102.9" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Integer (21 samples, 0.07%)</title><rect x="102.9" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="105.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (23 samples, 0.07%)</title><rect x="103.7" y="435.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (23 samples, 0.07%)</title><rect x="103.7" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.7" y="430.0"></text>
</g>
<g>
<title>int[] (23 samples, 0.07%)</title><rect x="103.7" y="403.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="106.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (53 samples, 0.17%)</title><rect x="104.5" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.5" y="462.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="104.5" y="435.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="107.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.09%)</title><rect x="105.5" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (28 samples, 0.09%)</title><rect x="105.5" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (28 samples, 0.09%)</title><rect x="105.5" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (106 samples, 0.34%)</title><rect x="106.5" y="467.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.5" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.09%)</title><rect x="106.5" y="451.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="109.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (37 samples, 0.12%)</title><rect x="107.6" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.12%)</title><rect x="107.6" y="435.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="110.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 0.13%)</title><rect x="109.0" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 0.13%)</title><rect x="109.0" y="435.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="112.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="110.5" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="110.5" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="110.5" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="113.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (513 samples, 1.64%)</title><rect x="111.1" y="579.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (40 samples, 0.13%)</title><rect x="111.1" y="563.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="114.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (457 samples, 1.46%)</title><rect x="112.6" y="563.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.6" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (15 samples, 0.05%)</title><rect x="112.7" y="547.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="115.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (12 samples, 0.04%)</title><rect x="113.3" y="547.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="116.3" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (23 samples, 0.07%)</title><rect x="113.7" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.7" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (23 samples, 0.07%)</title><rect x="113.7" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.7" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (23 samples, 0.07%)</title><rect x="113.7" y="515.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="116.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (13 samples, 0.04%)</title><rect x="114.6" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.04%)</title><rect x="114.6" y="531.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="117.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (29 samples, 0.09%)</title><rect x="115.1" y="547.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="118.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (13 samples, 0.04%)</title><rect x="116.2" y="547.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="119.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (29 samples, 0.09%)</title><rect x="116.7" y="547.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.08%)</title><rect x="117.8" y="547.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="120.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (144 samples, 0.46%)</title><rect x="118.7" y="547.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (9 samples, 0.03%)</title><rect x="118.7" y="531.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="121.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.04%)</title><rect x="119.3" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="122.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="119.9" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="119.9" y="515.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="122.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.get$Lambda (7 samples, 0.02%)</title><rect x="119.9" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$271 (7 samples, 0.02%)</title><rect x="119.9" y="483.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="122.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (13 samples, 0.04%)</title><rect x="120.1" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.04%)</title><rect x="120.1" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="123.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (26 samples, 0.08%)</title><rect x="120.6" y="531.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="123.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="121.6" y="531.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="124.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (55 samples, 0.18%)</title><rect x="122.1" y="531.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (13 samples, 0.04%)</title><rect x="122.1" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="125.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (8 samples, 0.03%)</title><rect x="122.6" y="515.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="125.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (8 samples, 0.03%)</title><rect x="122.9" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.9" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (8 samples, 0.03%)</title><rect x="122.9" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="125.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (26 samples, 0.08%)</title><rect x="123.2" y="515.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (11 samples, 0.04%)</title><rect x="123.2" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="126.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (10 samples, 0.03%)</title><rect x="123.6" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="126.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (93 samples, 0.30%)</title><rect x="124.2" y="547.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (10 samples, 0.03%)</title><rect x="124.2" y="531.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="127.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (13 samples, 0.04%)</title><rect x="124.5" y="531.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="127.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (7 samples, 0.02%)</title><rect x="125.0" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="128.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.04%)</title><rect x="125.3" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.04%)</title><rect x="125.3" y="515.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="128.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (51 samples, 0.16%)</title><rect x="125.7" y="531.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (8 samples, 0.03%)</title><rect x="125.7" y="515.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="128.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (17 samples, 0.05%)</title><rect x="126.0" y="515.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="129.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (9 samples, 0.03%)</title><rect x="126.7" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (9 samples, 0.03%)</title><rect x="126.7" y="499.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="129.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (17 samples, 0.05%)</title><rect x="127.0" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.02%)</title><rect x="127.0" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="130.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (11 samples, 0.04%)</title><rect x="127.7" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (11 samples, 0.04%)</title><rect x="127.7" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (11 samples, 0.04%)</title><rect x="127.7" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.04%)</title><rect x="127.7" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.04%)</title><rect x="127.7" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (11 samples, 0.04%)</title><rect x="127.7" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.04%)</title><rect x="127.7" y="451.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="130.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (46 samples, 0.15%)</title><rect x="128.1" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (11 samples, 0.04%)</title><rect x="128.1" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="128.1" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.get$Lambda (11 samples, 0.04%)</title><rect x="128.1" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$208 (11 samples, 0.04%)</title><rect x="128.1" y="483.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="131.1" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (35 samples, 0.11%)</title><rect x="128.5" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (35 samples, 0.11%)</title><rect x="128.5" y="515.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (35 samples, 0.11%)</title><rect x="128.5" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.5" y="510.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (11 samples, 0.04%)</title><rect x="128.5" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="131.5" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (24 samples, 0.08%)</title><rect x="128.9" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.9" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (10 samples, 0.03%)</title><rect x="128.9" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="131.9" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (14 samples, 0.04%)</title><rect x="129.3" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.3" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.04%)</title><rect x="129.3" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.3" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (14 samples, 0.04%)</title><rect x="129.3" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.3" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (14 samples, 0.04%)</title><rect x="129.3" y="419.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.3" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (14 samples, 0.04%)</title><rect x="129.3" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="132.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (16 samples, 0.05%)</title><rect x="129.8" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="129.8" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="132.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="130.4" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="130.4" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="130.4" y="611.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="133.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.07%)</title><rect x="130.9" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.07%)</title><rect x="130.9" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="133.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="130.9" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="130.9" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="130.9" y="611.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="133.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (42 samples, 0.13%)</title><rect x="131.7" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (32 samples, 0.10%)</title><rect x="131.7" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (32 samples, 0.10%)</title><rect x="131.7" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1520674271.linkToTargetMethod (32 samples, 0.10%)</title><rect x="131.7" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1612745536.invoke (32 samples, 0.10%)</title><rect x="131.7" y="611.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809170349.invoke (32 samples, 0.10%)</title><rect x="131.7" y="595.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.10%)</title><rect x="131.7" y="579.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (12 samples, 0.04%)</title><rect x="131.7" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.7" y="574.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.04%)</title><rect x="131.7" y="547.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="134.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.06%)</title><rect x="132.2" y="563.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.06%)</title><rect x="132.2" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.2" y="558.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.06%)</title><rect x="132.2" y="531.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="135.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.03%)</title><rect x="133.0" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="136.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="133.0" y="643.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="136.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (22 samples, 0.07%)</title><rect x="133.3" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (22 samples, 0.07%)</title><rect x="133.3" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.07%)</title><rect x="133.3" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.3" y="734.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.07%)</title><rect x="133.3" y="707.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="136.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (58 samples, 0.19%)</title><rect x="134.2" y="755.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (44 samples, 0.14%)</title><rect x="134.2" y="739.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="137.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (14 samples, 0.04%)</title><rect x="135.8" y="739.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (14 samples, 0.04%)</title><rect x="135.8" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.8" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.04%)</title><rect x="135.8" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.8" y="718.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (14 samples, 0.04%)</title><rect x="135.8" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.04%)</title><rect x="135.8" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.04%)</title><rect x="135.8" y="659.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (14 samples, 0.04%)</title><rect x="135.8" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plus (14 samples, 0.04%)</title><rect x="135.8" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (14 samples, 0.04%)</title><rect x="135.8" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.8" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.create (14 samples, 0.04%)</title><rect x="135.8" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="606.0"></text>
</g>
<g>
<title>java.time.Instant (14 samples, 0.04%)</title><rect x="135.8" y="579.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="138.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (266 samples, 0.85%)</title><rect x="136.4" y="851.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (144 samples, 0.46%)</title><rect x="136.4" y="835.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (144 samples, 0.46%)</title><rect x="136.4" y="819.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (144 samples, 0.46%)</title><rect x="136.4" y="803.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.4" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (144 samples, 0.46%)</title><rect x="136.4" y="787.0" width="5.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="139.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (122 samples, 0.39%)</title><rect x="141.8" y="835.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (122 samples, 0.39%)</title><rect x="141.8" y="819.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (122 samples, 0.39%)</title><rect x="141.8" y="803.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.8" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (122 samples, 0.39%)</title><rect x="141.8" y="787.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="144.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.run (911 samples, 2.91%)</title><rect x="146.4" y="851.0" width="34.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.4" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (911 samples, 2.91%)</title><rect x="146.4" y="835.0" width="34.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.4" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (911 samples, 2.91%)</title><rect x="146.4" y="819.0" width="34.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.4" y="830.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (911 samples, 2.91%)</title><rect x="146.4" y="803.0" width="34.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.4" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (911 samples, 2.91%)</title><rect x="146.4" y="787.0" width="34.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.4" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (911 samples, 2.91%)</title><rect x="146.4" y="771.0" width="34.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.4" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (911 samples, 2.91%)</title><rect x="146.4" y="755.0" width="34.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.4" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (911 samples, 2.91%)</title><rect x="146.4" y="739.0" width="34.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (911 samples, 2.91%)</title><rect x="146.4" y="723.0" width="34.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.4" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (911 samples, 2.91%)</title><rect x="146.4" y="707.0" width="34.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="149.4" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (911 samples, 2.91%)</title><rect x="146.4" y="691.0" width="34.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.4" y="702.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (836 samples, 2.67%)</title><rect x="146.4" y="675.0" width="31.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.4" y="686.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.20%)</title><rect x="146.4" y="659.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.20%)</title><rect x="146.4" y="643.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$373/1353620768.get$Lambda (45 samples, 0.14%)</title><rect x="146.4" y="627.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$373 (45 samples, 0.14%)</title><rect x="146.4" y="611.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="149.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$399/1101313472.get$Lambda (10 samples, 0.03%)</title><rect x="148.1" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$399 (10 samples, 0.03%)</title><rect x="148.1" y="611.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="151.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$403/77996944.get$Lambda (9 samples, 0.03%)</title><rect x="148.5" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$403 (9 samples, 0.03%)</title><rect x="148.5" y="611.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="151.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (772 samples, 2.47%)</title><rect x="148.8" y="659.0" width="29.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.8" y="670.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (29 samples, 0.09%)</title><rect x="148.8" y="643.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="151.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (743 samples, 2.38%)</title><rect x="149.9" y="643.0" width="28.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.9" y="654.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (743 samples, 2.38%)</title><rect x="149.9" y="627.0" width="28.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.9" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (743 samples, 2.38%)</title><rect x="149.9" y="611.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.9" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (95 samples, 0.30%)</title><rect x="149.9" y="595.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="152.9" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (36 samples, 0.12%)</title><rect x="149.9" y="579.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.apply (59 samples, 0.19%)</title><rect x="151.3" y="579.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (59 samples, 0.19%)</title><rect x="151.3" y="563.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (59 samples, 0.19%)</title><rect x="151.3" y="547.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.3" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (11 samples, 0.04%)</title><rect x="151.3" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.3" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (11 samples, 0.04%)</title><rect x="151.3" y="515.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.3" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (11 samples, 0.04%)</title><rect x="151.3" y="499.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="154.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (48 samples, 0.15%)</title><rect x="151.7" y="531.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="151.7" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="154.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="151.7" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.get$Lambda (8 samples, 0.03%)</title><rect x="151.7" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$408 (8 samples, 0.03%)</title><rect x="151.7" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="154.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (40 samples, 0.13%)</title><rect x="152.0" y="515.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (40 samples, 0.13%)</title><rect x="152.0" y="499.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (22 samples, 0.07%)</title><rect x="152.0" y="483.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="155.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.06%)</title><rect x="152.8" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.06%)</title><rect x="152.8" y="467.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="152.8" y="451.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="155.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (648 samples, 2.07%)</title><rect x="153.5" y="595.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (648 samples, 2.07%)</title><rect x="153.5" y="579.0" width="24.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.5" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (648 samples, 2.07%)</title><rect x="153.5" y="563.0" width="24.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.5" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (648 samples, 2.07%)</title><rect x="153.5" y="547.0" width="24.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.5" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (648 samples, 2.07%)</title><rect x="153.5" y="531.0" width="24.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.5" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (648 samples, 2.07%)</title><rect x="153.5" y="515.0" width="24.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.5" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (648 samples, 2.07%)</title><rect x="153.5" y="499.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.5" y="510.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="153.5" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="153.5" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.get$Lambda (14 samples, 0.04%)</title><rect x="153.5" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$389 (14 samples, 0.04%)</title><rect x="153.5" y="435.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="156.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (55 samples, 0.18%)</title><rect x="154.0" y="483.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (55 samples, 0.18%)</title><rect x="154.0" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.10%)</title><rect x="154.0" y="451.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="157.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.08%)</title><rect x="155.2" y="451.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.08%)</title><rect x="155.2" y="435.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.08%)</title><rect x="155.2" y="419.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="158.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (65 samples, 0.21%)</title><rect x="156.1" y="483.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="156.1" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="156.1" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$390/671188151.get$Lambda (17 samples, 0.05%)</title><rect x="156.1" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$390 (17 samples, 0.05%)</title><rect x="156.1" y="419.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="159.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (48 samples, 0.15%)</title><rect x="156.7" y="467.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (48 samples, 0.15%)</title><rect x="156.7" y="451.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (24 samples, 0.08%)</title><rect x="156.7" y="435.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="159.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.08%)</title><rect x="157.6" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.08%)</title><rect x="157.6" y="419.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.08%)</title><rect x="157.6" y="403.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="160.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (514 samples, 1.64%)</title><rect x="158.5" y="483.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.10%)</title><rect x="158.5" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.10%)</title><rect x="158.5" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$375/154150596.get$Lambda (11 samples, 0.04%)</title><rect x="158.5" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$375 (11 samples, 0.04%)</title><rect x="158.5" y="419.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="161.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$386/1507540812.get$Lambda (19 samples, 0.06%)</title><rect x="159.0" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$386 (19 samples, 0.06%)</title><rect x="159.0" y="419.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="162.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (194 samples, 0.62%)</title><rect x="159.7" y="467.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (194 samples, 0.62%)</title><rect x="159.7" y="451.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (194 samples, 0.62%)</title><rect x="159.7" y="435.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$375/154150596.accept (72 samples, 0.23%)</title><rect x="159.7" y="419.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (72 samples, 0.23%)</title><rect x="159.7" y="403.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (72 samples, 0.23%)</title><rect x="159.7" y="387.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="159.7" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="159.7" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$380/468806070.get$Lambda (16 samples, 0.05%)</title><rect x="159.7" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$380 (16 samples, 0.05%)</title><rect x="159.7" y="323.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="162.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (56 samples, 0.18%)</title><rect x="160.3" y="371.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.18%)</title><rect x="160.3" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.09%)</title><rect x="160.3" y="339.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="163.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.09%)</title><rect x="161.3" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.09%)</title><rect x="161.3" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.09%)</title><rect x="161.3" y="307.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="164.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$386/1507540812.accept (75 samples, 0.24%)</title><rect x="162.4" y="419.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (75 samples, 0.24%)</title><rect x="162.4" y="403.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (75 samples, 0.24%)</title><rect x="162.4" y="387.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (75 samples, 0.24%)</title><rect x="162.4" y="371.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (75 samples, 0.24%)</title><rect x="162.4" y="355.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (75 samples, 0.24%)</title><rect x="162.4" y="339.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (75 samples, 0.24%)</title><rect x="162.4" y="323.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (75 samples, 0.24%)</title><rect x="162.4" y="307.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (75 samples, 0.24%)</title><rect x="162.4" y="291.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (75 samples, 0.24%)</title><rect x="162.4" y="275.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (34 samples, 0.11%)</title><rect x="162.4" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (34 samples, 0.11%)</title><rect x="162.4" y="243.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (24 samples, 0.08%)</title><rect x="162.4" y="227.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="165.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.03%)</title><rect x="163.3" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (10 samples, 0.03%)</title><rect x="163.3" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (10 samples, 0.03%)</title><rect x="163.3" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (10 samples, 0.03%)</title><rect x="163.3" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (10 samples, 0.03%)</title><rect x="163.3" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.03%)</title><rect x="163.3" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="166.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (41 samples, 0.13%)</title><rect x="163.7" y="259.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (41 samples, 0.13%)</title><rect x="163.7" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.05%)</title><rect x="163.7" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.7" y="238.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.05%)</title><rect x="163.7" y="211.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="166.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (24 samples, 0.08%)</title><rect x="164.3" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (7 samples, 0.02%)</title><rect x="164.3" y="211.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="167.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.05%)</title><rect x="164.6" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (17 samples, 0.05%)</title><rect x="164.6" y="195.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (17 samples, 0.05%)</title><rect x="164.6" y="179.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (17 samples, 0.05%)</title><rect x="164.6" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (17 samples, 0.05%)</title><rect x="164.6" y="147.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.6" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.05%)</title><rect x="164.6" y="131.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="167.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.15%)</title><rect x="165.2" y="419.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.15%)</title><rect x="165.2" y="403.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.15%)</title><rect x="165.2" y="387.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="168.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (290 samples, 0.93%)</title><rect x="167.0" y="467.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (26 samples, 0.08%)</title><rect x="167.0" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="170.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (14 samples, 0.04%)</title><rect x="168.0" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (14 samples, 0.04%)</title><rect x="168.0" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="168.0" y="419.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="171.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (250 samples, 0.80%)</title><rect x="168.5" y="451.0" width="9.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (17 samples, 0.05%)</title><rect x="168.5" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="171.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (129 samples, 0.41%)</title><rect x="169.1" y="435.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (20 samples, 0.06%)</title><rect x="169.1" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.1" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (20 samples, 0.06%)</title><rect x="169.1" y="403.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="172.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (25 samples, 0.08%)</title><rect x="169.9" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="172.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (84 samples, 0.27%)</title><rect x="170.8" y="419.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (8 samples, 0.03%)</title><rect x="170.8" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.03%)</title><rect x="171.1" y="403.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (20 samples, 0.06%)</title><rect x="171.4" y="403.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="174.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (20 samples, 0.06%)</title><rect x="172.2" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (20 samples, 0.06%)</title><rect x="172.2" y="387.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="175.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (28 samples, 0.09%)</title><rect x="173.0" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.02%)</title><rect x="173.0" y="387.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="176.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (11 samples, 0.04%)</title><rect x="173.2" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="176.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (10 samples, 0.03%)</title><rect x="173.6" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="176.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (104 samples, 0.33%)</title><rect x="174.0" y="435.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.0" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (7 samples, 0.02%)</title><rect x="174.0" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="177.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (54 samples, 0.17%)</title><rect x="174.3" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.11%)</title><rect x="174.3" y="403.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="177.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (19 samples, 0.06%)</title><rect x="175.6" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.6" y="414.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="175.6" y="387.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="178.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (43 samples, 0.14%)</title><rect x="176.3" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.3" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (43 samples, 0.14%)</title><rect x="176.3" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (43 samples, 0.14%)</title><rect x="176.3" y="387.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (43 samples, 0.14%)</title><rect x="176.3" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (43 samples, 0.14%)</title><rect x="176.3" y="355.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (43 samples, 0.14%)</title><rect x="176.3" y="339.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="179.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (75 samples, 0.24%)</title><rect x="177.9" y="675.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (75 samples, 0.24%)</title><rect x="177.9" y="659.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (75 samples, 0.24%)</title><rect x="177.9" y="643.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (75 samples, 0.24%)</title><rect x="177.9" y="627.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (75 samples, 0.24%)</title><rect x="177.9" y="611.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.9" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (74 samples, 0.24%)</title><rect x="178.0" y="595.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.0" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (30 samples, 0.10%)</title><rect x="178.0" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.0" y="590.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (30 samples, 0.10%)</title><rect x="178.0" y="563.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="181.0" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (44 samples, 0.14%)</title><rect x="179.1" y="579.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.1" y="590.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (44 samples, 0.14%)</title><rect x="179.1" y="563.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="182.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,693 samples, 8.61%)</title><rect x="180.8" y="851.0" width="101.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.8" y="862.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,693 samples, 8.61%)</title><rect x="180.8" y="835.0" width="101.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.8" y="846.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,303 samples, 7.37%)</title><rect x="180.8" y="819.0" width="86.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.8" y="830.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (2,303 samples, 7.37%)</title><rect x="180.8" y="803.0" width="86.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="814.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,303 samples, 7.37%)</title><rect x="180.8" y="787.0" width="86.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="183.8" y="798.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (59 samples, 0.19%)</title><rect x="180.8" y="771.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (59 samples, 0.19%)</title><rect x="180.8" y="755.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (59 samples, 0.19%)</title><rect x="180.8" y="739.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (59 samples, 0.19%)</title><rect x="180.8" y="723.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/932285561.linkToTargetMethod (24 samples, 0.08%)</title><rect x="180.8" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574568002.invoke (24 samples, 0.08%)</title><rect x="180.8" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.08%)</title><rect x="180.8" y="675.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.08%)</title><rect x="180.8" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.08%)</title><rect x="180.8" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.8" y="654.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.08%)</title><rect x="180.8" y="627.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="183.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (35 samples, 0.11%)</title><rect x="181.7" y="707.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.11%)</title><rect x="181.7" y="691.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.11%)</title><rect x="181.7" y="675.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364/258005369.get$Lambda (35 samples, 0.11%)</title><rect x="181.7" y="659.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.7" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364 (35 samples, 0.11%)</title><rect x="181.7" y="643.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="184.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,244 samples, 7.18%)</title><rect x="183.0" y="771.0" width="84.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.0" y="782.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,244 samples, 7.18%)</title><rect x="183.0" y="755.0" width="84.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.0" y="766.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,244 samples, 7.18%)</title><rect x="183.0" y="739.0" width="84.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.0" y="750.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,244 samples, 7.18%)</title><rect x="183.0" y="723.0" width="84.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.0" y="734.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,081 samples, 3.46%)</title><rect x="183.0" y="707.0" width="40.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.0" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,081 samples, 3.46%)</title><rect x="183.0" y="691.0" width="40.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.0" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,081 samples, 3.46%)</title><rect x="183.0" y="675.0" width="40.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.0" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,081 samples, 3.46%)</title><rect x="183.0" y="659.0" width="40.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.0" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,081 samples, 3.46%)</title><rect x="183.0" y="643.0" width="40.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.0" y="654.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,081 samples, 3.46%)</title><rect x="183.0" y="627.0" width="40.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.0" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,081 samples, 3.46%)</title><rect x="183.0" y="611.0" width="40.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.0" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,042 samples, 3.33%)</title><rect x="183.0" y="595.0" width="39.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.0" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,042 samples, 3.33%)</title><rect x="183.0" y="579.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.0" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,028 samples, 3.29%)</title><rect x="183.0" y="563.0" width="38.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.0" y="574.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.07%)</title><rect x="183.0" y="547.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="186.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$390/671188151.apply (16 samples, 0.05%)</title><rect x="183.9" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (16 samples, 0.05%)</title><rect x="183.9" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (16 samples, 0.05%)</title><rect x="183.9" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (16 samples, 0.05%)</title><rect x="183.9" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="183.9" y="483.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="186.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.apply (943 samples, 3.02%)</title><rect x="184.5" y="547.0" width="35.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.5" y="558.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (943 samples, 3.02%)</title><rect x="184.5" y="531.0" width="35.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.5" y="542.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="184.5" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="184.5" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.get$Lambda (12 samples, 0.04%)</title><rect x="184.5" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="187.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$477 (12 samples, 0.04%)</title><rect x="184.5" y="467.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="187.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (40 samples, 0.13%)</title><rect x="184.9" y="515.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (40 samples, 0.13%)</title><rect x="184.9" y="499.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (21 samples, 0.07%)</title><rect x="184.9" y="483.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="187.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="185.7" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="185.7" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="185.7" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="188.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (891 samples, 2.85%)</title><rect x="186.4" y="515.0" width="33.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.4" y="526.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="186.4" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="186.4" y="483.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$472/2092398521.get$Lambda (13 samples, 0.04%)</title><rect x="186.4" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$472 (13 samples, 0.04%)</title><rect x="186.4" y="451.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="189.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (69 samples, 0.22%)</title><rect x="186.9" y="499.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (69 samples, 0.22%)</title><rect x="186.9" y="483.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (44 samples, 0.14%)</title><rect x="186.9" y="467.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="189.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="188.6" y="467.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="191.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="188.6" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.08%)</title><rect x="188.6" y="435.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="191.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (809 samples, 2.59%)</title><rect x="189.5" y="499.0" width="30.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.5" y="510.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$143/1335662412.apply (56 samples, 0.18%)</title><rect x="189.5" y="483.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (56 samples, 0.18%)</title><rect x="189.5" y="467.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (56 samples, 0.18%)</title><rect x="189.5" y="451.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (12 samples, 0.04%)</title><rect x="189.5" y="435.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="192.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (44 samples, 0.14%)</title><rect x="190.0" y="435.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="190.0" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="193.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.10%)</title><rect x="190.4" y="419.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="193.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (753 samples, 2.41%)</title><rect x="191.6" y="483.0" width="28.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.6" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.09%)</title><rect x="191.6" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.09%)</title><rect x="191.6" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/1999221485.get$Lambda (15 samples, 0.05%)</title><rect x="191.6" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$464 (15 samples, 0.05%)</title><rect x="191.6" y="419.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="194.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$468/1721151277.get$Lambda (12 samples, 0.04%)</title><rect x="192.2" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$468 (12 samples, 0.04%)</title><rect x="192.2" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="195.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/59787151.linkToTargetMethod (21 samples, 0.07%)</title><rect x="192.7" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/366472008.invokeStatic (21 samples, 0.07%)</title><rect x="192.7" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.get$Lambda (21 samples, 0.07%)</title><rect x="192.7" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$441 (21 samples, 0.07%)</title><rect x="192.7" y="419.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="195.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (153 samples, 0.49%)</title><rect x="193.5" y="467.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.5" y="478.0"></text>
</g>
<g>
<title>java/util/Collection.stream (57 samples, 0.18%)</title><rect x="193.5" y="451.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.5" y="462.0"></text>
</g>
<g>
<title>java/util/List.spliterator (16 samples, 0.05%)</title><rect x="193.5" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.5" y="446.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (16 samples, 0.05%)</title><rect x="193.5" y="419.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="196.5" y="430.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (41 samples, 0.13%)</title><rect x="194.1" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.1" y="446.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (41 samples, 0.13%)</title><rect x="194.1" y="419.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="197.1" y="430.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (51 samples, 0.16%)</title><rect x="195.6" y="451.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.6" y="462.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (51 samples, 0.16%)</title><rect x="195.6" y="435.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.6" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (51 samples, 0.16%)</title><rect x="195.6" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.06%)</title><rect x="195.6" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (18 samples, 0.06%)</title><rect x="195.6" y="387.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (18 samples, 0.06%)</title><rect x="195.6" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.6" y="382.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (18 samples, 0.06%)</title><rect x="195.6" y="355.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="198.6" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$432/505681380.get (14 samples, 0.04%)</title><rect x="196.3" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.3" y="414.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (14 samples, 0.04%)</title><rect x="196.3" y="387.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="199.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (19 samples, 0.06%)</title><rect x="196.8" y="403.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (19 samples, 0.06%)</title><rect x="196.8" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.8" y="398.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (19 samples, 0.06%)</title><rect x="196.8" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.8" y="382.0"></text>
</g>
<g>
<title>java.util.OptionalLong (19 samples, 0.06%)</title><rect x="196.8" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="199.8" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (45 samples, 0.14%)</title><rect x="197.5" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (45 samples, 0.14%)</title><rect x="197.5" y="435.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="200.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.32%)</title><rect x="199.2" y="467.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (43 samples, 0.14%)</title><rect x="199.2" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.08%)</title><rect x="199.2" y="435.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="202.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="200.1" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="200.1" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="200.1" y="403.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="203.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (58 samples, 0.19%)</title><rect x="200.8" y="451.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (58 samples, 0.19%)</title><rect x="200.8" y="435.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.10%)</title><rect x="200.8" y="419.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="203.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="202.0" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="202.0" y="403.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.09%)</title><rect x="202.0" y="387.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="205.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (17 samples, 0.05%)</title><rect x="203.0" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="206.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (29 samples, 0.09%)</title><rect x="203.7" y="467.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="206.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.06%)</title><rect x="204.8" y="467.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="207.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (11 samples, 0.04%)</title><rect x="205.5" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (11 samples, 0.04%)</title><rect x="205.5" y="451.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="208.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (374 samples, 1.20%)</title><rect x="205.9" y="467.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="208.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.run (374 samples, 1.20%)</title><rect x="205.9" y="451.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (374 samples, 1.20%)</title><rect x="205.9" y="435.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.16%)</title><rect x="205.9" y="419.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (50 samples, 0.16%)</title><rect x="205.9" y="403.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/264340655.get$Lambda (17 samples, 0.05%)</title><rect x="205.9" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$444 (17 samples, 0.05%)</title><rect x="205.9" y="371.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="208.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.get$Lambda (16 samples, 0.05%)</title><rect x="206.6" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$448 (16 samples, 0.05%)</title><rect x="206.6" y="371.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="209.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/2069360447.get$Lambda (17 samples, 0.05%)</title><rect x="207.2" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$457 (17 samples, 0.05%)</title><rect x="207.2" y="371.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="210.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (38 samples, 0.12%)</title><rect x="207.8" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (38 samples, 0.12%)</title><rect x="207.8" y="403.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.07%)</title><rect x="207.8" y="387.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="210.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="208.6" y="387.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="208.6" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="208.6" y="355.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="211.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (22 samples, 0.07%)</title><rect x="209.3" y="419.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="212.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (18 samples, 0.06%)</title><rect x="210.1" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="210.1" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="213.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (64 samples, 0.20%)</title><rect x="210.8" y="419.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (64 samples, 0.20%)</title><rect x="210.8" y="403.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="210.8" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="210.8" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$461/1913827667.get$Lambda (12 samples, 0.04%)</title><rect x="210.8" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="213.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$461 (12 samples, 0.04%)</title><rect x="210.8" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="213.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (52 samples, 0.17%)</title><rect x="211.2" y="387.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (52 samples, 0.17%)</title><rect x="211.2" y="371.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (52 samples, 0.17%)</title><rect x="211.2" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.10%)</title><rect x="211.2" y="339.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="214.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.07%)</title><rect x="212.4" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.07%)</title><rect x="212.4" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.07%)</title><rect x="212.4" y="307.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="215.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (69 samples, 0.22%)</title><rect x="213.2" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.22%)</title><rect x="213.2" y="403.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2024542466.invoke (69 samples, 0.22%)</title><rect x="213.2" y="387.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.22%)</title><rect x="213.2" y="371.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.05%)</title><rect x="213.2" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="213.2" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="216.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (53 samples, 0.17%)</title><rect x="213.8" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (53 samples, 0.17%)</title><rect x="213.8" y="339.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.8" y="350.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.17%)</title><rect x="213.8" y="323.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="216.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (113 samples, 0.36%)</title><rect x="215.8" y="419.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (38 samples, 0.12%)</title><rect x="215.8" y="403.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="218.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (75 samples, 0.24%)</title><rect x="217.2" y="403.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.24%)</title><rect x="217.2" y="387.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2024542466.invoke (75 samples, 0.24%)</title><rect x="217.2" y="371.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.24%)</title><rect x="217.2" y="355.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.2" y="366.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.05%)</title><rect x="217.2" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="217.2" y="323.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (59 samples, 0.19%)</title><rect x="217.8" y="339.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (59 samples, 0.19%)</title><rect x="217.8" y="323.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.8" y="334.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.19%)</title><rect x="217.8" y="307.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="220.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$348/1406690349.apply (46 samples, 0.15%)</title><rect x="220.1" y="547.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (46 samples, 0.15%)</title><rect x="220.1" y="531.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (18 samples, 0.06%)</title><rect x="220.1" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.1" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (18 samples, 0.06%)</title><rect x="220.1" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (18 samples, 0.06%)</title><rect x="220.1" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (18 samples, 0.06%)</title><rect x="220.1" y="467.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="223.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (28 samples, 0.09%)</title><rect x="220.7" y="515.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.09%)</title><rect x="220.7" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="223.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (14 samples, 0.04%)</title><rect x="221.8" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14 samples, 0.04%)</title><rect x="221.8" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="224.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.apply (14 samples, 0.04%)</title><rect x="221.8" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (14 samples, 0.04%)</title><rect x="221.8" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (14 samples, 0.04%)</title><rect x="221.8" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="221.8" y="483.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="224.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.apply (39 samples, 0.12%)</title><rect x="222.3" y="595.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (39 samples, 0.12%)</title><rect x="222.3" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (39 samples, 0.12%)</title><rect x="222.3" y="563.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="225.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,163 samples, 3.72%)</title><rect x="223.8" y="707.0" width="43.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.8" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (84 samples, 0.27%)</title><rect x="223.8" y="691.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (84 samples, 0.27%)</title><rect x="223.8" y="675.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="226.8" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (84 samples, 0.27%)</title><rect x="223.8" y="659.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.8" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (84 samples, 0.27%)</title><rect x="223.8" y="643.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="226.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.27%)</title><rect x="223.8" y="627.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.8" y="638.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.27%)</title><rect x="223.8" y="611.0" width="3.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="226.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (45 samples, 0.14%)</title><rect x="227.0" y="691.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (45 samples, 0.14%)</title><rect x="227.0" y="675.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.0" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (45 samples, 0.14%)</title><rect x="227.0" y="659.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.0" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (45 samples, 0.14%)</title><rect x="227.0" y="643.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (45 samples, 0.14%)</title><rect x="227.0" y="627.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.0" y="638.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.14%)</title><rect x="227.0" y="611.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="230.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (122 samples, 0.39%)</title><rect x="228.7" y="691.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.7" y="702.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (23 samples, 0.07%)</title><rect x="228.7" y="675.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="231.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.06%)</title><rect x="229.5" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.06%)</title><rect x="229.5" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.06%)</title><rect x="229.5" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.5" y="654.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="229.5" y="627.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="232.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (24 samples, 0.08%)</title><rect x="230.2" y="675.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.2" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (24 samples, 0.08%)</title><rect x="230.2" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.2" y="670.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.08%)</title><rect x="230.2" y="643.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="233.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (57 samples, 0.18%)</title><rect x="231.1" y="675.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (57 samples, 0.18%)</title><rect x="231.1" y="659.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="231.1" y="643.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="234.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.14%)</title><rect x="231.6" y="643.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.6" y="654.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.14%)</title><rect x="231.6" y="627.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="234.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (312 samples, 1.00%)</title><rect x="233.3" y="691.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.3" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (312 samples, 1.00%)</title><rect x="233.3" y="675.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.3" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (312 samples, 1.00%)</title><rect x="233.3" y="659.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.3" y="670.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (10 samples, 0.03%)</title><rect x="233.3" y="643.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="236.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="233.6" y="643.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="236.6" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.14%)</title><rect x="234.1" y="643.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="237.1" y="654.0"></text>
</g>
<g>
<title>java.util.TreeSet (14 samples, 0.04%)</title><rect x="235.7" y="643.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="238.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="236.2" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="239.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="236.2" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (23 samples, 0.07%)</title><rect x="236.2" y="611.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.2" y="622.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (23 samples, 0.07%)</title><rect x="236.2" y="595.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="239.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (24 samples, 0.08%)</title><rect x="237.1" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.1" y="654.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (24 samples, 0.08%)</title><rect x="237.1" y="627.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="240.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (159 samples, 0.51%)</title><rect x="238.0" y="643.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.0" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (159 samples, 0.51%)</title><rect x="238.0" y="627.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.0" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (159 samples, 0.51%)</title><rect x="238.0" y="611.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (42 samples, 0.13%)</title><rect x="238.0" y="595.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (42 samples, 0.13%)</title><rect x="238.0" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.0" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (42 samples, 0.13%)</title><rect x="238.0" y="563.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (42 samples, 0.13%)</title><rect x="238.0" y="547.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (42 samples, 0.13%)</title><rect x="238.0" y="531.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="241.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (42 samples, 0.13%)</title><rect x="238.0" y="515.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (42 samples, 0.13%)</title><rect x="238.0" y="499.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.0" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.13%)</title><rect x="238.0" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.0" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.13%)</title><rect x="238.0" y="467.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="241.0" y="478.0"></text>
</g>
<g>
<title>java/util/List.copyOf (69 samples, 0.22%)</title><rect x="239.6" y="595.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.6" y="606.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (69 samples, 0.22%)</title><rect x="239.6" y="579.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.11%)</title><rect x="239.6" y="563.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.11%)</title><rect x="239.6" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.11%)</title><rect x="239.6" y="531.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="242.6" y="542.0"></text>
</g>
<g>
<title>java/util/List.of (36 samples, 0.12%)</title><rect x="240.9" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.9" y="574.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (36 samples, 0.12%)</title><rect x="240.9" y="547.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="243.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (48 samples, 0.15%)</title><rect x="242.2" y="595.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.2" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (48 samples, 0.15%)</title><rect x="242.2" y="579.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="245.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.09%)</title><rect x="244.0" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.0" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.09%)</title><rect x="244.0" y="627.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="247.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (600 samples, 1.92%)</title><rect x="245.0" y="691.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.0" y="702.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.12%)</title><rect x="245.0" y="675.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="248.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (36 samples, 0.12%)</title><rect x="246.4" y="675.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.4" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (36 samples, 0.12%)</title><rect x="246.4" y="659.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.4" y="670.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.12%)</title><rect x="246.4" y="643.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="249.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (69 samples, 0.22%)</title><rect x="247.8" y="675.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (69 samples, 0.22%)</title><rect x="247.8" y="659.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.07%)</title><rect x="247.8" y="643.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="250.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.15%)</title><rect x="248.7" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.7" y="654.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.15%)</title><rect x="248.7" y="627.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="251.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (458 samples, 1.46%)</title><rect x="250.4" y="675.0" width="17.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (133 samples, 0.43%)</title><rect x="250.4" y="659.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="253.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (133 samples, 0.43%)</title><rect x="250.4" y="643.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.20%)</title><rect x="250.4" y="627.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="253.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (69 samples, 0.22%)</title><rect x="252.8" y="627.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.8" y="638.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.22%)</title><rect x="252.8" y="611.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="255.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (68 samples, 0.22%)</title><rect x="255.4" y="659.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (68 samples, 0.22%)</title><rect x="255.4" y="643.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.4" y="654.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.13%)</title><rect x="255.4" y="627.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="258.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.09%)</title><rect x="257.0" y="627.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="260.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.trim (71 samples, 0.23%)</title><rect x="258.0" y="659.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (71 samples, 0.23%)</title><rect x="258.0" y="643.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (71 samples, 0.23%)</title><rect x="258.0" y="627.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.10%)</title><rect x="258.0" y="611.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="261.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (40 samples, 0.13%)</title><rect x="259.2" y="611.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.2" y="622.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.13%)</title><rect x="259.2" y="595.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="262.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (73 samples, 0.23%)</title><rect x="260.7" y="659.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (73 samples, 0.23%)</title><rect x="260.7" y="643.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (73 samples, 0.23%)</title><rect x="260.7" y="627.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="263.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (73 samples, 0.23%)</title><rect x="260.7" y="611.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.7" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (73 samples, 0.23%)</title><rect x="260.7" y="595.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.7" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (73 samples, 0.23%)</title><rect x="260.7" y="579.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="263.7" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (113 samples, 0.36%)</title><rect x="263.4" y="659.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (34 samples, 0.11%)</title><rect x="263.4" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (34 samples, 0.11%)</title><rect x="263.4" y="627.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="266.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (47 samples, 0.15%)</title><rect x="264.7" y="643.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.7" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (47 samples, 0.15%)</title><rect x="264.7" y="627.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="267.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$418/1114504486.apply (32 samples, 0.10%)</title><rect x="266.5" y="643.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (32 samples, 0.10%)</title><rect x="266.5" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.5" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.10%)</title><rect x="266.5" y="611.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="269.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (390 samples, 1.25%)</title><rect x="267.7" y="819.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (390 samples, 1.25%)</title><rect x="267.7" y="803.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (390 samples, 1.25%)</title><rect x="267.7" y="787.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (390 samples, 1.25%)</title><rect x="267.7" y="771.0" width="14.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (390 samples, 1.25%)</title><rect x="267.7" y="755.0" width="14.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (388 samples, 1.24%)</title><rect x="267.7" y="739.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="270.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.07%)</title><rect x="267.7" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="270.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.07%)</title><rect x="267.7" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/837470131.get$Lambda (10 samples, 0.03%)</title><rect x="267.7" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.7" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$309 (10 samples, 0.03%)</title><rect x="267.7" y="675.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="270.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$314/737652253.get$Lambda (12 samples, 0.04%)</title><rect x="268.1" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.1" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$314 (12 samples, 0.04%)</title><rect x="268.1" y="675.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="271.1" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (16 samples, 0.05%)</title><rect x="268.5" y="723.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="271.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (16 samples, 0.05%)</title><rect x="269.1" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (16 samples, 0.05%)</title><rect x="269.1" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.1" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (7 samples, 0.02%)</title><rect x="269.1" y="691.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="272.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.03%)</title><rect x="269.4" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.03%)</title><rect x="269.4" y="675.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="272.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (334 samples, 1.07%)</title><rect x="269.7" y="723.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (334 samples, 1.07%)</title><rect x="269.7" y="707.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/264340655.run (268 samples, 0.86%)</title><rect x="269.7" y="691.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (268 samples, 0.86%)</title><rect x="269.7" y="675.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="272.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (268 samples, 0.86%)</title><rect x="269.7" y="659.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.7" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (104 samples, 0.33%)</title><rect x="269.7" y="643.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.7" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (64 samples, 0.20%)</title><rect x="269.7" y="627.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.7" y="638.0"></text>
</g>
<g>
<title>java/util/List.spliterator (22 samples, 0.07%)</title><rect x="269.7" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.7" y="622.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (22 samples, 0.07%)</title><rect x="269.7" y="595.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="272.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.13%)</title><rect x="270.6" y="611.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="622.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.13%)</title><rect x="270.6" y="595.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="273.6" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (40 samples, 0.13%)</title><rect x="272.1" y="627.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (40 samples, 0.13%)</title><rect x="272.1" y="611.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (40 samples, 0.13%)</title><rect x="272.1" y="595.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.1" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/668210649.get (27 samples, 0.09%)</title><rect x="272.1" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.1" y="590.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (27 samples, 0.09%)</title><rect x="272.1" y="563.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="275.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (13 samples, 0.04%)</title><rect x="273.2" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (13 samples, 0.04%)</title><rect x="273.2" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.2" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (13 samples, 0.04%)</title><rect x="273.2" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.2" y="558.0"></text>
</g>
<g>
<title>java.util.Optional (13 samples, 0.04%)</title><rect x="273.2" y="531.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="276.2" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.map (13 samples, 0.04%)</title><rect x="273.6" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.6" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (13 samples, 0.04%)</title><rect x="273.6" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.6" y="638.0"></text>
</g>
<g>
<title>java/util/Optional.of (13 samples, 0.04%)</title><rect x="273.6" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.6" y="622.0"></text>
</g>
<g>
<title>java.util.Optional (13 samples, 0.04%)</title><rect x="273.6" y="595.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="276.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (151 samples, 0.48%)</title><rect x="274.1" y="643.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.1" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.06%)</title><rect x="274.1" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.1" y="638.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (19 samples, 0.06%)</title><rect x="274.1" y="611.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.1" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.06%)</title><rect x="274.1" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.1" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.06%)</title><rect x="274.1" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="277.1" y="590.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.06%)</title><rect x="274.1" y="563.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="277.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (132 samples, 0.42%)</title><rect x="274.9" y="627.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (39 samples, 0.12%)</title><rect x="274.9" y="611.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.9" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="274.9" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.9" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (10 samples, 0.03%)</title><rect x="274.9" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="277.9" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="274.9" y="563.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.9" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="274.9" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.9" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="274.9" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.9" y="542.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="274.9" y="515.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="277.9" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (13 samples, 0.04%)</title><rect x="275.2" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.2" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (13 samples, 0.04%)</title><rect x="275.2" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.2" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (13 samples, 0.04%)</title><rect x="275.2" y="563.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="278.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (16 samples, 0.05%)</title><rect x="275.7" y="595.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="278.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (26 samples, 0.08%)</title><rect x="276.3" y="611.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.04%)</title><rect x="276.3" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (13 samples, 0.04%)</title><rect x="276.3" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (13 samples, 0.04%)</title><rect x="276.3" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.3" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="276.3" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="279.3" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (13 samples, 0.04%)</title><rect x="276.8" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.8" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (13 samples, 0.04%)</title><rect x="276.8" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.8" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (13 samples, 0.04%)</title><rect x="276.8" y="563.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="279.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (67 samples, 0.21%)</title><rect x="277.3" y="611.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (13 samples, 0.04%)</title><rect x="277.3" y="595.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="280.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (54 samples, 0.17%)</title><rect x="277.8" y="595.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (13 samples, 0.04%)</title><rect x="277.8" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="280.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13 samples, 0.04%)</title><rect x="277.8" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13 samples, 0.04%)</title><rect x="277.8" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (13 samples, 0.04%)</title><rect x="277.8" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="280.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (41 samples, 0.13%)</title><rect x="278.3" y="579.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (41 samples, 0.13%)</title><rect x="278.3" y="563.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (29 samples, 0.09%)</title><rect x="278.3" y="547.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="281.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (12 samples, 0.04%)</title><rect x="279.4" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (12 samples, 0.04%)</title><rect x="279.4" y="531.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="282.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (66 samples, 0.21%)</title><rect x="279.8" y="691.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (66 samples, 0.21%)</title><rect x="279.8" y="675.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (66 samples, 0.21%)</title><rect x="279.8" y="659.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (54 samples, 0.17%)</title><rect x="279.8" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54 samples, 0.17%)</title><rect x="279.8" y="627.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (54 samples, 0.17%)</title><rect x="279.8" y="611.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (54 samples, 0.17%)</title><rect x="279.8" y="595.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/1999221485.accept (54 samples, 0.17%)</title><rect x="279.8" y="579.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (54 samples, 0.17%)</title><rect x="279.8" y="563.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (54 samples, 0.17%)</title><rect x="279.8" y="547.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54 samples, 0.17%)</title><rect x="279.8" y="531.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (54 samples, 0.17%)</title><rect x="279.8" y="515.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.apply (54 samples, 0.17%)</title><rect x="279.8" y="499.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (54 samples, 0.17%)</title><rect x="279.8" y="483.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (54 samples, 0.17%)</title><rect x="279.8" y="467.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="282.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (12 samples, 0.04%)</title><rect x="281.9" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.9" y="654.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="281.9" y="627.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="284.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/1479334731.run (10,349 samples, 33.10%)</title><rect x="282.4" y="851.0" width="390.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.4" y="862.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3 (10,349 samples, 33.10%)</title><rect x="282.4" y="835.0" width="390.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.4" y="846.0">ru/mail/polis/service/stasyanoi/server/CustomServer.l..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (223 samples, 0.71%)</title><rect x="282.4" y="819.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.4" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (223 samples, 0.71%)</title><rect x="282.4" y="803.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.get$Lambda (223 samples, 0.71%)</title><rect x="282.4" y="787.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.4" y="798.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$125 (223 samples, 0.71%)</title><rect x="282.4" y="771.0" width="8.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="285.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (10,126 samples, 32.39%)</title><rect x="290.8" y="819.0" width="382.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.8" y="830.0">ru/mail/polis/service/stasyanoi/server/CustomServer...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (734 samples, 2.35%)</title><rect x="290.8" y="803.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.8" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (513 samples, 1.64%)</title><rect x="290.8" y="787.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (352 samples, 1.13%)</title><rect x="290.8" y="771.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (352 samples, 1.13%)</title><rect x="290.8" y="755.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.8" y="766.0"></text>
</g>
<g>
<title>byte[] (352 samples, 1.13%)</title><rect x="290.8" y="739.0" width="13.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="293.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (161 samples, 0.51%)</title><rect x="304.1" y="771.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.1" y="782.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (161 samples, 0.51%)</title><rect x="304.1" y="755.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="307.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (221 samples, 0.71%)</title><rect x="310.2" y="787.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (221 samples, 0.71%)</title><rect x="310.2" y="771.0" width="8.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (221 samples, 0.71%)</title><rect x="310.2" y="755.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.2" y="766.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.24%)</title><rect x="310.2" y="739.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="313.2" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (147 samples, 0.47%)</title><rect x="313.0" y="739.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.0" y="750.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.47%)</title><rect x="313.0" y="723.0" width="5.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="316.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.get (9,392 samples, 30.04%)</title><rect x="318.5" y="803.0" width="354.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.5" y="814.0">ru/mail/polis/service/stasyanoi/server/CustomSer..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2 (9,392 samples, 30.04%)</title><rect x="318.5" y="787.0" width="354.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.5" y="798.0">ru/mail/polis/service/stasyanoi/server/CustomSer..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (9,392 samples, 30.04%)</title><rect x="318.5" y="771.0" width="354.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.5" y="782.0">ru/mail/polis/service/stasyanoi/server/CustomSer..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (167 samples, 0.53%)</title><rect x="318.5" y="755.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (167 samples, 0.53%)</title><rect x="318.5" y="739.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (167 samples, 0.53%)</title><rect x="318.5" y="723.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (167 samples, 0.53%)</title><rect x="318.5" y="707.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="321.5" y="718.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.27%)</title><rect x="318.5" y="691.0" width="3.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="321.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.27%)</title><rect x="321.7" y="691.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.7" y="702.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.27%)</title><rect x="321.7" y="675.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="324.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (6,402 samples, 20.48%)</title><rect x="325.0" y="755.0" width="241.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.0" y="766.0">ru/mail/polis/service/stasyanoi/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (4,774 samples, 15.27%)</title><rect x="325.0" y="739.0" width="180.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.0" y="750.0">ru/mail/polis/dao/stasy..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (4,517 samples, 14.45%)</title><rect x="325.0" y="723.0" width="170.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.0" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (4,517 samples, 14.45%)</title><rect x="325.0" y="707.0" width="170.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.0" y="718.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (4,517 samples, 14.45%)</title><rect x="325.0" y="691.0" width="170.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.0" y="702.0">ru/mail/polis/dao/stas..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (4,517 samples, 14.45%)</title><rect x="325.0" y="675.0" width="170.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.0" y="686.0">ru/mail/polis/dao/stas..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4,517 samples, 14.45%)</title><rect x="325.0" y="659.0" width="170.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.0" y="670.0">org/rocksdb/AbstractSl..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4,517 samples, 14.45%)</title><rect x="325.0" y="643.0" width="170.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.0" y="654.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4,517 samples, 14.45%)</title><rect x="325.0" y="627.0" width="170.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.0" y="638.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>byte[] (4,517 samples, 14.45%)</title><rect x="325.0" y="611.0" width="170.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="328.0" y="622.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (257 samples, 0.82%)</title><rect x="495.5" y="723.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.5" y="734.0"></text>
</g>
<g>
<title>byte[] (257 samples, 0.82%)</title><rect x="495.5" y="707.0" width="9.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="498.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampToBodyAndModifyEmptyBody (1,078 samples, 3.45%)</title><rect x="505.3" y="739.0" width="40.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.3" y="750.0">ru/..</text>
</g>
<g>
<title>byte[] (182 samples, 0.58%)</title><rect x="505.3" y="723.0" width="6.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="508.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (896 samples, 2.87%)</title><rect x="512.2" y="723.0" width="33.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.2" y="734.0">ru..</text>
</g>
<g>
<title>byte[] (122 samples, 0.39%)</title><rect x="512.2" y="707.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="515.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.chars (327 samples, 1.05%)</title><rect x="516.8" y="707.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.8" y="718.0"></text>
</g>
<g>
<title>java.lang.StringLatin1$CharsSpliterator (122 samples, 0.39%)</title><rect x="516.8" y="691.0" width="4.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="519.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (205 samples, 0.66%)</title><rect x="521.4" y="691.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.IntPipeline$Head (205 samples, 0.66%)</title><rect x="521.4" y="675.0" width="7.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="524.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (116 samples, 0.37%)</title><rect x="529.1" y="707.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.toString (116 samples, 0.37%)</title><rect x="529.1" y="691.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.1" y="702.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.37%)</title><rect x="529.1" y="675.0" width="4.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="532.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (331 samples, 1.06%)</title><rect x="533.5" y="707.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (331 samples, 1.06%)</title><rect x="533.5" y="691.0" width="12.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (331 samples, 1.06%)</title><rect x="533.5" y="675.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.makeNodeBuilder (331 samples, 1.06%)</title><rect x="533.5" y="659.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.intBuilder (331 samples, 1.06%)</title><rect x="533.5" y="643.0" width="12.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.5" y="654.0"></text>
</g>
<g>
<title>java.util.stream.Nodes$IntFixedNodeBuilder (88 samples, 0.28%)</title><rect x="533.5" y="627.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="536.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntFixedNodeBuilder.&lt;init&gt; (243 samples, 0.78%)</title><rect x="536.8" y="627.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$IntArrayNode.&lt;init&gt; (243 samples, 0.78%)</title><rect x="536.8" y="611.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.8" y="622.0"></text>
</g>
<g>
<title>int[] (243 samples, 0.78%)</title><rect x="536.8" y="595.0" width="9.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="539.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (91 samples, 0.29%)</title><rect x="546.0" y="739.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (85 samples, 0.27%)</title><rect x="546.0" y="723.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (85 samples, 0.27%)</title><rect x="546.0" y="707.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (85 samples, 0.27%)</title><rect x="546.0" y="691.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.27%)</title><rect x="546.0" y="675.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.0" y="686.0"></text>
</g>
<g>
<title>byte[] (85 samples, 0.27%)</title><rect x="546.0" y="659.0" width="3.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="549.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (457 samples, 1.46%)</title><rect x="549.4" y="739.0" width="17.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.4" y="750.0"></text>
</g>
<g>
<title>one.nio.http.Response (94 samples, 0.30%)</title><rect x="549.4" y="723.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="552.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (363 samples, 1.16%)</title><rect x="553.0" y="723.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.0" y="734.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.50%)</title><rect x="553.0" y="707.0" width="5.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="556.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (113 samples, 0.36%)</title><rect x="558.9" y="707.0" width="4.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="561.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.30%)</title><rect x="563.1" y="707.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="566.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicatePutOrDelete (1,478 samples, 4.73%)</title><rect x="566.7" y="755.0" width="55.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.7" y="766.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (19 samples, 0.06%)</title><rect x="566.7" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.7" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.06%)</title><rect x="566.7" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.7" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.06%)</title><rect x="566.7" y="707.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="569.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergePutDeleteResponses (38 samples, 0.12%)</title><rect x="567.4" y="739.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.03%)</title><rect x="567.4" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.03%)</title><rect x="567.4" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.03%)</title><rect x="567.4" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.03%)</title><rect x="567.4" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.4" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="567.4" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.4" y="670.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="567.4" y="643.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="570.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (30 samples, 0.10%)</title><rect x="567.7" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.7" y="734.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.03%)</title><rect x="567.7" y="707.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="570.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (22 samples, 0.07%)</title><rect x="568.0" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.0" y="718.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="568.0" y="691.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="571.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (10 samples, 0.03%)</title><rect x="568.2" y="691.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="571.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (1,421 samples, 4.54%)</title><rect x="568.8" y="739.0" width="53.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.8" y="750.0">ru/ma..</text>
</g>
<g>
<title>java.util.TreeMap (15 samples, 0.05%)</title><rect x="568.8" y="723.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (32 samples, 0.10%)</title><rect x="569.4" y="723.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (32 samples, 0.10%)</title><rect x="569.4" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (9 samples, 0.03%)</title><rect x="569.4" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.4" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (9 samples, 0.03%)</title><rect x="569.4" y="675.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="572.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (23 samples, 0.07%)</title><rect x="569.7" y="691.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (23 samples, 0.07%)</title><rect x="569.7" y="675.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.7" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.04%)</title><rect x="569.7" y="659.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="572.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (12 samples, 0.04%)</title><rect x="570.1" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.1" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.04%)</title><rect x="570.1" y="643.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="573.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (1,374 samples, 4.39%)</title><rect x="570.6" y="723.0" width="51.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.6" y="734.0">ru/ma..</text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="570.6" y="707.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="573.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (20 samples, 0.06%)</title><rect x="571.5" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.5" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (17 samples, 0.05%)</title><rect x="571.6" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.6" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="571.6" y="675.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="574.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (10 samples, 0.03%)</title><rect x="571.8" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.8" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (10 samples, 0.03%)</title><rect x="571.8" y="659.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="574.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.03%)</title><rect x="572.2" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.2" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.03%)</title><rect x="572.2" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.2" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.03%)</title><rect x="572.2" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.03%)</title><rect x="572.2" y="659.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.03%)</title><rect x="572.2" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.2" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="572.2" y="627.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="575.2" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.toArray (13 samples, 0.04%)</title><rect x="572.7" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$190/794830666.apply (8 samples, 0.03%)</title><rect x="572.9" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$getResponsesFromReplicas$6 (8 samples, 0.03%)</title><rect x="572.9" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.9" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture[] (8 samples, 0.03%)</title><rect x="572.9" y="659.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="575.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (18 samples, 0.06%)</title><rect x="573.4" y="707.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (18 samples, 0.06%)</title><rect x="573.4" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (8 samples, 0.03%)</title><rect x="573.4" y="675.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="576.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (7 samples, 0.02%)</title><rect x="573.8" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.8" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (7 samples, 0.02%)</title><rect x="573.8" y="659.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="576.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (27 samples, 0.09%)</title><rect x="574.1" y="707.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (27 samples, 0.09%)</title><rect x="574.1" y="691.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (14 samples, 0.04%)</title><rect x="574.1" y="675.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="577.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="574.6" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="574.6" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="574.6" y="643.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="577.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.join (8 samples, 0.03%)</title><rect x="575.1" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (8 samples, 0.03%)</title><rect x="575.1" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.1" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (8 samples, 0.03%)</title><rect x="575.1" y="675.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="578.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (34 samples, 0.11%)</title><rect x="575.4" y="707.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (34 samples, 0.11%)</title><rect x="575.4" y="691.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (19 samples, 0.06%)</title><rect x="575.4" y="675.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="576.1" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="576.1" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="576.1" y="643.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="579.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (25 samples, 0.08%)</title><rect x="576.7" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="579.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (25 samples, 0.08%)</title><rect x="576.7" y="691.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.7" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (16 samples, 0.05%)</title><rect x="576.7" y="675.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="579.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="577.3" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="577.3" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="577.3" y="643.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="580.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (7 samples, 0.02%)</title><rect x="577.6" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (739 samples, 2.36%)</title><rect x="577.9" y="707.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.9" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (739 samples, 2.36%)</title><rect x="577.9" y="691.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.9" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (739 samples, 2.36%)</title><rect x="577.9" y="675.0" width="27.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.9" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (739 samples, 2.36%)</title><rect x="577.9" y="659.0" width="27.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.9" y="670.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="577.9" y="643.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="577.9" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/539612352.get$Lambda (7 samples, 0.02%)</title><rect x="577.9" y="611.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$180 (7 samples, 0.02%)</title><rect x="577.9" y="595.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="580.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (21 samples, 0.07%)</title><rect x="578.1" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (21 samples, 0.07%)</title><rect x="578.1" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.1" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.04%)</title><rect x="578.1" y="611.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="581.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="578.6" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="578.6" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="578.6" y="579.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="581.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (30 samples, 0.10%)</title><rect x="578.9" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.10%)</title><rect x="578.9" y="627.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.9" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.06%)</title><rect x="578.9" y="611.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="581.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="579.6" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="579.6" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="579.6" y="579.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="582.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (21 samples, 0.07%)</title><rect x="580.1" y="643.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="583.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (45 samples, 0.14%)</title><rect x="580.8" y="643.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="583.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (323 samples, 1.03%)</title><rect x="582.5" y="643.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (46 samples, 0.15%)</title><rect x="582.5" y="627.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.5" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (39 samples, 0.12%)</title><rect x="582.5" y="611.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.5" y="622.0"></text>
</g>
<g>
<title>java/util/List.spliterator (12 samples, 0.04%)</title><rect x="582.5" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.5" y="606.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (12 samples, 0.04%)</title><rect x="582.5" y="579.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="585.5" y="590.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (27 samples, 0.09%)</title><rect x="583.0" y="595.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.0" y="606.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (27 samples, 0.09%)</title><rect x="583.0" y="579.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="586.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.02%)</title><rect x="584.0" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.0" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.02%)</title><rect x="584.0" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.02%)</title><rect x="584.0" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/668210649.get (7 samples, 0.02%)</title><rect x="584.0" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="587.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (7 samples, 0.02%)</title><rect x="584.0" y="547.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="587.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (68 samples, 0.22%)</title><rect x="584.3" y="627.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (68 samples, 0.22%)</title><rect x="584.3" y="611.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="587.3" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (19 samples, 0.06%)</title><rect x="584.5" y="595.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="587.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.03%)</title><rect x="585.2" y="595.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="588.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="585.6" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="585.6" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (9 samples, 0.03%)</title><rect x="585.6" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.6" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (9 samples, 0.03%)</title><rect x="585.6" y="547.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="588.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (25 samples, 0.08%)</title><rect x="585.9" y="595.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.08%)</title><rect x="585.9" y="579.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="588.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (8 samples, 0.03%)</title><rect x="586.8" y="627.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="589.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (136 samples, 0.43%)</title><rect x="587.1" y="627.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.1" y="638.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (136 samples, 0.43%)</title><rect x="587.1" y="611.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.1" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (128 samples, 0.41%)</title><rect x="587.1" y="595.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.1" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (128 samples, 0.41%)</title><rect x="587.1" y="579.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.1" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (128 samples, 0.41%)</title><rect x="587.1" y="563.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.1" y="574.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.12%)</title><rect x="587.1" y="547.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="590.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (30 samples, 0.10%)</title><rect x="588.6" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.6" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (30 samples, 0.10%)</title><rect x="588.6" y="531.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.6" y="542.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.10%)</title><rect x="588.6" y="515.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="591.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (60 samples, 0.19%)</title><rect x="589.7" y="547.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.19%)</title><rect x="589.7" y="531.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.09%)</title><rect x="589.7" y="515.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="592.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (33 samples, 0.11%)</title><rect x="590.7" y="515.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="593.7" y="526.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.11%)</title><rect x="590.7" y="499.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="593.7" y="510.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (8 samples, 0.03%)</title><rect x="592.0" y="595.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="595.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (26 samples, 0.08%)</title><rect x="592.3" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.08%)</title><rect x="592.3" y="611.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="595.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (39 samples, 0.12%)</title><rect x="593.3" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.3" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="593.3" y="611.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="596.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (10 samples, 0.03%)</title><rect x="593.6" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="593.6" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="596.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.06%)</title><rect x="594.0" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.0" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (19 samples, 0.06%)</title><rect x="594.0" y="595.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="597.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (179 samples, 0.57%)</title><rect x="594.7" y="643.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.03%)</title><rect x="594.7" y="627.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="597.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (24 samples, 0.08%)</title><rect x="595.0" y="627.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="598.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (142 samples, 0.45%)</title><rect x="596.1" y="627.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (142 samples, 0.45%)</title><rect x="596.1" y="611.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.1" y="622.0"></text>
</g>
<g>
<title>java.lang.Class[] (9 samples, 0.03%)</title><rect x="596.1" y="595.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="599.1" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="596.5" y="595.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="599.5" y="606.0"></text>
</g>
<g>
<title>java.util.LinkedList (13 samples, 0.04%)</title><rect x="596.8" y="595.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="599.8" y="606.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (68 samples, 0.22%)</title><rect x="597.3" y="595.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (68 samples, 0.22%)</title><rect x="597.3" y="579.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.3" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (68 samples, 0.22%)</title><rect x="597.3" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.3" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (68 samples, 0.22%)</title><rect x="597.3" y="547.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.3" y="558.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (68 samples, 0.22%)</title><rect x="597.3" y="531.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="600.3" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (15 samples, 0.05%)</title><rect x="599.9" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (15 samples, 0.05%)</title><rect x="599.9" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (13 samples, 0.04%)</title><rect x="599.9" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (13 samples, 0.04%)</title><rect x="599.9" y="547.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="602.9" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (28 samples, 0.09%)</title><rect x="600.4" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.4" y="606.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (28 samples, 0.09%)</title><rect x="600.4" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.4" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (28 samples, 0.09%)</title><rect x="600.4" y="563.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="603.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (113 samples, 0.36%)</title><rect x="601.5" y="643.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (23 samples, 0.07%)</title><rect x="601.5" y="627.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (10 samples, 0.03%)</title><rect x="601.5" y="611.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="604.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.04%)</title><rect x="601.9" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (13 samples, 0.04%)</title><rect x="601.9" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 0.04%)</title><rect x="601.9" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (13 samples, 0.04%)</title><rect x="601.9" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (13 samples, 0.04%)</title><rect x="601.9" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="604.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="602.4" y="627.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="605.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (77 samples, 0.25%)</title><rect x="602.8" y="627.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="602.8" y="611.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="602.8" y="595.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.get$Lambda (7 samples, 0.02%)</title><rect x="602.8" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$157 (7 samples, 0.02%)</title><rect x="602.8" y="563.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="605.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (64 samples, 0.20%)</title><rect x="603.3" y="611.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="606.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (64 samples, 0.20%)</title><rect x="603.3" y="595.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.10%)</title><rect x="603.3" y="579.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="606.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.11%)</title><rect x="604.5" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.11%)</title><rect x="604.5" y="563.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.11%)</title><rect x="604.5" y="547.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="607.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (442 samples, 1.41%)</title><rect x="605.8" y="707.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (50 samples, 0.16%)</title><rect x="605.8" y="691.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740547233.invoke (17 samples, 0.05%)</title><rect x="605.8" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/626025582.invoke (17 samples, 0.05%)</title><rect x="605.8" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="605.8" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.05%)</title><rect x="605.8" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.05%)</title><rect x="605.8" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.8" y="622.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="605.8" y="595.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="608.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/917819120.invoke (33 samples, 0.11%)</title><rect x="606.4" y="675.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.11%)</title><rect x="606.4" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.03%)</title><rect x="606.4" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.4" y="654.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="606.4" y="627.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="609.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.08%)</title><rect x="606.7" y="643.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.08%)</title><rect x="606.7" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.7" y="638.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="606.7" y="611.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="609.7" y="622.0"></text>
</g>
<g>
<title>java/net/URI.create (138 samples, 0.44%)</title><rect x="607.6" y="691.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.6" y="702.0"></text>
</g>
<g>
<title>java.net.URI (30 samples, 0.10%)</title><rect x="607.6" y="675.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="610.6" y="686.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (108 samples, 0.35%)</title><rect x="608.8" y="675.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.8" y="686.0"></text>
</g>
<g>
<title>java.net.URI$Parser (12 samples, 0.04%)</title><rect x="608.8" y="659.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="611.8" y="670.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (96 samples, 0.31%)</title><rect x="609.2" y="659.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.04%)</title><rect x="609.2" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.04%)</title><rect x="609.2" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.2" y="638.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="609.2" y="611.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="612.2" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (82 samples, 0.26%)</title><rect x="609.8" y="643.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.13%)</title><rect x="609.8" y="627.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.13%)</title><rect x="609.8" y="611.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.08%)</title><rect x="609.8" y="595.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="612.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.06%)</title><rect x="610.7" y="595.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.7" y="606.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="610.7" y="579.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="613.7" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (40 samples, 0.13%)</title><rect x="611.3" y="627.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.06%)</title><rect x="611.3" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.06%)</title><rect x="611.3" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="611.3" y="579.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="614.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.04%)</title><rect x="611.6" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="614.6" y="590.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="611.6" y="563.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="614.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (21 samples, 0.07%)</title><rect x="612.1" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.1" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (21 samples, 0.07%)</title><rect x="612.1" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.07%)</title><rect x="612.1" y="579.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.07%)</title><rect x="612.1" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.04%)</title><rect x="612.1" y="547.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="615.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="612.5" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.5" y="558.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="612.5" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="615.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (15 samples, 0.05%)</title><rect x="612.9" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.9" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (15 samples, 0.05%)</title><rect x="612.9" y="675.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="615.9" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (41 samples, 0.13%)</title><rect x="613.4" y="691.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.4" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (16 samples, 0.05%)</title><rect x="613.4" y="675.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="616.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (25 samples, 0.08%)</title><rect x="614.0" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (20 samples, 0.06%)</title><rect x="614.2" y="659.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.2" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (20 samples, 0.06%)</title><rect x="614.2" y="643.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="617.2" y="654.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (15 samples, 0.05%)</title><rect x="615.0" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.0" y="702.0"></text>
</g>
<g>
<title>java/time/Duration.create (15 samples, 0.05%)</title><rect x="615.0" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.0" y="686.0"></text>
</g>
<g>
<title>java.time.Duration (15 samples, 0.05%)</title><rect x="615.0" y="659.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="618.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (117 samples, 0.37%)</title><rect x="615.5" y="691.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.5" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (23 samples, 0.07%)</title><rect x="615.5" y="675.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (94 samples, 0.30%)</title><rect x="616.4" y="675.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.4" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (81 samples, 0.26%)</title><rect x="616.4" y="659.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (81 samples, 0.26%)</title><rect x="616.4" y="643.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.04%)</title><rect x="616.4" y="627.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="619.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (22 samples, 0.07%)</title><rect x="616.9" y="627.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="619.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="618.0" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="618.0" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (14 samples, 0.04%)</title><rect x="618.0" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.0" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (14 samples, 0.04%)</title><rect x="618.0" y="579.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="621.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (25 samples, 0.08%)</title><rect x="618.5" y="627.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.5" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.08%)</title><rect x="618.5" y="611.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="621.5" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (13 samples, 0.04%)</title><rect x="619.5" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.5" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (13 samples, 0.04%)</title><rect x="619.5" y="643.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.5" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (13 samples, 0.04%)</title><rect x="619.5" y="627.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="622.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.06%)</title><rect x="619.9" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (20 samples, 0.06%)</title><rect x="619.9" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (20 samples, 0.06%)</title><rect x="619.9" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.9" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="620.1" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.1" y="654.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="620.1" y="627.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="623.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (46 samples, 0.15%)</title><rect x="620.7" y="691.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (46 samples, 0.15%)</title><rect x="620.7" y="675.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (46 samples, 0.15%)</title><rect x="620.7" y="659.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.08%)</title><rect x="620.7" y="643.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="623.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.07%)</title><rect x="621.6" y="643.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.6" y="654.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="621.6" y="627.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="624.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (1,339 samples, 4.28%)</title><rect x="622.4" y="755.0" width="50.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.4" y="766.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.send (1,141 samples, 3.65%)</title><rect x="622.4" y="739.0" width="43.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.4" y="750.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.send (1,141 samples, 3.65%)</title><rect x="622.4" y="723.0" width="43.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="625.4" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,135 samples, 3.63%)</title><rect x="622.7" y="707.0" width="42.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.7" y="718.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.03%)</title><rect x="622.7" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.03%)</title><rect x="622.7" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.7" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (14 samples, 0.04%)</title><rect x="623.3" y="691.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="626.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (110 samples, 0.35%)</title><rect x="623.8" y="691.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.03%)</title><rect x="623.8" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.8" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (26 samples, 0.08%)</title><rect x="624.1" y="675.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.1" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (26 samples, 0.08%)</title><rect x="624.1" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.1" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.03%)</title><rect x="624.3" y="643.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="627.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (7 samples, 0.02%)</title><rect x="624.9" y="643.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.9" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.02%)</title><rect x="624.9" y="627.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="627.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (53 samples, 0.17%)</title><rect x="625.2" y="675.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.2" y="686.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (53 samples, 0.17%)</title><rect x="625.2" y="659.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.2" y="670.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 0.16%)</title><rect x="625.2" y="643.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.2" y="654.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (49 samples, 0.16%)</title><rect x="625.2" y="627.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.2" y="638.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (49 samples, 0.16%)</title><rect x="625.2" y="611.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.2" y="622.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.03%)</title><rect x="625.2" y="595.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="628.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (18 samples, 0.06%)</title><rect x="625.5" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.5" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (18 samples, 0.06%)</title><rect x="625.5" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.5" y="590.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="625.5" y="563.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="628.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (23 samples, 0.07%)</title><rect x="626.2" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.07%)</title><rect x="626.2" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="626.2" y="563.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="629.2" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="626.5" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.5" y="574.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="626.5" y="547.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="629.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (14 samples, 0.04%)</title><rect x="627.4" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (59 samples, 0.19%)</title><rect x="627.9" y="691.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.9" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (8 samples, 0.03%)</title><rect x="628.0" y="675.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="631.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (47 samples, 0.15%)</title><rect x="628.4" y="675.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (47 samples, 0.15%)</title><rect x="628.4" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (20 samples, 0.06%)</title><rect x="628.8" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (20 samples, 0.06%)</title><rect x="628.8" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.8" y="638.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (20 samples, 0.06%)</title><rect x="628.8" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.8" y="622.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (20 samples, 0.06%)</title><rect x="628.8" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.8" y="606.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (20 samples, 0.06%)</title><rect x="628.8" y="579.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="631.8" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (9 samples, 0.03%)</title><rect x="629.6" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (9 samples, 0.03%)</title><rect x="629.6" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.6" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (7 samples, 0.02%)</title><rect x="629.9" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.9" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.02%)</title><rect x="629.9" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.9" y="638.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (7 samples, 0.02%)</title><rect x="629.9" y="611.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="632.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (936 samples, 2.99%)</title><rect x="630.2" y="691.0" width="35.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.2" y="702.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (907 samples, 2.90%)</title><rect x="630.2" y="675.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.2" y="686.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (904 samples, 2.89%)</title><rect x="630.3" y="659.0" width="34.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.3" y="670.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (904 samples, 2.89%)</title><rect x="630.3" y="643.0" width="34.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.3" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (904 samples, 2.89%)</title><rect x="630.3" y="627.0" width="34.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.3" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (904 samples, 2.89%)</title><rect x="630.3" y="611.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.3" y="622.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (899 samples, 2.88%)</title><rect x="630.5" y="595.0" width="33.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.5" y="606.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (899 samples, 2.88%)</title><rect x="630.5" y="579.0" width="33.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.5" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (899 samples, 2.88%)</title><rect x="630.5" y="563.0" width="33.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="633.5" y="574.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="630.5" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="630.5" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10 samples, 0.03%)</title><rect x="630.8" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10 samples, 0.03%)</title><rect x="630.8" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (7 samples, 0.02%)</title><rect x="630.8" y="515.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="633.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.05%)</title><rect x="631.2" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.05%)</title><rect x="631.2" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (12 samples, 0.04%)</title><rect x="631.2" y="515.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="634.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (853 samples, 2.73%)</title><rect x="631.8" y="547.0" width="32.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="634.8" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (853 samples, 2.73%)</title><rect x="631.8" y="531.0" width="32.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.8" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (853 samples, 2.73%)</title><rect x="631.8" y="515.0" width="32.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.8" y="526.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (514 samples, 1.64%)</title><rect x="632.0" y="499.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="635.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (514 samples, 1.64%)</title><rect x="632.0" y="483.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (504 samples, 1.61%)</title><rect x="632.0" y="467.0" width="19.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="635.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (504 samples, 1.61%)</title><rect x="632.0" y="451.0" width="19.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (504 samples, 1.61%)</title><rect x="632.0" y="435.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (504 samples, 1.61%)</title><rect x="632.0" y="419.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (504 samples, 1.61%)</title><rect x="632.0" y="403.0" width="19.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (504 samples, 1.61%)</title><rect x="632.0" y="387.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 0.04%)</title><rect x="632.2" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 0.04%)</title><rect x="632.2" y="355.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.03%)</title><rect x="632.6" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.03%)</title><rect x="632.6" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (479 samples, 1.53%)</title><rect x="633.0" y="371.0" width="18.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (405 samples, 1.30%)</title><rect x="633.1" y="355.0" width="15.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (405 samples, 1.30%)</title><rect x="633.1" y="339.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (393 samples, 1.26%)</title><rect x="633.2" y="323.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (393 samples, 1.26%)</title><rect x="633.2" y="307.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.03%)</title><rect x="633.2" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.03%)</title><rect x="633.2" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.03%)</title><rect x="633.7" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (14 samples, 0.04%)</title><rect x="634.0" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (14 samples, 0.04%)</title><rect x="634.0" y="275.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9 samples, 0.03%)</title><rect x="634.2" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9 samples, 0.03%)</title><rect x="634.2" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (8 samples, 0.03%)</title><rect x="634.2" y="227.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="637.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (357 samples, 1.14%)</title><rect x="634.5" y="291.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.5" y="302.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (35 samples, 0.11%)</title><rect x="634.8" y="275.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.11%)</title><rect x="634.8" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (35 samples, 0.11%)</title><rect x="634.8" y="243.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.8" y="254.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.11%)</title><rect x="634.8" y="227.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="637.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.04%)</title><rect x="636.1" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.1" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.04%)</title><rect x="636.1" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.1" y="270.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="636.1" y="243.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="639.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (31 samples, 0.10%)</title><rect x="636.5" y="275.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.5" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.10%)</title><rect x="636.5" y="259.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.09%)</title><rect x="636.6" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.6" y="254.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="636.6" y="227.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="639.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.02%)</title><rect x="637.7" y="275.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.02%)</title><rect x="637.7" y="259.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (7 samples, 0.02%)</title><rect x="637.7" y="243.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="640.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (212 samples, 0.68%)</title><rect x="638.0" y="275.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (110 samples, 0.35%)</title><rect x="638.2" y="259.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (63 samples, 0.20%)</title><rect x="638.2" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (63 samples, 0.20%)</title><rect x="638.2" y="227.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (63 samples, 0.20%)</title><rect x="638.2" y="211.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.20%)</title><rect x="638.2" y="195.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.2" y="206.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.20%)</title><rect x="638.2" y="179.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="641.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (7 samples, 0.02%)</title><rect x="640.6" y="243.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.6" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.test (28 samples, 0.09%)</title><rect x="641.3" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.3" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (28 samples, 0.09%)</title><rect x="641.3" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/111156771.test (28 samples, 0.09%)</title><rect x="641.3" y="211.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (28 samples, 0.09%)</title><rect x="641.3" y="195.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.3" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/282821294.test (28 samples, 0.09%)</title><rect x="641.3" y="179.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.3" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (28 samples, 0.09%)</title><rect x="641.3" y="163.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/494317290.test (28 samples, 0.09%)</title><rect x="641.3" y="147.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (28 samples, 0.09%)</title><rect x="641.3" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (28 samples, 0.09%)</title><rect x="641.3" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.09%)</title><rect x="641.3" y="99.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.04%)</title><rect x="641.3" y="83.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="644.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.05%)</title><rect x="641.7" y="83.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.7" y="94.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="641.7" y="67.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="644.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (98 samples, 0.31%)</title><rect x="642.3" y="259.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.3" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (98 samples, 0.31%)</title><rect x="642.3" y="243.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.3" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (98 samples, 0.31%)</title><rect x="642.3" y="227.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.3" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.03%)</title><rect x="642.5" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="645.5" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (70 samples, 0.22%)</title><rect x="643.1" y="211.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (70 samples, 0.22%)</title><rect x="643.1" y="195.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (70 samples, 0.22%)</title><rect x="643.1" y="179.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.02%)</title><rect x="643.1" y="163.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.1" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (7 samples, 0.02%)</title><rect x="643.1" y="147.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.02%)</title><rect x="643.1" y="131.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.02%)</title><rect x="643.1" y="115.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.02%)</title><rect x="643.1" y="99.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.02%)</title><rect x="643.1" y="83.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.02%)</title><rect x="643.1" y="67.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.02%)</title><rect x="643.1" y="51.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="643.1" y="35.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="646.1" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (34 samples, 0.11%)</title><rect x="643.3" y="163.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.3" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (34 samples, 0.11%)</title><rect x="643.3" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (18 samples, 0.06%)</title><rect x="643.3" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.06%)</title><rect x="643.3" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.06%)</title><rect x="643.3" y="99.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="646.3" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.05%)</title><rect x="644.0" y="131.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.0" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.05%)</title><rect x="644.0" y="115.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="647.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (29 samples, 0.09%)</title><rect x="644.6" y="163.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (29 samples, 0.09%)</title><rect x="644.6" y="147.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="647.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (8 samples, 0.03%)</title><rect x="645.7" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.03%)</title><rect x="645.7" y="195.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="648.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (18 samples, 0.06%)</title><rect x="646.0" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="646.2" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (12 samples, 0.04%)</title><rect x="646.2" y="243.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (12 samples, 0.04%)</title><rect x="646.2" y="227.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="646.2" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (7 samples, 0.02%)</title><rect x="646.4" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (7 samples, 0.02%)</title><rect x="646.4" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.4" y="190.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="646.4" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="649.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (12 samples, 0.04%)</title><rect x="646.7" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (12 samples, 0.04%)</title><rect x="646.7" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="646.7" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (12 samples, 0.04%)</title><rect x="646.7" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (12 samples, 0.04%)</title><rect x="646.7" y="211.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="646.7" y="195.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="649.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.04%)</title><rect x="646.7" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.04%)</title><rect x="646.7" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.7" y="174.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="646.7" y="147.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="649.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (22 samples, 0.07%)</title><rect x="647.2" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.2" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="647.2" y="259.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="650.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="648.0" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="648.0" y="307.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="651.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="648.0" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="651.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (9 samples, 0.03%)</title><rect x="648.4" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="651.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="648.7" y="355.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="651.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (54 samples, 0.17%)</title><rect x="649.0" y="355.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (7 samples, 0.02%)</title><rect x="649.3" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="652.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (9 samples, 0.03%)</title><rect x="649.6" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="652.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (12 samples, 0.04%)</title><rect x="649.9" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.04%)</title><rect x="649.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.04%)</title><rect x="649.9" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.04%)</title><rect x="649.9" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.04%)</title><rect x="649.9" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.04%)</title><rect x="649.9" y="259.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (12 samples, 0.04%)</title><rect x="649.9" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (12 samples, 0.04%)</title><rect x="649.9" y="227.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (12 samples, 0.04%)</title><rect x="649.9" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (16 samples, 0.05%)</title><rect x="650.4" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (9 samples, 0.03%)</title><rect x="650.4" y="323.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="653.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="651.0" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="651.0" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="654.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="651.0" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="654.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.04%)</title><rect x="651.4" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.04%)</title><rect x="651.4" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="651.6" y="467.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="651.6" y="451.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="651.6" y="435.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="654.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (322 samples, 1.03%)</title><rect x="651.8" y="499.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.8" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="651.8" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="651.8" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10 samples, 0.03%)</title><rect x="652.1" y="483.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (10 samples, 0.03%)</title><rect x="652.1" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (300 samples, 0.96%)</title><rect x="652.7" y="483.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="652.7" y="467.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="652.7" y="451.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.get$Lambda (7 samples, 0.02%)</title><rect x="652.7" y="435.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$194 (7 samples, 0.02%)</title><rect x="652.7" y="419.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="655.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (271 samples, 0.87%)</title><rect x="652.9" y="467.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (271 samples, 0.87%)</title><rect x="652.9" y="451.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (264 samples, 0.84%)</title><rect x="652.9" y="435.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (264 samples, 0.84%)</title><rect x="652.9" y="419.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (264 samples, 0.84%)</title><rect x="652.9" y="403.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (264 samples, 0.84%)</title><rect x="652.9" y="387.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (103 samples, 0.33%)</title><rect x="653.0" y="371.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (103 samples, 0.33%)</title><rect x="653.0" y="355.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (103 samples, 0.33%)</title><rect x="653.0" y="339.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (96 samples, 0.31%)</title><rect x="653.0" y="323.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (96 samples, 0.31%)</title><rect x="653.0" y="307.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (96 samples, 0.31%)</title><rect x="653.0" y="291.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (96 samples, 0.31%)</title><rect x="653.0" y="275.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (61 samples, 0.20%)</title><rect x="653.0" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.0" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (17 samples, 0.05%)</title><rect x="653.0" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.0" y="254.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (7 samples, 0.02%)</title><rect x="653.3" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.3" y="238.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="653.3" y="211.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="656.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (31 samples, 0.10%)</title><rect x="653.8" y="243.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (23 samples, 0.07%)</title><rect x="653.8" y="227.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (23 samples, 0.07%)</title><rect x="653.8" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="656.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (18 samples, 0.06%)</title><rect x="653.8" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="653.8" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.get$Lambda (18 samples, 0.06%)</title><rect x="653.8" y="163.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$76 (18 samples, 0.06%)</title><rect x="653.8" y="147.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="656.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (8 samples, 0.03%)</title><rect x="654.7" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (8 samples, 0.03%)</title><rect x="654.7" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="657.7" y="222.0"></text>
</g>
<g>
<title>int[] (8 samples, 0.03%)</title><rect x="654.7" y="195.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="657.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (8 samples, 0.03%)</title><rect x="655.0" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (35 samples, 0.11%)</title><rect x="655.3" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.3" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.05%)</title><rect x="655.3" y="243.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="658.3" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.03%)</title><rect x="655.9" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="655.9" y="227.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="658.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.04%)</title><rect x="656.2" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.04%)</title><rect x="656.2" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="659.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="656.6" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="656.6" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="656.6" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="659.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (160 samples, 0.51%)</title><rect x="656.9" y="371.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (13 samples, 0.04%)</title><rect x="656.9" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="659.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (143 samples, 0.46%)</title><rect x="657.3" y="355.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (14 samples, 0.04%)</title><rect x="658.0" y="339.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="661.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (7 samples, 0.02%)</title><rect x="658.6" y="339.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="661.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (12 samples, 0.04%)</title><rect x="658.8" y="339.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="661.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (37 samples, 0.12%)</title><rect x="659.5" y="339.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (7 samples, 0.02%)</title><rect x="659.6" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="662.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (14 samples, 0.04%)</title><rect x="660.3" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (9 samples, 0.03%)</title><rect x="660.5" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (30 samples, 0.10%)</title><rect x="660.9" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (20 samples, 0.06%)</title><rect x="661.2" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (7 samples, 0.02%)</title><rect x="661.4" y="307.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="664.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (7 samples, 0.02%)</title><rect x="661.7" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (15 samples, 0.05%)</title><rect x="662.2" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.2" y="350.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.04%)</title><rect x="662.3" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (11 samples, 0.04%)</title><rect x="662.3" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (11 samples, 0.04%)</title><rect x="662.3" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.3" y="302.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (9 samples, 0.03%)</title><rect x="662.4" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="662.9" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="662.9" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="662.9" y="403.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="665.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (17 samples, 0.05%)</title><rect x="663.3" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (9 samples, 0.03%)</title><rect x="663.3" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (9 samples, 0.03%)</title><rect x="663.3" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1520674271.linkToTargetMethod (9 samples, 0.03%)</title><rect x="663.3" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1612745536.invoke (9 samples, 0.03%)</title><rect x="663.3" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809170349.invoke (9 samples, 0.03%)</title><rect x="663.3" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="663.3" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.03%)</title><rect x="663.7" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="663.7" y="435.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="666.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="664.4" y="675.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="667.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (21 samples, 0.07%)</title><rect x="664.7" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (20 samples, 0.06%)</title><rect x="664.7" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (20 samples, 0.06%)</title><rect x="664.7" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (11 samples, 0.04%)</title><rect x="664.7" y="627.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="667.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="665.2" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="665.2" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="665.2" y="595.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="668.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (149 samples, 0.48%)</title><rect x="665.5" y="739.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="665.5" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/917819120.invoke (12 samples, 0.04%)</title><rect x="665.6" y="707.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="665.6" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.03%)</title><rect x="665.7" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.03%)</title><rect x="665.7" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.7" y="670.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="665.7" y="643.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="668.7" y="654.0"></text>
</g>
<g>
<title>java/net/URI.create (61 samples, 0.20%)</title><rect x="666.1" y="723.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.1" y="734.0"></text>
</g>
<g>
<title>java.net.URI (12 samples, 0.04%)</title><rect x="666.1" y="707.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="669.1" y="718.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (49 samples, 0.16%)</title><rect x="666.6" y="707.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.6" y="718.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (44 samples, 0.14%)</title><rect x="666.7" y="691.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.7" y="702.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (39 samples, 0.12%)</title><rect x="666.9" y="675.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.04%)</title><rect x="666.9" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title><rect x="666.9" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.9" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.03%)</title><rect x="667.1" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.1" y="638.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="667.1" y="611.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="670.1" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (26 samples, 0.08%)</title><rect x="667.4" y="659.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.04%)</title><rect x="667.4" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title><rect x="667.4" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.4" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="667.5" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.5" y="622.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="667.5" y="595.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="670.5" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (13 samples, 0.04%)</title><rect x="667.9" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.9" y="654.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (13 samples, 0.04%)</title><rect x="667.9" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.04%)</title><rect x="667.9" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="670.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title><rect x="667.9" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.9" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="667.9" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="670.9" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (12 samples, 0.04%)</title><rect x="668.6" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (7 samples, 0.02%)</title><rect x="668.8" y="707.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (25 samples, 0.08%)</title><rect x="669.2" y="723.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (22 samples, 0.07%)</title><rect x="669.3" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.3" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (18 samples, 0.06%)</title><rect x="669.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="672.3" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (18 samples, 0.06%)</title><rect x="669.3" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.3" y="686.0"></text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.03%)</title><rect x="669.4" y="659.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="672.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.03%)</title><rect x="670.2" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.03%)</title><rect x="670.2" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="673.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.03%)</title><rect x="670.2" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.2" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="670.3" y="675.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.3" y="686.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="670.3" y="659.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="673.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (16 samples, 0.05%)</title><rect x="670.5" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.05%)</title><rect x="670.5" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (16 samples, 0.05%)</title><rect x="670.5" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="670.5" y="675.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="673.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="670.9" y="675.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.9" y="686.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="670.9" y="659.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="673.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (49 samples, 0.16%)</title><rect x="671.1" y="739.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.1" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (21 samples, 0.07%)</title><rect x="671.3" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (21 samples, 0.07%)</title><rect x="671.3" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (21 samples, 0.07%)</title><rect x="671.3" y="691.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.3" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (21 samples, 0.07%)</title><rect x="671.3" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.07%)</title><rect x="671.3" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (21 samples, 0.07%)</title><rect x="671.3" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (21 samples, 0.07%)</title><rect x="671.3" y="627.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.07%)</title><rect x="671.3" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.02%)</title><rect x="671.3" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.02%)</title><rect x="671.3" y="579.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="674.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.04%)</title><rect x="671.6" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.04%)</title><rect x="671.6" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="674.6" y="590.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="671.6" y="563.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="674.6" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.04%)</title><rect x="672.1" y="723.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="675.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.03%)</title><rect x="672.6" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="675.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,304 samples, 10.57%)</title><rect x="673.0" y="899.0" width="124.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.0" y="910.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,304 samples, 10.57%)</title><rect x="673.0" y="883.0" width="124.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.0" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,304 samples, 10.57%)</title><rect x="673.0" y="867.0" width="124.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.0" y="878.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,304 samples, 10.57%)</title><rect x="673.0" y="851.0" width="124.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.0" y="862.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,304 samples, 10.57%)</title><rect x="673.0" y="835.0" width="124.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.0" y="846.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (3,304 samples, 10.57%)</title><rect x="673.0" y="819.0" width="124.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.0" y="830.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (276 samples, 0.88%)</title><rect x="673.0" y="803.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$188/1091663911.accept (276 samples, 0.88%)</title><rect x="673.0" y="787.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (276 samples, 0.88%)</title><rect x="673.0" y="771.0" width="10.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.0" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (276 samples, 0.88%)</title><rect x="673.0" y="755.0" width="10.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.0" y="766.0"></text>
</g>
<g>
<title>java.lang.Object[] (276 samples, 0.88%)</title><rect x="673.0" y="739.0" width="10.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="676.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,028 samples, 9.68%)</title><rect x="683.4" y="803.0" width="114.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.4" y="814.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$184/687509125.apply (3,028 samples, 9.68%)</title><rect x="683.4" y="787.0" width="114.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.4" y="798.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (3,028 samples, 9.68%)</title><rect x="683.4" y="771.0" width="114.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.4" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.valueOf (498 samples, 1.59%)</title><rect x="683.4" y="755.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.4" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (498 samples, 1.59%)</title><rect x="683.4" y="739.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.4" y="750.0"></text>
</g>
<g>
<title>byte[] (264 samples, 0.84%)</title><rect x="683.4" y="723.0" width="9.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="686.4" y="734.0"></text>
</g>
<g>
<title>java.lang.String (234 samples, 0.75%)</title><rect x="693.3" y="723.0" width="8.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="696.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (139 samples, 0.44%)</title><rect x="702.2" y="755.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.44%)</title><rect x="702.2" y="739.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.get$Lambda (139 samples, 0.44%)</title><rect x="702.2" y="723.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.2" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.Util$$Lambda$491 (139 samples, 0.44%)</title><rect x="702.2" y="707.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.2" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,179 samples, 3.77%)</title><rect x="707.4" y="755.0" width="44.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.4" y="766.0">java..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,179 samples, 3.77%)</title><rect x="707.4" y="739.0" width="44.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.4" y="750.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (1,179 samples, 3.77%)</title><rect x="707.4" y="723.0" width="44.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.4" y="734.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (1,179 samples, 3.77%)</title><rect x="707.4" y="707.0" width="44.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.4" y="718.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,179 samples, 3.77%)</title><rect x="707.4" y="691.0" width="44.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.4" y="702.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,179 samples, 3.77%)</title><rect x="707.4" y="675.0" width="44.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.4" y="686.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (1,179 samples, 3.77%)</title><rect x="707.4" y="659.0" width="44.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.4" y="670.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,179 samples, 3.77%)</title><rect x="707.4" y="643.0" width="44.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.4" y="654.0">java..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (448 samples, 1.43%)</title><rect x="707.4" y="627.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (448 samples, 1.43%)</title><rect x="707.4" y="611.0" width="16.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="710.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (731 samples, 2.34%)</title><rect x="724.3" y="627.0" width="27.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.3" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (731 samples, 2.34%)</title><rect x="724.3" y="611.0" width="27.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.3" y="622.0">j..</text>
</g>
<g>
<title>byte[] (731 samples, 2.34%)</title><rect x="724.3" y="595.0" width="27.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="727.3" y="606.0">b..</text>
</g>
<g>
<title>one.nio.http.Response (295 samples, 0.94%)</title><rect x="751.9" y="755.0" width="11.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="754.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (917 samples, 2.93%)</title><rect x="763.1" y="755.0" width="34.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="766.1" y="766.0">on..</text>
</g>
<g>
<title>byte[] (450 samples, 1.44%)</title><rect x="763.1" y="739.0" width="16.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="766.1" y="750.0"></text>
</g>
<g>
<title>java.lang.String[] (252 samples, 0.81%)</title><rect x="780.0" y="739.0" width="9.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="783.0" y="750.0"></text>
</g>
<g>
<title>java.lang.String (215 samples, 0.69%)</title><rect x="789.5" y="739.0" width="8.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="792.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (437 samples, 1.40%)</title><rect x="797.7" y="899.0" width="16.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="797.7" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="797.7" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$355/234934899.get$Lambda (10 samples, 0.03%)</title><rect x="797.7" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.7" y="862.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$355 (10 samples, 0.03%)</title><rect x="797.7" y="835.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="800.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (11 samples, 0.04%)</title><rect x="798.3" y="883.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="798.3" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/1808560965.get$Lambda (11 samples, 0.04%)</title><rect x="798.3" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.3" y="862.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$356 (11 samples, 0.04%)</title><rect x="798.3" y="835.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="801.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (89 samples, 0.28%)</title><rect x="798.7" y="883.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/746362896.accept (77 samples, 0.25%)</title><rect x="798.7" y="867.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (77 samples, 0.25%)</title><rect x="798.7" y="851.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (77 samples, 0.25%)</title><rect x="798.7" y="835.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (77 samples, 0.25%)</title><rect x="798.7" y="819.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (77 samples, 0.25%)</title><rect x="798.7" y="803.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (77 samples, 0.25%)</title><rect x="798.7" y="787.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (77 samples, 0.25%)</title><rect x="798.7" y="771.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (77 samples, 0.25%)</title><rect x="798.7" y="755.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (77 samples, 0.25%)</title><rect x="798.7" y="739.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (77 samples, 0.25%)</title><rect x="798.7" y="723.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (77 samples, 0.25%)</title><rect x="798.7" y="707.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="801.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (77 samples, 0.25%)</title><rect x="798.7" y="691.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (23 samples, 0.07%)</title><rect x="798.7" y="675.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (23 samples, 0.07%)</title><rect x="798.7" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (23 samples, 0.07%)</title><rect x="798.7" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (8 samples, 0.03%)</title><rect x="798.7" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.03%)</title><rect x="798.7" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.03%)</title><rect x="798.7" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.03%)</title><rect x="798.7" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.03%)</title><rect x="798.7" y="563.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="801.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.05%)</title><rect x="799.0" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.05%)</title><rect x="799.0" y="611.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.05%)</title><rect x="799.0" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.05%)</title><rect x="799.0" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (15 samples, 0.05%)</title><rect x="799.0" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (15 samples, 0.05%)</title><rect x="799.0" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (15 samples, 0.05%)</title><rect x="799.0" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (15 samples, 0.05%)</title><rect x="799.0" y="515.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="802.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (50 samples, 0.16%)</title><rect x="799.7" y="675.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (30 samples, 0.10%)</title><rect x="799.7" y="659.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.05%)</title><rect x="799.7" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.7" y="654.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.05%)</title><rect x="799.7" y="627.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="802.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (13 samples, 0.04%)</title><rect x="800.4" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.4" y="654.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.04%)</title><rect x="800.4" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.4" y="638.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.04%)</title><rect x="800.4" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="803.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (20 samples, 0.06%)</title><rect x="800.9" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="803.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$227/1265580574.get (20 samples, 0.06%)</title><rect x="800.9" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (20 samples, 0.06%)</title><rect x="800.9" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.9" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.06%)</title><rect x="800.9" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.06%)</title><rect x="800.9" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="803.9" y="606.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.06%)</title><rect x="800.9" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="803.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/1215200694.accept (12 samples, 0.04%)</title><rect x="801.6" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.04%)</title><rect x="801.6" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/1808560965.run (12 samples, 0.04%)</title><rect x="801.6" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.04%)</title><rect x="801.6" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.04%)</title><rect x="801.6" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.04%)</title><rect x="801.6" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.04%)</title><rect x="801.6" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.6" y="782.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12 samples, 0.04%)</title><rect x="801.6" y="755.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="804.6" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (53 samples, 0.17%)</title><rect x="802.1" y="883.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.1" y="894.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (53 samples, 0.17%)</title><rect x="802.1" y="867.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="805.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (21 samples, 0.07%)</title><rect x="804.1" y="883.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.04%)</title><rect x="804.1" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (12 samples, 0.04%)</title><rect x="804.1" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.1" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (12 samples, 0.04%)</title><rect x="804.1" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.1" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.04%)</title><rect x="804.1" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.1" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (12 samples, 0.04%)</title><rect x="804.1" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (12 samples, 0.04%)</title><rect x="804.1" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.1" y="798.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (12 samples, 0.04%)</title><rect x="804.1" y="771.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="807.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (9 samples, 0.03%)</title><rect x="804.5" y="867.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.5" y="878.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (9 samples, 0.03%)</title><rect x="804.5" y="851.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="807.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (72 samples, 0.23%)</title><rect x="804.9" y="883.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1656106719.run (34 samples, 0.11%)</title><rect x="804.9" y="867.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (34 samples, 0.11%)</title><rect x="804.9" y="851.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.11%)</title><rect x="804.9" y="835.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.11%)</title><rect x="804.9" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (34 samples, 0.11%)</title><rect x="804.9" y="803.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (34 samples, 0.11%)</title><rect x="804.9" y="787.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (34 samples, 0.11%)</title><rect x="804.9" y="771.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (34 samples, 0.11%)</title><rect x="804.9" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (34 samples, 0.11%)</title><rect x="804.9" y="739.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (34 samples, 0.11%)</title><rect x="804.9" y="723.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (23 samples, 0.07%)</title><rect x="804.9" y="707.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (23 samples, 0.07%)</title><rect x="804.9" y="691.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (23 samples, 0.07%)</title><rect x="804.9" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/932285561.linkToTargetMethod (14 samples, 0.04%)</title><rect x="804.9" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574568002.invoke (14 samples, 0.04%)</title><rect x="804.9" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="804.9" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.04%)</title><rect x="804.9" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.04%)</title><rect x="804.9" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.9" y="606.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="804.9" y="579.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="807.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.03%)</title><rect x="805.4" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="805.4" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="805.4" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364/258005369.get$Lambda (9 samples, 0.03%)</title><rect x="805.4" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364 (9 samples, 0.03%)</title><rect x="805.4" y="595.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="808.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (11 samples, 0.04%)</title><rect x="805.7" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.04%)</title><rect x="805.7" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.04%)</title><rect x="805.7" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.04%)</title><rect x="805.7" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.04%)</title><rect x="805.7" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (11 samples, 0.04%)</title><rect x="805.7" y="627.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (11 samples, 0.04%)</title><rect x="805.7" y="611.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (11 samples, 0.04%)</title><rect x="805.7" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (11 samples, 0.04%)</title><rect x="805.7" y="579.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="808.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1005357483.run (38 samples, 0.12%)</title><rect x="806.2" y="867.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (38 samples, 0.12%)</title><rect x="806.2" y="851.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="806.2" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="806.2" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.get$Lambda (12 samples, 0.04%)</title><rect x="806.2" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$372 (12 samples, 0.04%)</title><rect x="806.2" y="787.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="809.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.08%)</title><rect x="806.6" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.08%)</title><rect x="806.6" y="819.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (26 samples, 0.08%)</title><rect x="806.6" y="803.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (26 samples, 0.08%)</title><rect x="806.6" y="787.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (26 samples, 0.08%)</title><rect x="806.6" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.6" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (26 samples, 0.08%)</title><rect x="806.6" y="755.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="809.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (93 samples, 0.30%)</title><rect x="807.6" y="883.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.6" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.06%)</title><rect x="807.6" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.6" y="878.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (19 samples, 0.06%)</title><rect x="807.6" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.6" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.06%)</title><rect x="807.6" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.6" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.06%)</title><rect x="807.6" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.6" y="830.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.06%)</title><rect x="807.6" y="803.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="810.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (74 samples, 0.24%)</title><rect x="808.3" y="867.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="811.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="808.3" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="808.3" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$492/1690108546.get$Lambda (13 samples, 0.04%)</title><rect x="808.3" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.3" y="830.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$492 (13 samples, 0.04%)</title><rect x="808.3" y="803.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="811.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (61 samples, 0.20%)</title><rect x="808.8" y="851.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.8" y="862.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.09%)</title><rect x="808.8" y="835.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="811.8" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (34 samples, 0.11%)</title><rect x="809.8" y="835.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.8" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (34 samples, 0.11%)</title><rect x="809.8" y="819.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.8" y="830.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (34 samples, 0.11%)</title><rect x="809.8" y="803.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="812.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (57 samples, 0.18%)</title><rect x="811.1" y="883.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.1" y="894.0"></text>
</g>
<g>
<title>java/util/Collection.stream (26 samples, 0.08%)</title><rect x="811.2" y="867.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (10 samples, 0.03%)</title><rect x="811.2" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.2" y="862.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (10 samples, 0.03%)</title><rect x="811.2" y="835.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="814.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.05%)</title><rect x="811.5" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.5" y="862.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.05%)</title><rect x="811.5" y="835.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="814.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (29 samples, 0.09%)</title><rect x="812.2" y="867.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.2" y="878.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (29 samples, 0.09%)</title><rect x="812.2" y="851.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="815.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (14 samples, 0.04%)</title><rect x="813.2" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.04%)</title><rect x="813.2" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (14 samples, 0.04%)</title><rect x="813.2" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (14 samples, 0.04%)</title><rect x="813.2" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="816.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (11 samples, 0.04%)</title><rect x="813.4" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (11 samples, 0.04%)</title><rect x="813.4" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (11 samples, 0.04%)</title><rect x="813.4" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (11 samples, 0.04%)</title><rect x="813.4" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (11 samples, 0.04%)</title><rect x="813.4" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.4" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (11 samples, 0.04%)</title><rect x="813.4" y="739.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="816.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (9 samples, 0.03%)</title><rect x="813.8" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="816.8" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (9 samples, 0.03%)</title><rect x="813.8" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="816.8" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (9 samples, 0.03%)</title><rect x="813.8" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.8" y="862.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (9 samples, 0.03%)</title><rect x="813.8" y="835.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="816.8" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,959 samples, 31.85%)</title><rect x="814.2" y="899.0" width="375.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.2" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (441 samples, 1.41%)</title><rect x="814.2" y="883.0" width="16.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.2" y="894.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (441 samples, 1.41%)</title><rect x="814.2" y="867.0" width="16.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="817.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9,518 samples, 30.44%)</title><rect x="830.8" y="883.0" width="359.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.8" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,518 samples, 30.44%)</title><rect x="830.8" y="867.0" width="359.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.8" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,518 samples, 30.44%)</title><rect x="830.8" y="851.0" width="359.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.8" y="862.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,289 samples, 4.12%)</title><rect x="830.8" y="835.0" width="48.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.8" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,289 samples, 4.12%)</title><rect x="830.8" y="819.0" width="48.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.8" y="830.0">one/..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (780 samples, 2.49%)</title><rect x="830.8" y="803.0" width="29.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.8" y="814.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (351 samples, 1.12%)</title><rect x="830.8" y="787.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (351 samples, 1.12%)</title><rect x="830.8" y="771.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (351 samples, 1.12%)</title><rect x="830.8" y="755.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.8" y="766.0"></text>
</g>
<g>
<title>java.lang.String (196 samples, 0.63%)</title><rect x="830.8" y="739.0" width="7.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="833.8" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (155 samples, 0.50%)</title><rect x="838.2" y="739.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.2" y="750.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.50%)</title><rect x="838.2" y="723.0" width="5.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="841.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (429 samples, 1.37%)</title><rect x="844.0" y="787.0" width="16.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (247 samples, 0.79%)</title><rect x="844.0" y="771.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (247 samples, 0.79%)</title><rect x="844.0" y="755.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/1479334731.get$Lambda (247 samples, 0.79%)</title><rect x="844.0" y="739.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.0" y="750.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$121 (247 samples, 0.79%)</title><rect x="844.0" y="723.0" width="9.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="847.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (182 samples, 0.58%)</title><rect x="853.4" y="771.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (182 samples, 0.58%)</title><rect x="853.4" y="755.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.4" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (181 samples, 0.58%)</title><rect x="853.4" y="739.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="856.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (509 samples, 1.63%)</title><rect x="860.2" y="803.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (509 samples, 1.63%)</title><rect x="860.2" y="787.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (509 samples, 1.63%)</title><rect x="860.2" y="771.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.2" y="782.0"></text>
</g>
<g>
<title>java.lang.String (221 samples, 0.71%)</title><rect x="860.2" y="755.0" width="8.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="863.2" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (288 samples, 0.92%)</title><rect x="868.6" y="755.0" width="10.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.6" y="766.0"></text>
</g>
<g>
<title>byte[] (288 samples, 0.92%)</title><rect x="868.6" y="739.0" width="10.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="871.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,085 samples, 6.67%)</title><rect x="879.4" y="835.0" width="78.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.4" y="846.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (335 samples, 1.07%)</title><rect x="879.4" y="819.0" width="12.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="882.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (661 samples, 2.11%)</title><rect x="892.1" y="819.0" width="24.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.1" y="830.0">o..</text>
</g>
<g>
<title>java.lang.String[] (638 samples, 2.04%)</title><rect x="892.1" y="803.0" width="24.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="895.1" y="814.0">j..</text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.07%)</title><rect x="916.2" y="803.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,089 samples, 3.48%)</title><rect x="917.0" y="819.0" width="41.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.0" y="830.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,089 samples, 3.48%)</title><rect x="917.0" y="803.0" width="41.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.0" y="814.0">one..</text>
</g>
<g>
<title>char[] (574 samples, 1.84%)</title><rect x="917.0" y="787.0" width="21.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="920.0" y="798.0">c..</text>
</g>
<g>
<title>char[] (42 samples, 0.13%)</title><rect x="938.7" y="787.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="941.7" y="798.0"></text>
</g>
<g>
<title>java.lang.String (153 samples, 0.49%)</title><rect x="940.3" y="787.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="943.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (320 samples, 1.02%)</title><rect x="946.1" y="787.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (320 samples, 1.02%)</title><rect x="946.1" y="771.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (320 samples, 1.02%)</title><rect x="946.1" y="755.0" width="12.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.1" y="766.0"></text>
</g>
<g>
<title>byte[] (320 samples, 1.02%)</title><rect x="946.1" y="739.0" width="12.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="949.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (188 samples, 0.60%)</title><rect x="958.1" y="835.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="961.1" y="846.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.60%)</title><rect x="958.1" y="819.0" width="7.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="961.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (367 samples, 1.17%)</title><rect x="965.2" y="835.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (367 samples, 1.17%)</title><rect x="965.2" y="819.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (367 samples, 1.17%)</title><rect x="965.2" y="803.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.2" y="814.0"></text>
</g>
<g>
<title>java.lang.String (176 samples, 0.56%)</title><rect x="965.2" y="787.0" width="6.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="968.2" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (191 samples, 0.61%)</title><rect x="971.9" y="787.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.9" y="798.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.61%)</title><rect x="971.9" y="771.0" width="7.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="974.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,589 samples, 17.88%)</title><rect x="979.1" y="835.0" width="210.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="982.1" y="846.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,589 samples, 17.88%)</title><rect x="979.1" y="819.0" width="210.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.1" y="830.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (2,708 samples, 8.66%)</title><rect x="979.1" y="803.0" width="102.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="982.1" y="814.0">char[]</text>
</g>
<g>
<title>char[] (251 samples, 0.80%)</title><rect x="1081.3" y="803.0" width="9.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1084.3" y="814.0"></text>
</g>
<g>
<title>java.lang.String (806 samples, 2.58%)</title><rect x="1090.7" y="803.0" width="30.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1093.7" y="814.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,824 samples, 5.83%)</title><rect x="1121.2" y="803.0" width="68.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1124.2" y="814.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,824 samples, 5.83%)</title><rect x="1121.2" y="787.0" width="68.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.2" y="798.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,824 samples, 5.83%)</title><rect x="1121.2" y="771.0" width="68.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.2" y="782.0">java/la..</text>
</g>
<g>
<title>byte[] (1,821 samples, 5.82%)</title><rect x="1121.2" y="755.0" width="68.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1124.2" y="766.0">byte[]</text>
</g>
</g>
</svg>
