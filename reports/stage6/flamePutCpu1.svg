<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1253"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1253"> </text>
<g id="frames">
<g>
<title>all (2,231 samples, 100.00%)</title><rect x="10.0" y="1219.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="1230.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.54%)</title><rect x="10.0" y="1203.0" width="6.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.54%)</title><rect x="10.0" y="1187.0" width="6.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (12 samples, 0.54%)</title><rect x="10.0" y="1171.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (9 samples, 0.40%)</title><rect x="11.6" y="1155.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.6" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (3 samples, 0.13%)</title><rect x="12.1" y="1139.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.1" y="1150.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.18%)</title><rect x="13.7" y="1139.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="16.7" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="15.8" y="1139.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="18.8" y="1150.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.04%)</title><rect x="16.3" y="1203.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="19.3" y="1214.0"></text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.40%)</title><rect x="16.9" y="1203.0" width="4.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="19.9" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.18%)</title><rect x="16.9" y="1187.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="19.9" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.18%)</title><rect x="16.9" y="1171.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.9" y="1182.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="16.9" y="1155.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.9" y="1166.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="17.4" y="1155.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.4" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="17.4" y="1139.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.4" y="1150.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.09%)</title><rect x="17.9" y="1155.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="20.9" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.04%)</title><rect x="17.9" y="1139.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="20.9" y="1150.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="18.5" y="1139.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="21.5" y="1150.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="18.5" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="21.5" y="1134.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.22%)</title><rect x="19.0" y="1187.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="22.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.6" y="1203.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="24.6" y="1214.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="21.6" y="1187.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="24.6" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="21.6" y="1171.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.6" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="21.6" y="1155.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.6" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="21.6" y="1139.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.6" y="1150.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="21.6" y="1123.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.6" y="1134.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="21.6" y="1107.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.6" y="1118.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="21.6" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.6" y="1102.0"></text>
</g>
<g>
<title>[unknown_Java] (51 samples, 2.29%)</title><rect x="22.2" y="1203.0" width="26.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="25.2" y="1214.0">[..</text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="22.2" y="1187.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.2" y="1198.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (1 samples, 0.04%)</title><rect x="22.7" y="1187.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.7" y="1198.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.04%)</title><rect x="23.2" y="1187.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="26.2" y="1198.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (13 samples, 0.58%)</title><rect x="23.8" y="1187.0" width="6.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="26.8" y="1198.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (13 samples, 0.58%)</title><rect x="23.8" y="1171.0" width="6.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="26.8" y="1182.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 0.58%)</title><rect x="23.8" y="1155.0" width="6.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.8" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 0.58%)</title><rect x="23.8" y="1139.0" width="6.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.8" y="1150.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 0.58%)</title><rect x="23.8" y="1123.0" width="6.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.8" y="1134.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (13 samples, 0.58%)</title><rect x="23.8" y="1107.0" width="6.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.8" y="1118.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (13 samples, 0.58%)</title><rect x="23.8" y="1091.0" width="6.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.8" y="1102.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (13 samples, 0.58%)</title><rect x="23.8" y="1075.0" width="6.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.8" y="1086.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 0.58%)</title><rect x="23.8" y="1059.0" width="6.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="26.8" y="1070.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 0.58%)</title><rect x="23.8" y="1043.0" width="6.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="26.8" y="1054.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 0.58%)</title><rect x="23.8" y="1027.0" width="6.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="26.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 0.58%)</title><rect x="23.8" y="1011.0" width="6.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.8" y="1022.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (13 samples, 0.58%)</title><rect x="23.8" y="995.0" width="6.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.8" y="1006.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (13 samples, 0.58%)</title><rect x="23.8" y="979.0" width="6.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="26.8" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (13 samples, 0.58%)</title><rect x="23.8" y="963.0" width="6.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="26.8" y="974.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (11 samples, 0.49%)</title><rect x="23.8" y="947.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="26.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.49%)</title><rect x="23.8" y="931.0" width="5.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="26.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (11 samples, 0.49%)</title><rect x="23.8" y="915.0" width="5.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.8" y="926.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.18%)</title><rect x="23.8" y="899.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="26.8" y="910.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 0.18%)</title><rect x="23.8" y="883.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="26.8" y="894.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.18%)</title><rect x="23.8" y="867.0" width="2.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="26.8" y="878.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.09%)</title><rect x="23.8" y="851.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.8" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="24.8" y="851.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="27.8" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="24.8" y="835.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.8" y="846.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.04%)</title><rect x="25.3" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.3" y="846.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (7 samples, 0.31%)</title><rect x="25.9" y="899.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="28.9" y="910.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (7 samples, 0.31%)</title><rect x="25.9" y="883.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="28.9" y="894.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 0.31%)</title><rect x="25.9" y="867.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="28.9" y="878.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.09%)</title><rect x="25.9" y="851.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="28.9" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.22%)</title><rect x="26.9" y="851.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.9" y="862.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.09%)</title><rect x="28.5" y="835.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="31.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.09%)</title><rect x="29.6" y="947.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="32.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.09%)</title><rect x="29.6" y="931.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="32.6" y="942.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.09%)</title><rect x="29.6" y="915.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="32.6" y="926.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.09%)</title><rect x="29.6" y="899.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="32.6" y="910.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.09%)</title><rect x="29.6" y="883.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="32.6" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="29.6" y="867.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="32.6" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="30.6" y="1187.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="33.6" y="1198.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.04%)</title><rect x="30.6" y="1171.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.6" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (2 samples, 0.09%)</title><rect x="31.2" y="1187.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="34.2" y="1198.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="31.2" y="1171.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.2" y="1182.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="31.2" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="34.2" y="1166.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.04%)</title><rect x="31.7" y="1171.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="34.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.90%)</title><rect x="32.2" y="1187.0" width="10.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="35.2" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (20 samples, 0.90%)</title><rect x="32.2" y="1171.0" width="10.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="35.2" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (17 samples, 0.76%)</title><rect x="33.8" y="1155.0" width="9.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="36.8" y="1166.0"></text>
</g>
<g>
<title>[vdso] (17 samples, 0.76%)</title><rect x="33.8" y="1139.0" width="9.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="36.8" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.49%)</title><rect x="42.8" y="1187.0" width="5.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="45.8" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.45%)</title><rect x="43.3" y="1171.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="46.3" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.45%)</title><rect x="43.3" y="1155.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.3" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.40%)</title><rect x="43.3" y="1139.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="46.3" y="1150.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.40%)</title><rect x="43.3" y="1123.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.3" y="1134.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.36%)</title><rect x="43.9" y="1107.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.9" y="1118.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="43.9" y="1091.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.9" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.31%)</title><rect x="44.4" y="1091.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.4" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.31%)</title><rect x="44.4" y="1075.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="47.4" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.31%)</title><rect x="44.4" y="1059.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="47.4" y="1070.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="48.1" y="1139.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.1" y="1150.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="48.1" y="1123.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="51.1" y="1134.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.04%)</title><rect x="48.6" y="1187.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="51.6" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.27%)</title><rect x="49.1" y="1203.0" width="3.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="52.1" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.22%)</title><rect x="49.7" y="1187.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.7" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.22%)</title><rect x="49.7" y="1171.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="52.7" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.18%)</title><rect x="50.2" y="1155.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.2" y="1166.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.04%)</title><rect x="50.2" y="1139.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.2" y="1150.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.13%)</title><rect x="50.7" y="1139.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.7" y="1150.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.13%)</title><rect x="50.7" y="1123.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.7" y="1134.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="50.7" y="1107.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.7" y="1118.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.09%)</title><rect x="51.3" y="1107.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.3" y="1118.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.09%)</title><rect x="51.3" y="1091.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="54.3" y="1102.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="51.3" y="1075.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,571 samples, 70.42%)</title><rect x="52.3" y="1203.0" width="830.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.3" y="1214.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,571 samples, 70.42%)</title><rect x="52.3" y="1187.0" width="830.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.3" y="1198.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,570 samples, 70.37%)</title><rect x="52.3" y="1171.0" width="830.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="55.3" y="1182.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="58.1" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.1" y="1166.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="58.7" y="1155.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="61.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.40%)</title><rect x="59.2" y="1155.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (9 samples, 0.40%)</title><rect x="59.2" y="1139.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.2" y="1150.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.18%)</title><rect x="59.2" y="1123.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="62.2" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="59.7" y="1107.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.7" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="60.2" y="1107.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="63.2" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="60.8" y="1107.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="63.8" y="1118.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.09%)</title><rect x="61.3" y="1123.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="64.3" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.04%)</title><rect x="62.4" y="1123.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="65.4" y="1134.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.09%)</title><rect x="62.9" y="1123.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="65.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (169 samples, 7.58%)</title><rect x="63.9" y="1155.0" width="89.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.9" y="1166.0">java/util/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="64.5" y="1139.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="67.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (166 samples, 7.44%)</title><rect x="65.0" y="1139.0" width="87.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.0" y="1150.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (165 samples, 7.40%)</title><rect x="65.5" y="1123.0" width="87.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.5" y="1134.0">java/util/..</text>
</g>
<g>
<title>itable stub (3 samples, 0.13%)</title><rect x="65.5" y="1107.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="68.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (162 samples, 7.26%)</title><rect x="67.1" y="1107.0" width="85.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.1" y="1118.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (162 samples, 7.26%)</title><rect x="67.1" y="1091.0" width="85.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.1" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (162 samples, 7.26%)</title><rect x="67.1" y="1075.0" width="85.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.1" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="67.1" y="1059.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (140 samples, 6.28%)</title><rect x="68.2" y="1059.0" width="74.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.2" y="1070.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (140 samples, 6.28%)</title><rect x="68.2" y="1043.0" width="74.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.2" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkPermissions (1 samples, 0.04%)</title><rect x="68.2" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (139 samples, 6.23%)</title><rect x="68.7" y="1027.0" width="73.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="69.2" y="1011.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="69.2" y="995.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.get$Lambda (2 samples, 0.09%)</title><rect x="69.2" y="979.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.09%)</title><rect x="69.2" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (70 samples, 3.14%)</title><rect x="70.3" y="1011.0" width="37.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.3" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (70 samples, 3.14%)</title><rect x="70.3" y="995.0" width="37.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.3" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (70 samples, 3.14%)</title><rect x="70.3" y="979.0" width="37.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.3" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="70.3" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (1 samples, 0.04%)</title><rect x="70.3" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (69 samples, 3.09%)</title><rect x="70.8" y="963.0" width="36.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.8" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (69 samples, 3.09%)</title><rect x="70.8" y="947.0" width="36.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.8" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (69 samples, 3.09%)</title><rect x="70.8" y="931.0" width="36.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.8" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (69 samples, 3.09%)</title><rect x="70.8" y="915.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.8" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (69 samples, 3.09%)</title><rect x="70.8" y="899.0" width="36.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.8" y="910.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3 samples, 0.13%)</title><rect x="70.8" y="883.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3 samples, 0.13%)</title><rect x="70.8" y="867.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.13%)</title><rect x="70.8" y="851.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (3 samples, 0.13%)</title><rect x="70.8" y="835.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.13%)</title><rect x="70.8" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.13%)</title><rect x="70.8" y="803.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (3 samples, 0.13%)</title><rect x="70.8" y="787.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.13%)</title><rect x="70.8" y="771.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.13%)</title><rect x="70.8" y="755.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (3 samples, 0.13%)</title><rect x="70.8" y="739.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3 samples, 0.13%)</title><rect x="70.8" y="723.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3 samples, 0.13%)</title><rect x="70.8" y="707.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$386/1507540812.accept (3 samples, 0.13%)</title><rect x="70.8" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (3 samples, 0.13%)</title><rect x="70.8" y="675.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.13%)</title><rect x="70.8" y="659.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3 samples, 0.13%)</title><rect x="70.8" y="643.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (3 samples, 0.13%)</title><rect x="70.8" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.13%)</title><rect x="70.8" y="611.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.13%)</title><rect x="70.8" y="595.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.13%)</title><rect x="70.8" y="579.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.13%)</title><rect x="70.8" y="563.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.13%)</title><rect x="70.8" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.09%)</title><rect x="70.8" y="531.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.09%)</title><rect x="70.8" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="73.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.09%)</title><rect x="70.8" y="499.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.09%)</title><rect x="70.8" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.09%)</title><rect x="70.8" y="467.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.09%)</title><rect x="70.8" y="451.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.09%)</title><rect x="70.8" y="435.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.09%)</title><rect x="70.8" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.04%)</title><rect x="71.4" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.04%)</title><rect x="71.4" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.04%)</title><rect x="71.4" y="371.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.04%)</title><rect x="71.4" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.04%)</title><rect x="71.9" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.04%)</title><rect x="71.9" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="71.9" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="71.9" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="71.9" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="71.9" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="71.9" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="71.9" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.04%)</title><rect x="71.9" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.04%)</title><rect x="71.9" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1 samples, 0.04%)</title><rect x="71.9" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (66 samples, 2.96%)</title><rect x="72.4" y="883.0" width="34.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.4" y="894.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (58 samples, 2.60%)</title><rect x="72.4" y="867.0" width="30.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.4" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (58 samples, 2.60%)</title><rect x="72.4" y="851.0" width="30.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.4" y="862.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (57 samples, 2.55%)</title><rect x="72.4" y="835.0" width="30.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.4" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (57 samples, 2.55%)</title><rect x="72.4" y="819.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.4" y="830.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="72.4" y="803.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="72.4" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.04%)</title><rect x="72.4" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="72.4" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.40%)</title><rect x="72.9" y="803.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.40%)</title><rect x="72.9" y="787.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.40%)</title><rect x="72.9" y="771.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.40%)</title><rect x="72.9" y="755.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.13%)</title><rect x="72.9" y="739.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.13%)</title><rect x="72.9" y="723.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.13%)</title><rect x="72.9" y="707.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.13%)</title><rect x="72.9" y="691.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.13%)</title><rect x="72.9" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.9" y="686.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="72.9" y="659.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="75.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="73.5" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="73.5" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="74.0" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.27%)</title><rect x="74.5" y="739.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.27%)</title><rect x="74.5" y="723.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.04%)</title><rect x="74.5" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.04%)</title><rect x="74.5" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.04%)</title><rect x="74.5" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.22%)</title><rect x="75.1" y="707.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.18%)</title><rect x="75.6" y="691.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.13%)</title><rect x="76.1" y="675.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.13%)</title><rect x="76.1" y="659.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.13%)</title><rect x="76.1" y="643.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.13%)</title><rect x="76.1" y="627.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.13%)</title><rect x="76.1" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.1" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (3 samples, 0.13%)</title><rect x="76.1" y="595.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.13%)</title><rect x="76.1" y="579.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.13%)</title><rect x="76.1" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.1" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.13%)</title><rect x="76.1" y="547.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (3 samples, 0.13%)</title><rect x="76.1" y="531.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.13%)</title><rect x="76.1" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.13%)</title><rect x="76.1" y="499.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="79.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.13%)</title><rect x="76.1" y="483.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="79.1" y="494.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.13%)</title><rect x="76.1" y="467.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="79.1" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="76.1" y="451.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.1" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="76.1" y="435.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.1" y="446.0"></text>
</g>
<g>
<title>__x64_sys_writev (2 samples, 0.09%)</title><rect x="76.6" y="419.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.6" y="430.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.09%)</title><rect x="76.6" y="403.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.6" y="414.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="76.6" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.6" y="398.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="76.6" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.6" y="382.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="76.6" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.6" y="366.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.04%)</title><rect x="77.2" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="80.2" y="398.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.04%)</title><rect x="77.2" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.2" y="382.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.04%)</title><rect x="77.2" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="80.2" y="366.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.04%)</title><rect x="77.2" y="339.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.2" y="350.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.04%)</title><rect x="77.2" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.04%)</title><rect x="77.2" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.04%)</title><rect x="77.2" y="291.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.2" y="302.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="77.2" y="275.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.2" y="286.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="77.2" y="259.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="80.2" y="270.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="77.2" y="243.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.2" y="254.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="77.2" y="227.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="80.2" y="238.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="77.2" y="211.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="80.2" y="222.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.04%)</title><rect x="77.2" y="195.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="80.2" y="206.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.04%)</title><rect x="77.2" y="179.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.2" y="190.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="77.2" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.2" y="174.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="77.2" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="80.2" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="77.2" y="131.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="80.2" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="77.2" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="80.2" y="126.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="77.2" y="99.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="80.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (10 samples, 0.45%)</title><rect x="77.7" y="803.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (10 samples, 0.45%)</title><rect x="77.7" y="787.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.04%)</title><rect x="77.7" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.04%)</title><rect x="77.7" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="77.7" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.04%)</title><rect x="77.7" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.04%)</title><rect x="77.7" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.7" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="77.7" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="80.7" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="77.7" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="80.7" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="77.7" y="659.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="80.7" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.04%)</title><rect x="77.7" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="80.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9 samples, 0.40%)</title><rect x="78.2" y="771.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9 samples, 0.40%)</title><rect x="78.2" y="755.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (9 samples, 0.40%)</title><rect x="78.2" y="739.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.40%)</title><rect x="78.2" y="723.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.40%)</title><rect x="78.2" y="707.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="78.2" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="81.2" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="78.2" y="675.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="81.2" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="78.2" y="659.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="81.2" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.04%)</title><rect x="78.2" y="643.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="81.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.36%)</title><rect x="78.8" y="691.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.36%)</title><rect x="78.8" y="675.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.36%)</title><rect x="78.8" y="659.0" width="4.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="81.8" y="670.0"></text>
</g>
<g>
<title>__GI_write (8 samples, 0.36%)</title><rect x="78.8" y="643.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.31%)</title><rect x="79.3" y="627.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="82.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.31%)</title><rect x="79.3" y="611.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="82.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_write (7 samples, 0.31%)</title><rect x="79.3" y="595.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.3" y="606.0"></text>
</g>
<g>
<title>ksys_write (7 samples, 0.31%)</title><rect x="79.3" y="579.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.3" y="590.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.31%)</title><rect x="79.3" y="563.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.27%)</title><rect x="79.8" y="547.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.8" y="558.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.22%)</title><rect x="80.3" y="531.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.18%)</title><rect x="80.9" y="515.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.9" y="526.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.13%)</title><rect x="81.4" y="499.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.4" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.13%)</title><rect x="81.4" y="483.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="84.4" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.13%)</title><rect x="81.4" y="467.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (37 samples, 1.66%)</title><rect x="83.0" y="803.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="83.5" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.5" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="83.5" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.5" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.04%)</title><rect x="83.5" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.5" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (1 samples, 0.04%)</title><rect x="83.5" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (23 samples, 1.03%)</title><rect x="84.0" y="787.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.09%)</title><rect x="84.0" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.0" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.09%)</title><rect x="84.0" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.0" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.09%)</title><rect x="84.0" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.0" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.09%)</title><rect x="84.0" y="723.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.09%)</title><rect x="84.0" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.09%)</title><rect x="84.0" y="691.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="84.0" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="84.0" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.09%)</title><rect x="84.0" y="643.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (11 samples, 0.49%)</title><rect x="85.1" y="771.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.13%)</title><rect x="85.1" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.1" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.13%)</title><rect x="85.1" y="739.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.1" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.04%)</title><rect x="86.2" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.2" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (1 samples, 0.04%)</title><rect x="86.2" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.2" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="86.2" y="691.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="89.2" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.04%)</title><rect x="86.7" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.7" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.04%)</title><rect x="86.7" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (1 samples, 0.04%)</title><rect x="86.7" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.13%)</title><rect x="87.2" y="755.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.13%)</title><rect x="87.2" y="739.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="87.2" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.09%)</title><rect x="87.7" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="88.3" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.3" y="718.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (1 samples, 0.04%)</title><rect x="88.8" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.8" y="766.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$MapNIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="88.8" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.8" y="750.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (2 samples, 0.09%)</title><rect x="89.3" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.3" y="766.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.test (1 samples, 0.04%)</title><rect x="90.4" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.4" y="766.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.04%)</title><rect x="90.4" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/111156771.test (1 samples, 0.04%)</title><rect x="90.4" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.04%)</title><rect x="90.4" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.4" y="718.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/282821294.test (1 samples, 0.04%)</title><rect x="90.4" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.4" y="702.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.04%)</title><rect x="90.4" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/494317290.test (1 samples, 0.04%)</title><rect x="90.4" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.04%)</title><rect x="90.4" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="90.4" y="627.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="90.4" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="90.4" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (10 samples, 0.45%)</title><rect x="90.9" y="771.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.9" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.45%)</title><rect x="90.9" y="755.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.9" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.45%)</title><rect x="90.9" y="739.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="90.9" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.04%)</title><rect x="90.9" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.40%)</title><rect x="91.5" y="723.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (8 samples, 0.36%)</title><rect x="91.5" y="707.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.5" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.36%)</title><rect x="91.5" y="691.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.09%)</title><rect x="91.5" y="675.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.09%)</title><rect x="92.5" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.09%)</title><rect x="92.5" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.5" y="670.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="93.0" y="643.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="96.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="93.6" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.6" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (1 samples, 0.04%)</title><rect x="93.6" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.6" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.04%)</title><rect x="93.6" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="93.6" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="93.6" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="93.6" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.6" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="93.6" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.6" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.04%)</title><rect x="93.6" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="96.6" y="574.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.04%)</title><rect x="94.1" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.1" y="686.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.04%)</title><rect x="94.1" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.1" y="670.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.04%)</title><rect x="94.1" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.09%)</title><rect x="94.6" y="675.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="95.2" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="95.2" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="95.2" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (1 samples, 0.04%)</title><rect x="95.7" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (1 samples, 0.04%)</title><rect x="95.7" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="95.7" y="675.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.04%)</title><rect x="95.7" y="659.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (1 samples, 0.04%)</title><rect x="95.7" y="643.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="95.7" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="98.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.09%)</title><rect x="96.2" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="96.2" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.09%)</title><rect x="96.2" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (2 samples, 0.09%)</title><rect x="96.2" y="739.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="99.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="96.2" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="96.2" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="96.2" y="691.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (1 samples, 0.04%)</title><rect x="96.7" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="96.7" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="96.7" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="96.7" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.7" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="96.7" y="659.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="99.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.22%)</title><rect x="97.3" y="787.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.22%)</title><rect x="97.3" y="771.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.22%)</title><rect x="97.3" y="755.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5 samples, 0.22%)</title><rect x="97.3" y="739.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (5 samples, 0.22%)</title><rect x="97.3" y="723.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="97.3" y="707.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.04%)</title><rect x="97.3" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="97.8" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.04%)</title><rect x="97.8" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.8" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="98.3" y="691.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="101.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (2 samples, 0.09%)</title><rect x="98.9" y="707.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="98.9" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.09%)</title><rect x="98.9" y="675.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.09%)</title><rect x="98.9" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.09%)</title><rect x="98.9" y="643.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.22%)</title><rect x="99.9" y="787.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="99.9" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.9" y="782.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="99.9" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="102.9" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="99.9" y="739.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="102.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.18%)</title><rect x="100.4" y="771.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.04%)</title><rect x="102.0" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="102.6" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="102.6" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (8 samples, 0.36%)</title><rect x="103.1" y="867.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.27%)</title><rect x="103.1" y="851.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.27%)</title><rect x="103.1" y="835.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.27%)</title><rect x="103.1" y="819.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="106.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.27%)</title><rect x="103.1" y="803.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.27%)</title><rect x="103.1" y="787.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.04%)</title><rect x="103.6" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.13%)</title><rect x="104.1" y="771.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (3 samples, 0.13%)</title><rect x="104.1" y="755.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.13%)</title><rect x="104.1" y="739.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.09%)</title><rect x="104.1" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.09%)</title><rect x="104.1" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.09%)</title><rect x="104.1" y="691.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.09%)</title><rect x="104.1" y="675.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.09%)</title><rect x="104.1" y="659.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (2 samples, 0.09%)</title><rect x="104.1" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.04%)</title><rect x="105.2" y="723.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.04%)</title><rect x="105.2" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.04%)</title><rect x="105.2" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.04%)</title><rect x="105.2" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.04%)</title><rect x="105.2" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1 samples, 0.04%)</title><rect x="105.2" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="105.7" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.09%)</title><rect x="106.3" y="851.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (66 samples, 2.96%)</title><rect x="107.3" y="1011.0" width="34.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.3" y="1022.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.04%)</title><rect x="107.3" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.04%)</title><rect x="107.3" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/1482169443.apply (1 samples, 0.04%)</title><rect x="107.3" y="963.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="107.8" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="107.8" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.04%)</title><rect x="107.8" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$283/953386476.accept (1 samples, 0.04%)</title><rect x="107.8" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.04%)</title><rect x="107.8" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (64 samples, 2.87%)</title><rect x="108.4" y="995.0" width="33.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.4" y="1006.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (62 samples, 2.78%)</title><rect x="108.4" y="979.0" width="32.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.4" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (62 samples, 2.78%)</title><rect x="108.4" y="963.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.4" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (60 samples, 2.69%)</title><rect x="109.4" y="947.0" width="31.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.4" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="109.4" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (1 samples, 0.04%)</title><rect x="109.4" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (59 samples, 2.64%)</title><rect x="110.0" y="931.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.0" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (59 samples, 2.64%)</title><rect x="110.0" y="915.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.0" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (59 samples, 2.64%)</title><rect x="110.0" y="899.0" width="31.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="113.0" y="910.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (32 samples, 1.43%)</title><rect x="110.0" y="883.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (32 samples, 1.43%)</title><rect x="110.0" y="867.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (32 samples, 1.43%)</title><rect x="110.0" y="851.0" width="16.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="110.0" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (31 samples, 1.39%)</title><rect x="110.5" y="835.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (30 samples, 1.34%)</title><rect x="111.0" y="819.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (30 samples, 1.34%)</title><rect x="111.0" y="803.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (30 samples, 1.34%)</title><rect x="111.0" y="787.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (26 samples, 1.17%)</title><rect x="111.0" y="771.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.0" y="782.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.04%)</title><rect x="111.0" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.0" y="766.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.04%)</title><rect x="111.0" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.0" y="750.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (1 samples, 0.04%)</title><rect x="111.0" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.0" y="734.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (1 samples, 0.04%)</title><rect x="111.0" y="707.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="114.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (22 samples, 0.99%)</title><rect x="111.6" y="755.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (21 samples, 0.94%)</title><rect x="111.6" y="739.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (21 samples, 0.94%)</title><rect x="111.6" y="723.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (21 samples, 0.94%)</title><rect x="111.6" y="707.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.6" y="718.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (14 samples, 0.63%)</title><rect x="112.6" y="691.0" width="7.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="115.6" y="702.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.04%)</title><rect x="112.6" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="115.6" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="113.1" y="675.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="116.1" y="686.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="113.7" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="116.7" y="670.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="114.2" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="117.2" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="114.7" y="675.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="117.7" y="686.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.04%)</title><rect x="115.3" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="118.3" y="686.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.09%)</title><rect x="115.8" y="675.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="118.8" y="686.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="116.3" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="119.3" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="116.3" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="119.3" y="654.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="116.3" y="627.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="119.3" y="638.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.27%)</title><rect x="116.8" y="675.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.8" y="686.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.04%)</title><rect x="117.4" y="659.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="120.4" y="670.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.13%)</title><rect x="117.9" y="659.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="120.9" y="670.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="119.5" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="122.5" y="670.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="119.5" y="643.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="122.5" y="654.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="119.5" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="122.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.run (4 samples, 0.18%)</title><rect x="120.0" y="691.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (3 samples, 0.13%)</title><rect x="120.5" y="675.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.5" y="686.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (3 samples, 0.13%)</title><rect x="120.5" y="659.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.5" y="670.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.09%)</title><rect x="120.5" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.5" y="654.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (2 samples, 0.09%)</title><rect x="120.5" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.09%)</title><rect x="120.5" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.5" y="622.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="121.6" y="643.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="121.6" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.6" y="638.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.04%)</title><rect x="122.1" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="125.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.04%)</title><rect x="122.7" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.04%)</title><rect x="122.7" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.7" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.04%)</title><rect x="122.7" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (3 samples, 0.13%)</title><rect x="123.2" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.13%)</title><rect x="123.2" y="739.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.13%)</title><rect x="123.2" y="723.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.13%)</title><rect x="123.2" y="707.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.13%)</title><rect x="123.2" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.2" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.13%)</title><rect x="123.2" y="675.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="123.2" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="123.7" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.7" y="670.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="124.2" y="659.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="127.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.18%)</title><rect x="124.8" y="771.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.8" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="124.8" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="125.3" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.3" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="125.3" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="125.3" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.09%)</title><rect x="125.8" y="755.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.04%)</title><rect x="126.4" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (27 samples, 1.21%)</title><rect x="126.9" y="883.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (27 samples, 1.21%)</title><rect x="126.9" y="867.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (3 samples, 0.13%)</title><rect x="127.4" y="851.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.09%)</title><rect x="127.9" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.09%)</title><rect x="129.0" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.04%)</title><rect x="129.0" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.04%)</title><rect x="129.5" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.04%)</title><rect x="129.5" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (5 samples, 0.22%)</title><rect x="130.1" y="851.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4 samples, 0.18%)</title><rect x="130.1" y="835.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (4 samples, 0.18%)</title><rect x="130.1" y="819.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.09%)</title><rect x="130.1" y="803.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="130.1" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.04%)</title><rect x="130.1" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="130.6" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.04%)</title><rect x="130.6" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.6" y="782.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.04%)</title><rect x="130.6" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.6" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.04%)</title><rect x="130.6" y="739.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.09%)</title><rect x="131.1" y="803.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.1" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.09%)</title><rect x="131.1" y="787.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.04%)</title><rect x="132.2" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.04%)</title><rect x="132.2" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (16 samples, 0.72%)</title><rect x="132.7" y="851.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.7" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (16 samples, 0.72%)</title><rect x="132.7" y="835.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="133.2" y="819.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="136.2" y="830.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (10 samples, 0.45%)</title><rect x="133.8" y="819.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="136.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="133.8" y="803.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.8" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.04%)</title><rect x="133.8" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="136.8" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.22%)</title><rect x="134.3" y="803.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="137.3" y="814.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.04%)</title><rect x="134.8" y="787.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="137.8" y="798.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="135.4" y="787.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="138.4" y="798.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.04%)</title><rect x="135.4" y="771.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="138.4" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="135.9" y="787.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="138.9" y="798.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.04%)</title><rect x="136.4" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="139.4" y="798.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.04%)</title><rect x="136.4" y="771.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="139.4" y="782.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.04%)</title><rect x="136.9" y="803.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="139.9" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.13%)</title><rect x="137.5" y="803.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="140.5" y="814.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.13%)</title><rect x="137.5" y="787.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="140.5" y="798.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.04%)</title><rect x="138.5" y="771.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="141.5" y="782.0"></text>
</g>
<g>
<title>JVM_DoPrivileged@plt (1 samples, 0.04%)</title><rect x="139.1" y="819.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="142.1" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="139.6" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (2 samples, 0.09%)</title><rect x="140.1" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.09%)</title><rect x="140.1" y="803.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.1" y="814.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.09%)</title><rect x="140.1" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.1" y="798.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.09%)</title><rect x="140.1" y="771.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.1" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.09%)</title><rect x="140.1" y="755.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.1" y="766.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.09%)</title><rect x="140.1" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="140.1" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="140.1" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.1" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.04%)</title><rect x="140.1" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.1" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.04%)</title><rect x="140.6" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.04%)</title><rect x="140.6" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.09%)</title><rect x="141.2" y="979.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="141.2" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="141.2" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.04%)</title><rect x="141.7" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.04%)</title><rect x="141.7" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1520674271.linkToTargetMethod (1 samples, 0.04%)</title><rect x="141.7" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1612745536.invoke (1 samples, 0.04%)</title><rect x="141.7" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.7" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809170349.invoke (1 samples, 0.04%)</title><rect x="141.7" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="141.7" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="141.7" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="141.7" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (12 samples, 0.54%)</title><rect x="142.2" y="1059.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (3 samples, 0.13%)</title><rect x="142.2" y="1043.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.2" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.13%)</title><rect x="142.2" y="1027.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (9 samples, 0.40%)</title><rect x="143.8" y="1043.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9 samples, 0.40%)</title><rect x="143.8" y="1027.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.8" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="143.8" y="1011.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="146.8" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="143.8" y="995.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="146.8" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="143.8" y="979.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="146.8" y="990.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="143.8" y="963.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="146.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.36%)</title><rect x="144.3" y="1011.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.3" y="1022.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.04%)</title><rect x="144.3" y="995.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="147.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.31%)</title><rect x="144.9" y="995.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="147.9" y="1006.0"></text>
</g>
<g>
<title>__GI_write (7 samples, 0.31%)</title><rect x="144.9" y="979.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="147.9" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.31%)</title><rect x="144.9" y="963.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.31%)</title><rect x="144.9" y="947.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="147.9" y="958.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 0.27%)</title><rect x="144.9" y="931.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="147.9" y="942.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.27%)</title><rect x="144.9" y="915.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="147.9" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="144.9" y="899.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="147.9" y="910.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.22%)</title><rect x="145.4" y="899.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="148.4" y="910.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.18%)</title><rect x="145.4" y="883.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="148.4" y="894.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.18%)</title><rect x="145.4" y="867.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="148.4" y="878.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.18%)</title><rect x="145.4" y="851.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="148.4" y="862.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.18%)</title><rect x="145.4" y="835.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="148.4" y="846.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.18%)</title><rect x="145.4" y="819.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="148.4" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.18%)</title><rect x="145.4" y="803.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="148.4" y="814.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="147.5" y="883.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.5" y="894.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="148.0" y="931.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="151.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (3 samples, 0.13%)</title><rect x="148.6" y="1059.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.09%)</title><rect x="148.6" y="1043.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.09%)</title><rect x="148.6" y="1027.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.6" y="1038.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.09%)</title><rect x="148.6" y="1011.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.6" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.04%)</title><rect x="148.6" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.6" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.04%)</title><rect x="148.6" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.6" y="990.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.04%)</title><rect x="148.6" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.6" y="974.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.04%)</title><rect x="148.6" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="148.6" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.6" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.04%)</title><rect x="149.1" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="149.1" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.1" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="149.1" y="963.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="152.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (1 samples, 0.04%)</title><rect x="149.6" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (5 samples, 0.22%)</title><rect x="150.2" y="1059.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (5 samples, 0.22%)</title><rect x="150.2" y="1043.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.04%)</title><rect x="150.7" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.04%)</title><rect x="150.7" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.04%)</title><rect x="150.7" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (3 samples, 0.13%)</title><rect x="151.2" y="1027.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="154.2" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="151.7" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="1022.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.04%)</title><rect x="151.7" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.7" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="151.7" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.7" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="151.7" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.7" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.04%)</title><rect x="151.7" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.7" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="151.7" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.04%)</title><rect x="151.7" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.04%)</title><rect x="151.7" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.7" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="152.3" y="1011.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="155.3" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="152.3" y="995.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="155.3" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="152.3" y="979.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$165/2018349012.get (1 samples, 0.04%)</title><rect x="152.8" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (10 samples, 0.45%)</title><rect x="153.3" y="1155.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.45%)</title><rect x="153.3" y="1139.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (10 samples, 0.45%)</title><rect x="153.3" y="1123.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.3" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="153.9" y="1107.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="156.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (7 samples, 0.31%)</title><rect x="154.4" y="1107.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="157.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (7 samples, 0.31%)</title><rect x="154.4" y="1091.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (6 samples, 0.27%)</title><rect x="154.9" y="1075.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="157.9" y="1086.0"></text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.13%)</title><rect x="156.0" y="1059.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.04%)</title><rect x="157.6" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="158.1" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="158.6" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="158.6" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="158.6" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.04%)</title><rect x="158.6" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (238 samples, 10.67%)</title><rect x="159.2" y="1155.0" width="125.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.2" y="1166.0">java/util/concu..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="168.1" y="1139.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="171.1" y="1150.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.04%)</title><rect x="168.1" y="1123.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="171.1" y="1134.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="168.1" y="1107.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="171.1" y="1118.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.04%)</title><rect x="168.1" y="1091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="171.1" y="1102.0"></text>
</g>
<g>
<title>CompilationPolicy::can_be_compiled(methodHandle const&amp;, int) (1 samples, 0.04%)</title><rect x="168.1" y="1075.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="171.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (55 samples, 2.47%)</title><rect x="168.7" y="1139.0" width="29.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.7" y="1150.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.09%)</title><rect x="169.7" y="1123.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndDecrement (1 samples, 0.04%)</title><rect x="170.8" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (42 samples, 1.88%)</title><rect x="171.3" y="1123.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.3" y="1134.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.27%)</title><rect x="171.3" y="1107.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="174.0" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="174.5" y="1107.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="177.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="175.0" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.04%)</title><rect x="175.0" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.09%)</title><rect x="175.5" y="1107.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.09%)</title><rect x="175.5" y="1091.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="176.1" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.04%)</title><rect x="176.6" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 1.39%)</title><rect x="177.1" y="1107.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 1.39%)</title><rect x="177.1" y="1091.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.1" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="177.1" y="1075.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="180.1" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.45%)</title><rect x="177.7" y="1075.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="180.7" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.18%)</title><rect x="178.2" y="1059.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="181.2" y="1070.0"></text>
</g>
<g>
<title>SafepointSynchronize::block(JavaThread*) (1 samples, 0.04%)</title><rect x="179.3" y="1043.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.3" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="179.3" y="1027.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="182.3" y="1038.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="179.3" y="1011.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="182.3" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="179.8" y="1043.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="182.8" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="180.3" y="1059.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="183.3" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.18%)</title><rect x="180.8" y="1059.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="183.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="181.4" y="1043.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="181.4" y="1027.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="184.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.13%)</title><rect x="181.4" y="1011.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.13%)</title><rect x="181.4" y="995.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="184.4" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.09%)</title><rect x="181.4" y="979.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.4" y="990.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="181.9" y="963.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="184.9" y="974.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="182.4" y="979.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.90%)</title><rect x="183.0" y="1075.0" width="10.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="186.0" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (20 samples, 0.90%)</title><rect x="183.0" y="1059.0" width="10.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="186.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.54%)</title><rect x="187.2" y="1043.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="190.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="187.2" y="1027.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="190.2" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.49%)</title><rect x="187.7" y="1027.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.7" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.45%)</title><rect x="187.7" y="1011.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.45%)</title><rect x="187.7" y="995.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="190.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.45%)</title><rect x="187.7" y="979.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="190.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.27%)</title><rect x="187.7" y="963.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="190.7" y="974.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="187.7" y="947.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="190.7" y="958.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.22%)</title><rect x="188.2" y="947.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="191.2" y="958.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.22%)</title><rect x="188.2" y="931.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="191.2" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.22%)</title><rect x="188.2" y="915.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="191.2" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.18%)</title><rect x="190.9" y="963.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.9" y="974.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.09%)</title><rect x="191.9" y="947.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="194.9" y="958.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="193.0" y="1011.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="196.0" y="1022.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="193.0" y="995.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="193.5" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="193.5" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="193.5" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="193.5" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="193.5" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.31%)</title><rect x="194.1" y="1123.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.31%)</title><rect x="194.1" y="1107.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.27%)</title><rect x="194.6" y="1091.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.27%)</title><rect x="194.6" y="1075.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.27%)</title><rect x="194.6" y="1059.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.6" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.22%)</title><rect x="194.6" y="1043.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="197.6" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.22%)</title><rect x="194.6" y="1027.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="197.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.22%)</title><rect x="194.6" y="1011.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.6" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.22%)</title><rect x="194.6" y="995.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.6" y="1006.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.22%)</title><rect x="194.6" y="979.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.6" y="990.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.22%)</title><rect x="194.6" y="963.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.6" y="974.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.22%)</title><rect x="194.6" y="947.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="197.6" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.22%)</title><rect x="194.6" y="931.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.6" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.22%)</title><rect x="194.6" y="915.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="197.6" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="197.2" y="1043.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="200.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (163 samples, 7.31%)</title><rect x="197.8" y="1139.0" width="86.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.8" y="1150.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (162 samples, 7.26%)</title><rect x="198.3" y="1123.0" width="85.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.3" y="1134.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.09%)</title><rect x="199.9" y="1107.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (99 samples, 4.44%)</title><rect x="200.9" y="1107.0" width="52.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.9" y="1118.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (99 samples, 4.44%)</title><rect x="200.9" y="1091.0" width="52.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.9" y="1102.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (99 samples, 4.44%)</title><rect x="200.9" y="1075.0" width="52.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.9" y="1086.0">jdk/i..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="202.0" y="1059.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="205.0" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (39 samples, 1.75%)</title><rect x="202.5" y="1059.0" width="20.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="205.5" y="1070.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="202.5" y="1043.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="205.5" y="1054.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="203.1" y="1043.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="206.1" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="203.6" y="1043.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="206.6" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (13 samples, 0.58%)</title><rect x="204.1" y="1043.0" width="6.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="207.1" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.13%)</title><rect x="207.3" y="1027.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="210.3" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="208.9" y="1027.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="211.9" y="1038.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="209.4" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="212.4" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.09%)</title><rect x="209.9" y="1027.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="212.9" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.09%)</title><rect x="211.0" y="1043.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="214.0" y="1054.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="212.0" y="1043.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="215.0" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.45%)</title><rect x="212.6" y="1043.0" width="5.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="215.6" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.36%)</title><rect x="213.6" y="1027.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="216.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.31%)</title><rect x="213.6" y="1011.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.6" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="214.2" y="995.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.2" y="1006.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="214.2" y="979.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="217.2" y="990.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.09%)</title><rect x="214.2" y="963.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.2" y="974.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="214.7" y="947.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.7" y="958.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.18%)</title><rect x="215.2" y="995.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="218.2" y="1006.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.18%)</title><rect x="215.2" y="979.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.2" y="990.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.09%)</title><rect x="215.7" y="963.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="218.7" y="974.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="216.8" y="963.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.8" y="974.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="217.3" y="1011.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="220.3" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.13%)</title><rect x="217.9" y="1043.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="220.9" y="1054.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="219.4" y="1043.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="222.4" y="1054.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="220.0" y="1043.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="223.0" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.04%)</title><rect x="220.5" y="1043.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="223.5" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.04%)</title><rect x="220.5" y="1027.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="223.5" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.04%)</title><rect x="220.5" y="1011.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.5" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="220.5" y="995.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="223.5" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.13%)</title><rect x="221.0" y="1043.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="224.0" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.04%)</title><rect x="222.6" y="1043.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="225.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="223.2" y="1059.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="226.2" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="223.2" y="1043.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="226.2" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="223.2" y="1027.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="226.2" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="223.2" y="1011.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="226.2" y="1022.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="223.2" y="995.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="226.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.04%)</title><rect x="223.7" y="1059.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="226.7" y="1070.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="224.2" y="1059.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="227.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (50 samples, 2.24%)</title><rect x="224.7" y="1059.0" width="26.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="227.7" y="1070.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 1.75%)</title><rect x="230.6" y="1043.0" width="20.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 1.75%)</title><rect x="230.6" y="1027.0" width="20.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 1.43%)</title><rect x="231.1" y="1011.0" width="16.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.1" y="1022.0"></text>
</g>
<g>
<title>do_futex (31 samples, 1.39%)</title><rect x="231.1" y="995.0" width="16.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="234.1" y="1006.0"></text>
</g>
<g>
<title>futex_wait (29 samples, 1.30%)</title><rect x="231.6" y="979.0" width="15.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="234.6" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 0.85%)</title><rect x="232.7" y="963.0" width="10.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.7" y="974.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (7 samples, 0.31%)</title><rect x="233.7" y="947.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="236.7" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.31%)</title><rect x="233.7" y="931.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="236.7" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.31%)</title><rect x="233.7" y="915.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="236.7" y="926.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="237.4" y="947.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.4" y="958.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.04%)</title><rect x="238.0" y="947.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="241.0" y="958.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.36%)</title><rect x="238.5" y="947.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.5" y="958.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.36%)</title><rect x="238.5" y="931.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="241.5" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.18%)</title><rect x="240.6" y="915.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="243.6" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.09%)</title><rect x="242.7" y="963.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="245.7" y="974.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="243.2" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="246.2" y="958.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="243.8" y="963.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="246.8" y="974.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="244.3" y="963.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.3" y="974.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.13%)</title><rect x="244.8" y="963.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.8" y="974.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.04%)</title><rect x="244.8" y="947.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.8" y="958.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.09%)</title><rect x="245.4" y="947.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="248.4" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="245.4" y="931.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="248.4" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.04%)</title><rect x="246.4" y="963.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="249.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.04%)</title><rect x="247.0" y="979.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.0" y="990.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.04%)</title><rect x="247.5" y="995.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.5" y="1006.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="247.5" y="979.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.5" y="990.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.18%)</title><rect x="248.0" y="1011.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="251.0" y="1022.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.13%)</title><rect x="248.5" y="995.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="251.5" y="1006.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.09%)</title><rect x="250.1" y="1011.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.1" y="1022.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="250.7" y="995.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="253.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.09%)</title><rect x="251.2" y="1059.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="254.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="252.2" y="1059.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="255.2" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="252.8" y="1059.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="255.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (40 samples, 1.79%)</title><rect x="253.3" y="1107.0" width="21.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.3" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="273.9" y="1091.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (18 samples, 0.81%)</title><rect x="274.5" y="1107.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.5" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="278.7" y="1091.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="281.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="278.7" y="1075.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="281.7" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="278.7" y="1059.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="281.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="278.7" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="281.7" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="278.7" y="1027.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="281.7" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="278.7" y="1011.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="281.7" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="278.7" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="281.7" y="1006.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="278.7" y="979.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="281.7" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.04%)</title><rect x="278.7" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="281.7" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_region(unsigned long, bool, bool) (1 samples, 0.04%)</title><rect x="278.7" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="281.7" y="958.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.13%)</title><rect x="279.2" y="1091.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="282.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (4 samples, 0.18%)</title><rect x="280.8" y="1091.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="283.8" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.09%)</title><rect x="282.9" y="1091.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="285.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.09%)</title><rect x="284.0" y="1139.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="285.0" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.run (214 samples, 9.59%)</title><rect x="285.6" y="1155.0" width="113.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.6" y="1166.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (214 samples, 9.59%)</title><rect x="285.6" y="1139.0" width="113.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.6" y="1150.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (214 samples, 9.59%)</title><rect x="285.6" y="1123.0" width="113.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.6" y="1134.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (213 samples, 9.55%)</title><rect x="286.1" y="1107.0" width="112.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.1" y="1118.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.04%)</title><rect x="286.1" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.04%)</title><rect x="286.1" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.04%)</title><rect x="286.1" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (212 samples, 9.50%)</title><rect x="286.6" y="1091.0" width="112.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.6" y="1102.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (212 samples, 9.50%)</title><rect x="286.6" y="1075.0" width="112.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.6" y="1086.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (212 samples, 9.50%)</title><rect x="286.6" y="1059.0" width="112.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.6" y="1070.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="286.6" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.04%)</title><rect x="286.6" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.04%)</title><rect x="286.6" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (211 samples, 9.46%)</title><rect x="287.1" y="1043.0" width="111.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.1" y="1054.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (211 samples, 9.46%)</title><rect x="287.1" y="1027.0" width="111.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.1" y="1038.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.04%)</title><rect x="287.1" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.04%)</title><rect x="287.1" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.04%)</title><rect x="287.1" y="979.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (209 samples, 9.37%)</title><rect x="287.7" y="1011.0" width="110.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.7" y="1022.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (209 samples, 9.37%)</title><rect x="287.7" y="995.0" width="110.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.7" y="1006.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (59 samples, 2.64%)</title><rect x="288.2" y="979.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.2" y="990.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="289.8" y="963.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.8" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="289.8" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$403/77996944.get$Lambda (1 samples, 0.04%)</title><rect x="289.8" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (48 samples, 2.15%)</title><rect x="290.3" y="963.0" width="25.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.3" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.09%)</title><rect x="290.9" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.09%)</title><rect x="290.9" y="931.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="291.4" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="291.4" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="291.4" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.04%)</title><rect x="291.4" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="291.4" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (45 samples, 2.02%)</title><rect x="291.9" y="947.0" width="23.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.9" y="958.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="293.0" y="931.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="296.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (42 samples, 1.88%)</title><rect x="293.5" y="931.0" width="22.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.5" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38 samples, 1.70%)</title><rect x="294.6" y="915.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.36%)</title><rect x="294.6" y="899.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.6" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="294.6" y="883.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="297.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.apply (7 samples, 0.31%)</title><rect x="295.1" y="883.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (6 samples, 0.27%)</title><rect x="295.6" y="867.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (6 samples, 0.27%)</title><rect x="295.6" y="851.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (6 samples, 0.27%)</title><rect x="295.6" y="835.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="296.1" y="819.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="296.1" y="803.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.get$Lambda (3 samples, 0.13%)</title><rect x="296.1" y="787.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.&lt;init&gt; (2 samples, 0.09%)</title><rect x="296.7" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.09%)</title><rect x="297.7" y="819.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.09%)</title><rect x="297.7" y="803.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.09%)</title><rect x="297.7" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (2 samples, 0.09%)</title><rect x="297.7" y="771.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (2 samples, 0.09%)</title><rect x="297.7" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.09%)</title><rect x="297.7" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.09%)</title><rect x="297.7" y="723.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.09%)</title><rect x="297.7" y="707.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.04%)</title><rect x="298.3" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.04%)</title><rect x="298.3" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.04%)</title><rect x="298.3" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.04%)</title><rect x="298.3" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (28 samples, 1.26%)</title><rect x="298.8" y="899.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (27 samples, 1.21%)</title><rect x="299.3" y="883.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="299.8" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.04%)</title><rect x="299.8" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.09%)</title><rect x="300.4" y="867.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.4" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="300.4" y="851.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="303.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (1 samples, 0.04%)</title><rect x="300.9" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (23 samples, 1.03%)</title><rect x="301.4" y="867.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (23 samples, 1.03%)</title><rect x="301.4" y="851.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (23 samples, 1.03%)</title><rect x="301.4" y="835.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (23 samples, 1.03%)</title><rect x="301.4" y="819.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (23 samples, 1.03%)</title><rect x="301.4" y="803.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.09%)</title><rect x="301.4" y="787.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.09%)</title><rect x="301.4" y="771.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="304.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.09%)</title><rect x="301.4" y="755.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.09%)</title><rect x="301.4" y="739.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (21 samples, 0.94%)</title><rect x="302.5" y="787.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (9 samples, 0.40%)</title><rect x="302.5" y="771.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="305.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (9 samples, 0.40%)</title><rect x="302.5" y="755.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="305.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (9 samples, 0.40%)</title><rect x="302.5" y="739.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$386/1507540812.accept (5 samples, 0.22%)</title><rect x="303.0" y="723.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (5 samples, 0.22%)</title><rect x="303.0" y="707.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (5 samples, 0.22%)</title><rect x="303.0" y="691.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (5 samples, 0.22%)</title><rect x="303.0" y="675.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (5 samples, 0.22%)</title><rect x="303.0" y="659.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.22%)</title><rect x="303.0" y="643.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.22%)</title><rect x="303.0" y="627.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="303.0" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.04%)</title><rect x="303.0" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.04%)</title><rect x="303.0" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.04%)</title><rect x="303.0" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="306.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.18%)</title><rect x="303.5" y="611.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.18%)</title><rect x="303.5" y="595.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.13%)</title><rect x="303.5" y="579.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.5" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="303.5" y="563.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="306.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.04%)</title><rect x="304.1" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.04%)</title><rect x="304.6" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.04%)</title><rect x="304.6" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (1 samples, 0.04%)</title><rect x="304.6" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="307.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.04%)</title><rect x="304.6" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="305.1" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.13%)</title><rect x="305.7" y="723.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="308.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.13%)</title><rect x="305.7" y="707.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.13%)</title><rect x="305.7" y="691.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (3 samples, 0.13%)</title><rect x="305.7" y="675.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (12 samples, 0.54%)</title><rect x="307.2" y="771.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.09%)</title><rect x="307.2" y="755.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.09%)</title><rect x="307.2" y="739.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (10 samples, 0.45%)</title><rect x="308.3" y="755.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (5 samples, 0.22%)</title><rect x="308.3" y="739.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.04%)</title><rect x="308.3" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="311.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (4 samples, 0.18%)</title><rect x="308.8" y="723.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (4 samples, 0.18%)</title><rect x="308.8" y="707.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.18%)</title><rect x="308.8" y="691.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.18%)</title><rect x="308.8" y="675.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.8" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.09%)</title><rect x="309.4" y="659.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="312.4" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="310.4" y="659.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="313.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (5 samples, 0.22%)</title><rect x="311.0" y="739.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="311.0" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="311.0" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="311.0" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.09%)</title><rect x="311.5" y="723.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="314.5" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="311.5" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.04%)</title><rect x="312.0" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.09%)</title><rect x="312.5" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.5" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.09%)</title><rect x="312.5" y="707.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.09%)</title><rect x="312.5" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.5" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.09%)</title><rect x="312.5" y="675.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.09%)</title><rect x="312.5" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.09%)</title><rect x="313.6" y="899.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="314.1" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.04%)</title><rect x="314.1" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.04%)</title><rect x="314.1" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$403/77996944.get (2 samples, 0.09%)</title><rect x="314.7" y="915.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (4 samples, 0.18%)</title><rect x="315.7" y="963.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="315.7" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="315.7" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.13%)</title><rect x="316.2" y="947.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.04%)</title><rect x="317.3" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.04%)</title><rect x="317.8" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.09%)</title><rect x="318.4" y="963.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.4" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="318.4" y="947.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="321.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$399/1101313472.run (1 samples, 0.04%)</title><rect x="318.9" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.04%)</title><rect x="318.9" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="321.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.04%)</title><rect x="318.9" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.04%)</title><rect x="318.9" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.04%)</title><rect x="318.9" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.04%)</title><rect x="318.9" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.04%)</title><rect x="318.9" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (4 samples, 0.18%)</title><rect x="319.4" y="979.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (4 samples, 0.18%)</title><rect x="319.4" y="963.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (4 samples, 0.18%)</title><rect x="319.4" y="947.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (1 samples, 0.04%)</title><rect x="321.0" y="931.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (143 samples, 6.41%)</title><rect x="321.5" y="979.0" width="75.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.5" y="990.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (143 samples, 6.41%)</title><rect x="321.5" y="963.0" width="75.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.5" y="974.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (143 samples, 6.41%)</title><rect x="321.5" y="947.0" width="75.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.5" y="958.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (143 samples, 6.41%)</title><rect x="321.5" y="931.0" width="75.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.5" y="942.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (140 samples, 6.28%)</title><rect x="322.6" y="915.0" width="74.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.6" y="926.0">jdk/inte..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (139 samples, 6.23%)</title><rect x="322.6" y="899.0" width="73.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.6" y="910.0">java/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (139 samples, 6.23%)</title><rect x="322.6" y="883.0" width="73.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.6" y="894.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (139 samples, 6.23%)</title><rect x="322.6" y="867.0" width="73.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.6" y="878.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (139 samples, 6.23%)</title><rect x="322.6" y="851.0" width="73.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="325.6" y="862.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (5 samples, 0.22%)</title><rect x="322.6" y="835.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.6" y="846.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (2 samples, 0.09%)</title><rect x="322.6" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (2 samples, 0.09%)</title><rect x="322.6" y="803.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (2 samples, 0.09%)</title><rect x="322.6" y="787.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (2 samples, 0.09%)</title><rect x="322.6" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.6" y="782.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (2 samples, 0.09%)</title><rect x="322.6" y="755.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.&lt;init&gt; (3 samples, 0.13%)</title><rect x="323.6" y="819.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.6" y="830.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="324.7" y="803.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="327.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (134 samples, 6.01%)</title><rect x="325.2" y="835.0" width="70.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.2" y="846.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (134 samples, 6.01%)</title><rect x="325.2" y="819.0" width="70.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.2" y="830.0">sun/nio/..</text>
</g>
<g>
<title>[unknown] (130 samples, 5.83%)</title><rect x="326.3" y="803.0" width="68.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="329.3" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (130 samples, 5.83%)</title><rect x="326.3" y="787.0" width="68.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="329.3" y="798.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (130 samples, 5.83%)</title><rect x="326.3" y="771.0" width="68.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="329.3" y="782.0">__GI___..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 5.78%)</title><rect x="326.8" y="755.0" width="68.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="329.8" y="766.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (129 samples, 5.78%)</title><rect x="326.8" y="739.0" width="68.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="329.8" y="750.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_writev (125 samples, 5.60%)</title><rect x="327.3" y="723.0" width="66.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.3" y="734.0">__x64_s..</text>
</g>
<g>
<title>do_writev (125 samples, 5.60%)</title><rect x="327.3" y="707.0" width="66.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="330.3" y="718.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="327.3" y="691.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="330.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="327.3" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.3" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="327.3" y="659.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.3" y="670.0"></text>
</g>
<g>
<title>vfs_writev (124 samples, 5.56%)</title><rect x="327.9" y="691.0" width="65.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.9" y="702.0">vfs_wri..</text>
</g>
<g>
<title>do_iter_write (122 samples, 5.47%)</title><rect x="328.4" y="675.0" width="64.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.4" y="686.0">do_iter..</text>
</g>
<g>
<title>do_iter_readv_writev (116 samples, 5.20%)</title><rect x="328.9" y="659.0" width="61.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.9" y="670.0">do_ite..</text>
</g>
<g>
<title>sock_write_iter (116 samples, 5.20%)</title><rect x="328.9" y="643.0" width="61.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.9" y="654.0">sock_w..</text>
</g>
<g>
<title>sock_sendmsg (115 samples, 5.15%)</title><rect x="329.5" y="627.0" width="60.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.5" y="638.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (114 samples, 5.11%)</title><rect x="329.5" y="611.0" width="60.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="332.5" y="622.0">inet6_..</text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="329.5" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="332.5" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (113 samples, 5.06%)</title><rect x="330.0" y="595.0" width="59.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.0" y="606.0">tcp_se..</text>
</g>
<g>
<title>tcp_sendmsg_locked (113 samples, 5.06%)</title><rect x="330.0" y="579.0" width="59.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.0" y="590.0">tcp_se..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.04%)</title><rect x="331.6" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.6" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="332.1" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="335.1" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="332.6" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="335.6" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="332.6" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="335.6" y="558.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.04%)</title><rect x="333.2" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="336.2" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.04%)</title><rect x="333.2" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="336.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.22%)</title><rect x="333.7" y="563.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="336.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.18%)</title><rect x="334.2" y="547.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.2" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 0.13%)</title><rect x="334.8" y="531.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="337.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="335.3" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.3" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="335.3" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="338.3" y="510.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.04%)</title><rect x="335.8" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="338.8" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="336.3" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.3" y="574.0"></text>
</g>
<g>
<title>tcp_push (97 samples, 4.35%)</title><rect x="336.9" y="563.0" width="51.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.9" y="574.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (97 samples, 4.35%)</title><rect x="336.9" y="547.0" width="51.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="339.9" y="558.0">__tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="336.9" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="339.9" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="337.4" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="340.4" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="337.9" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (94 samples, 4.21%)</title><rect x="338.5" y="531.0" width="49.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="341.5" y="542.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (84 samples, 3.77%)</title><rect x="339.5" y="515.0" width="44.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="342.5" y="526.0">__tc..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="340.0" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="343.0" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (81 samples, 3.63%)</title><rect x="340.6" y="499.0" width="42.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="343.6" y="510.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (81 samples, 3.63%)</title><rect x="340.6" y="483.0" width="42.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="343.6" y="494.0">__ip..</text>
</g>
<g>
<title>ip_local_out (81 samples, 3.63%)</title><rect x="340.6" y="467.0" width="42.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="343.6" y="478.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.72%)</title><rect x="340.6" y="451.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.6" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.09%)</title><rect x="340.6" y="435.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="343.6" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (2 samples, 0.09%)</title><rect x="341.6" y="435.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.54%)</title><rect x="342.7" y="435.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="345.7" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.09%)</title><rect x="343.2" y="419.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="346.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.09%)</title><rect x="343.2" y="403.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="346.2" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (8 samples, 0.36%)</title><rect x="344.3" y="419.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.3" y="430.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.04%)</title><rect x="344.3" y="403.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.3" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.31%)</title><rect x="344.8" y="403.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.8" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.04%)</title><rect x="345.9" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.9" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.13%)</title><rect x="346.4" y="387.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="349.4" y="398.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.04%)</title><rect x="347.4" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="350.4" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.04%)</title><rect x="347.4" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="350.4" y="366.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.04%)</title><rect x="348.0" y="387.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="351.0" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.04%)</title><rect x="348.5" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="351.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="349.0" y="451.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.0" y="462.0"></text>
</g>
<g>
<title>ip_output (63 samples, 2.82%)</title><rect x="349.6" y="451.0" width="33.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="352.6" y="462.0">ip..</text>
</g>
<g>
<title>ip_finish_output (61 samples, 2.73%)</title><rect x="349.6" y="435.0" width="32.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.6" y="446.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (61 samples, 2.73%)</title><rect x="349.6" y="419.0" width="32.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.6" y="430.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 2.73%)</title><rect x="349.6" y="403.0" width="32.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="352.6" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 2.33%)</title><rect x="349.6" y="387.0" width="27.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.6" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (52 samples, 2.33%)</title><rect x="349.6" y="371.0" width="27.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="352.6" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (52 samples, 2.33%)</title><rect x="349.6" y="355.0" width="27.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.6" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (52 samples, 2.33%)</title><rect x="349.6" y="339.0" width="27.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.6" y="350.0">_..</text>
</g>
<g>
<title>net_rx_action (52 samples, 2.33%)</title><rect x="349.6" y="323.0" width="27.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.6" y="334.0">n..</text>
</g>
<g>
<title>process_backlog (52 samples, 2.33%)</title><rect x="349.6" y="307.0" width="27.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.6" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (51 samples, 2.29%)</title><rect x="350.1" y="291.0" width="27.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.1" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="350.1" y="275.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 2.20%)</title><rect x="350.6" y="275.0" width="25.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.6" y="286.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="351.1" y="259.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (45 samples, 2.02%)</title><rect x="352.2" y="259.0" width="23.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="355.2" y="270.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.09%)</title><rect x="352.7" y="243.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="355.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (40 samples, 1.79%)</title><rect x="353.8" y="243.0" width="21.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="356.8" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver (39 samples, 1.75%)</title><rect x="353.8" y="227.0" width="20.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="356.8" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (33 samples, 1.48%)</title><rect x="354.3" y="211.0" width="17.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.3" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (33 samples, 1.48%)</title><rect x="354.3" y="195.0" width="17.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.3" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (33 samples, 1.48%)</title><rect x="354.3" y="179.0" width="17.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.3" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.13%)</title><rect x="354.3" y="163.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="357.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="355.9" y="163.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.9" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="355.9" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.9" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.04%)</title><rect x="356.4" y="163.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (28 samples, 1.26%)</title><rect x="357.0" y="163.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="360.0" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="357.0" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="357.5" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="360.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 1.17%)</title><rect x="358.0" y="147.0" width="13.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.0" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="358.0" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="361.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.18%)</title><rect x="358.6" y="131.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="361.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.13%)</title><rect x="358.6" y="115.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="358.6" y="99.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="361.6" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="358.6" y="83.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="361.6" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="358.6" y="67.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="361.6" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="359.1" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="359.1" y="67.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="359.1" y="51.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.1" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="359.1" y="35.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="362.1" y="46.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="359.6" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.6" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="360.1" y="115.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (20 samples, 0.90%)</title><rect x="360.7" y="131.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="363.7" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.85%)</title><rect x="361.2" y="115.0" width="10.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="364.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.85%)</title><rect x="361.2" y="99.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.85%)</title><rect x="361.2" y="83.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (19 samples, 0.85%)</title><rect x="361.2" y="67.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="364.2" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="371.2" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="374.2" y="142.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="371.8" y="211.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="374.8" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.18%)</title><rect x="372.3" y="211.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="375.3" y="222.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.18%)</title><rect x="372.3" y="195.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="375.3" y="206.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.13%)</title><rect x="372.8" y="179.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="375.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="374.4" y="227.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="377.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="374.9" y="243.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="377.9" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.04%)</title><rect x="375.5" y="243.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="378.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="376.0" y="259.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="379.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="376.5" y="275.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="379.5" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.40%)</title><rect x="377.1" y="387.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="380.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.40%)</title><rect x="377.1" y="371.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="380.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.27%)</title><rect x="377.6" y="355.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="380.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.22%)</title><rect x="377.6" y="339.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.6" y="350.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.18%)</title><rect x="377.6" y="323.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.18%)</title><rect x="377.6" y="307.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="380.6" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.13%)</title><rect x="378.1" y="291.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.1" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="379.7" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.7" y="334.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="380.2" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="383.2" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.09%)</title><rect x="380.8" y="355.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.8" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="381.3" y="339.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.3" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.09%)</title><rect x="381.8" y="435.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.8" y="446.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 0.09%)</title><rect x="381.8" y="419.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.8" y="430.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 0.09%)</title><rect x="381.8" y="403.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="384.8" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="382.9" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.9" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="383.4" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.4" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="383.4" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.4" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="383.9" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.9" y="526.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="384.5" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="387.5" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.18%)</title><rect x="385.0" y="515.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.13%)</title><rect x="385.5" y="499.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="388.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.09%)</title><rect x="386.1" y="483.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.1" y="494.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="386.1" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="389.1" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="386.6" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.6" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="386.6" y="451.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="389.6" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.09%)</title><rect x="387.1" y="515.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="390.1" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="387.6" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="390.6" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="387.6" y="483.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.6" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="387.6" y="467.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.6" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.13%)</title><rect x="388.2" y="563.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="391.2" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="388.2" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="391.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.09%)</title><rect x="388.7" y="547.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="391.7" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="389.8" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="389.8" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="392.8" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="389.8" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="392.8" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.22%)</title><rect x="390.3" y="659.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.3" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.09%)</title><rect x="390.8" y="643.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="393.8" y="654.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.09%)</title><rect x="391.9" y="643.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="394.9" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="392.4" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.4" y="638.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="392.4" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.4" y="622.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="392.9" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="395.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.04%)</title><rect x="393.5" y="723.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="396.5" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="393.5" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.5" y="718.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="394.0" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.0" y="734.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="394.0" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.0" y="718.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="394.0" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="397.0" y="702.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="394.5" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="397.5" y="734.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="394.5" y="707.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="397.5" y="718.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.09%)</title><rect x="395.0" y="803.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="398.0" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="396.1" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.04%)</title><rect x="396.6" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.6" y="926.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.04%)</title><rect x="396.6" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.04%)</title><rect x="397.2" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.04%)</title><rect x="397.2" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.04%)</title><rect x="397.2" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.stop (1 samples, 0.04%)</title><rect x="397.7" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.set (1 samples, 0.04%)</title><rect x="397.7" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="398.2" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (205 samples, 9.19%)</title><rect x="398.7" y="1155.0" width="108.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.7" y="1166.0">jdk/internal/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="399.3" y="1139.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="402.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (203 samples, 9.10%)</title><rect x="399.8" y="1139.0" width="107.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.8" y="1150.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.04%)</title><rect x="399.8" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.04%)</title><rect x="399.8" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.04%)</title><rect x="399.8" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (108 samples, 4.84%)</title><rect x="400.3" y="1123.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.3" y="1134.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (106 samples, 4.75%)</title><rect x="401.4" y="1107.0" width="56.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.4" y="1118.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (106 samples, 4.75%)</title><rect x="401.4" y="1091.0" width="56.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="404.4" y="1102.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (22 samples, 0.99%)</title><rect x="402.5" y="1075.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="405.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (22 samples, 0.99%)</title><rect x="402.5" y="1059.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (22 samples, 0.99%)</title><rect x="402.5" y="1043.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="405.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (21 samples, 0.94%)</title><rect x="403.0" y="1027.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.90%)</title><rect x="403.0" y="1011.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="403.0" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="403.0" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364/258005369.get$Lambda (1 samples, 0.04%)</title><rect x="403.0" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364/258005369.&lt;init&gt; (1 samples, 0.04%)</title><rect x="403.0" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.04%)</title><rect x="403.5" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (18 samples, 0.81%)</title><rect x="404.0" y="995.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (18 samples, 0.81%)</title><rect x="404.0" y="979.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (18 samples, 0.81%)</title><rect x="404.0" y="963.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.76%)</title><rect x="404.6" y="947.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.6" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="404.6" y="931.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="407.6" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="404.6" y="915.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="407.6" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="404.6" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="407.6" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.04%)</title><rect x="404.6" y="883.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="407.6" y="894.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.04%)</title><rect x="405.1" y="931.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="408.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.67%)</title><rect x="405.6" y="931.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.6" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="406.2" y="915.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="409.2" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="406.2" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="409.2" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="406.2" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="409.2" y="894.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="406.2" y="867.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="409.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (13 samples, 0.58%)</title><rect x="406.7" y="915.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.58%)</title><rect x="406.7" y="899.0" width="6.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="409.7" y="910.0"></text>
</g>
<g>
<title>__GI_write (13 samples, 0.58%)</title><rect x="406.7" y="883.0" width="6.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="409.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.58%)</title><rect x="406.7" y="867.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.7" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.54%)</title><rect x="406.7" y="851.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="409.7" y="862.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.54%)</title><rect x="406.7" y="835.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="409.7" y="846.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="406.7" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="409.7" y="830.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.49%)</title><rect x="407.2" y="819.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="410.2" y="830.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="407.2" y="803.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.2" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="407.2" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="410.2" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="407.2" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.2" y="782.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.45%)</title><rect x="407.7" y="803.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.7" y="814.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.36%)</title><rect x="407.7" y="787.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="410.7" y="798.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.36%)</title><rect x="407.7" y="771.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="410.7" y="782.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.31%)</title><rect x="408.3" y="755.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="411.3" y="766.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.18%)</title><rect x="408.3" y="739.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.3" y="750.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.18%)</title><rect x="408.3" y="723.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.3" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.13%)</title><rect x="408.3" y="707.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="411.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="409.9" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.9" y="718.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.04%)</title><rect x="410.4" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.4" y="750.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="410.4" y="723.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="413.4" y="734.0"></text>
</g>
<g>
<title>current_time (2 samples, 0.09%)</title><rect x="410.9" y="739.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.9" y="750.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.09%)</title><rect x="412.0" y="787.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.0" y="798.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.09%)</title><rect x="412.0" y="771.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.0" y="782.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="412.5" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="415.5" y="766.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="412.5" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.5" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="413.0" y="851.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.04%)</title><rect x="413.6" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.04%)</title><rect x="413.6" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.04%)</title><rect x="413.6" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1 samples, 0.04%)</title><rect x="414.1" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.04%)</title><rect x="414.1" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (81 samples, 3.63%)</title><rect x="414.6" y="1075.0" width="42.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.6" y="1086.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (81 samples, 3.63%)</title><rect x="414.6" y="1059.0" width="42.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.6" y="1070.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (81 samples, 3.63%)</title><rect x="414.6" y="1043.0" width="42.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.6" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (81 samples, 3.63%)</title><rect x="414.6" y="1027.0" width="42.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.6" y="1038.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (47 samples, 2.11%)</title><rect x="414.6" y="1011.0" width="24.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.6" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47 samples, 2.11%)</title><rect x="414.6" y="995.0" width="24.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.6" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (47 samples, 2.11%)</title><rect x="414.6" y="979.0" width="24.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.6" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (47 samples, 2.11%)</title><rect x="414.6" y="963.0" width="24.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.6" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (47 samples, 2.11%)</title><rect x="414.6" y="947.0" width="24.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.6" y="958.0">j..</text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="414.6" y="931.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="417.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (45 samples, 2.02%)</title><rect x="415.7" y="931.0" width="23.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.7" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (45 samples, 2.02%)</title><rect x="415.7" y="915.0" width="23.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.7" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.09%)</title><rect x="415.7" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.apply (2 samples, 0.09%)</title><rect x="415.7" y="883.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (41 samples, 1.84%)</title><rect x="416.7" y="899.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.7" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (41 samples, 1.84%)</title><rect x="416.7" y="883.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.7" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (30 samples, 1.34%)</title><rect x="417.3" y="867.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="417.8" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.04%)</title><rect x="417.8" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.09%)</title><rect x="418.3" y="851.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.09%)</title><rect x="418.3" y="835.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.09%)</title><rect x="418.3" y="819.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.apply (23 samples, 1.03%)</title><rect x="419.4" y="851.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (22 samples, 0.99%)</title><rect x="419.9" y="835.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (22 samples, 0.99%)</title><rect x="419.9" y="819.0" width="11.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="419.9" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="419.9" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="419.9" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="419.9" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (21 samples, 0.94%)</title><rect x="420.4" y="803.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (21 samples, 0.94%)</title><rect x="420.4" y="787.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.4" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (10 samples, 0.45%)</title><rect x="420.4" y="771.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.4" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.09%)</title><rect x="420.4" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.4" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.09%)</title><rect x="420.4" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.4" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.09%)</title><rect x="420.4" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.09%)</title><rect x="420.4" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="423.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.09%)</title><rect x="420.4" y="691.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="420.4" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.09%)</title><rect x="420.4" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="423.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.09%)</title><rect x="420.4" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.4" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="421.0" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.0" y="638.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.04%)</title><rect x="421.5" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.5" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.04%)</title><rect x="421.5" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.31%)</title><rect x="422.0" y="755.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.0" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.31%)</title><rect x="422.0" y="739.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.0" y="750.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.31%)</title><rect x="422.0" y="723.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.0" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (6 samples, 0.27%)</title><rect x="422.6" y="707.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.22%)</title><rect x="422.6" y="691.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.6" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="423.1" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.1" y="686.0"></text>
</g>
<g>
<title>java/util/Spliterator$OfInt.forEachRemaining (1 samples, 0.04%)</title><rect x="423.6" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="423.6" y="659.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.6" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.09%)</title><rect x="424.1" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.1" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (2 samples, 0.09%)</title><rect x="424.1" y="659.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.1" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.getFence (2 samples, 0.09%)</title><rect x="424.1" y="643.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.04%)</title><rect x="425.2" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.2" y="702.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.04%)</title><rect x="425.7" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.45%)</title><rect x="426.3" y="771.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.3" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="426.3" y="755.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="429.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.run (9 samples, 0.40%)</title><rect x="426.8" y="755.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (9 samples, 0.40%)</title><rect x="426.8" y="739.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="426.8" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="426.8" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.get$Lambda (1 samples, 0.04%)</title><rect x="426.8" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.&lt;init&gt; (1 samples, 0.04%)</title><rect x="426.8" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.8" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="426.8" y="659.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="429.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.04%)</title><rect x="427.3" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.04%)</title><rect x="427.3" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.04%)</title><rect x="427.3" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.3" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="427.3" y="675.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="430.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.13%)</title><rect x="427.8" y="723.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.13%)</title><rect x="427.8" y="707.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="718.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (2 samples, 0.09%)</title><rect x="427.8" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.09%)</title><rect x="427.8" y="675.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.8" y="686.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.09%)</title><rect x="427.8" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.8" y="670.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.04%)</title><rect x="427.8" y="643.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="430.8" y="654.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.04%)</title><rect x="428.4" y="643.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="431.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="428.9" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.04%)</title><rect x="428.9" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.04%)</title><rect x="428.9" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.04%)</title><rect x="428.9" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.04%)</title><rect x="428.9" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.04%)</title><rect x="429.4" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.13%)</title><rect x="430.0" y="723.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.13%)</title><rect x="430.0" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="430.5" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="430.5" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$453/10309338.get$Lambda (1 samples, 0.04%)</title><rect x="430.5" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2024542466.invoke (1 samples, 0.04%)</title><rect x="431.0" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="431.0" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$348/1406690349.apply (3 samples, 0.13%)</title><rect x="431.5" y="851.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.13%)</title><rect x="431.5" y="835.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.13%)</title><rect x="431.5" y="819.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="434.5" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.04%)</title><rect x="432.1" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.1" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="432.1" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.04%)</title><rect x="432.6" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.04%)</title><rect x="432.6" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.6" y="798.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.04%)</title><rect x="432.6" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.6" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.04%)</title><rect x="432.6" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="432.6" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.6" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="432.6" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="435.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.31%)</title><rect x="433.1" y="867.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.31%)</title><rect x="433.1" y="851.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.09%)</title><rect x="433.1" y="835.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.apply (2 samples, 0.09%)</title><rect x="433.1" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.apply (5 samples, 0.22%)</title><rect x="434.2" y="835.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (5 samples, 0.22%)</title><rect x="434.2" y="819.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (4 samples, 0.18%)</title><rect x="434.2" y="803.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (4 samples, 0.18%)</title><rect x="434.2" y="787.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.2" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.09%)</title><rect x="434.7" y="771.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="437.7" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.09%)</title><rect x="434.7" y="755.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="437.7" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.09%)</title><rect x="434.7" y="739.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="437.7" y="750.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.09%)</title><rect x="434.7" y="723.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="437.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.04%)</title><rect x="435.8" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.04%)</title><rect x="435.8" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.04%)</title><rect x="435.8" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.8" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.04%)</title><rect x="435.8" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExceptionalCF (1 samples, 0.04%)</title><rect x="436.3" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (1 samples, 0.04%)</title><rect x="436.3" y="787.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="439.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.04%)</title><rect x="436.3" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.09%)</title><rect x="436.8" y="867.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="437.4" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.04%)</title><rect x="437.4" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.04%)</title><rect x="437.4" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.4" y="830.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="437.9" y="867.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="440.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.apply (2 samples, 0.09%)</title><rect x="438.4" y="899.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="441.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.09%)</title><rect x="438.4" y="883.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="441.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.04%)</title><rect x="438.9" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (34 samples, 1.52%)</title><rect x="439.5" y="1011.0" width="18.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.04%)</title><rect x="439.5" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (5 samples, 0.22%)</title><rect x="440.0" y="995.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.0" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="441.6" y="979.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="444.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (6 samples, 0.27%)</title><rect x="442.6" y="995.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.18%)</title><rect x="443.7" y="979.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.7" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.18%)</title><rect x="443.7" y="963.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.7" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.13%)</title><rect x="444.2" y="947.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.2" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="445.3" y="931.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="448.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.18%)</title><rect x="445.8" y="995.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.09%)</title><rect x="446.4" y="979.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.4" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.09%)</title><rect x="446.4" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.09%)</title><rect x="446.4" y="947.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.09%)</title><rect x="446.4" y="931.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.4" y="942.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="446.4" y="915.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="449.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.04%)</title><rect x="447.4" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="447.4" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="447.4" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.4" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.04%)</title><rect x="447.4" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4 samples, 0.18%)</title><rect x="447.9" y="995.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.9" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.13%)</title><rect x="448.5" y="979.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.5" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.13%)</title><rect x="448.5" y="963.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="448.5" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="448.5" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (1 samples, 0.04%)</title><rect x="448.5" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.5" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.09%)</title><rect x="449.0" y="947.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.0" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (2 samples, 0.09%)</title><rect x="449.0" y="931.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="452.0" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.09%)</title><rect x="449.0" y="915.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.09%)</title><rect x="449.0" y="899.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.0" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.04%)</title><rect x="449.5" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (2 samples, 0.09%)</title><rect x="450.1" y="995.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1 samples, 0.04%)</title><rect x="450.6" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (12 samples, 0.54%)</title><rect x="451.1" y="995.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.09%)</title><rect x="451.1" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.09%)</title><rect x="451.1" y="963.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="454.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.09%)</title><rect x="451.1" y="947.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.04%)</title><rect x="451.6" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="454.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (10 samples, 0.45%)</title><rect x="452.2" y="979.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="455.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="452.7" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="452.7" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="452.7" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.09%)</title><rect x="453.2" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.09%)</title><rect x="453.2" y="947.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.22%)</title><rect x="454.3" y="963.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.18%)</title><rect x="454.8" y="947.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.09%)</title><rect x="455.9" y="931.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="455.9" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.9" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="456.4" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.4" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.04%)</title><rect x="456.9" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="456.9" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (94 samples, 4.21%)</title><rect x="457.5" y="1123.0" width="49.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.5" y="1134.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.04%)</title><rect x="458.0" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (92 samples, 4.12%)</title><rect x="458.5" y="1107.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.5" y="1118.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.04%)</title><rect x="458.5" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.04%)</title><rect x="458.5" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.04%)</title><rect x="458.5" y="1059.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (90 samples, 4.03%)</title><rect x="459.0" y="1091.0" width="47.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.0" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (90 samples, 4.03%)</title><rect x="459.0" y="1075.0" width="47.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.0" y="1086.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (90 samples, 4.03%)</title><rect x="459.0" y="1059.0" width="47.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.0" y="1070.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (89 samples, 3.99%)</title><rect x="459.0" y="1043.0" width="47.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.0" y="1054.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.04%)</title><rect x="460.1" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="460.1" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="460.1" y="995.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (86 samples, 3.85%)</title><rect x="460.6" y="1027.0" width="45.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.6" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (85 samples, 3.81%)</title><rect x="460.6" y="1011.0" width="45.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.6" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/264340655.run (40 samples, 1.79%)</title><rect x="460.6" y="995.0" width="21.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.6" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (40 samples, 1.79%)</title><rect x="460.6" y="979.0" width="21.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.6" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.04%)</title><rect x="460.6" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (38 samples, 1.70%)</title><rect x="461.2" y="963.0" width="20.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.2" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.31%)</title><rect x="461.2" y="947.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.2" y="958.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.18%)</title><rect x="461.2" y="931.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.2" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.18%)</title><rect x="461.2" y="915.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.18%)</title><rect x="461.2" y="899.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.18%)</title><rect x="461.2" y="883.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.18%)</title><rect x="461.2" y="867.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.2" y="878.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="462.2" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.04%)</title><rect x="462.7" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="465.7" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.13%)</title><rect x="463.3" y="931.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.3" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.13%)</title><rect x="463.3" y="915.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.13%)</title><rect x="463.3" y="899.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.09%)</title><rect x="463.8" y="883.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.8" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.09%)</title><rect x="463.8" y="867.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.8" y="878.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.04%)</title><rect x="464.9" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (30 samples, 1.34%)</title><rect x="465.4" y="947.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (30 samples, 1.34%)</title><rect x="465.4" y="931.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (6 samples, 0.27%)</title><rect x="465.4" y="915.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.4" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (1 samples, 0.04%)</title><rect x="465.4" y="899.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.4" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.04%)</title><rect x="465.4" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.4" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.04%)</title><rect x="465.4" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.4" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.04%)</title><rect x="465.9" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="468.9" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.04%)</title><rect x="465.9" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.9" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="465.9" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.9" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (1 samples, 0.04%)</title><rect x="466.5" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.5" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (3 samples, 0.13%)</title><rect x="467.0" y="899.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.0" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (3 samples, 0.13%)</title><rect x="467.0" y="883.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.04%)</title><rect x="468.6" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="468.6" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="471.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="468.6" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.04%)</title><rect x="468.6" y="867.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="471.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (23 samples, 1.03%)</title><rect x="469.1" y="915.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (23 samples, 1.03%)</title><rect x="469.1" y="899.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.22%)</title><rect x="469.1" y="883.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.18%)</title><rect x="469.6" y="867.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.18%)</title><rect x="469.6" y="851.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.13%)</title><rect x="470.2" y="835.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.13%)</title><rect x="470.2" y="819.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.2" y="830.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="470.2" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="473.2" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="470.2" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.2" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="470.2" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="473.2" y="782.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="470.2" y="755.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="473.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.09%)</title><rect x="470.7" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.7" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="471.2" y="787.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="474.2" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="471.2" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="474.2" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="471.2" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="474.2" y="766.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="471.2" y="739.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="474.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.04%)</title><rect x="471.7" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.76%)</title><rect x="472.3" y="883.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.76%)</title><rect x="472.3" y="867.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.04%)</title><rect x="472.3" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.04%)</title><rect x="472.3" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (15 samples, 0.67%)</title><rect x="472.8" y="851.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (15 samples, 0.67%)</title><rect x="472.8" y="835.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (15 samples, 0.67%)</title><rect x="472.8" y="819.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.8" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="473.3" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.3" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="473.3" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.3" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="473.3" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.3" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="473.3" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.58%)</title><rect x="473.9" y="803.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.9" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="473.9" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="476.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.54%)</title><rect x="474.4" y="787.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.49%)</title><rect x="474.4" y="771.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="477.4" y="782.0"></text>
</g>
<g>
<title>__GI_write (11 samples, 0.49%)</title><rect x="474.4" y="755.0" width="5.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="477.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.49%)</title><rect x="474.4" y="739.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.49%)</title><rect x="474.4" y="723.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.45%)</title><rect x="474.9" y="707.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="477.9" y="718.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.45%)</title><rect x="474.9" y="691.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="477.9" y="702.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.45%)</title><rect x="474.9" y="675.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="477.9" y="686.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.04%)</title><rect x="474.9" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.9" y="670.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.36%)</title><rect x="475.4" y="659.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="478.4" y="670.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.36%)</title><rect x="475.4" y="643.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.4" y="654.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.36%)</title><rect x="475.4" y="627.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="478.4" y="638.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.27%)</title><rect x="476.0" y="611.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="479.0" y="622.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.27%)</title><rect x="476.0" y="595.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="479.0" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.27%)</title><rect x="476.0" y="579.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="479.0" y="590.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="479.1" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="482.1" y="622.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="479.7" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="482.7" y="670.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="479.7" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="482.7" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="479.7" y="627.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.7" y="638.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="479.7" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="482.7" y="622.0"></text>
</g>
<g>
<title>write@plt (1 samples, 0.04%)</title><rect x="480.2" y="771.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="483.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="480.7" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (1 samples, 0.04%)</title><rect x="481.3" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.trace (1 samples, 0.04%)</title><rect x="481.3" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.accept (7 samples, 0.31%)</title><rect x="481.8" y="995.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (7 samples, 0.31%)</title><rect x="481.8" y="979.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (7 samples, 0.31%)</title><rect x="481.8" y="963.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="484.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.22%)</title><rect x="481.8" y="947.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.22%)</title><rect x="481.8" y="931.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.22%)</title><rect x="481.8" y="915.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.22%)</title><rect x="481.8" y="899.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.18%)</title><rect x="481.8" y="883.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.18%)</title><rect x="481.8" y="867.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="484.8" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="482.3" y="851.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="485.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/2069360447.accept (1 samples, 0.04%)</title><rect x="482.8" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$461/1913827667.accept (1 samples, 0.04%)</title><rect x="483.4" y="851.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/2069360447.accept (1 samples, 0.04%)</title><rect x="483.9" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.04%)</title><rect x="483.9" y="867.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$305/93037820.accept (2 samples, 0.09%)</title><rect x="484.4" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.09%)</title><rect x="484.4" y="931.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.04%)</title><rect x="485.0" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (38 samples, 1.70%)</title><rect x="485.5" y="995.0" width="20.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (38 samples, 1.70%)</title><rect x="485.5" y="979.0" width="20.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (37 samples, 1.66%)</title><rect x="486.0" y="963.0" width="19.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (37 samples, 1.66%)</title><rect x="486.0" y="947.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37 samples, 1.66%)</title><rect x="486.0" y="931.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="489.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (37 samples, 1.66%)</title><rect x="486.0" y="915.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (37 samples, 1.66%)</title><rect x="486.0" y="899.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="486.0" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="489.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.04%)</title><rect x="486.0" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.0" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="486.0" y="851.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="489.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/1999221485.accept (36 samples, 1.61%)</title><rect x="486.5" y="883.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (36 samples, 1.61%)</title><rect x="486.5" y="867.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36 samples, 1.61%)</title><rect x="486.5" y="851.0" width="19.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="486.5" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="486.5" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="486.5" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 1.57%)</title><rect x="487.1" y="835.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (6 samples, 0.27%)</title><rect x="487.1" y="819.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.27%)</title><rect x="487.1" y="803.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.27%)</title><rect x="487.1" y="787.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.27%)</title><rect x="487.1" y="771.0" width="3.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="490.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.27%)</title><rect x="487.1" y="755.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="490.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.27%)</title><rect x="487.1" y="739.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="490.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.22%)</title><rect x="487.6" y="723.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.6" y="734.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.22%)</title><rect x="487.6" y="707.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="490.6" y="718.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.22%)</title><rect x="487.6" y="691.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="490.6" y="702.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.22%)</title><rect x="487.6" y="675.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="490.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.22%)</title><rect x="487.6" y="659.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="490.6" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.22%)</title><rect x="487.6" y="643.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.13%)</title><rect x="490.3" y="819.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.apply (1 samples, 0.04%)</title><rect x="491.3" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.04%)</title><rect x="491.3" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="491.3" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.09%)</title><rect x="491.8" y="819.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.04%)</title><rect x="492.4" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.04%)</title><rect x="492.4" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.04%)</title><rect x="492.4" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="495.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (24 samples, 1.08%)</title><rect x="492.9" y="819.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (24 samples, 1.08%)</title><rect x="492.9" y="803.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (23 samples, 1.03%)</title><rect x="492.9" y="787.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (20 samples, 0.90%)</title><rect x="492.9" y="771.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (20 samples, 0.90%)</title><rect x="492.9" y="755.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (20 samples, 0.90%)</title><rect x="492.9" y="739.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (20 samples, 0.90%)</title><rect x="492.9" y="723.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.04%)</title><rect x="492.9" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="492.9" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.85%)</title><rect x="493.4" y="707.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.85%)</title><rect x="493.4" y="691.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.4" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.13%)</title><rect x="493.4" y="675.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="496.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="493.4" y="659.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="496.4" y="670.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="494.0" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="497.0" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="494.5" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="497.5" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.72%)</title><rect x="495.0" y="675.0" width="8.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="498.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.67%)</title><rect x="495.5" y="659.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.67%)</title><rect x="495.5" y="643.0" width="8.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.5" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.63%)</title><rect x="496.1" y="627.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.1" y="638.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.63%)</title><rect x="496.1" y="611.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="499.1" y="622.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.63%)</title><rect x="496.1" y="595.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.1" y="606.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="497.1" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="500.1" y="590.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.49%)</title><rect x="497.7" y="579.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.7" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.49%)</title><rect x="497.7" y="563.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="500.7" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.49%)</title><rect x="497.7" y="547.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.13%)</title><rect x="503.5" y="771.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.5" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="504.0" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="507.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/539612352.accept (1 samples, 0.04%)</title><rect x="504.5" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/539612352.accept (1 samples, 0.04%)</title><rect x="505.1" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.04%)</title><rect x="505.1" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.04%)</title><rect x="505.1" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.04%)</title><rect x="505.1" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.04%)</title><rect x="505.6" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.04%)</title><rect x="506.1" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.04%)</title><rect x="506.1" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.04%)</title><rect x="506.1" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.04%)</title><rect x="506.1" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.04%)</title><rect x="506.1" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (1 samples, 0.04%)</title><rect x="506.1" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="506.1" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.1" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="506.1" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.1" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="506.1" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="509.1" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="506.1" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="506.6" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.04%)</title><rect x="506.6" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/1479334731.run (710 samples, 31.82%)</title><rect x="507.2" y="1155.0" width="375.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.2" y="1166.0">ru/mail/polis/service/stasyanoi/server/CustomServer..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3 (710 samples, 31.82%)</title><rect x="507.2" y="1139.0" width="375.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.2" y="1150.0">ru/mail/polis/service/stasyanoi/server/CustomServer..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="507.2" y="1123.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="507.2" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.get$Lambda (3 samples, 0.13%)</title><rect x="507.2" y="1091.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="510.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.&lt;init&gt; (2 samples, 0.09%)</title><rect x="507.7" y="1075.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (1 samples, 0.04%)</title><rect x="508.2" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="511.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (707 samples, 31.69%)</title><rect x="508.8" y="1123.0" width="373.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.8" y="1134.0">ru/mail/polis/service/stasyanoi/server/CustomServer..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (135 samples, 6.05%)</title><rect x="509.8" y="1107.0" width="71.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.8" y="1118.0">one/nio/..</text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.04%)</title><rect x="509.8" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 5.87%)</title><rect x="510.3" y="1091.0" width="69.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.3" y="1102.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.18%)</title><rect x="510.3" y="1075.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.18%)</title><rect x="510.3" y="1059.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="510.3" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="510.3" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="510.3" y="1011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="510.9" y="1043.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="510.9" y="1027.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="510.9" y="1011.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="511.9" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="511.9" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.9" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 5.69%)</title><rect x="512.5" y="1075.0" width="67.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.5" y="1086.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 5.69%)</title><rect x="512.5" y="1059.0" width="67.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.5" y="1070.0">one/nio..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="512.5" y="1043.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="515.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (126 samples, 5.65%)</title><rect x="513.0" y="1043.0" width="66.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.0" y="1054.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (126 samples, 5.65%)</title><rect x="513.0" y="1027.0" width="66.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.0" y="1038.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.27%)</title><rect x="514.1" y="1011.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="517.1" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="515.1" y="995.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="518.1" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.13%)</title><rect x="515.6" y="995.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="518.6" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="516.7" y="979.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="519.7" y="990.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="517.2" y="1011.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="520.2" y="1022.0"></text>
</g>
<g>
<title>__libc_send (117 samples, 5.24%)</title><rect x="517.8" y="1011.0" width="61.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="520.8" y="1022.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (114 samples, 5.11%)</title><rect x="519.3" y="995.0" width="60.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="522.3" y="1006.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (114 samples, 5.11%)</title><rect x="519.3" y="979.0" width="60.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="522.3" y="990.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (111 samples, 4.98%)</title><rect x="520.4" y="963.0" width="58.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.4" y="974.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (111 samples, 4.98%)</title><rect x="520.4" y="947.0" width="58.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.4" y="958.0">__sys_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="520.9" y="931.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="523.9" y="942.0"></text>
</g>
<g>
<title>sock_sendmsg (107 samples, 4.80%)</title><rect x="521.5" y="931.0" width="56.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.5" y="942.0">sock_s..</text>
</g>
<g>
<title>inet6_sendmsg (103 samples, 4.62%)</title><rect x="522.0" y="915.0" width="54.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.0" y="926.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (102 samples, 4.57%)</title><rect x="522.5" y="899.0" width="54.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="525.5" y="910.0">tcp_s..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="522.5" y="883.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.5" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="522.5" y="867.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="525.5" y="878.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (101 samples, 4.53%)</title><rect x="523.0" y="883.0" width="53.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.0" y="894.0">tcp_s..</text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.36%)</title><rect x="524.1" y="867.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="527.1" y="878.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.31%)</title><rect x="524.6" y="851.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.6" y="862.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (2 samples, 0.09%)</title><rect x="524.6" y="835.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="527.6" y="846.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.09%)</title><rect x="524.6" y="819.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.6" y="830.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="525.7" y="835.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="528.7" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.09%)</title><rect x="526.2" y="835.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="529.2" y="846.0"></text>
</g>
<g>
<title>memset_erms (2 samples, 0.09%)</title><rect x="527.3" y="835.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="530.3" y="846.0"></text>
</g>
<g>
<title>tcp_push (90 samples, 4.03%)</title><rect x="528.3" y="867.0" width="47.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.3" y="878.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (89 samples, 3.99%)</title><rect x="528.3" y="851.0" width="47.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="531.3" y="862.0">__tc..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="528.9" y="835.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="531.9" y="846.0"></text>
</g>
<g>
<title>tcp_write_xmit (87 samples, 3.90%)</title><rect x="529.4" y="835.0" width="46.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="532.4" y="846.0">tcp_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="531.0" y="819.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="534.0" y="830.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (77 samples, 3.45%)</title><rect x="531.5" y="819.0" width="40.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.5" y="830.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (76 samples, 3.41%)</title><rect x="531.5" y="803.0" width="40.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.5" y="814.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (75 samples, 3.36%)</title><rect x="531.5" y="787.0" width="39.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="534.5" y="798.0">__i..</text>
</g>
<g>
<title>ip_local_out (74 samples, 3.32%)</title><rect x="531.5" y="771.0" width="39.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="534.5" y="782.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (18 samples, 0.81%)</title><rect x="532.0" y="755.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="535.0" y="766.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="532.6" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="535.6" y="750.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.04%)</title><rect x="533.1" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="536.1" y="750.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.09%)</title><rect x="533.6" y="739.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="536.6" y="750.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.58%)</title><rect x="534.7" y="739.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="537.7" y="750.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.18%)</title><rect x="534.7" y="723.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.7" y="734.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.18%)</title><rect x="534.7" y="707.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.7" y="718.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (8 samples, 0.36%)</title><rect x="536.8" y="723.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.8" y="734.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.04%)</title><rect x="536.8" y="707.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="539.8" y="718.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.31%)</title><rect x="537.3" y="707.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.3" y="718.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (3 samples, 0.13%)</title><rect x="537.3" y="691.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="540.3" y="702.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (2 samples, 0.09%)</title><rect x="538.9" y="691.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="541.9" y="702.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.04%)</title><rect x="540.0" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.0" y="702.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.04%)</title><rect x="540.5" y="691.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="543.5" y="702.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.04%)</title><rect x="541.0" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.0" y="734.0"></text>
</g>
<g>
<title>ip_output (53 samples, 2.38%)</title><rect x="541.6" y="755.0" width="28.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.6" y="766.0">ip..</text>
</g>
<g>
<title>ip_finish_output (53 samples, 2.38%)</title><rect x="541.6" y="739.0" width="28.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.6" y="750.0">ip..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.04%)</title><rect x="541.6" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.6" y="734.0"></text>
</g>
<g>
<title>__ip_finish_output (52 samples, 2.33%)</title><rect x="542.1" y="723.0" width="27.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="545.1" y="734.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (52 samples, 2.33%)</title><rect x="542.1" y="707.0" width="27.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="545.1" y="718.0">i..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.04%)</title><rect x="542.6" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="545.6" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (40 samples, 1.79%)</title><rect x="543.1" y="691.0" width="21.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.1" y="702.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (40 samples, 1.79%)</title><rect x="543.1" y="675.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="546.1" y="686.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (40 samples, 1.79%)</title><rect x="543.1" y="659.0" width="21.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="546.1" y="670.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (40 samples, 1.79%)</title><rect x="543.1" y="643.0" width="21.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="546.1" y="654.0">_..</text>
</g>
<g>
<title>net_rx_action (40 samples, 1.79%)</title><rect x="543.1" y="627.0" width="21.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.1" y="638.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="543.1" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="546.1" y="622.0"></text>
</g>
<g>
<title>process_backlog (39 samples, 1.75%)</title><rect x="543.7" y="611.0" width="20.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.7" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb (39 samples, 1.75%)</title><rect x="543.7" y="595.0" width="20.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.7" y="606.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (39 samples, 1.75%)</title><rect x="543.7" y="579.0" width="20.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="546.7" y="590.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="543.7" y="563.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.7" y="574.0"></text>
</g>
<g>
<title>ip_rcv (35 samples, 1.57%)</title><rect x="544.7" y="563.0" width="18.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="547.7" y="574.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="545.3" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.3" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish (33 samples, 1.48%)</title><rect x="545.8" y="547.0" width="17.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.8" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver (31 samples, 1.39%)</title><rect x="545.8" y="531.0" width="16.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.8" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 1.34%)</title><rect x="545.8" y="515.0" width="15.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="548.8" y="526.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 1.34%)</title><rect x="545.8" y="499.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.8" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="545.8" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="548.8" y="494.0"></text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 1.30%)</title><rect x="546.3" y="483.0" width="15.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="549.3" y="494.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="546.8" y="467.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="549.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="547.4" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="550.4" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="547.9" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="550.9" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="548.4" y="467.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="551.4" y="478.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="548.4" y="451.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="551.4" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 1.08%)</title><rect x="549.0" y="467.0" width="12.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.0" y="478.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.09%)</title><rect x="549.0" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="552.0" y="462.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.04%)</title><rect x="550.0" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="553.0" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.94%)</title><rect x="550.5" y="451.0" width="11.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="553.5" y="462.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="551.6" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="554.6" y="446.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="551.6" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="554.6" y="430.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="551.6" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="554.6" y="414.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="552.1" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="555.1" y="446.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="552.1" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.1" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="552.1" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.1" y="414.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="552.1" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.1" y="398.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="552.1" y="371.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="555.1" y="382.0"></text>
</g>
<g>
<title>tcp_data_ready (13 samples, 0.58%)</title><rect x="552.7" y="435.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.7" y="446.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.58%)</title><rect x="552.7" y="419.0" width="6.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="555.7" y="430.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.54%)</title><rect x="553.2" y="403.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="556.2" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.54%)</title><rect x="553.2" y="387.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="556.2" y="398.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.54%)</title><rect x="553.2" y="371.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="556.2" y="382.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.09%)</title><rect x="559.5" y="435.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.5" y="446.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.09%)</title><rect x="560.6" y="435.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.6" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="561.7" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="564.7" y="526.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="561.7" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.7" y="510.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="561.7" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="564.7" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="562.2" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="565.2" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="562.7" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="565.7" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.09%)</title><rect x="563.2" y="563.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="566.2" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.45%)</title><rect x="564.3" y="691.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="567.3" y="702.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.45%)</title><rect x="564.3" y="675.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="567.3" y="686.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.18%)</title><rect x="564.3" y="659.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="567.3" y="670.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="565.4" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.4" y="654.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="565.9" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.9" y="654.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="565.9" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="568.9" y="638.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.18%)</title><rect x="566.4" y="659.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="569.4" y="670.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.09%)</title><rect x="568.5" y="659.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.5" y="670.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="569.6" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="572.6" y="766.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="570.1" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="573.1" y="766.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="570.6" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="573.6" y="782.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="571.2" y="787.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.2" y="798.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="571.7" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.7" y="814.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="571.7" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.7" y="798.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="572.2" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.2" y="830.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="572.8" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.8" y="830.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="573.3" y="819.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="576.3" y="830.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.09%)</title><rect x="573.8" y="819.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="576.8" y="830.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="574.3" y="803.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="577.3" y="814.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="574.3" y="787.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="577.3" y="798.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="574.3" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="577.3" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="574.3" y="755.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="577.3" y="766.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="574.9" y="819.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="577.9" y="830.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="574.9" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.9" y="814.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="575.4" y="851.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.4" y="862.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="575.9" y="867.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="578.9" y="878.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="575.9" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="578.9" y="862.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.13%)</title><rect x="576.5" y="915.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="579.5" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.13%)</title><rect x="576.5" y="899.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.5" y="910.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.13%)</title><rect x="576.5" y="883.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="579.5" y="894.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="577.0" y="867.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="580.0" y="878.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="577.0" y="851.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="580.0" y="862.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.04%)</title><rect x="577.5" y="835.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.5" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.09%)</title><rect x="578.1" y="931.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.1" y="942.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="578.1" y="915.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="581.1" y="926.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="578.1" y="899.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="581.1" y="910.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="578.1" y="883.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="581.1" y="894.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="579.1" y="963.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.1" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="579.1" y="947.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.13%)</title><rect x="579.6" y="1091.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="579.6" y="1075.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="579.6" y="1059.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="580.7" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.get (570 samples, 25.55%)</title><rect x="581.2" y="1107.0" width="301.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.2" y="1118.0">ru/mail/polis/service/stasyanoi/server/Cu..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$2 (570 samples, 25.55%)</title><rect x="581.2" y="1091.0" width="301.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.2" y="1102.0">ru/mail/polis/service/stasyanoi/server/Cu..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putResponseFromLocalAndReplicas (570 samples, 25.55%)</title><rect x="581.2" y="1075.0" width="301.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.2" y="1086.0">ru/mail/polis/service/stasyanoi/server/Cu..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.22%)</title><rect x="581.2" y="1059.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.22%)</title><rect x="581.2" y="1043.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="581.8" y="1027.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="581.8" y="1011.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="582.8" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="582.8" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="582.8" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="583.3" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="583.3" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="586.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="583.3" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.3" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="583.3" y="979.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="586.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (419 samples, 18.78%)</title><rect x="583.9" y="1059.0" width="221.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.9" y="1070.0">ru/mail/polis/service/stasyan..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (405 samples, 18.15%)</title><rect x="584.9" y="1043.0" width="214.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.9" y="1054.0">ru/mail/polis/dao/stasyanoi/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (405 samples, 18.15%)</title><rect x="584.9" y="1027.0" width="214.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.9" y="1038.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (405 samples, 18.15%)</title><rect x="584.9" y="1011.0" width="214.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.9" y="1022.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="584.9" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.9" y="1006.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (260 samples, 11.65%)</title><rect x="585.5" y="995.0" width="137.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="588.5" y="1006.0">Java_org_rocksdb_..</text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="585.5" y="979.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="588.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="586.0" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="589.0" y="990.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (258 samples, 11.56%)</title><rect x="586.5" y="979.0" width="136.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="589.5" y="990.0">rocksdb_put_helpe..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="587.0" y="963.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="590.0" y="974.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="587.6" y="963.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="590.6" y="974.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="588.6" y="963.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="591.6" y="974.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="588.6" y="947.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="591.6" y="958.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="589.2" y="963.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="592.2" y="974.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="589.7" y="947.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="592.7" y="958.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="589.7" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="592.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (251 samples, 11.25%)</title><rect x="590.2" y="963.0" width="132.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="593.2" y="974.0">rocksdb::DB::Put..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (251 samples, 11.25%)</title><rect x="590.2" y="947.0" width="132.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="593.2" y="958.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (248 samples, 11.12%)</title><rect x="590.2" y="931.0" width="131.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="593.2" y="942.0">rocksdb::DB::Put..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (239 samples, 10.71%)</title><rect x="590.2" y="915.0" width="126.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="593.2" y="926.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="590.2" y="899.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="593.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (235 samples, 10.53%)</title><rect x="590.7" y="899.0" width="124.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.7" y="910.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="593.4" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="596.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) [clone .plt] (1 samples, 0.04%)</title><rect x="593.9" y="883.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="596.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.13%)</title><rect x="594.4" y="883.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="597.4" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="595.5" y="867.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="598.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (12 samples, 0.54%)</title><rect x="596.0" y="883.0" width="6.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="599.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="596.6" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="599.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 0.45%)</title><rect x="597.1" y="867.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="600.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (10 samples, 0.45%)</title><rect x="597.1" y="851.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="600.1" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (4 samples, 0.18%)</title><rect x="597.1" y="835.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="600.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.22%)</title><rect x="599.2" y="835.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="602.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.04%)</title><rect x="599.2" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="602.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.18%)</title><rect x="599.7" y="819.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="602.7" y="830.0"></text>
</g>
<g>
<title>__GI_write (2 samples, 0.09%)</title><rect x="600.3" y="803.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="603.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="601.3" y="803.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="604.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="601.9" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="601.9" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="604.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.04%)</title><rect x="602.4" y="883.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="605.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.09%)</title><rect x="602.9" y="883.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="605.9" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="603.4" y="867.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="606.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.04%)</title><rect x="604.0" y="883.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="607.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (163 samples, 7.31%)</title><rect x="604.5" y="883.0" width="86.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="607.5" y="894.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (161 samples, 7.22%)</title><rect x="605.0" y="867.0" width="85.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="608.0" y="878.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="605.0" y="851.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (160 samples, 7.17%)</title><rect x="605.6" y="851.0" width="84.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="608.6" y="862.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (158 samples, 7.08%)</title><rect x="606.6" y="835.0" width="83.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="609.6" y="846.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="606.6" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="609.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.04%)</title><rect x="607.1" y="819.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="610.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (156 samples, 6.99%)</title><rect x="607.7" y="819.0" width="82.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="610.7" y="830.0">rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (1 samples, 0.04%)</title><rect x="608.7" y="803.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="611.7" y="814.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="609.3" y="803.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="612.3" y="814.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.04%)</title><rect x="609.8" y="803.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="612.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.04%)</title><rect x="610.3" y="803.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="613.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (150 samples, 6.72%)</title><rect x="610.8" y="803.0" width="79.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="613.8" y="814.0">rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (1 samples, 0.04%)</title><rect x="610.8" y="787.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="613.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="610.8" y="771.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="613.8" y="782.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (146 samples, 6.54%)</title><rect x="611.4" y="787.0" width="77.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="614.4" y="798.0">bool rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (135 samples, 6.05%)</title><rect x="611.4" y="771.0" width="71.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="614.4" y="782.0">/tmp/lib..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (98 samples, 4.39%)</title><rect x="616.1" y="755.0" width="51.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="619.1" y="766.0">/tmp/..</text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="616.1" y="739.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="619.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (97 samples, 4.35%)</title><rect x="616.7" y="739.0" width="51.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="619.7" y="750.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.04%)</title><rect x="617.2" y="723.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="620.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (95 samples, 4.26%)</title><rect x="617.7" y="723.0" width="50.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="620.7" y="734.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (23 samples, 1.03%)</title><rect x="619.8" y="707.0" width="12.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="622.8" y="718.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.04%)</title><rect x="620.4" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="623.4" y="702.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (21 samples, 0.94%)</title><rect x="620.9" y="691.0" width="11.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="623.9" y="702.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.04%)</title><rect x="620.9" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="623.9" y="686.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.04%)</title><rect x="621.4" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="624.4" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="621.9" y="675.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="624.9" y="686.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (18 samples, 0.81%)</title><rect x="622.5" y="675.0" width="9.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="625.5" y="686.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.04%)</title><rect x="624.1" y="659.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="627.1" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.40%)</title><rect x="624.6" y="659.0" width="4.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="627.6" y="670.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.04%)</title><rect x="625.7" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="628.7" y="654.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.22%)</title><rect x="626.2" y="643.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="629.2" y="654.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.09%)</title><rect x="627.8" y="627.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="630.8" y="638.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.04%)</title><rect x="628.8" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="631.8" y="654.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="629.4" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="632.4" y="670.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (4 samples, 0.18%)</title><rect x="629.9" y="659.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="632.9" y="670.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (47 samples, 2.11%)</title><rect x="632.0" y="707.0" width="24.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="635.0" y="718.0">J..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="632.0" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="635.0" y="702.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (46 samples, 2.06%)</title><rect x="632.5" y="691.0" width="24.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="635.5" y="702.0">j..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.04%)</title><rect x="634.6" y="675.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="637.6" y="686.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="635.2" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="638.2" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="635.7" y="675.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="638.7" y="686.0"></text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.04%)</title><rect x="636.2" y="675.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="639.2" y="686.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.04%)</title><rect x="636.8" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="639.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.18%)</title><rect x="637.3" y="675.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="640.3" y="686.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (33 samples, 1.48%)</title><rect x="639.4" y="675.0" width="17.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="642.4" y="686.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="641.5" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="644.5" y="670.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (3 samples, 0.13%)</title><rect x="642.0" y="659.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="645.0" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (19 samples, 0.85%)</title><rect x="643.6" y="659.0" width="10.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="646.6" y="670.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.04%)</title><rect x="645.2" y="643.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="648.2" y="654.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (8 samples, 0.36%)</title><rect x="645.8" y="643.0" width="4.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="648.8" y="654.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.09%)</title><rect x="648.9" y="627.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="651.9" y="638.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.04%)</title><rect x="650.0" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="653.0" y="654.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="650.5" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="653.5" y="654.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (5 samples, 0.22%)</title><rect x="651.0" y="643.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="654.0" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="653.7" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="656.7" y="670.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (3 samples, 0.13%)</title><rect x="654.2" y="659.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="657.2" y="670.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.09%)</title><rect x="655.8" y="659.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="658.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="656.9" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="659.9" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (13 samples, 0.58%)</title><rect x="657.4" y="707.0" width="6.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="660.4" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.31%)</title><rect x="658.4" y="691.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="661.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.18%)</title><rect x="662.1" y="691.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="665.1" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.13%)</title><rect x="664.3" y="707.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="667.3" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.04%)</title><rect x="665.8" y="707.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="668.8" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="666.4" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="669.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.09%)</title><rect x="666.9" y="707.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="669.9" y="718.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.04%)</title><rect x="666.9" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="669.9" y="702.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.04%)</title><rect x="667.4" y="691.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="670.4" y="702.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.04%)</title><rect x="668.0" y="755.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="671.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (27 samples, 1.21%)</title><rect x="668.5" y="755.0" width="14.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="671.5" y="766.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (27 samples, 1.21%)</title><rect x="668.5" y="739.0" width="14.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="671.5" y="750.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.18%)</title><rect x="668.5" y="723.0" width="2.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="671.5" y="734.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.13%)</title><rect x="669.0" y="707.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="672.0" y="718.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.09%)</title><rect x="669.6" y="691.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="672.6" y="702.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.04%)</title><rect x="670.1" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="673.1" y="686.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (21 samples, 0.94%)</title><rect x="670.6" y="723.0" width="11.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="673.6" y="734.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (21 samples, 0.94%)</title><rect x="670.6" y="707.0" width="11.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="673.6" y="718.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.04%)</title><rect x="671.1" y="691.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="674.1" y="702.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.09%)</title><rect x="671.7" y="691.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="674.7" y="702.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (2 samples, 0.09%)</title><rect x="672.7" y="691.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="675.7" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="673.8" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="676.8" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="674.3" y="691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="677.3" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="674.8" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="677.8" y="702.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (12 samples, 0.54%)</title><rect x="675.4" y="691.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="678.4" y="702.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.09%)</title><rect x="678.0" y="675.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="681.0" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.13%)</title><rect x="679.1" y="675.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="682.1" y="686.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="679.6" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="682.6" y="670.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.04%)</title><rect x="680.1" y="659.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="683.1" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="680.7" y="675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="683.7" y="686.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.04%)</title><rect x="681.2" y="675.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="684.2" y="686.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.04%)</title><rect x="681.7" y="723.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="684.7" y="734.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.04%)</title><rect x="682.2" y="723.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="685.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (11 samples, 0.49%)</title><rect x="682.8" y="771.0" width="5.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="685.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (11 samples, 0.49%)</title><rect x="682.8" y="755.0" width="5.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="685.8" y="766.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.18%)</title><rect x="683.3" y="739.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="686.3" y="750.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 0.18%)</title><rect x="683.3" y="723.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="686.3" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="683.3" y="707.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="686.3" y="718.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.13%)</title><rect x="683.8" y="707.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="686.8" y="718.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.04%)</title><rect x="683.8" y="691.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="686.8" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="684.4" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="687.4" y="702.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.04%)</title><rect x="684.4" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="687.4" y="686.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.04%)</title><rect x="684.9" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="687.9" y="702.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 0.22%)</title><rect x="685.4" y="739.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="688.4" y="750.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.18%)</title><rect x="685.9" y="723.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="688.9" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="685.9" y="707.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="688.9" y="718.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.13%)</title><rect x="686.5" y="707.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="689.5" y="718.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.04%)</title><rect x="686.5" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="689.5" y="702.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="687.0" y="691.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="690.0" y="702.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.09%)</title><rect x="687.0" y="675.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="690.0" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="688.1" y="739.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="691.1" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="688.1" y="723.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="691.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.04%)</title><rect x="688.6" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="691.6" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="689.1" y="787.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="692.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.04%)</title><rect x="689.1" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="692.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="689.7" y="787.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="692.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="690.2" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="693.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (27 samples, 1.21%)</title><rect x="690.7" y="883.0" width="14.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="693.7" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (27 samples, 1.21%)</title><rect x="690.7" y="867.0" width="14.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="693.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (27 samples, 1.21%)</title><rect x="690.7" y="851.0" width="14.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="693.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (27 samples, 1.21%)</title><rect x="690.7" y="835.0" width="14.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="693.7" y="846.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="690.7" y="819.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="693.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (26 samples, 1.17%)</title><rect x="691.2" y="819.0" width="13.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="694.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (26 samples, 1.17%)</title><rect x="691.2" y="803.0" width="13.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="694.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="691.2" y="787.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="694.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (25 samples, 1.12%)</title><rect x="691.8" y="787.0" width="13.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="694.8" y="798.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (25 samples, 1.12%)</title><rect x="691.8" y="771.0" width="13.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="694.8" y="782.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (23 samples, 1.03%)</title><rect x="691.8" y="755.0" width="12.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="694.8" y="766.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (23 samples, 1.03%)</title><rect x="691.8" y="739.0" width="12.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="694.8" y="750.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="691.8" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="694.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 0.99%)</title><rect x="692.3" y="723.0" width="11.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="695.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (21 samples, 0.94%)</title><rect x="692.8" y="707.0" width="11.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="695.8" y="718.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.13%)</title><rect x="692.8" y="691.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="695.8" y="702.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.13%)</title><rect x="692.8" y="675.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="695.8" y="686.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.09%)</title><rect x="693.4" y="659.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="696.4" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="693.9" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="696.9" y="654.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="693.9" y="627.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="696.9" y="638.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (8 samples, 0.36%)</title><rect x="694.4" y="691.0" width="4.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="697.4" y="702.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (8 samples, 0.36%)</title><rect x="694.4" y="675.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="697.4" y="686.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.04%)</title><rect x="694.9" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="697.9" y="670.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.04%)</title><rect x="695.5" y="659.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="698.5" y="670.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.18%)</title><rect x="696.0" y="659.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="699.0" y="670.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="696.5" y="643.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="699.5" y="654.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.04%)</title><rect x="696.5" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="699.5" y="638.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.04%)</title><rect x="697.1" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="700.1" y="638.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.04%)</title><rect x="697.1" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="700.1" y="622.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="697.6" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="700.6" y="654.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="698.1" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="701.1" y="670.0"></text>
</g>
<g>
<title>__lll_lock_wait (6 samples, 0.27%)</title><rect x="698.6" y="691.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="701.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.27%)</title><rect x="698.6" y="675.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="701.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.27%)</title><rect x="698.6" y="659.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.27%)</title><rect x="698.6" y="643.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="701.6" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.18%)</title><rect x="699.7" y="627.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="702.7" y="638.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.18%)</title><rect x="699.7" y="611.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="702.7" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="700.8" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.8" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="700.8" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="703.8" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="700.8" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="700.8" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="703.8" y="558.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.04%)</title><rect x="701.3" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.3" y="606.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="701.3" y="579.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.3" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.18%)</title><rect x="701.8" y="691.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="704.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.18%)</title><rect x="701.8" y="675.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.18%)</title><rect x="701.8" y="659.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.18%)</title><rect x="701.8" y="643.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.8" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.18%)</title><rect x="701.8" y="627.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.8" y="638.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.18%)</title><rect x="701.8" y="611.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.8" y="622.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.18%)</title><rect x="701.8" y="595.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="704.8" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.18%)</title><rect x="701.8" y="579.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="704.8" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.18%)</title><rect x="701.8" y="563.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.09%)</title><rect x="703.9" y="755.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="706.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.09%)</title><rect x="703.9" y="739.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="706.9" y="750.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.04%)</title><rect x="703.9" y="723.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="706.9" y="734.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.04%)</title><rect x="703.9" y="707.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="706.9" y="718.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.04%)</title><rect x="704.5" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="707.5" y="734.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.04%)</title><rect x="704.5" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="707.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="704.5" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="707.5" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.04%)</title><rect x="705.0" y="883.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="708.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (12 samples, 0.54%)</title><rect x="705.5" y="883.0" width="6.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="708.5" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) [clone .plt] (1 samples, 0.04%)</title><rect x="711.9" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="714.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.13%)</title><rect x="712.4" y="883.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="715.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.09%)</title><rect x="712.4" y="867.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="715.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::BlockingAwaitState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="713.5" y="867.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="716.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="714.0" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="717.0" y="894.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.04%)</title><rect x="714.5" y="883.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="717.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="714.5" y="867.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="714.5" y="851.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="717.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.04%)</title><rect x="714.5" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="717.5" y="846.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.04%)</title><rect x="714.5" y="819.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="717.5" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="714.5" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.5" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="714.5" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="717.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() [clone .plt] (1 samples, 0.04%)</title><rect x="715.0" y="899.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="718.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) [clone .plt] (1 samples, 0.04%)</title><rect x="715.6" y="899.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="718.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) [clone .plt] (1 samples, 0.04%)</title><rect x="716.1" y="899.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="719.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.09%)</title><rect x="716.6" y="915.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="719.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.18%)</title><rect x="717.7" y="915.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="720.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="717.7" y="899.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="720.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.09%)</title><rect x="718.2" y="899.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="721.2" y="910.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="719.3" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="722.3" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="719.8" y="915.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="722.8" y="926.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) [clone .plt] (1 samples, 0.04%)</title><rect x="720.3" y="915.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="723.3" y="926.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="720.9" y="915.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="723.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.09%)</title><rect x="721.4" y="931.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="724.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.04%)</title><rect x="722.4" y="931.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="725.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 2.02%)</title><rect x="723.0" y="995.0" width="23.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="726.0" y="1006.0">[..</text>
</g>
<g>
<title>__GI_write (44 samples, 1.97%)</title><rect x="723.0" y="979.0" width="23.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="726.0" y="990.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 1.93%)</title><rect x="723.5" y="963.0" width="22.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="726.5" y="974.0">e..</text>
</g>
<g>
<title>do_syscall_64 (43 samples, 1.93%)</title><rect x="723.5" y="947.0" width="22.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.5" y="958.0">d..</text>
</g>
<g>
<title>__x64_sys_write (42 samples, 1.88%)</title><rect x="723.5" y="931.0" width="22.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="726.5" y="942.0">_..</text>
</g>
<g>
<title>ksys_write (42 samples, 1.88%)</title><rect x="723.5" y="915.0" width="22.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="726.5" y="926.0">k..</text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="723.5" y="899.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="726.5" y="910.0"></text>
</g>
<g>
<title>vfs_write (41 samples, 1.84%)</title><rect x="724.0" y="899.0" width="21.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="727.0" y="910.0">v..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.09%)</title><rect x="724.0" y="883.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.0" y="894.0"></text>
</g>
<g>
<title>__vfs_write (37 samples, 1.66%)</title><rect x="725.1" y="883.0" width="19.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="728.1" y="894.0"></text>
</g>
<g>
<title>new_sync_write (37 samples, 1.66%)</title><rect x="725.1" y="867.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="728.1" y="878.0"></text>
</g>
<g>
<title>ext4_file_write_iter (36 samples, 1.61%)</title><rect x="725.6" y="851.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="728.6" y="862.0"></text>
</g>
<g>
<title>__generic_file_write_iter (35 samples, 1.57%)</title><rect x="725.6" y="835.0" width="18.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.6" y="846.0"></text>
</g>
<g>
<title>file_update_time (7 samples, 0.31%)</title><rect x="725.6" y="819.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="728.6" y="830.0"></text>
</g>
<g>
<title>generic_update_time (7 samples, 0.31%)</title><rect x="725.6" y="803.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="728.6" y="814.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.31%)</title><rect x="725.6" y="787.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="728.6" y="798.0"></text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 0.27%)</title><rect x="726.1" y="771.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.1" y="782.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.27%)</title><rect x="726.1" y="755.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.1" y="766.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.09%)</title><rect x="726.1" y="739.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="729.1" y="750.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.09%)</title><rect x="726.1" y="723.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="729.1" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="726.1" y="707.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="729.1" y="718.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.04%)</title><rect x="726.7" y="707.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="729.7" y="718.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.18%)</title><rect x="727.2" y="739.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.2" y="750.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.09%)</title><rect x="727.2" y="723.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.2" y="734.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.09%)</title><rect x="727.2" y="707.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="730.2" y="718.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.04%)</title><rect x="727.7" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.7" y="702.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="728.3" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.3" y="734.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="728.3" y="707.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="731.3" y="718.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.04%)</title><rect x="728.3" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.3" y="702.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.04%)</title><rect x="728.8" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="731.8" y="734.0"></text>
</g>
<g>
<title>generic_perform_write (28 samples, 1.26%)</title><rect x="729.3" y="819.0" width="14.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.3" y="830.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.04%)</title><rect x="730.4" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="733.4" y="814.0"></text>
</g>
<g>
<title>ext4_da_write_begin (11 samples, 0.49%)</title><rect x="730.9" y="803.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="733.9" y="814.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.22%)</title><rect x="730.9" y="787.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="733.9" y="798.0"></text>
</g>
<g>
<title>jbd2__journal_start (5 samples, 0.22%)</title><rect x="730.9" y="771.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="733.9" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.13%)</title><rect x="730.9" y="755.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.9" y="766.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="732.5" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.5" y="766.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.04%)</title><rect x="733.0" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.0" y="766.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.04%)</title><rect x="733.0" y="739.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="736.0" y="750.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="733.5" y="787.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="736.5" y="798.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (5 samples, 0.22%)</title><rect x="734.1" y="787.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="737.1" y="798.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.22%)</title><rect x="734.1" y="771.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.1" y="782.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.18%)</title><rect x="734.6" y="755.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="737.6" y="766.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.09%)</title><rect x="735.7" y="739.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.7" y="750.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.04%)</title><rect x="736.2" y="723.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="739.2" y="734.0"></text>
</g>
<g>
<title>ext4_da_write_end (12 samples, 0.54%)</title><rect x="736.7" y="803.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="739.7" y="814.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.09%)</title><rect x="736.7" y="787.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="739.7" y="798.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.04%)</title><rect x="736.7" y="771.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.7" y="782.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="736.7" y="755.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.7" y="766.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="737.3" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="740.3" y="782.0"></text>
</g>
<g>
<title>generic_write_end (10 samples, 0.45%)</title><rect x="737.8" y="787.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.8" y="798.0"></text>
</g>
<g>
<title>__mark_inode_dirty (8 samples, 0.36%)</title><rect x="738.3" y="771.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.3" y="782.0"></text>
</g>
<g>
<title>ext4_dirty_inode (7 samples, 0.31%)</title><rect x="738.8" y="755.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="741.8" y="766.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="738.8" y="739.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="741.8" y="750.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.04%)</title><rect x="738.8" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="741.8" y="734.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.27%)</title><rect x="739.4" y="739.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.4" y="750.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.13%)</title><rect x="739.4" y="723.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="742.4" y="734.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.13%)</title><rect x="739.4" y="707.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="742.4" y="718.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.09%)</title><rect x="739.9" y="691.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="742.9" y="702.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (2 samples, 0.09%)</title><rect x="739.9" y="675.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="742.9" y="686.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.09%)</title><rect x="739.9" y="659.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.9" y="670.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="740.4" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.4" y="654.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.13%)</title><rect x="741.0" y="723.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="744.0" y="734.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.04%)</title><rect x="741.0" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="744.0" y="718.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.04%)</title><rect x="741.0" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.0" y="702.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.04%)</title><rect x="741.0" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="744.0" y="686.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.09%)</title><rect x="741.5" y="707.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="744.5" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="741.5" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="744.5" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="741.5" y="675.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="744.5" y="686.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="742.0" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="745.0" y="702.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.04%)</title><rect x="742.0" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.0" y="686.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.04%)</title><rect x="742.5" y="771.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.5" y="782.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (1 samples, 0.04%)</title><rect x="742.5" y="755.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="745.5" y="766.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.04%)</title><rect x="742.5" y="739.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.5" y="750.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.09%)</title><rect x="743.1" y="803.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="746.1" y="814.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.09%)</title><rect x="743.1" y="787.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.1" y="798.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.04%)</title><rect x="744.1" y="835.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="747.1" y="846.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.04%)</title><rect x="744.1" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="747.1" y="830.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.54 (1 samples, 0.04%)</title><rect x="744.1" y="803.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="747.1" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.09%)</title><rect x="744.7" y="883.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.7" y="894.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.09%)</title><rect x="744.7" y="867.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.7" y="878.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.09%)</title><rect x="744.7" y="851.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="747.7" y="862.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.09%)</title><rect x="744.7" y="835.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="747.7" y="846.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="745.7" y="931.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="748.7" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="745.7" y="915.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="748.7" y="926.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.04%)</title><rect x="746.2" y="979.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="749.2" y="990.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="746.8" y="995.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="749.8" y="1006.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.13%)</title><rect x="747.3" y="995.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="750.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="748.9" y="995.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="751.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="748.9" y="979.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="751.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="748.9" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="751.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="748.9" y="947.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="751.9" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="748.9" y="931.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="751.9" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="748.9" y="915.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="751.9" y="926.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="748.9" y="899.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="751.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="748.9" y="883.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="751.9" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="748.9" y="867.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="751.9" y="878.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (11 samples, 0.49%)</title><rect x="749.4" y="995.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (82 samples, 3.68%)</title><rect x="755.2" y="995.0" width="43.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.2" y="1006.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (81 samples, 3.63%)</title><rect x="755.8" y="979.0" width="42.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.8" y="990.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (78 samples, 3.50%)</title><rect x="757.4" y="963.0" width="41.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.4" y="974.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (3 samples, 0.13%)</title><rect x="757.4" y="947.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.4" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (75 samples, 3.36%)</title><rect x="758.9" y="947.0" width="39.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.9" y="958.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (70 samples, 3.14%)</title><rect x="761.6" y="931.0" width="37.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.6" y="942.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (59 samples, 2.64%)</title><rect x="766.3" y="915.0" width="31.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="769.3" y="926.0">Ja..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.09%)</title><rect x="766.3" y="899.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="769.3" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="767.4" y="899.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="770.4" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.13%)</title><rect x="767.9" y="899.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="770.9" y="910.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 0.31%)</title><rect x="769.5" y="899.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="772.5" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.13%)</title><rect x="770.0" y="883.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="773.0" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.13%)</title><rect x="771.6" y="883.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="774.6" y="894.0"></text>
</g>
<g>
<title>jni_NewByteArray (30 samples, 1.34%)</title><rect x="773.2" y="899.0" width="15.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="776.2" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="773.2" y="883.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="776.2" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="773.7" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="776.7" y="894.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.13%)</title><rect x="774.3" y="883.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="777.3" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.18%)</title><rect x="775.9" y="883.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="778.9" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.13%)</title><rect x="778.0" y="883.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="781.0" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.81%)</title><rect x="779.6" y="883.0" width="9.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="782.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.63%)</title><rect x="781.7" y="867.0" width="7.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="784.7" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.58%)</title><rect x="781.7" y="851.0" width="6.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="784.7" y="862.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="783.8" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="786.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="784.3" y="835.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="787.3" y="846.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="784.3" y="819.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="787.3" y="830.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.13%)</title><rect x="784.9" y="835.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="787.9" y="846.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.09%)</title><rect x="786.4" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="789.4" y="846.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="787.5" y="835.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="790.5" y="846.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.04%)</title><rect x="788.0" y="835.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="791.0" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="788.6" y="851.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="791.6" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.72%)</title><rect x="789.1" y="899.0" width="8.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="792.1" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.22%)</title><rect x="790.7" y="883.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="793.7" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.27%)</title><rect x="793.3" y="883.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="796.3" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.09%)</title><rect x="796.5" y="883.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="799.5" y="894.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="797.0" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="800.0" y="878.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.09%)</title><rect x="797.5" y="915.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="800.5" y="926.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="798.6" y="995.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="801.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (2 samples, 0.09%)</title><rect x="799.1" y="1043.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="799.1" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="799.1" y="1011.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="799.1" y="995.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="799.1" y="979.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.1" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="799.1" y="963.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="799.1" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="799.1" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.1" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="799.1" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.1" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="799.1" y="899.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="802.1" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="799.7" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampToBodyAndModifyEmptyBody (8 samples, 0.36%)</title><rect x="800.2" y="1043.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestampInternal (8 samples, 0.36%)</title><rect x="800.2" y="1027.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.04%)</title><rect x="800.2" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (1 samples, 0.04%)</title><rect x="800.2" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="803.2" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="800.2" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="803.2" y="990.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.04%)</title><rect x="800.2" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="803.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (4 samples, 0.18%)</title><rect x="800.7" y="1011.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Long.toString (4 samples, 0.18%)</title><rect x="800.7" y="995.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="803.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.04%)</title><rect x="800.7" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (3 samples, 0.13%)</title><rect x="801.3" y="979.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.3" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="802.3" y="963.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="805.3" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="802.3" y="947.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="805.3" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="802.3" y="931.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="805.3" y="942.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.toArray (3 samples, 0.13%)</title><rect x="802.8" y="1011.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.8" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (3 samples, 0.13%)</title><rect x="802.8" y="995.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.8" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.13%)</title><rect x="802.8" y="979.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.exactOutputSizeIfKnown (1 samples, 0.04%)</title><rect x="802.8" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (1 samples, 0.04%)</title><rect x="802.8" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.09%)</title><rect x="803.4" y="963.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.04%)</title><rect x="803.9" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.04%)</title><rect x="803.9" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.9" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.04%)</title><rect x="803.9" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.9" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.04%)</title><rect x="803.9" y="899.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="806.9" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (1 samples, 0.04%)</title><rect x="803.9" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (1 samples, 0.04%)</title><rect x="804.4" y="1043.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (1 samples, 0.04%)</title><rect x="805.0" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="805.0" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicatePutOrDelete (81 samples, 3.63%)</title><rect x="805.5" y="1059.0" width="42.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.5" y="1070.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergePutDeleteResponses (2 samples, 0.09%)</title><rect x="805.5" y="1043.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.5" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="806.0" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (79 samples, 3.54%)</title><rect x="806.5" y="1043.0" width="41.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.5" y="1054.0">ru/..</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="806.5" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (1 samples, 0.04%)</title><rect x="806.5" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.5" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.04%)</title><rect x="806.5" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.04%)</title><rect x="806.5" y="979.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (1 samples, 0.04%)</title><rect x="806.5" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.5" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.04%)</title><rect x="806.5" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.5" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.04%)</title><rect x="806.5" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.5" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.04%)</title><rect x="806.5" y="915.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (78 samples, 3.50%)</title><rect x="807.1" y="1027.0" width="41.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.1" y="1038.0">ru/..</text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="808.7" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.7" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.04%)</title><rect x="809.2" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.2" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="809.7" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.04%)</title><rect x="810.2" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (1 samples, 0.04%)</title><rect x="810.8" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.04%)</title><rect x="810.8" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="810.8" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.04%)</title><rect x="810.8" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.join (10 samples, 0.45%)</title><rect x="811.3" y="1011.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (10 samples, 0.45%)</title><rect x="811.3" y="995.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (9 samples, 0.40%)</title><rect x="811.8" y="979.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (9 samples, 0.40%)</title><rect x="811.8" y="963.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.40%)</title><rect x="811.8" y="947.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.40%)</title><rect x="811.8" y="931.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.8" y="942.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.09%)</title><rect x="811.8" y="915.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="814.8" y="926.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="811.8" y="899.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="814.8" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="812.4" y="899.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="815.4" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="812.4" y="883.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="815.4" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="812.4" y="867.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="815.4" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="812.4" y="851.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="815.4" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="812.4" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="815.4" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="812.4" y="819.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.4" y="830.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="812.4" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.4" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="812.4" y="787.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="815.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.31%)</title><rect x="812.9" y="915.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="815.9" y="926.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.09%)</title><rect x="812.9" y="899.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="815.9" y="910.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (5 samples, 0.22%)</title><rect x="813.9" y="899.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="816.9" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="815.0" y="883.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.0" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="815.0" y="867.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="818.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.13%)</title><rect x="815.0" y="851.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.0" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.13%)</title><rect x="815.0" y="835.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="818.0" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="815.5" y="819.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="818.5" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="816.1" y="819.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="819.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (1 samples, 0.04%)</title><rect x="816.6" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.04%)</title><rect x="816.6" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.04%)</title><rect x="816.6" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$375/154150596.accept (1 samples, 0.04%)</title><rect x="816.6" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.04%)</title><rect x="816.6" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.04%)</title><rect x="816.6" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="816.6" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.04%)</title><rect x="817.1" y="1011.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.04%)</title><rect x="817.1" y="995.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="820.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.04%)</title><rect x="817.1" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (1 samples, 0.04%)</title><rect x="817.1" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (1 samples, 0.04%)</title><rect x="817.1" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.04%)</title><rect x="817.1" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.04%)</title><rect x="817.1" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.04%)</title><rect x="817.1" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.04%)</title><rect x="817.1" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.04%)</title><rect x="817.1" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.04%)</title><rect x="817.1" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="820.1" y="862.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.04%)</title><rect x="817.1" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.1" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="817.6" y="1011.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="820.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (39 samples, 1.75%)</title><rect x="818.2" y="1011.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (38 samples, 1.70%)</title><rect x="818.7" y="995.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (38 samples, 1.70%)</title><rect x="818.7" y="979.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (38 samples, 1.70%)</title><rect x="818.7" y="963.0" width="20.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.13%)</title><rect x="818.7" y="947.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.13%)</title><rect x="818.7" y="931.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (3 samples, 0.13%)</title><rect x="818.7" y="915.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.13%)</title><rect x="818.7" y="899.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (18 samples, 0.81%)</title><rect x="820.3" y="947.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (15 samples, 0.67%)</title><rect x="820.3" y="931.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.3" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (15 samples, 0.67%)</title><rect x="820.3" y="915.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.3" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.67%)</title><rect x="820.3" y="899.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.3" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.31%)</title><rect x="820.3" y="883.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="823.3" y="894.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="820.8" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="823.8" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.18%)</title><rect x="821.3" y="867.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="824.3" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.13%)</title><rect x="821.9" y="851.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="824.9" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.13%)</title><rect x="821.9" y="835.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="824.9" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="822.9" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="825.9" y="830.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.04%)</title><rect x="823.5" y="867.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="826.5" y="878.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="823.5" y="851.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.5" y="862.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.04%)</title><rect x="823.5" y="835.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="826.5" y="846.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.04%)</title><rect x="824.0" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="827.0" y="894.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.04%)</title><rect x="824.5" y="883.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="827.5" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.27%)</title><rect x="825.1" y="883.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.1" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.27%)</title><rect x="825.1" y="867.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="825.1" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="825.1" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="825.1" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.09%)</title><rect x="825.6" y="851.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.6" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.09%)</title><rect x="825.6" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.6" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.09%)</title><rect x="825.6" y="819.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.6" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (2 samples, 0.09%)</title><rect x="825.6" y="803.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.6" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="826.1" y="787.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="829.1" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.04%)</title><rect x="826.6" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="826.6" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.6" y="846.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.09%)</title><rect x="827.2" y="851.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.2" y="862.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.04%)</title><rect x="827.7" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.7" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="827.7" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.7" y="830.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="827.7" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="827.7" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.09%)</title><rect x="828.2" y="931.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="828.8" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.04%)</title><rect x="828.8" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.04%)</title><rect x="829.3" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="832.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="829.3" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="829.3" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="832.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.04%)</title><rect x="829.3" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.04%)</title><rect x="829.3" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3 samples, 0.13%)</title><rect x="829.8" y="947.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="832.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3 samples, 0.13%)</title><rect x="829.8" y="931.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="832.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.09%)</title><rect x="830.3" y="915.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="833.3" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.09%)</title><rect x="830.3" y="899.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.3" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.09%)</title><rect x="830.3" y="883.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.3" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.09%)</title><rect x="830.3" y="867.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.3" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.09%)</title><rect x="830.3" y="851.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.09%)</title><rect x="830.3" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (2 samples, 0.09%)</title><rect x="830.3" y="819.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (1 samples, 0.04%)</title><rect x="830.3" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="833.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader0 (1 samples, 0.04%)</title><rect x="830.3" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.3" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.04%)</title><rect x="830.9" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="830.9" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="830.9" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (14 samples, 0.63%)</title><rect x="831.4" y="947.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (14 samples, 0.63%)</title><rect x="831.4" y="931.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.63%)</title><rect x="831.4" y="915.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (14 samples, 0.63%)</title><rect x="831.4" y="899.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (14 samples, 0.63%)</title><rect x="831.4" y="883.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="834.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (13 samples, 0.58%)</title><rect x="831.4" y="867.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.4" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="831.4" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.54%)</title><rect x="831.9" y="851.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.54%)</title><rect x="831.9" y="835.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.9" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.54%)</title><rect x="831.9" y="819.0" width="6.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="834.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.49%)</title><rect x="832.5" y="803.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="835.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.45%)</title><rect x="832.5" y="787.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="835.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.40%)</title><rect x="832.5" y="771.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="835.5" y="782.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.40%)</title><rect x="832.5" y="755.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="835.5" y="766.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.36%)</title><rect x="833.0" y="739.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="836.0" y="750.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.36%)</title><rect x="833.0" y="723.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.0" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.36%)</title><rect x="833.0" y="707.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="836.0" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.36%)</title><rect x="833.0" y="691.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.0" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="837.2" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="840.2" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="837.2" y="755.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="840.2" y="766.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.04%)</title><rect x="837.2" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="840.2" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="837.7" y="787.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.04%)</title><rect x="838.3" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.04%)</title><rect x="838.3" y="851.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.3" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="838.8" y="1011.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="841.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (16 samples, 0.72%)</title><rect x="839.3" y="1011.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.3" y="1022.0"></text>
</g>
<g>
<title>java/net/URI.create (13 samples, 0.58%)</title><rect x="839.3" y="995.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.3" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (13 samples, 0.58%)</title><rect x="839.3" y="979.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.3" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (13 samples, 0.58%)</title><rect x="839.3" y="963.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.3" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.04%)</title><rect x="839.3" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.3" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="839.3" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="839.3" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.04%)</title><rect x="839.3" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.04%)</title><rect x="839.3" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (10 samples, 0.45%)</title><rect x="839.9" y="947.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.9" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.04%)</title><rect x="839.9" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.9" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="839.9" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.9" y="926.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.04%)</title><rect x="839.9" y="899.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.9" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (9 samples, 0.40%)</title><rect x="840.4" y="931.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.4" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.27%)</title><rect x="840.4" y="915.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.4" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.04%)</title><rect x="840.4" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.4" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.04%)</title><rect x="840.9" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.9" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.04%)</title><rect x="840.9" y="883.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.9" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.04%)</title><rect x="840.9" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.9" y="878.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.04%)</title><rect x="840.9" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.9" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.04%)</title><rect x="840.9" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.9" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.18%)</title><rect x="841.4" y="899.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.09%)</title><rect x="841.4" y="883.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="841.4" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.04%)</title><rect x="842.0" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="842.5" y="883.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="842.5" y="867.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="843.0" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.13%)</title><rect x="843.6" y="915.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="844.1" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.04%)</title><rect x="844.1" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.1" y="894.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.04%)</title><rect x="844.6" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.6" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.09%)</title><rect x="845.2" y="947.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="845.2" y="931.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="845.2" y="915.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="848.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="845.2" y="899.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.2" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="845.7" y="883.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="848.7" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="845.7" y="867.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="848.7" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="845.7" y="851.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.7" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="845.7" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="848.7" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="845.7" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.7" y="830.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="845.7" y="803.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="848.7" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="845.7" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.09%)</title><rect x="846.2" y="995.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.09%)</title><rect x="846.2" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.2" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.04%)</title><rect x="846.7" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.04%)</title><rect x="846.7" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="846.7" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.7" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="846.7" y="915.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="849.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (1 samples, 0.04%)</title><rect x="847.3" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="847.3" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="847.3" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="847.3" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.putIntoLocalNode (1 samples, 0.04%)</title><rect x="847.8" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (65 samples, 2.91%)</title><rect x="848.3" y="1059.0" width="34.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.3" y="1070.0">ru..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.send (59 samples, 2.64%)</title><rect x="848.3" y="1043.0" width="31.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.3" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.send (59 samples, 2.64%)</title><rect x="848.3" y="1027.0" width="31.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.3" y="1038.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (4 samples, 0.18%)</title><rect x="848.3" y="1011.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (4 samples, 0.18%)</title><rect x="848.3" y="995.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (3 samples, 0.13%)</title><rect x="848.9" y="979.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (3 samples, 0.13%)</title><rect x="848.9" y="963.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.13%)</title><rect x="848.9" y="947.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.13%)</title><rect x="848.9" y="931.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.9" y="942.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="848.9" y="915.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="851.9" y="926.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="848.9" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="851.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.09%)</title><rect x="849.4" y="915.0" width="1.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="852.4" y="926.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.09%)</title><rect x="849.4" y="899.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="852.4" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="849.4" y="883.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="852.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="849.4" y="867.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.4" y="878.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="849.4" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="852.4" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="849.4" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="852.4" y="846.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="849.9" y="851.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.9" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="849.9" y="835.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="852.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (55 samples, 2.47%)</title><rect x="850.4" y="1011.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.4" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (13 samples, 0.58%)</title><rect x="850.4" y="995.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.4" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.04%)</title><rect x="850.4" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.4" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="850.4" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.04%)</title><rect x="851.0" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="854.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.04%)</title><rect x="851.0" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="854.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="851.0" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (10 samples, 0.45%)</title><rect x="851.5" y="979.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.5" y="990.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (10 samples, 0.45%)</title><rect x="851.5" y="963.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.5" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.45%)</title><rect x="851.5" y="947.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.5" y="958.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.27%)</title><rect x="851.5" y="931.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="854.5" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="852.6" y="915.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="855.6" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.04%)</title><rect x="852.6" y="899.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="855.6" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.09%)</title><rect x="853.1" y="915.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="856.1" y="926.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.04%)</title><rect x="853.6" y="899.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="856.6" y="910.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="854.1" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="857.1" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged@plt (1 samples, 0.04%)</title><rect x="854.7" y="931.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="857.7" y="942.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.04%)</title><rect x="855.2" y="931.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="858.2" y="942.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.04%)</title><rect x="855.7" y="931.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="858.7" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1 samples, 0.04%)</title><rect x="856.3" y="931.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.3" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1 samples, 0.04%)</title><rect x="856.3" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.3" y="926.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.04%)</title><rect x="856.3" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.3" y="910.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.04%)</title><rect x="856.3" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.3" y="894.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="856.3" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="859.3" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="856.3" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="856.3" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.04%)</title><rect x="856.8" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.8" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.04%)</title><rect x="856.8" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (42 samples, 1.88%)</title><rect x="857.3" y="995.0" width="22.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="860.3" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (41 samples, 1.84%)</title><rect x="857.3" y="979.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.3" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 1.84%)</title><rect x="857.3" y="963.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.3" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (41 samples, 1.84%)</title><rect x="857.3" y="947.0" width="21.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="860.3" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 1.79%)</title><rect x="857.8" y="931.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.8" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (40 samples, 1.79%)</title><rect x="857.8" y="915.0" width="21.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.8" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (39 samples, 1.75%)</title><rect x="858.4" y="899.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="861.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (39 samples, 1.75%)</title><rect x="858.4" y="883.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (39 samples, 1.75%)</title><rect x="858.4" y="867.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (29 samples, 1.30%)</title><rect x="858.4" y="851.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (29 samples, 1.30%)</title><rect x="858.4" y="835.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (29 samples, 1.30%)</title><rect x="858.4" y="819.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (13 samples, 0.58%)</title><rect x="858.4" y="803.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (13 samples, 0.58%)</title><rect x="858.4" y="787.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.58%)</title><rect x="858.4" y="771.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (13 samples, 0.58%)</title><rect x="858.4" y="755.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (13 samples, 0.58%)</title><rect x="858.4" y="739.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (13 samples, 0.58%)</title><rect x="858.4" y="723.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (1 samples, 0.04%)</title><rect x="858.4" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.04%)</title><rect x="858.4" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.04%)</title><rect x="858.4" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.04%)</title><rect x="858.4" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.04%)</title><rect x="858.4" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.04%)</title><rect x="858.4" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="858.4" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.4" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="858.4" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="858.4" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.4" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="858.4" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (1 samples, 0.04%)</title><rect x="858.4" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (12 samples, 0.54%)</title><rect x="858.9" y="707.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (12 samples, 0.54%)</title><rect x="858.9" y="691.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (12 samples, 0.54%)</title><rect x="858.9" y="675.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12 samples, 0.54%)</title><rect x="858.9" y="659.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12 samples, 0.54%)</title><rect x="858.9" y="643.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (12 samples, 0.54%)</title><rect x="858.9" y="627.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (12 samples, 0.54%)</title><rect x="858.9" y="611.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (9 samples, 0.40%)</title><rect x="858.9" y="595.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9 samples, 0.40%)</title><rect x="858.9" y="579.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.09%)</title><rect x="858.9" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.04%)</title><rect x="859.4" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.04%)</title><rect x="859.4" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.04%)</title><rect x="859.4" y="515.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.04%)</title><rect x="859.4" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="862.4" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.04%)</title><rect x="859.4" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.4" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.04%)</title><rect x="859.4" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="862.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.4" y="451.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="862.4" y="462.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.04%)</title><rect x="859.4" y="435.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="862.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="859.4" y="419.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="859.4" y="403.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="859.4" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.4" y="398.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="859.4" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.4" y="382.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.04%)</title><rect x="859.4" y="355.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="862.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7 samples, 0.31%)</title><rect x="860.0" y="563.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="863.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.31%)</title><rect x="860.0" y="547.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (6 samples, 0.27%)</title><rect x="860.0" y="531.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="863.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.27%)</title><rect x="860.0" y="515.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="863.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.27%)</title><rect x="860.0" y="499.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.0" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.27%)</title><rect x="860.0" y="483.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.0" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.27%)</title><rect x="860.0" y="467.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.27%)</title><rect x="860.0" y="451.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="863.0" y="462.0"></text>
</g>
<g>
<title>__GI_write (6 samples, 0.27%)</title><rect x="860.0" y="435.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="863.0" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.27%)</title><rect x="860.0" y="419.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="863.0" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.27%)</title><rect x="860.0" y="403.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="863.0" y="414.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.22%)</title><rect x="860.0" y="387.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="863.0" y="398.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.22%)</title><rect x="860.0" y="371.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="863.0" y="382.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.22%)</title><rect x="860.0" y="355.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="863.0" y="366.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.22%)</title><rect x="860.0" y="339.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="863.0" y="350.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.22%)</title><rect x="860.0" y="323.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="863.0" y="334.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.22%)</title><rect x="860.0" y="307.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="863.0" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.22%)</title><rect x="860.0" y="291.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="863.0" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.22%)</title><rect x="860.0" y="275.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.0" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.22%)</title><rect x="860.0" y="259.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="863.0" y="270.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="862.6" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.04%)</title><rect x="863.1" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.1" y="542.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="863.1" y="515.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="866.1" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.04%)</title><rect x="863.1" y="499.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="866.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3 samples, 0.13%)</title><rect x="863.7" y="595.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="866.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3 samples, 0.13%)</title><rect x="863.7" y="579.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.04%)</title><rect x="863.7" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.04%)</title><rect x="863.7" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.7" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="863.7" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="866.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (2 samples, 0.09%)</title><rect x="864.2" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.09%)</title><rect x="864.2" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.09%)</title><rect x="864.2" y="531.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.09%)</title><rect x="864.2" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (2 samples, 0.09%)</title><rect x="864.2" y="499.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.09%)</title><rect x="864.2" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.04%)</title><rect x="864.2" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.2" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (1 samples, 0.04%)</title><rect x="864.2" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.2" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="864.7" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (16 samples, 0.72%)</title><rect x="865.2" y="803.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (16 samples, 0.72%)</title><rect x="865.2" y="787.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (15 samples, 0.67%)</title><rect x="865.2" y="771.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (15 samples, 0.67%)</title><rect x="865.2" y="755.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="868.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.67%)</title><rect x="865.2" y="739.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.04%)</title><rect x="865.8" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (1 samples, 0.04%)</title><rect x="865.8" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (13 samples, 0.58%)</title><rect x="866.3" y="723.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="869.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (13 samples, 0.58%)</title><rect x="866.3" y="707.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (13 samples, 0.58%)</title><rect x="866.3" y="691.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (7 samples, 0.31%)</title><rect x="866.3" y="675.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (7 samples, 0.31%)</title><rect x="866.3" y="659.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="869.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (7 samples, 0.31%)</title><rect x="866.3" y="643.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (7 samples, 0.31%)</title><rect x="866.3" y="627.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (7 samples, 0.31%)</title><rect x="866.3" y="611.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (7 samples, 0.31%)</title><rect x="866.3" y="595.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (7 samples, 0.31%)</title><rect x="866.3" y="579.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (6 samples, 0.27%)</title><rect x="866.3" y="563.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (6 samples, 0.27%)</title><rect x="866.3" y="547.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (6 samples, 0.27%)</title><rect x="866.3" y="531.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="869.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (6 samples, 0.27%)</title><rect x="866.3" y="515.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.3" y="526.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.27%)</title><rect x="866.3" y="499.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.3" y="510.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (4 samples, 0.18%)</title><rect x="866.3" y="483.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="869.3" y="494.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="866.8" y="467.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="869.8" y="478.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.09%)</title><rect x="867.4" y="467.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="870.4" y="478.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.09%)</title><rect x="867.4" y="451.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="870.4" y="462.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.09%)</title><rect x="867.4" y="435.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="870.4" y="446.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="867.9" y="419.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="870.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.run (2 samples, 0.09%)</title><rect x="868.4" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.09%)</title><rect x="868.4" y="467.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.4" y="478.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.09%)</title><rect x="868.4" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.4" y="462.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.09%)</title><rect x="868.4" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.4" y="446.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (1 samples, 0.04%)</title><rect x="868.4" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="871.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="868.4" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.4" y="414.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="869.0" y="419.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.0" y="430.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.04%)</title><rect x="869.0" y="403.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.04%)</title><rect x="869.0" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.04%)</title><rect x="869.5" y="563.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="872.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="869.5" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="869.5" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (6 samples, 0.27%)</title><rect x="870.0" y="675.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (6 samples, 0.27%)</title><rect x="870.0" y="659.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="870.0" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.04%)</title><rect x="870.5" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.04%)</title><rect x="870.5" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.04%)</title><rect x="870.5" y="611.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="870.5" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="870.5" y="579.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.04%)</title><rect x="870.5" y="563.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.5" y="574.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.04%)</title><rect x="870.5" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.5" y="558.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.04%)</title><rect x="870.5" y="531.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.5" y="542.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.04%)</title><rect x="870.5" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.5" y="526.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.04%)</title><rect x="870.5" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (4 samples, 0.18%)</title><rect x="871.1" y="643.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.1" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (4 samples, 0.18%)</title><rect x="871.1" y="627.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.1" y="638.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (3 samples, 0.13%)</title><rect x="871.1" y="611.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="874.1" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.04%)</title><rect x="871.1" y="595.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="874.1" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="871.6" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.6" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="871.6" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="874.6" y="590.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.04%)</title><rect x="871.6" y="563.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="874.6" y="574.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.04%)</title><rect x="872.1" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="875.1" y="606.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="872.1" y="579.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="875.1" y="590.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.04%)</title><rect x="872.1" y="563.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="875.1" y="574.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="872.1" y="547.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="875.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (1 samples, 0.04%)</title><rect x="872.7" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="875.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.04%)</title><rect x="872.7" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.7" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.04%)</title><rect x="872.7" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.7" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.04%)</title><rect x="872.7" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.7" y="574.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.04%)</title><rect x="872.7" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.7" y="558.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.04%)</title><rect x="872.7" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="872.7" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (1 samples, 0.04%)</title><rect x="873.2" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (1 samples, 0.04%)</title><rect x="873.2" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (8 samples, 0.36%)</title><rect x="873.7" y="851.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.7" y="862.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.04%)</title><rect x="873.7" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.7" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.04%)</title><rect x="873.7" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.7" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.04%)</title><rect x="873.7" y="803.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.04%)</title><rect x="873.7" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.04%)</title><rect x="873.7" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.04%)</title><rect x="873.7" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.7" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.04%)</title><rect x="873.7" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.04%)</title><rect x="873.7" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (7 samples, 0.31%)</title><rect x="874.2" y="835.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (7 samples, 0.31%)</title><rect x="874.2" y="819.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.31%)</title><rect x="874.2" y="803.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.2" y="814.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.04%)</title><rect x="874.2" y="787.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="877.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.27%)</title><rect x="874.8" y="787.0" width="3.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="877.8" y="798.0"></text>
</g>
<g>
<title>__GI_write (6 samples, 0.27%)</title><rect x="874.8" y="771.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="877.8" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.22%)</title><rect x="875.3" y="755.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="878.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.22%)</title><rect x="875.3" y="739.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="878.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.22%)</title><rect x="875.3" y="723.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="878.3" y="734.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.22%)</title><rect x="875.3" y="707.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.3" y="718.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="875.3" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="878.3" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="875.3" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="878.3" y="686.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="875.3" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.3" y="670.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.18%)</title><rect x="875.8" y="691.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="878.8" y="702.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.13%)</title><rect x="875.8" y="675.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="878.8" y="686.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.13%)</title><rect x="875.8" y="659.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="878.8" y="670.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.13%)</title><rect x="875.8" y="643.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.8" y="654.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.13%)</title><rect x="875.8" y="627.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.8" y="638.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.13%)</title><rect x="875.8" y="611.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="878.8" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.13%)</title><rect x="875.8" y="595.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.8" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="877.4" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.4" y="686.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="877.4" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="880.4" y="670.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="877.4" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.4" y="654.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="877.4" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="880.4" y="638.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="877.4" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2 samples, 0.09%)</title><rect x="877.9" y="851.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.9" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.04%)</title><rect x="877.9" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.9" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.04%)</title><rect x="877.9" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.9" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.04%)</title><rect x="877.9" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.9" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.04%)</title><rect x="877.9" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (1 samples, 0.04%)</title><rect x="878.5" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.04%)</title><rect x="878.5" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.5" y="830.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.04%)</title><rect x="878.5" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.5" y="814.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.04%)</title><rect x="878.5" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.04%)</title><rect x="878.5" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.5" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="878.5" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="881.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.04%)</title><rect x="879.0" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="882.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="879.0" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="879.0" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.get$Lambda (1 samples, 0.04%)</title><rect x="879.0" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (4 samples, 0.18%)</title><rect x="879.5" y="1043.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="882.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="879.5" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="882.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/917819120.invoke (1 samples, 0.04%)</title><rect x="879.5" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="879.5" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="879.5" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="879.5" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.5" y="974.0"></text>
</g>
<g>
<title>java/net/URI.create (1 samples, 0.04%)</title><rect x="880.1" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="883.1" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1 samples, 0.04%)</title><rect x="880.1" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.04%)</title><rect x="880.1" y="995.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="883.1" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1 samples, 0.04%)</title><rect x="880.1" y="979.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.1" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.04%)</title><rect x="880.1" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="880.1" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="880.1" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.1" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="880.1" y="915.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="883.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1 samples, 0.04%)</title><rect x="880.6" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1 samples, 0.04%)</title><rect x="880.6" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="880.6" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.6" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="880.6" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="883.6" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="880.6" y="963.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="883.6" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="880.6" y="947.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="883.6" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="880.6" y="931.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="883.6" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="880.6" y="915.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="883.6" y="926.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="880.6" y="899.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="883.6" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="880.6" y="883.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="883.6" y="894.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="880.6" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="883.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethodName (1 samples, 0.04%)</title><rect x="881.1" y="1027.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (1 samples, 0.04%)</title><rect x="881.6" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.6" y="1054.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1 samples, 0.04%)</title><rect x="881.6" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (1 samples, 0.04%)</title><rect x="882.2" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="882.2" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/1479334731.run (1 samples, 0.04%)</title><rect x="882.7" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$put$3 (1 samples, 0.04%)</title><rect x="882.7" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="885.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="882.7" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="882.7" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.get$Lambda (1 samples, 0.04%)</title><rect x="882.7" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$125/38878096.&lt;init&gt; (1 samples, 0.04%)</title><rect x="882.7" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (152 samples, 6.81%)</title><rect x="883.2" y="1203.0" width="80.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.2" y="1214.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (152 samples, 6.81%)</title><rect x="883.2" y="1187.0" width="80.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.2" y="1198.0">java/util..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.04%)</title><rect x="885.3" y="1171.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.04%)</title><rect x="885.3" y="1155.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (81 samples, 3.63%)</title><rect x="885.9" y="1171.0" width="42.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="888.9" y="1182.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (2 samples, 0.09%)</title><rect x="888.5" y="1155.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (2 samples, 0.09%)</title><rect x="888.5" y="1139.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.04%)</title><rect x="888.5" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.04%)</title><rect x="889.0" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.04%)</title><rect x="889.6" y="1155.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.04%)</title><rect x="889.6" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (72 samples, 3.23%)</title><rect x="890.1" y="1155.0" width="38.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.1" y="1166.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (72 samples, 3.23%)</title><rect x="890.1" y="1139.0" width="38.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.1" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (70 samples, 3.14%)</title><rect x="890.1" y="1123.0" width="37.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="893.1" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (5 samples, 0.22%)</title><rect x="891.2" y="1107.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="891.7" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.04%)</title><rect x="891.7" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.09%)</title><rect x="892.2" y="1091.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.09%)</title><rect x="892.2" y="1075.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (2 samples, 0.09%)</title><rect x="892.2" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="895.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.09%)</title><rect x="892.2" y="1043.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.09%)</title><rect x="892.2" y="1027.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="895.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.09%)</title><rect x="892.2" y="1011.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="895.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="892.2" y="995.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="895.2" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="892.2" y="979.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.2" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="892.2" y="963.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="895.2" y="974.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="892.2" y="947.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.2" y="958.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.09%)</title><rect x="892.2" y="931.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.2" y="942.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.09%)</title><rect x="892.2" y="915.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="895.2" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.09%)</title><rect x="892.2" y="899.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="895.2" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.09%)</title><rect x="892.2" y="883.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$188/1091663911.accept (1 samples, 0.04%)</title><rect x="893.3" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.04%)</title><rect x="893.3" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.90%)</title><rect x="893.8" y="1107.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.04%)</title><rect x="893.8" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="893.8" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="896.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="893.8" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (13 samples, 0.58%)</title><rect x="894.3" y="1091.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.58%)</title><rect x="894.3" y="1075.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13 samples, 0.58%)</title><rect x="894.3" y="1059.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.58%)</title><rect x="894.3" y="1043.0" width="6.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.54%)</title><rect x="894.9" y="1027.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.54%)</title><rect x="894.9" y="1011.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.54%)</title><rect x="894.9" y="995.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (12 samples, 0.54%)</title><rect x="894.9" y="979.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (12 samples, 0.54%)</title><rect x="894.9" y="963.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.54%)</title><rect x="894.9" y="947.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.54%)</title><rect x="894.9" y="931.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.9" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.09%)</title><rect x="894.9" y="915.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="897.9" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="894.9" y="899.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="897.9" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="895.4" y="899.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="898.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.45%)</title><rect x="895.9" y="915.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="898.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.36%)</title><rect x="897.0" y="899.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.36%)</title><rect x="897.0" y="883.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="900.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.36%)</title><rect x="897.0" y="867.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.0" y="878.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.36%)</title><rect x="897.0" y="851.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.0" y="862.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.36%)</title><rect x="897.0" y="835.0" width="4.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="900.0" y="846.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.04%)</title><rect x="897.0" y="819.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.0" y="830.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.31%)</title><rect x="897.5" y="819.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.5" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.31%)</title><rect x="897.5" y="803.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.5" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.31%)</title><rect x="897.5" y="787.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$184/687509125.apply (6 samples, 0.27%)</title><rect x="901.2" y="1091.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (6 samples, 0.27%)</title><rect x="901.2" y="1075.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.2" y="1086.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.22%)</title><rect x="901.7" y="1059.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.7" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.22%)</title><rect x="901.7" y="1043.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (4 samples, 0.18%)</title><rect x="902.3" y="1027.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (3 samples, 0.13%)</title><rect x="902.8" y="1011.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="902.8" y="995.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.13%)</title><rect x="902.8" y="979.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (3 samples, 0.13%)</title><rect x="902.8" y="963.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.8" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="902.8" y="947.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.04%)</title><rect x="902.8" y="931.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="902.8" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.8" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="902.8" y="899.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="905.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="903.3" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.3" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="903.3" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="906.3" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="903.3" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="906.3" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="903.3" y="883.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="906.3" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="903.3" y="867.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="906.3" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="903.3" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="906.3" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="903.3" y="835.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="906.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.04%)</title><rect x="903.9" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.04%)</title><rect x="903.9" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.9" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="903.9" y="899.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="906.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (19 samples, 0.85%)</title><rect x="904.4" y="1107.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.76%)</title><rect x="904.4" y="1091.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.76%)</title><rect x="904.4" y="1075.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="904.9" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="904.9" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (15 samples, 0.67%)</title><rect x="905.4" y="1059.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.67%)</title><rect x="905.4" y="1043.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.67%)</title><rect x="905.4" y="1027.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.67%)</title><rect x="905.4" y="1011.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (15 samples, 0.67%)</title><rect x="905.4" y="995.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.67%)</title><rect x="905.4" y="979.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.67%)</title><rect x="905.4" y="963.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.67%)</title><rect x="905.4" y="947.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.4" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="905.4" y="931.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="908.4" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="905.4" y="915.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="908.4" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.63%)</title><rect x="906.0" y="931.0" width="7.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="909.0" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.63%)</title><rect x="906.0" y="915.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="909.0" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.63%)</title><rect x="906.0" y="899.0" width="7.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="909.0" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.63%)</title><rect x="906.0" y="883.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="909.0" y="894.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.63%)</title><rect x="906.0" y="867.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="909.0" y="878.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.63%)</title><rect x="906.0" y="851.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="909.0" y="862.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.13%)</title><rect x="906.0" y="835.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="909.0" y="846.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.04%)</title><rect x="907.0" y="819.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="910.0" y="830.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.49%)</title><rect x="907.6" y="835.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.6" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.49%)</title><rect x="907.6" y="819.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.6" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.49%)</title><rect x="907.6" y="803.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="910.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.09%)</title><rect x="913.4" y="1091.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.04%)</title><rect x="913.4" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.04%)</title><rect x="913.4" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="916.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.04%)</title><rect x="913.4" y="1043.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.04%)</title><rect x="913.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (1 samples, 0.04%)</title><rect x="913.4" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$185/1491507656.apply (1 samples, 0.04%)</title><rect x="913.9" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.filterResponse (1 samples, 0.04%)</title><rect x="913.9" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (1 samples, 0.04%)</title><rect x="913.9" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="913.9" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (24 samples, 1.08%)</title><rect x="914.4" y="1107.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (20 samples, 0.90%)</title><rect x="915.5" y="1091.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20 samples, 0.90%)</title><rect x="915.5" y="1075.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.90%)</title><rect x="915.5" y="1059.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (19 samples, 0.85%)</title><rect x="916.0" y="1043.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (19 samples, 0.85%)</title><rect x="916.0" y="1027.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="919.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (19 samples, 0.85%)</title><rect x="916.0" y="1011.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (19 samples, 0.85%)</title><rect x="916.0" y="995.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (19 samples, 0.85%)</title><rect x="916.0" y="979.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="919.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.85%)</title><rect x="916.0" y="963.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.85%)</title><rect x="916.0" y="947.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.0" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.13%)</title><rect x="916.0" y="931.0" width="1.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="919.0" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="916.0" y="915.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="919.0" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="916.6" y="915.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="919.6" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.04%)</title><rect x="917.1" y="915.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="920.1" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.72%)</title><rect x="917.6" y="931.0" width="8.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="920.6" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.63%)</title><rect x="918.7" y="915.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="921.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.63%)</title><rect x="918.7" y="899.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.63%)</title><rect x="918.7" y="883.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="921.7" y="894.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.63%)</title><rect x="918.7" y="867.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.7" y="878.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.63%)</title><rect x="918.7" y="851.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="921.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="918.7" y="835.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.7" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="919.2" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="922.2" y="846.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.04%)</title><rect x="919.2" y="819.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.2" y="830.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.54%)</title><rect x="919.7" y="835.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="922.7" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.49%)</title><rect x="920.3" y="819.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.3" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.49%)</title><rect x="920.3" y="803.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.09%)</title><rect x="926.1" y="1091.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.09%)</title><rect x="926.1" y="1075.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.09%)</title><rect x="926.1" y="1059.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$182/1095779376.accept (2 samples, 0.09%)</title><rect x="926.1" y="1043.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.1" y="1054.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.09%)</title><rect x="927.1" y="1123.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="930.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.04%)</title><rect x="928.2" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="928.2" y="1139.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="928.2" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.2" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="928.2" y="1107.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="931.2" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="928.2" y="1091.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.2" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="928.2" y="1075.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="931.2" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="928.2" y="1059.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.2" y="1070.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="928.2" y="1043.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.2" y="1054.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="928.2" y="1027.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="931.2" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="928.2" y="1011.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.2" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="928.2" y="995.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.2" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="928.2" y="979.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="931.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 1.79%)</title><rect x="928.7" y="1171.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.7" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 1.79%)</title><rect x="928.7" y="1155.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.7" y="1166.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="929.2" y="1139.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="932.2" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.72%)</title><rect x="929.8" y="1139.0" width="8.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="932.8" y="1150.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="929.8" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="932.8" y="1134.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="929.8" y="1107.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="932.8" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.22%)</title><rect x="930.3" y="1123.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="933.3" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.09%)</title><rect x="930.8" y="1107.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="933.8" y="1118.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="931.9" y="1107.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="934.9" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="932.4" y="1107.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="935.4" y="1118.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.09%)</title><rect x="932.9" y="1123.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="935.9" y="1134.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.27%)</title><rect x="934.0" y="1123.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="937.0" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.22%)</title><rect x="934.5" y="1107.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="937.5" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.22%)</title><rect x="934.5" y="1091.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.5" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="935.6" y="1075.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="938.6" y="1086.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="935.6" y="1059.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="938.6" y="1070.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.09%)</title><rect x="935.6" y="1043.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.6" y="1054.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.09%)</title><rect x="935.6" y="1027.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.6" y="1038.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="936.7" y="1075.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.7" y="1086.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="936.7" y="1059.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="939.7" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.09%)</title><rect x="937.2" y="1123.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="940.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.99%)</title><rect x="938.2" y="1139.0" width="11.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="941.2" y="1150.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="938.2" y="1123.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="941.2" y="1134.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="938.8" y="1123.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="941.8" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (20 samples, 0.90%)</title><rect x="939.3" y="1123.0" width="10.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="942.3" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.67%)</title><rect x="941.9" y="1107.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="944.9" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.67%)</title><rect x="941.9" y="1091.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="944.9" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.63%)</title><rect x="941.9" y="1075.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="944.9" y="1086.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.58%)</title><rect x="942.5" y="1059.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="945.5" y="1070.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.58%)</title><rect x="942.5" y="1043.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="945.5" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.36%)</title><rect x="944.1" y="1027.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.1" y="1038.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="944.6" y="1011.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.6" y="1022.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="944.6" y="995.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.6" y="1006.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.27%)</title><rect x="945.1" y="1011.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.1" y="1022.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.27%)</title><rect x="945.1" y="995.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="948.1" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.22%)</title><rect x="945.6" y="979.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.6" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.09%)</title><rect x="948.3" y="1027.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="951.3" y="1038.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.04%)</title><rect x="948.8" y="1011.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="951.8" y="1022.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="949.3" y="1075.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="952.3" y="1086.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="949.3" y="1059.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="952.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (26 samples, 1.17%)</title><rect x="949.9" y="1171.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 1.17%)</title><rect x="949.9" y="1155.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.9" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.27%)</title><rect x="950.4" y="1139.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="953.4" y="1150.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="950.9" y="1123.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="953.9" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.09%)</title><rect x="951.5" y="1123.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="954.5" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="952.0" y="1107.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="955.0" y="1118.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="952.5" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.5" y="1134.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.04%)</title><rect x="953.0" y="1123.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="956.0" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (19 samples, 0.85%)</title><rect x="953.6" y="1139.0" width="10.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="956.6" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.76%)</title><rect x="954.6" y="1123.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.6" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.76%)</title><rect x="954.6" y="1107.0" width="9.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.6" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.67%)</title><rect x="955.2" y="1091.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="958.2" y="1102.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.67%)</title><rect x="955.2" y="1075.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="958.2" y="1086.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.67%)</title><rect x="955.2" y="1059.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="958.2" y="1070.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.40%)</title><rect x="955.7" y="1043.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="958.7" y="1054.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.04%)</title><rect x="956.2" y="1027.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.2" y="1038.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="956.2" y="1011.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="959.2" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="956.2" y="995.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="959.2" y="1006.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.31%)</title><rect x="956.8" y="1027.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="959.8" y="1038.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.31%)</title><rect x="956.8" y="1011.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.8" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.27%)</title><rect x="957.3" y="995.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="960.3" y="1006.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.09%)</title><rect x="960.5" y="1043.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="963.5" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="961.0" y="1027.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="964.0" y="1038.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.13%)</title><rect x="961.5" y="1043.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.5" y="1054.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.13%)</title><rect x="961.5" y="1027.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="964.5" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="961.5" y="1011.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="964.5" y="1022.0"></text>
</g>
<g>
<title>hrtimer_active (2 samples, 0.09%)</title><rect x="962.0" y="1011.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.0" y="1022.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="963.1" y="1091.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.1" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="963.1" y="1075.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="966.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (218 samples, 9.77%)</title><rect x="963.6" y="1203.0" width="115.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.6" y="1214.0">jdk/internal/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.13%)</title><rect x="965.2" y="1187.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="968.2" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.13%)</title><rect x="965.2" y="1171.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="968.2" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.13%)</title><rect x="965.2" y="1155.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="968.2" y="1166.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.13%)</title><rect x="965.2" y="1139.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="968.2" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.04%)</title><rect x="966.8" y="1187.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.8" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.04%)</title><rect x="967.3" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.3" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.04%)</title><rect x="967.3" y="1171.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.13%)</title><rect x="967.9" y="1187.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.9" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.13%)</title><rect x="967.9" y="1171.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.9" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.09%)</title><rect x="968.4" y="1155.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.09%)</title><rect x="968.4" y="1139.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.09%)</title><rect x="969.4" y="1187.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.4" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (47 samples, 2.11%)</title><rect x="970.5" y="1187.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.5" y="1198.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.elementAt (1 samples, 0.04%)</title><rect x="971.6" y="1171.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/746362896.accept (43 samples, 1.93%)</title><rect x="972.1" y="1171.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.1" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (43 samples, 1.93%)</title><rect x="972.1" y="1155.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.1" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (43 samples, 1.93%)</title><rect x="972.1" y="1139.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.1" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (43 samples, 1.93%)</title><rect x="972.1" y="1123.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.1" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (43 samples, 1.93%)</title><rect x="972.1" y="1107.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="975.1" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.04%)</title><rect x="972.6" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.04%)</title><rect x="972.6" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.04%)</title><rect x="972.6" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.6" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="972.6" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="972.6" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="975.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="972.6" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (41 samples, 1.84%)</title><rect x="973.1" y="1091.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.1" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (41 samples, 1.84%)</title><rect x="973.1" y="1075.0" width="21.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.1" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (41 samples, 1.84%)</title><rect x="973.1" y="1059.0" width="21.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.1" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.13%)</title><rect x="973.1" y="1043.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.13%)</title><rect x="973.1" y="1027.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.13%)</title><rect x="973.1" y="1011.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="973.1" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="973.7" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="973.7" y="979.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.7" y="990.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.09%)</title><rect x="973.7" y="963.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="976.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 1.70%)</title><rect x="974.7" y="1043.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (38 samples, 1.70%)</title><rect x="974.7" y="1027.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (37 samples, 1.66%)</title><rect x="974.7" y="1011.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="977.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (37 samples, 1.66%)</title><rect x="974.7" y="995.0" width="19.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.85%)</title><rect x="974.7" y="979.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="977.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.85%)</title><rect x="974.7" y="963.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="977.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (19 samples, 0.85%)</title><rect x="974.7" y="947.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.85%)</title><rect x="974.7" y="931.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.85%)</title><rect x="974.7" y="915.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.85%)</title><rect x="974.7" y="899.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.85%)</title><rect x="974.7" y="883.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (19 samples, 0.85%)</title><rect x="974.7" y="867.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (19 samples, 0.85%)</title><rect x="974.7" y="851.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (19 samples, 0.85%)</title><rect x="974.7" y="835.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="977.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="974.7" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.81%)</title><rect x="975.3" y="819.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.81%)</title><rect x="975.3" y="803.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.3" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.09%)</title><rect x="975.3" y="787.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="978.3" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="975.3" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="978.3" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="975.8" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="978.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.72%)</title><rect x="976.3" y="787.0" width="8.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="979.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.67%)</title><rect x="976.8" y="771.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="979.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.67%)</title><rect x="976.8" y="755.0" width="8.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.63%)</title><rect x="976.8" y="739.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="979.8" y="750.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.63%)</title><rect x="976.8" y="723.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="979.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.63%)</title><rect x="976.8" y="707.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="976.8" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="979.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.58%)</title><rect x="977.4" y="691.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="980.4" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.54%)</title><rect x="977.9" y="675.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.54%)</title><rect x="977.9" y="659.0" width="6.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.9" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="984.3" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="987.3" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="984.3" y="723.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="987.3" y="734.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.04%)</title><rect x="984.3" y="707.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="987.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.04%)</title><rect x="984.8" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.04%)</title><rect x="984.8" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (17 samples, 0.76%)</title><rect x="985.3" y="979.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.04%)</title><rect x="986.4" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.04%)</title><rect x="986.4" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="989.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.04%)</title><rect x="986.9" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$227/1265580574.get (1 samples, 0.04%)</title><rect x="986.9" y="947.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.04%)</title><rect x="986.9" y="931.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="986.9" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.9" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="986.9" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (13 samples, 0.58%)</title><rect x="987.4" y="963.0" width="6.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.58%)</title><rect x="987.4" y="947.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.58%)</title><rect x="987.4" y="931.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.4" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="987.4" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="990.4" y="926.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.04%)</title><rect x="987.4" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="990.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.04%)</title><rect x="987.4" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="990.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.04%)</title><rect x="987.4" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.04%)</title><rect x="987.4" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.04%)</title><rect x="987.4" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.04%)</title><rect x="987.4" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.54%)</title><rect x="988.0" y="915.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (12 samples, 0.54%)</title><rect x="988.0" y="899.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="991.0" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (12 samples, 0.54%)</title><rect x="988.0" y="883.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="991.0" y="894.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (1 samples, 0.04%)</title><rect x="988.5" y="867.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="991.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.40%)</title><rect x="989.0" y="867.0" width="4.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="992.0" y="878.0"></text>
</g>
<g>
<title>__GI___libc_read (9 samples, 0.40%)</title><rect x="989.0" y="851.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="992.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.40%)</title><rect x="989.0" y="835.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="989.0" y="819.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.36%)</title><rect x="989.5" y="819.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="992.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_read (8 samples, 0.36%)</title><rect x="989.5" y="803.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.5" y="814.0"></text>
</g>
<g>
<title>ksys_read (8 samples, 0.36%)</title><rect x="989.5" y="787.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="992.5" y="798.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="989.5" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="989.5" y="755.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="992.5" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="989.5" y="739.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="992.5" y="750.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.31%)</title><rect x="990.1" y="771.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.1" y="782.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.22%)</title><rect x="990.6" y="755.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="993.6" y="766.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.22%)</title><rect x="990.6" y="739.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="993.6" y="750.0"></text>
</g>
<g>
<title>sock_read_iter (5 samples, 0.22%)</title><rect x="990.6" y="723.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="993.6" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.22%)</title><rect x="990.6" y="707.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="993.6" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="990.6" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="993.6" y="702.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.13%)</title><rect x="991.1" y="691.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.1" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.09%)</title><rect x="991.7" y="675.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="994.7" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="992.7" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="995.7" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="992.7" y="675.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="995.7" y="686.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="993.2" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.2" y="766.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="993.2" y="739.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="996.2" y="750.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="993.2" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.2" y="734.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="993.2" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.2" y="718.0"></text>
</g>
<g>
<title>__GI___errno_location (1 samples, 0.04%)</title><rect x="993.8" y="867.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="996.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.04%)</title><rect x="994.3" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.04%)</title><rect x="994.3" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/1215200694.accept (1 samples, 0.04%)</title><rect x="994.8" y="1171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1 samples, 0.04%)</title><rect x="994.8" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/1808560965.run (1 samples, 0.04%)</title><rect x="994.8" y="1139.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.04%)</title><rect x="994.8" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.04%)</title><rect x="994.8" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.04%)</title><rect x="994.8" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.04%)</title><rect x="994.8" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.13%)</title><rect x="995.4" y="1187.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.13%)</title><rect x="995.4" y="1171.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="998.4" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.13%)</title><rect x="995.4" y="1155.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.4" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.13%)</title><rect x="995.4" y="1139.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.13%)</title><rect x="995.4" y="1123.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.4" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.13%)</title><rect x="995.4" y="1107.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.09%)</title><rect x="995.4" y="1091.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="998.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.04%)</title><rect x="995.4" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.04%)</title><rect x="995.4" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$355/234934899.accept (1 samples, 0.04%)</title><rect x="995.4" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.4" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="995.4" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.4" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="995.4" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$354/272296365.test (1 samples, 0.04%)</title><rect x="995.9" y="1075.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.9" y="1086.0"></text>
</g>
<g>
<title>java/util/Spliterator$OfInt.forEachRemaining (1 samples, 0.04%)</title><rect x="996.4" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.forEachRemaining (1 samples, 0.04%)</title><rect x="996.4" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (64 samples, 2.87%)</title><rect x="996.9" y="1187.0" width="33.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.9" y="1198.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1656106719.run (28 samples, 1.26%)</title><rect x="996.9" y="1171.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="999.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (28 samples, 1.26%)</title><rect x="996.9" y="1155.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 1.26%)</title><rect x="996.9" y="1139.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 1.26%)</title><rect x="996.9" y="1123.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (28 samples, 1.26%)</title><rect x="996.9" y="1107.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (28 samples, 1.26%)</title><rect x="996.9" y="1091.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (27 samples, 1.21%)</title><rect x="997.5" y="1075.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (27 samples, 1.21%)</title><rect x="997.5" y="1059.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (27 samples, 1.21%)</title><rect x="997.5" y="1043.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.04%)</title><rect x="998.0" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.04%)</title><rect x="998.0" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.04%)</title><rect x="998.0" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.04%)</title><rect x="998.5" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (24 samples, 1.08%)</title><rect x="999.1" y="1027.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (24 samples, 1.08%)</title><rect x="999.1" y="1011.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 1.08%)</title><rect x="999.1" y="995.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 1.08%)</title><rect x="999.1" y="979.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 1.03%)</title><rect x="999.1" y="963.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 1.03%)</title><rect x="999.1" y="947.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1002.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.04%)</title><rect x="999.1" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.04%)</title><rect x="999.1" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1002.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (22 samples, 0.99%)</title><rect x="999.6" y="931.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (22 samples, 0.99%)</title><rect x="999.6" y="915.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1002.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (22 samples, 0.99%)</title><rect x="999.6" y="899.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.09%)</title><rect x="999.6" y="883.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="1000.1" y="867.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.1" y="878.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="1000.1" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.90%)</title><rect x="1000.6" y="883.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.90%)</title><rect x="1000.6" y="867.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.6" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="1000.6" y="851.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1003.6" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.09%)</title><rect x="1001.2" y="851.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1004.2" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="1001.2" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1004.2" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1001.7" y="835.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1004.7" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.72%)</title><rect x="1002.2" y="851.0" width="8.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1005.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.72%)</title><rect x="1002.2" y="835.0" width="8.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.72%)</title><rect x="1002.2" y="819.0" width="8.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1005.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.67%)</title><rect x="1002.2" y="803.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1005.2" y="814.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.63%)</title><rect x="1002.2" y="787.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1005.2" y="798.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.63%)</title><rect x="1002.2" y="771.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1005.2" y="782.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.58%)</title><rect x="1002.8" y="755.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1005.8" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.54%)</title><rect x="1003.3" y="739.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1006.3" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.54%)</title><rect x="1003.3" y="723.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.3" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1009.6" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.6" y="798.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1010.2" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1013.2" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="1010.2" y="787.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1013.2" y="798.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1010.7" y="851.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1013.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.04%)</title><rect x="1011.2" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.04%)</title><rect x="1011.2" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1005357483.run (36 samples, 1.61%)</title><rect x="1011.8" y="1171.0" width="19.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (36 samples, 1.61%)</title><rect x="1011.8" y="1155.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 1.57%)</title><rect x="1011.8" y="1139.0" width="18.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 1.57%)</title><rect x="1011.8" y="1123.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.04%)</title><rect x="1011.8" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="1011.8" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="1011.8" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (34 samples, 1.52%)</title><rect x="1012.3" y="1107.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1015.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (34 samples, 1.52%)</title><rect x="1012.3" y="1091.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (30 samples, 1.34%)</title><rect x="1012.8" y="1075.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.09%)</title><rect x="1012.8" y="1059.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (28 samples, 1.26%)</title><rect x="1013.9" y="1059.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 1.26%)</title><rect x="1013.9" y="1043.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.9" y="1054.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="1013.9" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.9" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.13%)</title><rect x="1014.4" y="1027.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1017.4" y="1038.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="1014.9" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.9" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="1015.5" y="1011.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1018.5" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 1.03%)</title><rect x="1016.0" y="1027.0" width="12.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1019.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.90%)</title><rect x="1017.6" y="1011.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1020.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.90%)</title><rect x="1017.6" y="995.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.6" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.90%)</title><rect x="1017.6" y="979.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.6" y="990.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.90%)</title><rect x="1017.6" y="963.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1020.6" y="974.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 0.85%)</title><rect x="1018.1" y="947.0" width="10.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1021.1" y="958.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.81%)</title><rect x="1018.6" y="931.0" width="9.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.6" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.81%)</title><rect x="1018.6" y="915.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1021.6" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (18 samples, 0.81%)</title><rect x="1018.6" y="899.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1021.6" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1028.2" y="1027.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1031.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.13%)</title><rect x="1028.7" y="1075.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1028.7" y="1059.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.04%)</title><rect x="1030.3" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.04%)</title><rect x="1030.3" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.04%)</title><rect x="1030.3" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.04%)</title><rect x="1030.3" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.09%)</title><rect x="1030.8" y="1187.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.09%)</title><rect x="1030.8" y="1171.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1 samples, 0.04%)</title><rect x="1031.3" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1031.3" y="1139.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1031.9" y="1187.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.9" y="1198.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1031.9" y="1171.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.9" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1032.9" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.04%)</title><rect x="1033.4" y="1187.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.04%)</title><rect x="1033.4" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.4" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="1033.4" y="1155.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1036.4" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="1033.4" y="1139.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1036.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (10 samples, 0.45%)</title><rect x="1034.0" y="1187.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1037.0" y="1198.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.22%)</title><rect x="1034.0" y="1171.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.0" y="1182.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.22%)</title><rect x="1034.0" y="1155.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.22%)</title><rect x="1034.0" y="1139.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.0" y="1150.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.18%)</title><rect x="1034.5" y="1123.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1037.5" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.09%)</title><rect x="1035.6" y="1107.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1038.6" y="1118.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="1036.1" y="1091.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1039.1" y="1102.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1036.1" y="1075.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1039.1" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.04%)</title><rect x="1036.6" y="1171.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.6" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.09%)</title><rect x="1037.1" y="1171.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.1" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.09%)</title><rect x="1037.1" y="1155.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.1" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1037.1" y="1139.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.1" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1037.1" y="1123.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.1" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1037.7" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1040.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.04%)</title><rect x="1037.7" y="1091.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1040.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.handle (2 samples, 0.09%)</title><rect x="1038.2" y="1171.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.2" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (70 samples, 3.14%)</title><rect x="1039.3" y="1187.0" width="37.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.3" y="1198.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (70 samples, 3.14%)</title><rect x="1039.3" y="1171.0" width="37.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.3" y="1182.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (69 samples, 3.09%)</title><rect x="1039.8" y="1155.0" width="36.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1042.8" y="1166.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (40 samples, 1.79%)</title><rect x="1040.3" y="1139.0" width="21.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.3" y="1150.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.04%)</title><rect x="1040.8" y="1123.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1043.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.66%)</title><rect x="1041.4" y="1123.0" width="19.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1044.4" y="1134.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="1041.4" y="1107.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1044.4" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (36 samples, 1.61%)</title><rect x="1041.9" y="1107.0" width="19.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1044.9" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 1.57%)</title><rect x="1042.4" y="1091.0" width="18.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1045.4" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 1.57%)</title><rect x="1042.4" y="1075.0" width="18.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1045.4" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 1.34%)</title><rect x="1043.0" y="1059.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1046.0" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 1.34%)</title><rect x="1043.0" y="1043.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1046.0" y="1054.0"></text>
</g>
<g>
<title>ep_poll (29 samples, 1.30%)</title><rect x="1043.0" y="1027.0" width="15.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1046.0" y="1038.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (8 samples, 0.36%)</title><rect x="1044.5" y="1011.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1047.5" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.36%)</title><rect x="1044.5" y="995.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.5" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (8 samples, 0.36%)</title><rect x="1044.5" y="979.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1047.5" y="990.0"></text>
</g>
<g>
<title>pipe_poll (4 samples, 0.18%)</title><rect x="1046.1" y="963.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1049.1" y="974.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1048.3" y="963.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1051.3" y="974.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.04%)</title><rect x="1048.8" y="1011.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.8" y="1022.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="1049.3" y="1011.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1052.3" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (14 samples, 0.63%)</title><rect x="1049.8" y="1011.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1052.8" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (14 samples, 0.63%)</title><rect x="1049.8" y="995.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1052.8" y="1006.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.04%)</title><rect x="1049.8" y="979.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1052.8" y="990.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (2 samples, 0.09%)</title><rect x="1050.4" y="979.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1053.4" y="990.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.09%)</title><rect x="1050.4" y="963.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.18%)</title><rect x="1051.4" y="979.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1054.4" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.18%)</title><rect x="1051.4" y="963.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1054.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (4 samples, 0.18%)</title><rect x="1053.5" y="979.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1056.5" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.18%)</title><rect x="1053.5" y="963.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.5" y="974.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.13%)</title><rect x="1055.7" y="979.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1058.7" y="990.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.13%)</title><rect x="1055.7" y="963.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1058.7" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.13%)</title><rect x="1055.7" y="947.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1058.7" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="1057.2" y="1011.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1060.2" y="1022.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.04%)</title><rect x="1057.8" y="1011.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1060.8" y="1022.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1058.3" y="1027.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1061.3" y="1038.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="1058.8" y="1059.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.8" y="1070.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.13%)</title><rect x="1059.4" y="1059.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1062.4" y="1070.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="1060.4" y="1043.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1063.4" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="1060.9" y="1123.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1063.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (25 samples, 1.12%)</title><rect x="1061.5" y="1139.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.04%)</title><rect x="1061.5" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1062.0" y="1123.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.0" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1062.0" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.0" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (20 samples, 0.90%)</title><rect x="1062.5" y="1123.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (19 samples, 0.85%)</title><rect x="1063.1" y="1107.0" width="10.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.1" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="1063.1" y="1091.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.1" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.04%)</title><rect x="1063.1" y="1075.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1066.1" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1063.1" y="1059.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.1" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1063.1" y="1043.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1066.1" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="1063.1" y="1027.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1066.1" y="1038.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.04%)</title><rect x="1063.1" y="1011.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1066.1" y="1022.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="1063.1" y="995.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1066.1" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="1063.1" y="979.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1066.1" y="990.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="1063.1" y="963.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.1" y="974.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.04%)</title><rect x="1063.1" y="947.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1066.1" y="958.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="1063.1" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1066.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.63%)</title><rect x="1063.6" y="1091.0" width="7.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1066.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.63%)</title><rect x="1063.6" y="1075.0" width="7.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1066.6" y="1086.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.04%)</title><rect x="1063.6" y="1059.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1066.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1063.6" y="1043.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1066.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1063.6" y="1027.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1066.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.04%)</title><rect x="1063.6" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1066.6" y="1022.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.04%)</title><rect x="1063.6" y="995.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1066.6" y="1006.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.04%)</title><rect x="1063.6" y="979.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1066.6" y="990.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.04%)</title><rect x="1063.6" y="963.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1066.6" y="974.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.04%)</title><rect x="1063.6" y="947.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.6" y="958.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.04%)</title><rect x="1063.6" y="931.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1066.6" y="942.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="1063.6" y="915.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.6" y="926.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.40%)</title><rect x="1064.1" y="1059.0" width="4.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1067.1" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (9 samples, 0.40%)</title><rect x="1064.1" y="1043.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1067.1" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_read (8 samples, 0.36%)</title><rect x="1064.1" y="1027.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1067.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.36%)</title><rect x="1064.1" y="1011.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1067.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.36%)</title><rect x="1064.1" y="995.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.1" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (5 samples, 0.22%)</title><rect x="1065.2" y="979.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.2" y="990.0"></text>
</g>
<g>
<title>ksys_read (5 samples, 0.22%)</title><rect x="1065.2" y="963.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1068.2" y="974.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="1065.2" y="947.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.2" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1065.2" y="931.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1068.2" y="942.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1065.2" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1068.2" y="926.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.18%)</title><rect x="1065.7" y="947.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1068.7" y="958.0"></text>
</g>
<g>
<title>__vfs_read (3 samples, 0.13%)</title><rect x="1065.7" y="931.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1068.7" y="942.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.13%)</title><rect x="1065.7" y="915.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.7" y="926.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.13%)</title><rect x="1065.7" y="899.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1068.7" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.04%)</title><rect x="1066.2" y="883.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1069.2" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="1066.2" y="867.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1069.2" y="878.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="1066.8" y="883.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1069.8" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.04%)</title><rect x="1067.3" y="931.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.3" y="942.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.04%)</title><rect x="1067.8" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1070.8" y="990.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.04%)</title><rect x="1067.8" y="963.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.8" y="974.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="1067.8" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.8" y="958.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="1068.4" y="1027.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1071.4" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.18%)</title><rect x="1068.9" y="1059.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1071.9" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_read (4 samples, 0.18%)</title><rect x="1068.9" y="1043.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1071.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.18%)</title><rect x="1068.9" y="1027.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1071.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.18%)</title><rect x="1068.9" y="1011.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1071.9" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (3 samples, 0.13%)</title><rect x="1068.9" y="995.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.9" y="1006.0"></text>
</g>
<g>
<title>ksys_read (3 samples, 0.13%)</title><rect x="1068.9" y="979.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1071.9" y="990.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1068.9" y="963.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.9" y="974.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1068.9" y="947.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1071.9" y="958.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.09%)</title><rect x="1069.4" y="963.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1072.4" y="974.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.09%)</title><rect x="1069.4" y="947.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1072.4" y="958.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.09%)</title><rect x="1069.4" y="931.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1072.4" y="942.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.09%)</title><rect x="1069.4" y="915.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1072.4" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.04%)</title><rect x="1069.9" y="899.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1072.9" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="1069.9" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1072.9" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.04%)</title><rect x="1069.9" y="867.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1072.9" y="878.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="1070.5" y="995.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1073.5" y="1006.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="1070.5" y="979.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1073.5" y="990.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1070.5" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1073.5" y="974.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.13%)</title><rect x="1071.0" y="1091.0" width="1.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1074.0" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_read (3 samples, 0.13%)</title><rect x="1071.0" y="1075.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1074.0" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="1071.0" y="1059.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1074.0" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="1071.0" y="1043.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1074.0" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (3 samples, 0.13%)</title><rect x="1071.0" y="1027.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1074.0" y="1038.0"></text>
</g>
<g>
<title>ksys_read (3 samples, 0.13%)</title><rect x="1071.0" y="1011.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1074.0" y="1022.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.13%)</title><rect x="1071.0" y="995.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1074.0" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.09%)</title><rect x="1071.0" y="979.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1074.0" y="990.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.09%)</title><rect x="1071.0" y="963.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.0" y="974.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (1 samples, 0.04%)</title><rect x="1071.0" y="947.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1074.0" y="958.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.04%)</title><rect x="1071.5" y="947.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1074.5" y="958.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="1072.1" y="979.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1075.1" y="990.0"></text>
</g>
<g>
<title>read@plt (1 samples, 0.04%)</title><rect x="1072.6" y="1091.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1075.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.13%)</title><rect x="1073.1" y="1123.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.1" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.09%)</title><rect x="1073.1" y="1107.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1076.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.09%)</title><rect x="1073.1" y="1091.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.09%)</title><rect x="1073.1" y="1075.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.04%)</title><rect x="1073.6" y="1059.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.04%)</title><rect x="1074.2" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.09%)</title><rect x="1074.7" y="1139.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1077.7" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.04%)</title><rect x="1075.2" y="1123.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.2" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.04%)</title><rect x="1075.8" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.8" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.04%)</title><rect x="1075.8" y="1123.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.8" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.04%)</title><rect x="1075.8" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.04%)</title><rect x="1075.8" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.04%)</title><rect x="1075.8" y="1075.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.04%)</title><rect x="1075.8" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (4 samples, 0.18%)</title><rect x="1076.3" y="1187.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.3" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.18%)</title><rect x="1076.3" y="1171.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.3" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.18%)</title><rect x="1076.3" y="1155.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (3 samples, 0.13%)</title><rect x="1076.3" y="1139.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.09%)</title><rect x="1076.8" y="1123.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1079.8" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.09%)</title><rect x="1076.8" y="1107.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1079.8" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1076.8" y="1091.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1079.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1076.8" y="1075.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1079.8" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="1077.3" y="1059.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1080.3" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.04%)</title><rect x="1077.3" y="1043.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1080.3" y="1054.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1077.3" y="1027.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1080.3" y="1038.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1077.3" y="1011.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1080.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.04%)</title><rect x="1077.9" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1080.9" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.04%)</title><rect x="1077.9" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.04%)</title><rect x="1077.9" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.04%)</title><rect x="1077.9" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1077.9" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1080.9" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.04%)</title><rect x="1078.4" y="1187.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.04%)</title><rect x="1078.4" y="1171.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.04%)</title><rect x="1078.9" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1078.9" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1078.9" y="1171.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (204 samples, 9.14%)</title><rect x="1079.5" y="1203.0" width="107.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.5" y="1214.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.09%)</title><rect x="1082.6" y="1187.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="1083.2" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="1083.2" y="1155.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 1.79%)</title><rect x="1083.7" y="1187.0" width="21.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1086.7" y="1198.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1084.2" y="1171.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.13%)</title><rect x="1084.2" y="1155.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (36 samples, 1.61%)</title><rect x="1085.8" y="1171.0" width="19.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1088.8" y="1182.0"></text>
</g>
<g>
<title>JVM_IHashCode (6 samples, 0.27%)</title><rect x="1085.8" y="1155.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1088.8" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.27%)</title><rect x="1085.8" y="1139.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1088.8" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.27%)</title><rect x="1085.8" y="1123.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1088.8" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.27%)</title><rect x="1085.8" y="1107.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1088.8" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.22%)</title><rect x="1085.8" y="1091.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.8" y="1102.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.22%)</title><rect x="1085.8" y="1075.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1088.8" y="1086.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1085.8" y="1059.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1088.8" y="1070.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1085.8" y="1043.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1088.8" y="1054.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1085.8" y="1027.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1088.8" y="1038.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.13%)</title><rect x="1086.3" y="1059.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1089.3" y="1070.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (3 samples, 0.13%)</title><rect x="1086.3" y="1043.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1089.3" y="1054.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.09%)</title><rect x="1086.9" y="1027.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1089.9" y="1038.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.04%)</title><rect x="1086.9" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1089.9" y="1022.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1086.9" y="995.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1089.9" y="1006.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="1086.9" y="979.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.9" y="990.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="1087.4" y="1011.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.4" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="1087.9" y="1059.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1090.9" y="1070.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="1088.4" y="1091.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1091.4" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="1088.4" y="1075.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1091.4" y="1086.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1088.4" y="1059.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.4" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.09%)</title><rect x="1089.0" y="1155.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1092.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 1.12%)</title><rect x="1090.0" y="1155.0" width="13.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1093.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1090.0" y="1139.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1093.0" y="1150.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="1090.0" y="1123.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1093.0" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1090.0" y="1107.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.0" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1090.0" y="1091.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.0" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="1090.0" y="1075.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.0" y="1086.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.04%)</title><rect x="1090.0" y="1059.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.0" y="1070.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.04%)</title><rect x="1090.0" y="1043.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1093.0" y="1054.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="1090.0" y="1027.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1093.0" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="1090.0" y="1011.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.0" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1090.0" y="995.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1093.0" y="1006.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1090.0" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1093.0" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1090.0" y="963.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.0" y="974.0"></text>
</g>
<g>
<title>epoll_wait (22 samples, 0.99%)</title><rect x="1090.6" y="1139.0" width="11.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1093.6" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.90%)</title><rect x="1091.6" y="1123.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.6" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="1091.6" y="1107.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1094.6" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.85%)</title><rect x="1092.2" y="1107.0" width="10.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1095.2" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.85%)</title><rect x="1092.2" y="1091.0" width="10.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.2" y="1102.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.85%)</title><rect x="1092.2" y="1075.0" width="10.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.2" y="1086.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.85%)</title><rect x="1092.2" y="1059.0" width="10.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1095.2" y="1070.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 0.18%)</title><rect x="1093.7" y="1043.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.7" y="1054.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="1093.7" y="1027.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.7" y="1038.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.13%)</title><rect x="1094.3" y="1027.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1097.3" y="1038.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.09%)</title><rect x="1094.8" y="1011.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1097.8" y="1022.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.09%)</title><rect x="1094.8" y="995.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1097.8" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.54%)</title><rect x="1095.9" y="1043.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.9" y="1054.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.54%)</title><rect x="1095.9" y="1027.0" width="6.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1098.9" y="1038.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.49%)</title><rect x="1096.4" y="1011.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1099.4" y="1022.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.31%)</title><rect x="1098.5" y="995.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1101.5" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.31%)</title><rect x="1098.5" y="979.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1101.5" y="990.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="1102.2" y="1139.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1105.2" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.09%)</title><rect x="1102.2" y="1123.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1105.2" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="1102.7" y="1107.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1105.7" y="1118.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1102.7" y="1091.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1105.7" y="1102.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.04%)</title><rect x="1103.3" y="1155.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1106.3" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.09%)</title><rect x="1103.8" y="1155.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1106.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (156 samples, 6.99%)</title><rect x="1104.8" y="1187.0" width="82.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.8" y="1198.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (152 samples, 6.81%)</title><rect x="1105.9" y="1171.0" width="80.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.9" y="1182.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (66 samples, 2.96%)</title><rect x="1105.9" y="1155.0" width="34.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.9" y="1166.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 2.06%)</title><rect x="1106.4" y="1139.0" width="24.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.4" y="1150.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1109.1" y="1123.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1112.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 1.79%)</title><rect x="1109.6" y="1123.0" width="21.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1112.6" y="1134.0">o..</text>
</g>
<g>
<title>RequestHandler2_put.handleRequest (35 samples, 1.57%)</title><rect x="1109.6" y="1107.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.18%)</title><rect x="1109.6" y="1091.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="1109.6" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="1109.6" y="1059.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.09%)</title><rect x="1109.6" y="1043.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1110.7" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1110.7" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="1111.2" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.put (31 samples, 1.39%)</title><rect x="1111.7" y="1091.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="1111.7" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1114.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1111.7" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$121/1479334731.get$Lambda (1 samples, 0.04%)</title><rect x="1111.7" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1114.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 1.34%)</title><rect x="1112.3" y="1075.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (30 samples, 1.34%)</title><rect x="1112.3" y="1059.0" width="15.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 1.08%)</title><rect x="1113.3" y="1043.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 1.08%)</title><rect x="1113.3" y="1027.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 1.08%)</title><rect x="1113.3" y="1011.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 1.08%)</title><rect x="1113.3" y="995.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 1.08%)</title><rect x="1113.3" y="979.0" width="12.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 1.08%)</title><rect x="1113.3" y="963.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.3" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.18%)</title><rect x="1113.3" y="947.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1116.3" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="1113.8" y="931.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1116.8" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="1114.4" y="931.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.4" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1114.9" y="931.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1117.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.85%)</title><rect x="1115.4" y="947.0" width="10.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1118.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.85%)</title><rect x="1115.4" y="931.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.4" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1115.4" y="915.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1118.4" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.81%)</title><rect x="1116.0" y="915.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1119.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.76%)</title><rect x="1116.0" y="899.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1119.0" y="910.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.76%)</title><rect x="1116.0" y="883.0" width="8.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1119.0" y="894.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.04%)</title><rect x="1116.0" y="867.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.0" y="878.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.72%)</title><rect x="1116.5" y="867.0" width="8.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.5" y="878.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.04%)</title><rect x="1116.5" y="851.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.5" y="862.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.67%)</title><rect x="1117.0" y="851.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.0" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.67%)</title><rect x="1117.0" y="835.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1120.0" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.67%)</title><rect x="1117.0" y="819.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1120.0" y="830.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.04%)</title><rect x="1124.9" y="899.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1127.9" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.04%)</title><rect x="1124.9" y="883.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.9" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1125.5" y="947.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1128.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.09%)</title><rect x="1126.0" y="1043.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.09%)</title><rect x="1126.0" y="1027.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.09%)</title><rect x="1126.0" y="1011.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.09%)</title><rect x="1126.0" y="995.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.09%)</title><rect x="1126.0" y="979.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.09%)</title><rect x="1126.0" y="963.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.09%)</title><rect x="1126.0" y="947.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.09%)</title><rect x="1127.1" y="1043.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.09%)</title><rect x="1127.1" y="1027.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.09%)</title><rect x="1127.1" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.09%)</title><rect x="1127.1" y="995.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.04%)</title><rect x="1127.6" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1130.6" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.13%)</title><rect x="1128.1" y="1107.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="1129.7" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1129.7" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1132.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1129.7" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="1129.7" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.7" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1129.7" y="1043.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1132.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="1130.2" y="1107.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1130.2" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1130.2" y="1075.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1130.2" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.2" y="1070.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1130.2" y="1043.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1133.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.40%)</title><rect x="1130.8" y="1139.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1130.8" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.31%)</title><rect x="1131.3" y="1123.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1134.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.13%)</title><rect x="1133.4" y="1107.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1136.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.13%)</title><rect x="1133.4" y="1091.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.09%)</title><rect x="1133.9" y="1075.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1135.0" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1135.0" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="1135.5" y="1139.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1135.5" y="1123.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.09%)</title><rect x="1136.1" y="1139.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1136.1" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1139.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1136.1" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1136.6" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1136.6" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1139.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1136.6" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.6" y="1102.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1136.6" y="1075.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1139.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.31%)</title><rect x="1137.1" y="1139.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1140.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.31%)</title><rect x="1137.1" y="1123.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (86 samples, 3.85%)</title><rect x="1140.8" y="1155.0" width="45.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1143.8" y="1166.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (86 samples, 3.85%)</title><rect x="1140.8" y="1139.0" width="45.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.8" y="1150.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.18%)</title><rect x="1142.9" y="1123.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1145.9" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.13%)</title><rect x="1143.5" y="1107.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1146.5" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.04%)</title><rect x="1144.0" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.0" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1144.5" y="1091.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1147.5" y="1102.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="1144.5" y="1075.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.5" y="1086.0"></text>
</g>
<g>
<title>__GI___recv (77 samples, 3.45%)</title><rect x="1145.0" y="1123.0" width="40.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1148.0" y="1134.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (74 samples, 3.32%)</title><rect x="1146.6" y="1107.0" width="39.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1149.6" y="1118.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (74 samples, 3.32%)</title><rect x="1146.6" y="1091.0" width="39.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1149.6" y="1102.0">do_..</text>
</g>
<g>
<title>__x64_sys_recvfrom (71 samples, 3.18%)</title><rect x="1147.2" y="1075.0" width="37.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.2" y="1086.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (71 samples, 3.18%)</title><rect x="1147.2" y="1059.0" width="37.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1150.2" y="1070.0">__s..</text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1147.2" y="1043.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.2" y="1054.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.04%)</title><rect x="1147.2" y="1027.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.2" y="1038.0"></text>
</g>
<g>
<title>sock_recvmsg (69 samples, 3.09%)</title><rect x="1147.7" y="1043.0" width="36.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.7" y="1054.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (63 samples, 2.82%)</title><rect x="1147.7" y="1027.0" width="33.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.7" y="1038.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (63 samples, 2.82%)</title><rect x="1147.7" y="1011.0" width="33.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1150.7" y="1022.0">tc..</text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.18%)</title><rect x="1149.3" y="995.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.3" y="1006.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.18%)</title><rect x="1149.3" y="979.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.3" y="990.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.09%)</title><rect x="1149.3" y="963.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.3" y="974.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1150.3" y="963.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.3" y="974.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1150.9" y="963.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.9" y="974.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="1150.9" y="947.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1153.9" y="958.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="1151.4" y="995.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.4" y="1006.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="1151.9" y="995.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.9" y="1006.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1152.4" y="995.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1155.4" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1152.4" y="979.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1155.4" y="990.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="1153.0" y="995.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.0" y="1006.0"></text>
</g>
<g>
<title>__release_sock (2 samples, 0.09%)</title><rect x="1153.0" y="979.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.0" y="990.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1153.0" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.0" y="974.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.04%)</title><rect x="1153.5" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1156.5" y="974.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="1153.5" y="947.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1156.5" y="958.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.27%)</title><rect x="1154.0" y="995.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.0" y="1006.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.27%)</title><rect x="1154.0" y="979.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1157.0" y="990.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.22%)</title><rect x="1154.6" y="963.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.6" y="974.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1154.6" y="947.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.6" y="958.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.18%)</title><rect x="1155.1" y="947.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1158.1" y="958.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.09%)</title><rect x="1156.1" y="931.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1159.1" y="942.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (43 samples, 1.93%)</title><rect x="1157.2" y="995.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.2" y="1006.0">t..</text>
</g>
<g>
<title>tcp_send_ack (43 samples, 1.93%)</title><rect x="1157.2" y="979.0" width="22.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1160.2" y="990.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.46 (42 samples, 1.88%)</title><rect x="1157.7" y="963.0" width="22.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.7" y="974.0">_..</text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.18%)</title><rect x="1157.7" y="947.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1160.7" y="958.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="1158.3" y="931.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1161.3" y="942.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.04%)</title><rect x="1158.8" y="931.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1161.8" y="942.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.04%)</title><rect x="1158.8" y="915.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.8" y="926.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.04%)</title><rect x="1159.3" y="931.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.3" y="942.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (37 samples, 1.66%)</title><rect x="1159.9" y="947.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.9" y="958.0"></text>
</g>
<g>
<title>ip_queue_xmit (37 samples, 1.66%)</title><rect x="1159.9" y="931.0" width="19.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.9" y="942.0"></text>
</g>
<g>
<title>__ip_queue_xmit (37 samples, 1.66%)</title><rect x="1159.9" y="915.0" width="19.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.9" y="926.0"></text>
</g>
<g>
<title>ip_local_out (36 samples, 1.61%)</title><rect x="1160.4" y="899.0" width="19.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.4" y="910.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.27%)</title><rect x="1160.9" y="883.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1163.9" y="894.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.27%)</title><rect x="1160.9" y="867.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.9" y="878.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.09%)</title><rect x="1160.9" y="851.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.9" y="862.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.09%)</title><rect x="1160.9" y="835.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.9" y="846.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.18%)</title><rect x="1162.0" y="851.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1165.0" y="862.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (4 samples, 0.18%)</title><rect x="1162.0" y="835.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.0" y="846.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.04%)</title><rect x="1162.0" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1165.0" y="830.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.13%)</title><rect x="1162.5" y="819.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.5" y="830.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (3 samples, 0.13%)</title><rect x="1162.5" y="803.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1165.5" y="814.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.09%)</title><rect x="1163.0" y="787.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1166.0" y="798.0"></text>
</g>
<g>
<title>ip_output (29 samples, 1.30%)</title><rect x="1164.1" y="883.0" width="15.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1167.1" y="894.0"></text>
</g>
<g>
<title>ip_finish_output (27 samples, 1.21%)</title><rect x="1164.1" y="867.0" width="14.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1167.1" y="878.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.09%)</title><rect x="1164.1" y="851.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1167.1" y="862.0"></text>
</g>
<g>
<title>__ip_finish_output (24 samples, 1.08%)</title><rect x="1165.1" y="851.0" width="12.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1168.1" y="862.0"></text>
</g>
<g>
<title>ip_finish_output2 (22 samples, 0.99%)</title><rect x="1165.7" y="835.0" width="11.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1168.7" y="846.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (17 samples, 0.76%)</title><rect x="1166.2" y="819.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.2" y="830.0"></text>
</g>
<g>
<title>do_softirq.part.20 (17 samples, 0.76%)</title><rect x="1166.2" y="803.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.2" y="814.0"></text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 0.76%)</title><rect x="1166.2" y="787.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.2" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 0.76%)</title><rect x="1166.2" y="771.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>net_rx_action (17 samples, 0.76%)</title><rect x="1166.2" y="755.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>process_backlog (17 samples, 0.76%)</title><rect x="1166.2" y="739.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>__netif_receive_skb (16 samples, 0.72%)</title><rect x="1166.7" y="723.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1169.7" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 0.72%)</title><rect x="1166.7" y="707.0" width="8.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1169.7" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.13%)</title><rect x="1166.7" y="691.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1169.7" y="702.0"></text>
</g>
<g>
<title>ip_rcv (13 samples, 0.58%)</title><rect x="1168.3" y="691.0" width="6.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1171.3" y="702.0"></text>
</g>
<g>
<title>ip_rcv_finish (13 samples, 0.58%)</title><rect x="1168.3" y="675.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1171.3" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver (13 samples, 0.58%)</title><rect x="1168.3" y="659.0" width="6.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1171.3" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.54%)</title><rect x="1168.3" y="643.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1171.3" y="654.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 0.54%)</title><rect x="1168.3" y="627.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1171.3" y="638.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="1168.3" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.3" y="622.0"></text>
</g>
<g>
<title>tcp_v4_rcv (11 samples, 0.49%)</title><rect x="1168.8" y="611.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1171.8" y="622.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.09%)</title><rect x="1168.8" y="595.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.8" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.40%)</title><rect x="1169.9" y="595.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1172.9" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1169.9" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.9" y="590.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.36%)</title><rect x="1170.4" y="579.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.4" y="590.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.31%)</title><rect x="1170.4" y="563.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.4" y="574.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.27%)</title><rect x="1171.0" y="547.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1174.0" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="1171.5" y="531.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.5" y="542.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="1171.5" y="515.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.5" y="526.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.09%)</title><rect x="1171.5" y="499.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.5" y="510.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1171.5" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.5" y="494.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="1172.0" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1175.0" y="494.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="1172.0" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1175.0" y="478.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="1172.0" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.0" y="462.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="1172.5" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1175.5" y="542.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (2 samples, 0.09%)</title><rect x="1173.1" y="531.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.1" y="542.0"></text>
</g>
<g>
<title>minmax_running_min (1 samples, 0.04%)</title><rect x="1173.1" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1176.1" y="526.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.04%)</title><rect x="1173.1" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1176.1" y="510.0"></text>
</g>
<g>
<title>minmax_subwin_update (1 samples, 0.04%)</title><rect x="1173.6" y="515.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1176.6" y="526.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="1174.1" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.1" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="1174.7" y="643.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.7" y="654.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.04%)</title><rect x="1174.7" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.7" y="638.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.04%)</title><rect x="1174.7" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1177.7" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.18%)</title><rect x="1175.2" y="819.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1178.2" y="830.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.18%)</title><rect x="1175.2" y="803.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1178.2" y="814.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.09%)</title><rect x="1176.2" y="787.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.2" y="798.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.09%)</title><rect x="1176.2" y="771.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1179.2" y="782.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.09%)</title><rect x="1176.2" y="755.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.2" y="766.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.09%)</title><rect x="1176.2" y="739.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1179.2" y="750.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.09%)</title><rect x="1176.2" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.2" y="734.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1177.3" y="835.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.3" y="846.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1177.8" y="851.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.8" y="862.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.04%)</title><rect x="1178.4" y="867.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.4" y="878.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.04%)</title><rect x="1178.9" y="867.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.9" y="878.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.04%)</title><rect x="1178.9" y="851.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.9" y="862.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (1 samples, 0.04%)</title><rect x="1178.9" y="835.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.9" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="1179.4" y="947.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.4" y="958.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.09%)</title><rect x="1180.0" y="995.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.0" y="1006.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.09%)</title><rect x="1180.0" y="979.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1183.0" y="990.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1180.5" y="963.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.5" y="974.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.27%)</title><rect x="1181.0" y="1027.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.0" y="1038.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.27%)</title><rect x="1181.0" y="1011.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.0" y="1022.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.27%)</title><rect x="1181.0" y="995.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1184.0" y="1006.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.27%)</title><rect x="1181.0" y="979.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.0" y="990.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.04%)</title><rect x="1182.1" y="963.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.1" y="974.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.13%)</title><rect x="1182.6" y="963.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.6" y="974.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.13%)</title><rect x="1182.6" y="947.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.6" y="958.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.04%)</title><rect x="1183.7" y="931.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.7" y="942.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1184.2" y="1043.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1187.2" y="1054.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1184.2" y="1027.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1187.2" y="1038.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1184.2" y="1011.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1187.2" y="1022.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1184.2" y="995.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1187.2" y="1006.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.09%)</title><rect x="1184.7" y="1075.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.7" y="1086.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.09%)</title><rect x="1184.7" y="1059.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1187.7" y="1070.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="1185.2" y="1043.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.2" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1185.8" y="1123.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1188.8" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.09%)</title><rect x="1186.3" y="1171.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.3" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="1186.3" y="1155.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1189.3" y="1166.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="1186.3" y="1139.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1189.3" y="1150.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.22%)</title><rect x="1187.4" y="1203.0" width="2.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1190.4" y="1214.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.22%)</title><rect x="1187.4" y="1187.0" width="2.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1190.4" y="1198.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.22%)</title><rect x="1187.4" y="1171.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.4" y="1182.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.22%)</title><rect x="1187.4" y="1155.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="1166.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.22%)</title><rect x="1187.4" y="1139.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.4" y="1150.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.22%)</title><rect x="1187.4" y="1123.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.4" y="1134.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.22%)</title><rect x="1187.4" y="1107.0" width="2.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1190.4" y="1118.0"></text>
</g>
</g>
</svg>
