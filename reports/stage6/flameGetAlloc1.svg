<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (29,758 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,063 samples, 57.34%)</title><rect x="10.0" y="691.0" width="676.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,063 samples, 57.34%)</title><rect x="10.0" y="675.0" width="676.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,063 samples, 57.34%)</title><rect x="10.0" y="659.0" width="676.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,612 samples, 12.14%)</title><rect x="10.0" y="643.0" width="143.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,612 samples, 12.14%)</title><rect x="10.0" y="627.0" width="143.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,612 samples, 12.14%)</title><rect x="10.0" y="611.0" width="143.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurre..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.08%)</title><rect x="10.0" y="595.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1494676242.apply (3,589 samples, 12.06%)</title><rect x="10.9" y="595.0" width="142.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.9" y="606.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,589 samples, 12.06%)</title><rect x="10.9" y="579.0" width="142.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.9" y="590.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,589 samples, 12.06%)</title><rect x="10.9" y="563.0" width="142.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.9" y="574.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.10%)</title><rect x="10.9" y="547.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.10%)</title><rect x="10.9" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/388445390.get$Lambda (16 samples, 0.05%)</title><rect x="10.9" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$361 (16 samples, 0.05%)</title><rect x="10.9" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$364/853251833.get$Lambda (14 samples, 0.05%)</title><rect x="11.5" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$364 (14 samples, 0.05%)</title><rect x="11.5" y="499.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="14.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (45 samples, 0.15%)</title><rect x="12.1" y="547.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (45 samples, 0.15%)</title><rect x="12.1" y="531.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (24 samples, 0.08%)</title><rect x="12.1" y="515.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.07%)</title><rect x="13.1" y="515.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.07%)</title><rect x="13.1" y="499.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.07%)</title><rect x="13.1" y="483.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (83 samples, 0.28%)</title><rect x="13.9" y="547.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (83 samples, 0.28%)</title><rect x="13.9" y="531.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (49 samples, 0.16%)</title><rect x="13.9" y="515.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="16.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.11%)</title><rect x="15.8" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.11%)</title><rect x="15.8" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.11%)</title><rect x="15.8" y="483.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,341 samples, 11.23%)</title><rect x="17.2" y="547.0" width="132.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.2" y="558.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,341 samples, 11.23%)</title><rect x="17.2" y="531.0" width="132.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.2" y="542.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,341 samples, 11.23%)</title><rect x="17.2" y="515.0" width="132.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.2" y="526.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.10%)</title><rect x="17.2" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.10%)</title><rect x="17.2" y="483.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/333725311.get$Lambda (9 samples, 0.03%)</title><rect x="17.2" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$210 (9 samples, 0.03%)</title><rect x="17.2" y="451.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/1588773889.get$Lambda (11 samples, 0.04%)</title><rect x="17.5" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$215 (11 samples, 0.04%)</title><rect x="17.5" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$316/2068090598.get$Lambda (10 samples, 0.03%)</title><rect x="18.0" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$316 (10 samples, 0.03%)</title><rect x="18.0" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="21.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,041 samples, 6.86%)</title><rect x="18.4" y="499.0" width="80.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.4" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,041 samples, 6.86%)</title><rect x="18.4" y="483.0" width="80.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.4" y="494.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,023 samples, 6.80%)</title><rect x="18.4" y="467.0" width="80.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="478.0">java/util..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$316/2068090598.apply (2,023 samples, 6.80%)</title><rect x="18.4" y="451.0" width="80.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.4" y="462.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,023 samples, 6.80%)</title><rect x="18.4" y="435.0" width="80.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.4" y="446.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,023 samples, 6.80%)</title><rect x="18.4" y="419.0" width="80.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="430.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/1588773889.apply (2,023 samples, 6.80%)</title><rect x="18.4" y="403.0" width="80.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.4" y="414.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,023 samples, 6.80%)</title><rect x="18.4" y="387.0" width="80.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.4" y="398.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="18.4" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="18.4" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/533652067.get$Lambda (10 samples, 0.03%)</title><rect x="18.4" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$358 (10 samples, 0.03%)</title><rect x="18.4" y="323.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="21.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (48 samples, 0.16%)</title><rect x="18.8" y="371.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (48 samples, 0.16%)</title><rect x="18.8" y="355.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (24 samples, 0.08%)</title><rect x="18.8" y="339.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="21.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.02%)</title><rect x="19.7" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/533652067.apply (7 samples, 0.02%)</title><rect x="19.7" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.02%)</title><rect x="19.7" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.02%)</title><rect x="19.7" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/333725311.apply (7 samples, 0.02%)</title><rect x="19.7" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.02%)</title><rect x="19.7" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="20.0" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="20.0" y="323.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="20.0" y="307.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="23.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 0.14%)</title><rect x="20.7" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (43 samples, 0.14%)</title><rect x="20.7" y="355.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.07%)</title><rect x="20.7" y="339.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="23.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.07%)</title><rect x="21.6" y="339.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.07%)</title><rect x="21.6" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.07%)</title><rect x="21.6" y="307.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="24.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,922 samples, 6.46%)</title><rect x="22.4" y="371.0" width="76.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.4" y="382.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.08%)</title><rect x="22.4" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.08%)</title><rect x="22.4" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/811760192.get$Lambda (10 samples, 0.03%)</title><rect x="22.4" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$354 (10 samples, 0.03%)</title><rect x="22.4" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$357/1358266.get$Lambda (14 samples, 0.05%)</title><rect x="22.8" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$357 (14 samples, 0.05%)</title><rect x="22.8" y="307.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="25.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,643 samples, 5.52%)</title><rect x="23.3" y="355.0" width="65.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.3" y="366.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,643 samples, 5.52%)</title><rect x="23.3" y="339.0" width="65.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.3" y="350.0">java/ut..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (20 samples, 0.07%)</title><rect x="23.3" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="26.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/811760192.apply (1,580 samples, 5.31%)</title><rect x="24.1" y="323.0" width="62.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.1" y="334.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,580 samples, 5.31%)</title><rect x="24.1" y="307.0" width="62.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.1" y="318.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.04%)</title><rect x="24.1" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="24.1" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$367/1072236749.get$Lambda (11 samples, 0.04%)</title><rect x="24.1" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$367 (11 samples, 0.04%)</title><rect x="24.1" y="243.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (45 samples, 0.15%)</title><rect x="24.6" y="291.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (45 samples, 0.15%)</title><rect x="24.6" y="275.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (23 samples, 0.08%)</title><rect x="24.6" y="259.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="27.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="25.5" y="259.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="25.5" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.07%)</title><rect x="25.5" y="227.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="28.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="26.3" y="291.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="29.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (26 samples, 0.09%)</title><rect x="27.1" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (11 samples, 0.04%)</title><rect x="27.1" y="275.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="30.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.05%)</title><rect x="27.5" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (13 samples, 0.04%)</title><rect x="27.5" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="30.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (13 samples, 0.04%)</title><rect x="27.5" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (13 samples, 0.04%)</title><rect x="27.5" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (13 samples, 0.04%)</title><rect x="27.5" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.04%)</title><rect x="27.5" y="195.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="30.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (41 samples, 0.14%)</title><rect x="28.1" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (41 samples, 0.14%)</title><rect x="28.1" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (7 samples, 0.02%)</title><rect x="28.1" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.02%)</title><rect x="28.1" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.02%)</title><rect x="28.1" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (7 samples, 0.02%)</title><rect x="28.1" y="211.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="31.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (34 samples, 0.11%)</title><rect x="28.4" y="259.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (34 samples, 0.11%)</title><rect x="28.4" y="243.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (23 samples, 0.08%)</title><rect x="28.4" y="227.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="31.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (11 samples, 0.04%)</title><rect x="29.3" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (11 samples, 0.04%)</title><rect x="29.3" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="32.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,439 samples, 4.84%)</title><rect x="29.7" y="291.0" width="57.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.7" y="302.0">jdk/in..</text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.04%)</title><rect x="29.7" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="32.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (137 samples, 0.46%)</title><rect x="30.2" y="275.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (137 samples, 0.46%)</title><rect x="30.2" y="259.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (137 samples, 0.46%)</title><rect x="30.2" y="243.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.2" y="254.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.46%)</title><rect x="30.2" y="227.0" width="5.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="33.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.15%)</title><rect x="35.6" y="275.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.6" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.15%)</title><rect x="35.6" y="259.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.6" y="270.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.15%)</title><rect x="35.6" y="243.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="38.6" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (135 samples, 0.45%)</title><rect x="37.4" y="275.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (135 samples, 0.45%)</title><rect x="37.4" y="259.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.4" y="270.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="37.4" y="243.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="40.4" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 0.41%)</title><rect x="37.9" y="243.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.9" y="254.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.41%)</title><rect x="37.9" y="227.0" width="4.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="40.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.06%)</title><rect x="42.7" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (17 samples, 0.06%)</title><rect x="42.7" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (17 samples, 0.06%)</title><rect x="42.7" y="243.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.06%)</title><rect x="43.4" y="275.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.4" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.06%)</title><rect x="43.4" y="259.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="46.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (877 samples, 2.95%)</title><rect x="44.1" y="275.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="47.1" y="286.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (9 samples, 0.03%)</title><rect x="44.1" y="259.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="44.1" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="44.1" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.1" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$375/1561480963.get$Lambda (9 samples, 0.03%)</title><rect x="44.1" y="211.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.1" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$375 (9 samples, 0.03%)</title><rect x="44.1" y="195.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="47.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (435 samples, 1.46%)</title><rect x="44.5" y="259.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (219 samples, 0.74%)</title><rect x="44.5" y="243.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.5" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (219 samples, 0.74%)</title><rect x="44.5" y="227.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.5" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (219 samples, 0.74%)</title><rect x="44.5" y="211.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (219 samples, 0.74%)</title><rect x="44.5" y="195.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>byte[] (219 samples, 0.74%)</title><rect x="44.5" y="179.0" width="8.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (36 samples, 0.12%)</title><rect x="53.1" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.1" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (15 samples, 0.05%)</title><rect x="53.1" y="227.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="56.1" y="238.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (21 samples, 0.07%)</title><rect x="53.7" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (21 samples, 0.07%)</title><rect x="53.7" y="211.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (21 samples, 0.07%)</title><rect x="53.7" y="195.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="56.7" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (23 samples, 0.08%)</title><rect x="54.6" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.6" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (9 samples, 0.03%)</title><rect x="54.6" y="227.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="57.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (14 samples, 0.05%)</title><rect x="54.9" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (14 samples, 0.05%)</title><rect x="54.9" y="211.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="57.9" y="222.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (19 samples, 0.06%)</title><rect x="55.5" y="243.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.5" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (19 samples, 0.06%)</title><rect x="55.5" y="227.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="58.5" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$375/1561480963.test (133 samples, 0.45%)</title><rect x="56.4" y="243.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.4" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (133 samples, 0.45%)</title><rect x="56.4" y="227.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/898557489.test (133 samples, 0.45%)</title><rect x="56.4" y="211.0" width="5.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (133 samples, 0.45%)</title><rect x="56.4" y="195.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.4" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1340565491.test (133 samples, 0.45%)</title><rect x="56.4" y="179.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.4" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (133 samples, 0.45%)</title><rect x="56.4" y="163.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1139700454.test (133 samples, 0.45%)</title><rect x="56.4" y="147.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (133 samples, 0.45%)</title><rect x="56.4" y="131.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (133 samples, 0.45%)</title><rect x="56.4" y="115.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (133 samples, 0.45%)</title><rect x="56.4" y="99.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.23%)</title><rect x="56.4" y="83.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="59.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.22%)</title><rect x="59.2" y="83.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="62.2" y="94.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.22%)</title><rect x="59.2" y="67.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (433 samples, 1.46%)</title><rect x="61.7" y="259.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (433 samples, 1.46%)</title><rect x="61.7" y="243.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.7" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (433 samples, 1.46%)</title><rect x="61.7" y="227.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.7" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (8 samples, 0.03%)</title><rect x="61.7" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="64.7" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.04%)</title><rect x="62.0" y="211.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="65.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.08%)</title><rect x="62.5" y="211.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="65.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (8 samples, 0.03%)</title><rect x="63.5" y="211.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="66.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="63.8" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="63.8" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.get$Lambda (13 samples, 0.04%)</title><rect x="63.8" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$160 (13 samples, 0.04%)</title><rect x="63.8" y="163.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="66.8" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (20 samples, 0.07%)</title><rect x="64.3" y="211.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.3" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (20 samples, 0.07%)</title><rect x="64.3" y="195.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (320 samples, 1.08%)</title><rect x="65.1" y="211.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (320 samples, 1.08%)</title><rect x="65.1" y="195.0" width="12.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (320 samples, 1.08%)</title><rect x="65.1" y="179.0" width="12.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (27 samples, 0.09%)</title><rect x="65.1" y="163.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.1" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$378/1919901546.accept (27 samples, 0.09%)</title><rect x="65.1" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.1" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (27 samples, 0.09%)</title><rect x="65.1" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (27 samples, 0.09%)</title><rect x="65.1" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.1" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (27 samples, 0.09%)</title><rect x="65.1" y="99.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.1" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (27 samples, 0.09%)</title><rect x="65.1" y="83.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.1" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (27 samples, 0.09%)</title><rect x="65.1" y="67.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.1" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.09%)</title><rect x="65.1" y="51.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.1" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.09%)</title><rect x="65.1" y="35.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="68.1" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (163 samples, 0.55%)</title><rect x="66.2" y="163.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.2" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (163 samples, 0.55%)</title><rect x="66.2" y="147.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (83 samples, 0.28%)</title><rect x="66.2" y="131.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (83 samples, 0.28%)</title><rect x="66.2" y="115.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (83 samples, 0.28%)</title><rect x="66.2" y="99.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="69.2" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (80 samples, 0.27%)</title><rect x="69.5" y="131.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.5" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (80 samples, 0.27%)</title><rect x="69.5" y="115.0" width="3.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="72.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (130 samples, 0.44%)</title><rect x="72.7" y="163.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.7" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (130 samples, 0.44%)</title><rect x="72.7" y="147.0" width="5.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="75.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.09%)</title><rect x="77.8" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.09%)</title><rect x="77.8" y="195.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="80.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (59 samples, 0.20%)</title><rect x="78.9" y="275.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.9" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (29 samples, 0.10%)</title><rect x="78.9" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.9" y="270.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="78.9" y="243.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="81.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="79.6" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="82.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.10%)</title><rect x="80.0" y="259.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (30 samples, 0.10%)</title><rect x="80.0" y="243.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (30 samples, 0.10%)</title><rect x="80.0" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.10%)</title><rect x="80.0" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.05%)</title><rect x="80.0" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="80.0" y="179.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.05%)</title><rect x="80.6" y="195.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.05%)</title><rect x="80.6" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.6" y="190.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="80.6" y="163.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="83.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (32 samples, 0.11%)</title><rect x="81.2" y="275.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (32 samples, 0.11%)</title><rect x="81.2" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.11%)</title><rect x="81.2" y="243.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (32 samples, 0.11%)</title><rect x="81.2" y="227.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (32 samples, 0.11%)</title><rect x="81.2" y="211.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.11%)</title><rect x="81.2" y="195.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.05%)</title><rect x="81.2" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="81.2" y="163.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.2" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.05%)</title><rect x="81.9" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.05%)</title><rect x="81.9" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.9" y="174.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="81.9" y="147.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="84.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (108 samples, 0.36%)</title><rect x="82.5" y="275.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.5" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.09%)</title><rect x="82.5" y="259.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="85.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (26 samples, 0.09%)</title><rect x="83.6" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.09%)</title><rect x="83.6" y="243.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="86.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (54 samples, 0.18%)</title><rect x="84.6" y="259.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (54 samples, 0.18%)</title><rect x="84.6" y="243.0" width="2.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="87.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.14%)</title><rect x="86.8" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (43 samples, 0.14%)</title><rect x="86.8" y="307.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.14%)</title><rect x="86.8" y="291.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="89.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (56 samples, 0.19%)</title><rect x="88.5" y="355.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="91.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="90.7" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="93.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (189 samples, 0.64%)</title><rect x="91.1" y="355.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.06%)</title><rect x="91.1" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.06%)</title><rect x="91.1" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$330/1822747719.get$Lambda (12 samples, 0.04%)</title><rect x="91.3" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$330 (12 samples, 0.04%)</title><rect x="91.3" y="291.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="94.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (22 samples, 0.07%)</title><rect x="91.8" y="339.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="94.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (16 samples, 0.05%)</title><rect x="92.6" y="339.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="95.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (27 samples, 0.09%)</title><rect x="93.3" y="339.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="96.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (51 samples, 0.17%)</title><rect x="94.3" y="339.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.17%)</title><rect x="94.3" y="323.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.17%)</title><rect x="94.3" y="307.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (51 samples, 0.17%)</title><rect x="94.3" y="291.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (51 samples, 0.17%)</title><rect x="94.3" y="275.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (51 samples, 0.17%)</title><rect x="94.3" y="259.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (51 samples, 0.17%)</title><rect x="94.3" y="243.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (51 samples, 0.17%)</title><rect x="94.3" y="227.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (51 samples, 0.17%)</title><rect x="94.3" y="211.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.06%)</title><rect x="94.3" y="195.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.06%)</title><rect x="94.3" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/1754313318.get$Lambda (7 samples, 0.02%)</title><rect x="94.3" y="163.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$333 (7 samples, 0.02%)</title><rect x="94.3" y="147.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="97.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$335/771058088.get$Lambda (10 samples, 0.03%)</title><rect x="94.6" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$335 (10 samples, 0.03%)</title><rect x="94.6" y="147.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="97.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (14 samples, 0.05%)</title><rect x="95.0" y="195.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="98.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (20 samples, 0.07%)</title><rect x="95.6" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (20 samples, 0.07%)</title><rect x="95.6" y="179.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.03%)</title><rect x="95.6" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.04%)</title><rect x="95.9" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.04%)</title><rect x="95.9" y="147.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="98.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (44 samples, 0.15%)</title><rect x="96.4" y="339.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.4" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (10 samples, 0.03%)</title><rect x="96.4" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="99.4" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (22 samples, 0.07%)</title><rect x="96.8" y="323.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="99.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (12 samples, 0.04%)</title><rect x="97.6" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (12 samples, 0.04%)</title><rect x="97.6" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.6" y="318.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="97.6" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="100.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (12 samples, 0.04%)</title><rect x="98.1" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="98.1" y="323.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="101.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.06%)</title><rect x="98.6" y="467.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.06%)</title><rect x="98.6" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="98.6" y="435.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="101.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39 samples, 0.13%)</title><rect x="99.3" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39 samples, 0.13%)</title><rect x="99.3" y="483.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.3" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (16 samples, 0.05%)</title><rect x="99.3" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="102.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.08%)</title><rect x="99.9" y="467.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.08%)</title><rect x="99.9" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.08%)</title><rect x="99.9" y="435.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="102.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,231 samples, 4.14%)</title><rect x="100.8" y="499.0" width="48.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.8" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.06%)</title><rect x="100.8" y="483.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title><rect x="100.8" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$311/1771069967.get$Lambda (9 samples, 0.03%)</title><rect x="100.8" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$311 (9 samples, 0.03%)</title><rect x="100.8" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="103.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/655454655.get$Lambda (10 samples, 0.03%)</title><rect x="101.2" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$313 (10 samples, 0.03%)</title><rect x="101.2" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="104.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 0.14%)</title><rect x="101.6" y="483.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (43 samples, 0.14%)</title><rect x="101.6" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/655454655.apply (27 samples, 0.09%)</title><rect x="101.6" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (27 samples, 0.09%)</title><rect x="101.6" y="435.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (27 samples, 0.09%)</title><rect x="101.6" y="419.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.09%)</title><rect x="101.6" y="403.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="104.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="102.7" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="102.7" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="102.7" y="419.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="105.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (27 samples, 0.09%)</title><rect x="103.3" y="483.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (27 samples, 0.09%)</title><rect x="103.3" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="103.3" y="451.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="103.3" y="435.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.09%)</title><rect x="103.3" y="419.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="106.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,142 samples, 3.84%)</title><rect x="104.4" y="483.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.4" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="104.4" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="104.4" y="451.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$226/1232150608.get$Lambda (15 samples, 0.05%)</title><rect x="104.4" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$226 (15 samples, 0.05%)</title><rect x="104.4" y="419.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="107.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,050 samples, 3.53%)</title><rect x="105.0" y="467.0" width="41.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.0" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,050 samples, 3.53%)</title><rect x="105.0" y="451.0" width="41.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.0" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,026 samples, 3.45%)</title><rect x="105.0" y="435.0" width="40.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.0" y="446.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$226/1232150608.apply (1,026 samples, 3.45%)</title><rect x="105.0" y="419.0" width="40.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.0" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,026 samples, 3.45%)</title><rect x="105.0" y="403.0" width="40.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.0" y="414.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,026 samples, 3.45%)</title><rect x="105.0" y="387.0" width="40.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.0" y="398.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="105.0" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="105.0" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$301/1299234764.get$Lambda (8 samples, 0.03%)</title><rect x="105.0" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$301 (8 samples, 0.03%)</title><rect x="105.0" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="108.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (415 samples, 1.39%)</title><rect x="105.3" y="371.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (415 samples, 1.39%)</title><rect x="105.3" y="355.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (415 samples, 1.39%)</title><rect x="105.3" y="339.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$301/1299234764.apply (403 samples, 1.35%)</title><rect x="105.3" y="323.0" width="16.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (403 samples, 1.35%)</title><rect x="105.3" y="307.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (403 samples, 1.35%)</title><rect x="105.3" y="291.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="108.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (403 samples, 1.35%)</title><rect x="105.3" y="275.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (274 samples, 0.92%)</title><rect x="105.3" y="259.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.3" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (70 samples, 0.24%)</title><rect x="105.3" y="243.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.07%)</title><rect x="105.3" y="227.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="108.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (26 samples, 0.09%)</title><rect x="106.1" y="227.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.09%)</title><rect x="106.1" y="211.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.1" y="222.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.09%)</title><rect x="106.1" y="195.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="109.1" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (24 samples, 0.08%)</title><rect x="107.1" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.1" y="238.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.08%)</title><rect x="107.1" y="211.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="110.1" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (11 samples, 0.04%)</title><rect x="108.1" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.1" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (11 samples, 0.04%)</title><rect x="108.1" y="227.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="111.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (134 samples, 0.45%)</title><rect x="108.5" y="243.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (14 samples, 0.05%)</title><rect x="108.5" y="227.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="111.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (95 samples, 0.32%)</title><rect x="109.1" y="227.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (95 samples, 0.32%)</title><rect x="109.1" y="211.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/603443293.linkToTargetMethod (59 samples, 0.20%)</title><rect x="109.1" y="195.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.20%)</title><rect x="109.1" y="179.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/2100961961.get$Lambda (59 samples, 0.20%)</title><rect x="109.1" y="163.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$76 (59 samples, 0.20%)</title><rect x="109.1" y="147.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="112.1" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.12%)</title><rect x="111.4" y="195.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/2100961961.run (36 samples, 0.12%)</title><rect x="111.4" y="179.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (36 samples, 0.12%)</title><rect x="111.4" y="163.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.4" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (36 samples, 0.12%)</title><rect x="111.4" y="147.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.4" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (36 samples, 0.12%)</title><rect x="111.4" y="131.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.4" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (36 samples, 0.12%)</title><rect x="111.4" y="115.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="114.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (25 samples, 0.08%)</title><rect x="112.8" y="227.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (25 samples, 0.08%)</title><rect x="112.8" y="211.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.8" y="222.0"></text>
</g>
<g>
<title>int[] (25 samples, 0.08%)</title><rect x="112.8" y="195.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="115.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (59 samples, 0.20%)</title><rect x="113.8" y="243.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.8" y="254.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.09%)</title><rect x="113.8" y="227.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="116.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.11%)</title><rect x="114.8" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (33 samples, 0.11%)</title><rect x="114.8" y="211.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.8" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (33 samples, 0.11%)</title><rect x="114.8" y="195.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="117.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (129 samples, 0.43%)</title><rect x="116.2" y="259.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.2" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.10%)</title><rect x="116.2" y="243.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="119.2" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (39 samples, 0.13%)</title><rect x="117.4" y="243.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.4" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.13%)</title><rect x="117.4" y="227.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="120.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (59 samples, 0.20%)</title><rect x="118.9" y="243.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.9" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (59 samples, 0.20%)</title><rect x="118.9" y="227.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="121.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="121.3" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="121.3" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="121.3" y="291.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="124.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (603 samples, 2.03%)</title><rect x="121.7" y="371.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.7" y="382.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (52 samples, 0.17%)</title><rect x="121.7" y="355.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="124.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (532 samples, 1.79%)</title><rect x="123.8" y="355.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.8" y="366.0">j..</text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.02%)</title><rect x="123.8" y="339.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="126.8" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (10 samples, 0.03%)</title><rect x="124.1" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="127.1" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (7 samples, 0.02%)</title><rect x="124.5" y="339.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="127.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (19 samples, 0.06%)</title><rect x="124.8" y="339.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (19 samples, 0.06%)</title><rect x="124.8" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (19 samples, 0.06%)</title><rect x="124.8" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="127.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (18 samples, 0.06%)</title><rect x="125.5" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (18 samples, 0.06%)</title><rect x="125.5" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="128.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (44 samples, 0.15%)</title><rect x="126.2" y="339.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="129.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (27 samples, 0.09%)</title><rect x="128.0" y="339.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="131.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (26 samples, 0.09%)</title><rect x="129.0" y="339.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="132.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.15%)</title><rect x="130.1" y="339.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="133.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (155 samples, 0.52%)</title><rect x="131.9" y="339.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (8 samples, 0.03%)</title><rect x="131.9" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="134.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (7 samples, 0.02%)</title><rect x="132.2" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="135.2" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (10 samples, 0.03%)</title><rect x="132.5" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="135.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (9 samples, 0.03%)</title><rect x="132.9" y="323.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="135.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="133.2" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="133.2" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.get$Lambda (12 samples, 0.04%)</title><rect x="133.2" y="291.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$292 (12 samples, 0.04%)</title><rect x="133.2" y="275.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="136.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (12 samples, 0.04%)</title><rect x="133.7" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (12 samples, 0.04%)</title><rect x="133.7" y="307.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="136.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (22 samples, 0.07%)</title><rect x="134.2" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="135.1" y="323.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="138.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (58 samples, 0.19%)</title><rect x="135.7" y="323.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (18 samples, 0.06%)</title><rect x="135.7" y="307.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="138.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (11 samples, 0.04%)</title><rect x="136.5" y="307.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="139.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (24 samples, 0.08%)</title><rect x="137.1" y="307.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (12 samples, 0.04%)</title><rect x="137.1" y="291.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="140.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (98 samples, 0.33%)</title><rect x="138.0" y="339.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (8 samples, 0.03%)</title><rect x="138.3" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="141.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.03%)</title><rect x="138.6" y="323.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="141.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (18 samples, 0.06%)</title><rect x="138.9" y="323.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (18 samples, 0.06%)</title><rect x="138.9" y="307.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="141.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (58 samples, 0.19%)</title><rect x="139.6" y="323.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (16 samples, 0.05%)</title><rect x="139.7" y="307.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="142.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (13 samples, 0.04%)</title><rect x="140.3" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (13 samples, 0.04%)</title><rect x="140.3" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="143.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (27 samples, 0.09%)</title><rect x="140.9" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (10 samples, 0.03%)</title><rect x="140.9" y="291.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="143.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (8 samples, 0.03%)</title><rect x="141.3" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="144.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (9 samples, 0.03%)</title><rect x="141.6" y="291.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="144.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (16 samples, 0.05%)</title><rect x="141.9" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (16 samples, 0.05%)</title><rect x="141.9" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (16 samples, 0.05%)</title><rect x="141.9" y="307.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.9" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.05%)</title><rect x="141.9" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.9" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (16 samples, 0.05%)</title><rect x="141.9" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (16 samples, 0.05%)</title><rect x="141.9" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.05%)</title><rect x="141.9" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="144.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (59 samples, 0.20%)</title><rect x="142.6" y="339.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/603443293.linkToTargetMethod (20 samples, 0.07%)</title><rect x="142.6" y="323.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.07%)</title><rect x="142.6" y="307.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$252/448246594.get$Lambda (20 samples, 0.07%)</title><rect x="142.6" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$252 (20 samples, 0.07%)</title><rect x="142.6" y="275.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="145.6" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (39 samples, 0.13%)</title><rect x="143.4" y="323.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$252/448246594.run (39 samples, 0.13%)</title><rect x="143.4" y="307.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (39 samples, 0.13%)</title><rect x="143.4" y="291.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.4" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (10 samples, 0.03%)</title><rect x="143.4" y="275.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="146.4" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (29 samples, 0.10%)</title><rect x="143.8" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.8" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (16 samples, 0.05%)</title><rect x="143.8" y="259.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="146.8" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (13 samples, 0.04%)</title><rect x="144.4" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.4" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (13 samples, 0.04%)</title><rect x="144.4" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.4" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (13 samples, 0.04%)</title><rect x="144.4" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.4" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (13 samples, 0.04%)</title><rect x="144.4" y="211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.4" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (13 samples, 0.04%)</title><rect x="144.4" y="195.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="147.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (19 samples, 0.06%)</title><rect x="144.9" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="144.9" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="147.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.08%)</title><rect x="145.7" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.08%)</title><rect x="145.7" y="419.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.08%)</title><rect x="145.7" y="403.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="148.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (19 samples, 0.06%)</title><rect x="146.6" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (19 samples, 0.06%)</title><rect x="146.6" y="451.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="146.6" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="146.6" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="146.6" y="403.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="149.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (58 samples, 0.19%)</title><rect x="147.4" y="467.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (35 samples, 0.12%)</title><rect x="147.4" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (35 samples, 0.12%)</title><rect x="147.4" y="435.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/957680741.linkToTargetMethod (35 samples, 0.12%)</title><rect x="147.4" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/685293226.invoke (35 samples, 0.12%)</title><rect x="147.4" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1625213256.invoke (35 samples, 0.12%)</title><rect x="147.4" y="387.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.12%)</title><rect x="147.4" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.05%)</title><rect x="147.4" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="147.4" y="339.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="150.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (21 samples, 0.07%)</title><rect x="147.9" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (21 samples, 0.07%)</title><rect x="147.9" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.9" y="350.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.07%)</title><rect x="147.9" y="323.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="150.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (23 samples, 0.08%)</title><rect x="148.7" y="451.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.08%)</title><rect x="148.7" y="435.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="151.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (27 samples, 0.09%)</title><rect x="149.7" y="547.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (27 samples, 0.09%)</title><rect x="149.7" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (27 samples, 0.09%)</title><rect x="149.7" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.7" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (27 samples, 0.09%)</title><rect x="149.7" y="499.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="152.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (63 samples, 0.21%)</title><rect x="150.7" y="547.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (38 samples, 0.13%)</title><rect x="150.7" y="531.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="153.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (25 samples, 0.08%)</title><rect x="152.2" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (25 samples, 0.08%)</title><rect x="152.2" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (14 samples, 0.05%)</title><rect x="152.2" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.2" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (14 samples, 0.05%)</title><rect x="152.2" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (14 samples, 0.05%)</title><rect x="152.2" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (14 samples, 0.05%)</title><rect x="152.2" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.2" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (14 samples, 0.05%)</title><rect x="152.2" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="155.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.04%)</title><rect x="152.8" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.8" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (11 samples, 0.04%)</title><rect x="152.8" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.04%)</title><rect x="152.8" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.04%)</title><rect x="152.8" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (11 samples, 0.04%)</title><rect x="152.8" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (11 samples, 0.04%)</title><rect x="152.8" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.8" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.04%)</title><rect x="152.8" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.8" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (11 samples, 0.04%)</title><rect x="152.8" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.8" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (11 samples, 0.04%)</title><rect x="152.8" y="371.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="155.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (252 samples, 0.85%)</title><rect x="153.2" y="643.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (145 samples, 0.49%)</title><rect x="153.2" y="627.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (144 samples, 0.48%)</title><rect x="153.2" y="611.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (144 samples, 0.48%)</title><rect x="153.2" y="595.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="156.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (144 samples, 0.48%)</title><rect x="153.2" y="579.0" width="5.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="156.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (107 samples, 0.36%)</title><rect x="159.0" y="627.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (107 samples, 0.36%)</title><rect x="159.0" y="611.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (107 samples, 0.36%)</title><rect x="159.0" y="595.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (107 samples, 0.36%)</title><rect x="159.0" y="579.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="162.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$377/1207993149.run (366 samples, 1.23%)</title><rect x="163.2" y="643.0" width="14.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (366 samples, 1.23%)</title><rect x="163.2" y="627.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (366 samples, 1.23%)</title><rect x="163.2" y="611.0" width="14.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (366 samples, 1.23%)</title><rect x="163.2" y="595.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (366 samples, 1.23%)</title><rect x="163.2" y="579.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (366 samples, 1.23%)</title><rect x="163.2" y="563.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (366 samples, 1.23%)</title><rect x="163.2" y="547.0" width="14.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (366 samples, 1.23%)</title><rect x="163.2" y="531.0" width="14.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (366 samples, 1.23%)</title><rect x="163.2" y="515.0" width="14.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (366 samples, 1.23%)</title><rect x="163.2" y="499.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (366 samples, 1.23%)</title><rect x="163.2" y="483.0" width="14.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (341 samples, 1.15%)</title><rect x="163.2" y="467.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.18%)</title><rect x="163.2" y="451.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.18%)</title><rect x="163.2" y="435.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$385/60567682.get$Lambda (45 samples, 0.15%)</title><rect x="163.2" y="419.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$385 (45 samples, 0.15%)</title><rect x="163.2" y="403.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="166.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/522227065.get$Lambda (8 samples, 0.03%)</title><rect x="165.0" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$408 (8 samples, 0.03%)</title><rect x="165.0" y="403.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="168.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (288 samples, 0.97%)</title><rect x="165.3" y="451.0" width="11.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (30 samples, 0.10%)</title><rect x="165.3" y="435.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="168.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (258 samples, 0.87%)</title><rect x="166.5" y="435.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (258 samples, 0.87%)</title><rect x="166.5" y="419.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (258 samples, 0.87%)</title><rect x="166.5" y="403.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (94 samples, 0.32%)</title><rect x="166.5" y="387.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.5" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.11%)</title><rect x="166.5" y="371.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="169.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/1520963950.apply (58 samples, 0.19%)</title><rect x="167.8" y="371.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (58 samples, 0.19%)</title><rect x="167.8" y="355.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (58 samples, 0.19%)</title><rect x="167.8" y="339.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (18 samples, 0.06%)</title><rect x="167.8" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.8" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (18 samples, 0.06%)</title><rect x="167.8" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.8" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (18 samples, 0.06%)</title><rect x="167.8" y="291.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="170.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (40 samples, 0.13%)</title><rect x="168.5" y="323.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (36 samples, 0.12%)</title><rect x="168.7" y="307.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (36 samples, 0.12%)</title><rect x="168.7" y="291.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (25 samples, 0.08%)</title><rect x="168.7" y="275.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="171.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.04%)</title><rect x="169.7" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.04%)</title><rect x="169.7" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.04%)</title><rect x="169.7" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (164 samples, 0.55%)</title><rect x="170.2" y="387.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (164 samples, 0.55%)</title><rect x="170.2" y="371.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/533652067.apply (164 samples, 0.55%)</title><rect x="170.2" y="355.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (164 samples, 0.55%)</title><rect x="170.2" y="339.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (164 samples, 0.55%)</title><rect x="170.2" y="323.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/333725311.apply (164 samples, 0.55%)</title><rect x="170.2" y="307.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (164 samples, 0.55%)</title><rect x="170.2" y="291.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="170.2" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="170.2" y="259.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/1520963950.get$Lambda (9 samples, 0.03%)</title><rect x="170.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$405 (9 samples, 0.03%)</title><rect x="170.2" y="227.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="173.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (42 samples, 0.14%)</title><rect x="170.6" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 0.14%)</title><rect x="170.6" y="259.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (29 samples, 0.10%)</title><rect x="170.6" y="243.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="173.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="171.7" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="174.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="171.7" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="171.7" y="211.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="174.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (54 samples, 0.18%)</title><rect x="172.3" y="275.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="172.3" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="172.3" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="175.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/400399565.get$Lambda (9 samples, 0.03%)</title><rect x="172.3" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$411 (9 samples, 0.03%)</title><rect x="172.3" y="211.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="175.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (45 samples, 0.15%)</title><rect x="172.6" y="259.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (45 samples, 0.15%)</title><rect x="172.6" y="243.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.6" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (23 samples, 0.08%)</title><rect x="172.6" y="227.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="175.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="173.5" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="173.5" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.07%)</title><rect x="173.5" y="195.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="176.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (59 samples, 0.20%)</title><rect x="174.4" y="275.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (40 samples, 0.13%)</title><rect x="174.4" y="259.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (21 samples, 0.07%)</title><rect x="174.4" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="177.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (19 samples, 0.06%)</title><rect x="175.2" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (19 samples, 0.06%)</title><rect x="175.2" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="175.2" y="211.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="178.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.06%)</title><rect x="176.0" y="259.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="179.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (12 samples, 0.04%)</title><rect x="176.0" y="243.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="179.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7 samples, 0.02%)</title><rect x="176.5" y="243.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (7 samples, 0.02%)</title><rect x="176.5" y="227.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="179.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (7 samples, 0.02%)</title><rect x="176.5" y="211.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (7 samples, 0.02%)</title><rect x="176.5" y="195.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (7 samples, 0.02%)</title><rect x="176.5" y="179.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (7 samples, 0.02%)</title><rect x="176.5" y="163.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="179.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (25 samples, 0.08%)</title><rect x="176.7" y="467.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (25 samples, 0.08%)</title><rect x="176.7" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (25 samples, 0.08%)</title><rect x="176.7" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (25 samples, 0.08%)</title><rect x="176.7" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (25 samples, 0.08%)</title><rect x="176.7" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.7" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (25 samples, 0.08%)</title><rect x="176.7" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (12 samples, 0.04%)</title><rect x="176.7" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.7" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (12 samples, 0.04%)</title><rect x="176.7" y="355.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="179.7" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (13 samples, 0.04%)</title><rect x="177.2" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (13 samples, 0.04%)</title><rect x="177.2" y="355.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="180.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,275 samples, 7.65%)</title><rect x="177.7" y="643.0" width="90.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.7" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,275 samples, 7.65%)</title><rect x="177.7" y="627.0" width="90.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.7" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,927 samples, 6.48%)</title><rect x="177.7" y="611.0" width="76.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.7" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (1,927 samples, 6.48%)</title><rect x="177.7" y="595.0" width="76.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.7" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,927 samples, 6.48%)</title><rect x="177.7" y="579.0" width="76.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.7" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (57 samples, 0.19%)</title><rect x="177.7" y="563.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (57 samples, 0.19%)</title><rect x="177.7" y="547.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (57 samples, 0.19%)</title><rect x="177.7" y="531.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (57 samples, 0.19%)</title><rect x="177.7" y="515.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/534906248.linkToTargetMethod (20 samples, 0.07%)</title><rect x="177.7" y="499.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363988129.invoke (20 samples, 0.07%)</title><rect x="177.7" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.07%)</title><rect x="177.7" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.07%)</title><rect x="177.7" y="451.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.07%)</title><rect x="177.7" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.7" y="446.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.07%)</title><rect x="177.7" y="419.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="180.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (37 samples, 0.12%)</title><rect x="178.5" y="499.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.12%)</title><rect x="178.5" y="483.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.12%)</title><rect x="178.5" y="467.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379/1517201211.get$Lambda (37 samples, 0.12%)</title><rect x="178.5" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="181.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$379 (37 samples, 0.12%)</title><rect x="178.5" y="435.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="181.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,870 samples, 6.28%)</title><rect x="180.0" y="563.0" width="74.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.0" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,870 samples, 6.28%)</title><rect x="180.0" y="547.0" width="74.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.0" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,870 samples, 6.28%)</title><rect x="180.0" y="531.0" width="74.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,870 samples, 6.28%)</title><rect x="180.0" y="515.0" width="74.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.0" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (931 samples, 3.13%)</title><rect x="180.0" y="499.0" width="36.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.0" y="510.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (931 samples, 3.13%)</title><rect x="180.0" y="483.0" width="36.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.0" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (931 samples, 3.13%)</title><rect x="180.0" y="467.0" width="36.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.0" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (931 samples, 3.13%)</title><rect x="180.0" y="451.0" width="36.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.0" y="462.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (931 samples, 3.13%)</title><rect x="180.0" y="435.0" width="36.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.0" y="446.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (931 samples, 3.13%)</title><rect x="180.0" y="419.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.0" y="430.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (931 samples, 3.13%)</title><rect x="180.0" y="403.0" width="36.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.0" y="414.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (903 samples, 3.03%)</title><rect x="180.0" y="387.0" width="35.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.0" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (903 samples, 3.03%)</title><rect x="180.0" y="371.0" width="35.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.0" y="382.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (877 samples, 2.95%)</title><rect x="180.0" y="355.0" width="34.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.0" y="366.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (10 samples, 0.03%)</title><rect x="180.0" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="183.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/400399565.apply (20 samples, 0.07%)</title><rect x="180.4" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (20 samples, 0.07%)</title><rect x="180.4" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (20 samples, 0.07%)</title><rect x="180.4" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (20 samples, 0.07%)</title><rect x="180.4" y="291.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.07%)</title><rect x="180.4" y="275.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="183.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/547892778.apply (819 samples, 2.75%)</title><rect x="181.2" y="339.0" width="32.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.2" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (819 samples, 2.75%)</title><rect x="181.2" y="323.0" width="32.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.2" y="334.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="181.2" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="184.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="181.2" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/612118843.get$Lambda (7 samples, 0.02%)</title><rect x="181.2" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.2" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$468 (7 samples, 0.02%)</title><rect x="181.2" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="184.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (36 samples, 0.12%)</title><rect x="181.5" y="307.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (36 samples, 0.12%)</title><rect x="181.5" y="291.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (17 samples, 0.06%)</title><rect x="181.5" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="184.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="182.1" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="182.1" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="182.1" y="243.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="185.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (776 samples, 2.61%)</title><rect x="182.9" y="307.0" width="30.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.9" y="318.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="182.9" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="182.9" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$467/419930909.get$Lambda (9 samples, 0.03%)</title><rect x="182.9" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$467 (9 samples, 0.03%)</title><rect x="182.9" y="243.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="185.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.15%)</title><rect x="183.2" y="291.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.15%)</title><rect x="183.2" y="275.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.08%)</title><rect x="183.2" y="259.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="186.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="184.2" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (22 samples, 0.07%)</title><rect x="184.2" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.07%)</title><rect x="184.2" y="227.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="187.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (721 samples, 2.42%)</title><rect x="185.1" y="291.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.1" y="302.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$167/1889724153.apply (52 samples, 0.17%)</title><rect x="185.1" y="275.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.1" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (52 samples, 0.17%)</title><rect x="185.1" y="259.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="188.1" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (52 samples, 0.17%)</title><rect x="185.1" y="243.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (19 samples, 0.06%)</title><rect x="185.1" y="227.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (33 samples, 0.11%)</title><rect x="185.8" y="227.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.8" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.06%)</title><rect x="185.8" y="211.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="188.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="186.5" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="189.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (669 samples, 2.25%)</title><rect x="187.1" y="275.0" width="26.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.1" y="286.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="187.1" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="187.1" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/970591656.linkToTargetMethod (28 samples, 0.09%)</title><rect x="187.5" y="259.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/226912742.invokeStatic (28 samples, 0.09%)</title><rect x="187.5" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1981871911.get$Lambda (28 samples, 0.09%)</title><rect x="187.5" y="227.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$429 (28 samples, 0.09%)</title><rect x="187.5" y="211.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="190.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (135 samples, 0.45%)</title><rect x="188.6" y="259.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.6" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (63 samples, 0.21%)</title><rect x="188.6" y="243.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.6" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (21 samples, 0.07%)</title><rect x="188.6" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.6" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (21 samples, 0.07%)</title><rect x="188.6" y="211.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="191.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.14%)</title><rect x="189.5" y="227.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.5" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.14%)</title><rect x="189.5" y="211.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="192.5" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (34 samples, 0.11%)</title><rect x="191.1" y="243.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.11%)</title><rect x="191.1" y="227.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (34 samples, 0.11%)</title><rect x="191.1" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="194.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.04%)</title><rect x="191.1" y="195.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (13 samples, 0.04%)</title><rect x="191.1" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (13 samples, 0.04%)</title><rect x="191.1" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.1" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (13 samples, 0.04%)</title><rect x="191.1" y="147.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="194.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$422/1076085175.get (12 samples, 0.04%)</title><rect x="191.7" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (12 samples, 0.04%)</title><rect x="191.7" y="179.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="194.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="192.1" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="192.1" y="179.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.1" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (9 samples, 0.03%)</title><rect x="192.1" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.1" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (9 samples, 0.03%)</title><rect x="192.1" y="147.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="195.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (38 samples, 0.13%)</title><rect x="192.5" y="243.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (38 samples, 0.13%)</title><rect x="192.5" y="227.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="195.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (86 samples, 0.29%)</title><rect x="194.0" y="259.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (40 samples, 0.13%)</title><rect x="194.0" y="243.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.07%)</title><rect x="194.0" y="227.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="197.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.07%)</title><rect x="194.8" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.07%)</title><rect x="194.8" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.07%)</title><rect x="194.8" y="195.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="197.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.15%)</title><rect x="195.6" y="243.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.15%)</title><rect x="195.6" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (33 samples, 0.11%)</title><rect x="195.6" y="211.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="198.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="196.9" y="211.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="196.9" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="196.9" y="179.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="199.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (19 samples, 0.06%)</title><rect x="197.4" y="259.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="200.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (16 samples, 0.05%)</title><rect x="198.2" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="201.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="198.8" y="259.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="201.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (18 samples, 0.06%)</title><rect x="199.4" y="259.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (18 samples, 0.06%)</title><rect x="199.4" y="243.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="202.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (341 samples, 1.15%)</title><rect x="200.1" y="259.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1981871911.run (341 samples, 1.15%)</title><rect x="200.1" y="243.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (341 samples, 1.15%)</title><rect x="200.1" y="227.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.18%)</title><rect x="200.1" y="211.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.18%)</title><rect x="200.1" y="195.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$434/1948962483.get$Lambda (11 samples, 0.04%)</title><rect x="200.1" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$434 (11 samples, 0.04%)</title><rect x="200.1" y="163.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="203.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$438/1212985765.get$Lambda (20 samples, 0.07%)</title><rect x="200.6" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="203.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$438 (20 samples, 0.07%)</title><rect x="200.6" y="163.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="203.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$450/1393523883.get$Lambda (24 samples, 0.08%)</title><rect x="201.4" y="179.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$450 (24 samples, 0.08%)</title><rect x="201.4" y="163.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.12%)</title><rect x="202.3" y="211.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.12%)</title><rect x="202.3" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.07%)</title><rect x="202.3" y="179.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="205.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="203.1" y="179.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="203.1" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="203.1" y="147.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="206.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (21 samples, 0.07%)</title><rect x="203.7" y="211.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="206.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (17 samples, 0.06%)</title><rect x="204.5" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="204.5" y="195.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="207.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (52 samples, 0.17%)</title><rect x="205.2" y="211.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (52 samples, 0.17%)</title><rect x="205.2" y="195.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.06%)</title><rect x="205.2" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.06%)</title><rect x="205.2" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="208.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$454/110210760.get$Lambda (17 samples, 0.06%)</title><rect x="205.2" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$454 (17 samples, 0.06%)</title><rect x="205.2" y="131.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="208.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.12%)</title><rect x="205.9" y="179.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.12%)</title><rect x="205.9" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.12%)</title><rect x="205.9" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.06%)</title><rect x="205.9" y="131.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="208.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="206.6" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="206.6" y="115.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.6" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="206.6" y="99.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="209.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (59 samples, 0.20%)</title><rect x="207.3" y="211.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.20%)</title><rect x="207.3" y="195.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1337344609.invoke (59 samples, 0.20%)</title><rect x="207.3" y="179.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.20%)</title><rect x="207.3" y="163.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.06%)</title><rect x="207.3" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.06%)</title><rect x="207.3" y="131.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="210.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (41 samples, 0.14%)</title><rect x="208.0" y="147.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (41 samples, 0.14%)</title><rect x="208.0" y="131.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.0" y="142.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.14%)</title><rect x="208.0" y="115.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="211.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (102 samples, 0.34%)</title><rect x="209.6" y="211.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.6" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (34 samples, 0.11%)</title><rect x="209.6" y="195.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="212.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (68 samples, 0.23%)</title><rect x="211.0" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.23%)</title><rect x="211.0" y="179.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1337344609.invoke (68 samples, 0.23%)</title><rect x="211.0" y="163.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.0" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.23%)</title><rect x="211.0" y="147.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.0" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.05%)</title><rect x="211.0" y="131.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.0" y="142.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="211.0" y="115.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="214.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.17%)</title><rect x="211.6" y="131.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.17%)</title><rect x="211.6" y="115.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.6" y="126.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.17%)</title><rect x="211.6" y="99.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="214.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/388445390.apply (28 samples, 0.09%)</title><rect x="213.7" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (28 samples, 0.09%)</title><rect x="213.7" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (7 samples, 0.02%)</title><rect x="213.7" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.7" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (7 samples, 0.02%)</title><rect x="213.7" y="291.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.7" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (7 samples, 0.02%)</title><rect x="213.7" y="275.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="216.7" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (7 samples, 0.02%)</title><rect x="213.7" y="259.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="216.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (21 samples, 0.07%)</title><rect x="213.9" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.07%)</title><rect x="213.9" y="291.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="216.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (26 samples, 0.09%)</title><rect x="214.8" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26 samples, 0.09%)</title><rect x="214.8" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$364/853251833.apply (26 samples, 0.09%)</title><rect x="214.8" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="217.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (26 samples, 0.09%)</title><rect x="214.8" y="307.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.09%)</title><rect x="214.8" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="217.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.09%)</title><rect x="214.8" y="275.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="217.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$413/1220165597.apply (28 samples, 0.09%)</title><rect x="215.8" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (28 samples, 0.09%)</title><rect x="215.8" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (28 samples, 0.09%)</title><rect x="215.8" y="355.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="218.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (939 samples, 3.16%)</title><rect x="216.9" y="499.0" width="37.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.9" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (63 samples, 0.21%)</title><rect x="216.9" y="483.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (63 samples, 0.21%)</title><rect x="216.9" y="467.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (63 samples, 0.21%)</title><rect x="216.9" y="451.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.9" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (63 samples, 0.21%)</title><rect x="216.9" y="435.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (63 samples, 0.21%)</title><rect x="216.9" y="419.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.9" y="430.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.21%)</title><rect x="216.9" y="403.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="219.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (39 samples, 0.13%)</title><rect x="219.4" y="483.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (39 samples, 0.13%)</title><rect x="219.4" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (39 samples, 0.13%)</title><rect x="219.4" y="451.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.4" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (39 samples, 0.13%)</title><rect x="219.4" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.13%)</title><rect x="219.4" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.4" y="430.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.13%)</title><rect x="219.4" y="403.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="222.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (72 samples, 0.24%)</title><rect x="221.0" y="483.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.0" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (13 samples, 0.04%)</title><rect x="221.0" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="224.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.04%)</title><rect x="221.5" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title><rect x="221.5" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="224.5" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="221.5" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.5" y="446.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="221.5" y="419.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="224.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.05%)</title><rect x="222.0" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.05%)</title><rect x="222.0" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.0" y="462.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="222.0" y="435.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="225.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (32 samples, 0.11%)</title><rect x="222.5" y="467.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.11%)</title><rect x="222.5" y="451.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.06%)</title><rect x="222.5" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="225.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.05%)</title><rect x="223.2" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.2" y="446.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="223.2" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="226.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (254 samples, 0.85%)</title><rect x="223.8" y="483.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.8" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (254 samples, 0.85%)</title><rect x="223.8" y="467.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (254 samples, 0.85%)</title><rect x="223.8" y="451.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.8" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (10 samples, 0.03%)</title><rect x="223.8" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="226.8" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.05%)</title><rect x="224.2" y="435.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="227.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.08%)</title><rect x="224.8" y="435.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="227.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (14 samples, 0.05%)</title><rect x="225.8" y="435.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="228.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="226.3" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="226.3" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.3" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.get$Lambda (18 samples, 0.06%)</title><rect x="226.3" y="403.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.3" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$160 (18 samples, 0.06%)</title><rect x="226.3" y="387.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="229.3" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (16 samples, 0.05%)</title><rect x="227.0" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.0" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (16 samples, 0.05%)</title><rect x="227.0" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="230.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (129 samples, 0.43%)</title><rect x="227.7" y="435.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (129 samples, 0.43%)</title><rect x="227.7" y="419.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.7" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (129 samples, 0.43%)</title><rect x="227.7" y="403.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.7" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (32 samples, 0.11%)</title><rect x="227.7" y="387.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$378/1919901546.accept (32 samples, 0.11%)</title><rect x="227.7" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (32 samples, 0.11%)</title><rect x="227.7" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (32 samples, 0.11%)</title><rect x="227.7" y="339.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (32 samples, 0.11%)</title><rect x="227.7" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (32 samples, 0.11%)</title><rect x="227.7" y="307.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (32 samples, 0.11%)</title><rect x="227.7" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (32 samples, 0.11%)</title><rect x="227.7" y="275.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (32 samples, 0.11%)</title><rect x="227.7" y="259.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="230.7" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (47 samples, 0.16%)</title><rect x="228.9" y="387.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (47 samples, 0.16%)</title><rect x="228.9" y="371.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (25 samples, 0.08%)</title><rect x="228.9" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (25 samples, 0.08%)</title><rect x="228.9" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.08%)</title><rect x="228.9" y="323.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="231.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (22 samples, 0.07%)</title><rect x="229.9" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (22 samples, 0.07%)</title><rect x="229.9" y="339.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="232.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (50 samples, 0.17%)</title><rect x="230.8" y="387.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (50 samples, 0.17%)</title><rect x="230.8" y="371.0" width="2.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="233.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.09%)</title><rect x="232.8" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.8" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.09%)</title><rect x="232.8" y="419.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="235.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (511 samples, 1.72%)</title><rect x="233.9" y="483.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.9" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (28 samples, 0.09%)</title><rect x="233.9" y="467.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="236.9" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (28 samples, 0.09%)</title><rect x="235.0" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (28 samples, 0.09%)</title><rect x="235.0" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.0" y="462.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="235.0" y="435.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="238.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (84 samples, 0.28%)</title><rect x="236.1" y="467.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.28%)</title><rect x="236.1" y="451.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="239.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.12%)</title><rect x="236.1" y="435.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="239.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (48 samples, 0.16%)</title><rect x="237.5" y="435.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.5" y="446.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.16%)</title><rect x="237.5" y="419.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="240.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (371 samples, 1.25%)</title><rect x="239.4" y="467.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (113 samples, 0.38%)</title><rect x="239.4" y="451.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="242.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (113 samples, 0.38%)</title><rect x="239.4" y="435.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.15%)</title><rect x="239.4" y="419.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="242.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.23%)</title><rect x="241.3" y="419.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.3" y="430.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.23%)</title><rect x="241.3" y="403.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="244.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (55 samples, 0.18%)</title><rect x="243.9" y="451.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (55 samples, 0.18%)</title><rect x="243.9" y="435.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="246.9" y="446.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.12%)</title><rect x="243.9" y="419.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="246.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.06%)</title><rect x="245.4" y="419.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="248.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (53 samples, 0.18%)</title><rect x="246.1" y="451.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (53 samples, 0.18%)</title><rect x="246.1" y="435.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.18%)</title><rect x="246.1" y="419.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.1" y="430.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.08%)</title><rect x="246.1" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="249.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.10%)</title><rect x="247.0" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.0" y="414.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.10%)</title><rect x="247.0" y="387.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="250.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (53 samples, 0.18%)</title><rect x="248.2" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (53 samples, 0.18%)</title><rect x="248.2" y="435.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (53 samples, 0.18%)</title><rect x="248.2" y="419.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.2" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (53 samples, 0.18%)</title><rect x="248.2" y="403.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (53 samples, 0.18%)</title><rect x="248.2" y="387.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (53 samples, 0.18%)</title><rect x="248.2" y="371.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="251.2" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (97 samples, 0.33%)</title><rect x="250.3" y="451.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (29 samples, 0.10%)</title><rect x="250.3" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (29 samples, 0.10%)</title><rect x="250.3" y="419.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="253.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (56 samples, 0.19%)</title><rect x="251.4" y="435.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (56 samples, 0.19%)</title><rect x="251.4" y="419.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="254.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$418/1483513211.apply (12 samples, 0.04%)</title><rect x="253.7" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (12 samples, 0.04%)</title><rect x="253.7" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.7" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="253.7" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="256.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (348 samples, 1.17%)</title><rect x="254.1" y="611.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (348 samples, 1.17%)</title><rect x="254.1" y="595.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (348 samples, 1.17%)</title><rect x="254.1" y="579.0" width="13.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (348 samples, 1.17%)</title><rect x="254.1" y="563.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (348 samples, 1.17%)</title><rect x="254.1" y="547.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (346 samples, 1.16%)</title><rect x="254.1" y="531.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.08%)</title><rect x="254.1" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.08%)</title><rect x="254.1" y="499.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$333/1754313318.get$Lambda (9 samples, 0.03%)</title><rect x="254.1" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$333 (9 samples, 0.03%)</title><rect x="254.1" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="257.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$335/771058088.get$Lambda (14 samples, 0.05%)</title><rect x="254.5" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$335 (14 samples, 0.05%)</title><rect x="254.5" y="467.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="257.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (25 samples, 0.08%)</title><rect x="255.1" y="515.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="258.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (20 samples, 0.07%)</title><rect x="256.0" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (20 samples, 0.07%)</title><rect x="256.0" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (13 samples, 0.04%)</title><rect x="256.0" y="483.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="259.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (7 samples, 0.02%)</title><rect x="256.6" y="483.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.02%)</title><rect x="256.6" y="467.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="259.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (278 samples, 0.93%)</title><rect x="256.8" y="515.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (278 samples, 0.93%)</title><rect x="256.8" y="499.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$434/1948962483.run (228 samples, 0.77%)</title><rect x="256.8" y="483.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="259.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (228 samples, 0.77%)</title><rect x="256.8" y="467.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (228 samples, 0.77%)</title><rect x="256.8" y="451.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (56 samples, 0.19%)</title><rect x="256.8" y="435.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.8" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 0.12%)</title><rect x="256.8" y="419.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.8" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.06%)</title><rect x="256.8" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.8" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.06%)</title><rect x="256.8" y="387.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="259.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (18 samples, 0.06%)</title><rect x="257.6" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.6" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (18 samples, 0.06%)</title><rect x="257.6" y="387.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="260.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (19 samples, 0.06%)</title><rect x="258.3" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.06%)</title><rect x="258.3" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (19 samples, 0.06%)</title><rect x="258.3" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1561408618.get (12 samples, 0.04%)</title><rect x="258.3" y="371.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.3" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (12 samples, 0.04%)</title><rect x="258.3" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="261.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (7 samples, 0.02%)</title><rect x="258.8" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.8" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (7 samples, 0.02%)</title><rect x="258.8" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="261.8" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.02%)</title><rect x="258.8" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.8" y="350.0"></text>
</g>
<g>
<title>java.util.Optional (7 samples, 0.02%)</title><rect x="258.8" y="323.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="261.8" y="334.0"></text>
</g>
<g>
<title>java/util/Optional.map (10 samples, 0.03%)</title><rect x="259.1" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.1" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (10 samples, 0.03%)</title><rect x="259.1" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.1" y="430.0"></text>
</g>
<g>
<title>java/util/Optional.of (10 samples, 0.03%)</title><rect x="259.1" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.1" y="414.0"></text>
</g>
<g>
<title>java.util.Optional (10 samples, 0.03%)</title><rect x="259.1" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="262.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (162 samples, 0.54%)</title><rect x="259.5" y="435.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.5" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (13 samples, 0.04%)</title><rect x="259.5" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.5" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (13 samples, 0.04%)</title><rect x="259.5" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.5" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (13 samples, 0.04%)</title><rect x="259.5" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.5" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (13 samples, 0.04%)</title><rect x="259.5" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.5" y="382.0"></text>
</g>
<g>
<title>java.time.Instant (13 samples, 0.04%)</title><rect x="259.5" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="262.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (149 samples, 0.50%)</title><rect x="260.0" y="419.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (45 samples, 0.15%)</title><rect x="260.0" y="403.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.0" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (18 samples, 0.06%)</title><rect x="260.0" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (18 samples, 0.06%)</title><rect x="260.0" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.0" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (18 samples, 0.06%)</title><rect x="260.0" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (18 samples, 0.06%)</title><rect x="260.0" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (18 samples, 0.06%)</title><rect x="260.0" y="323.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.0" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (18 samples, 0.06%)</title><rect x="260.0" y="307.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="263.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.06%)</title><rect x="260.7" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.7" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (17 samples, 0.06%)</title><rect x="260.7" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="263.7" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (17 samples, 0.06%)</title><rect x="260.7" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="263.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (10 samples, 0.03%)</title><rect x="261.4" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="264.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (46 samples, 0.15%)</title><rect x="261.8" y="403.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.8" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.06%)</title><rect x="261.8" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.8" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (19 samples, 0.06%)</title><rect x="261.8" y="371.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (19 samples, 0.06%)</title><rect x="261.8" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.06%)</title><rect x="261.8" y="339.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="264.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (14 samples, 0.05%)</title><rect x="262.5" y="387.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.5" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (14 samples, 0.05%)</title><rect x="262.5" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="265.5" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (14 samples, 0.05%)</title><rect x="262.5" y="355.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="265.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (13 samples, 0.04%)</title><rect x="263.1" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (13 samples, 0.04%)</title><rect x="263.1" y="371.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="266.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (58 samples, 0.19%)</title><rect x="263.6" y="403.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (14 samples, 0.05%)</title><rect x="263.6" y="387.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="266.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (44 samples, 0.15%)</title><rect x="264.1" y="387.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (17 samples, 0.06%)</title><rect x="264.1" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.06%)</title><rect x="264.1" y="355.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.06%)</title><rect x="264.1" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (17 samples, 0.06%)</title><rect x="264.1" y="323.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="267.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (27 samples, 0.09%)</title><rect x="264.8" y="371.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (27 samples, 0.09%)</title><rect x="264.8" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (17 samples, 0.06%)</title><rect x="264.8" y="339.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="267.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (10 samples, 0.03%)</title><rect x="265.5" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (10 samples, 0.03%)</title><rect x="265.5" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="268.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (50 samples, 0.17%)</title><rect x="265.9" y="483.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (50 samples, 0.17%)</title><rect x="265.9" y="467.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (50 samples, 0.17%)</title><rect x="265.9" y="451.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.14%)</title><rect x="265.9" y="435.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.14%)</title><rect x="265.9" y="419.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (42 samples, 0.14%)</title><rect x="265.9" y="403.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (42 samples, 0.14%)</title><rect x="265.9" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$459/960295569.accept (42 samples, 0.14%)</title><rect x="265.9" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (42 samples, 0.14%)</title><rect x="265.9" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (42 samples, 0.14%)</title><rect x="265.9" y="339.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.14%)</title><rect x="265.9" y="323.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (42 samples, 0.14%)</title><rect x="265.9" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/612118843.apply (42 samples, 0.14%)</title><rect x="265.9" y="291.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (42 samples, 0.14%)</title><rect x="265.9" y="275.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (42 samples, 0.14%)</title><rect x="265.9" y="259.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="268.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (8 samples, 0.03%)</title><rect x="267.5" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.5" y="446.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="267.5" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="270.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$498/1539433281.run (6,227 samples, 20.93%)</title><rect x="267.9" y="643.0" width="247.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.9" y="654.0">ru/mail/polis/service/stasyanoi/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (6,227 samples, 20.93%)</title><rect x="267.9" y="627.0" width="247.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.9" y="638.0">ru/mail/polis/service/stasyanoi/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getInternal (6,227 samples, 20.93%)</title><rect x="267.9" y="611.0" width="247.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.9" y="622.0">ru/mail/polis/service/stasyanoi/s..</text>
</g>
<g>
<title>java.util.TreeMap (118 samples, 0.40%)</title><rect x="267.9" y="595.0" width="4.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="270.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (20 samples, 0.07%)</title><rect x="272.6" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (20 samples, 0.07%)</title><rect x="272.6" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (20 samples, 0.07%)</title><rect x="272.6" y="563.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.07%)</title><rect x="272.6" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.6" y="558.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.07%)</title><rect x="272.6" y="531.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="275.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (135 samples, 0.45%)</title><rect x="273.4" y="595.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (135 samples, 0.45%)</title><rect x="273.4" y="579.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (22 samples, 0.07%)</title><rect x="273.4" y="563.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (22 samples, 0.07%)</title><rect x="273.4" y="547.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="276.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (113 samples, 0.38%)</title><rect x="274.3" y="563.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (113 samples, 0.38%)</title><rect x="274.3" y="547.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (45 samples, 0.15%)</title><rect x="274.3" y="531.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="277.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (68 samples, 0.23%)</title><rect x="276.1" y="531.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (68 samples, 0.23%)</title><rect x="276.1" y="515.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="279.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (191 samples, 0.64%)</title><rect x="278.8" y="595.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (191 samples, 0.64%)</title><rect x="278.8" y="579.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (122 samples, 0.41%)</title><rect x="278.8" y="563.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (122 samples, 0.41%)</title><rect x="278.8" y="547.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="558.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.41%)</title><rect x="278.8" y="531.0" width="4.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="281.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 0.23%)</title><rect x="283.6" y="563.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.6" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (69 samples, 0.23%)</title><rect x="283.6" y="547.0" width="2.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="286.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (44 samples, 0.15%)</title><rect x="286.3" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.15%)</title><rect x="286.3" y="579.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (44 samples, 0.15%)</title><rect x="286.3" y="563.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.3" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (44 samples, 0.15%)</title><rect x="286.3" y="547.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="289.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getProxy (2,680 samples, 9.01%)</title><rect x="288.1" y="595.0" width="106.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.1" y="606.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/FrameServer.routeRequest (871 samples, 2.93%)</title><rect x="288.1" y="579.0" width="34.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="291.1" y="590.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (871 samples, 2.93%)</title><rect x="288.1" y="563.0" width="34.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.1" y="574.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (871 samples, 2.93%)</title><rect x="288.1" y="547.0" width="34.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.1" y="558.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (800 samples, 2.69%)</title><rect x="288.2" y="531.0" width="31.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.2" y="542.0">on..</text>
</g>
<g>
<title>byte[] (101 samples, 0.34%)</title><rect x="288.2" y="515.0" width="4.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="291.2" y="526.0"></text>
</g>
<g>
<title>byte[] (699 samples, 2.35%)</title><rect x="292.2" y="515.0" width="27.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.2" y="526.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (45 samples, 0.15%)</title><rect x="319.9" y="531.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (33 samples, 0.11%)</title><rect x="320.1" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.1" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.11%)</title><rect x="320.1" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.11%)</title><rect x="320.1" y="483.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.1" y="494.0"></text>
</g>
<g>
<title>char[] (20 samples, 0.07%)</title><rect x="320.1" y="467.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="323.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.03%)</title><rect x="321.0" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.03%)</title><rect x="321.0" y="451.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.03%)</title><rect x="321.0" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.0" y="446.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="321.0" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="324.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (16 samples, 0.05%)</title><rect x="321.7" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="321.7" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.7" y="526.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="321.7" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="324.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (7 samples, 0.02%)</title><rect x="322.3" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.02%)</title><rect x="322.3" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.02%)</title><rect x="322.3" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponseIfIdNotNull (1,809 samples, 6.08%)</title><rect x="322.6" y="579.0" width="71.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.6" y="590.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (1,757 samples, 5.90%)</title><rect x="322.6" y="563.0" width="69.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="325.6" y="574.0">ru/mail..</text>
</g>
<g>
<title>java.util.NoSuchElementException (28 samples, 0.09%)</title><rect x="322.6" y="547.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="325.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.30%)</title><rect x="323.7" y="547.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/665188480.invoke (89 samples, 0.30%)</title><rect x="323.7" y="531.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.30%)</title><rect x="323.7" y="515.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.7" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (21 samples, 0.07%)</title><rect x="323.7" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.07%)</title><rect x="323.7" y="483.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="326.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (68 samples, 0.23%)</title><rect x="324.6" y="499.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (68 samples, 0.23%)</title><rect x="324.6" y="483.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.6" y="494.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.23%)</title><rect x="324.6" y="467.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="327.6" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (246 samples, 0.83%)</title><rect x="327.3" y="547.0" width="9.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.3" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (29 samples, 0.10%)</title><rect x="327.3" y="531.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="330.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (31 samples, 0.10%)</title><rect x="328.4" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (31 samples, 0.10%)</title><rect x="328.4" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.4" y="526.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.10%)</title><rect x="328.4" y="499.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="331.4" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (120 samples, 0.40%)</title><rect x="329.6" y="531.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="332.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (120 samples, 0.40%)</title><rect x="329.6" y="515.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.6" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (120 samples, 0.40%)</title><rect x="329.6" y="499.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (120 samples, 0.40%)</title><rect x="329.6" y="483.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.6" y="494.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.40%)</title><rect x="329.6" y="467.0" width="4.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="332.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (66 samples, 0.22%)</title><rect x="334.4" y="531.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (66 samples, 0.22%)</title><rect x="334.4" y="515.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.07%)</title><rect x="334.4" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="337.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.15%)</title><rect x="335.2" y="499.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.2" y="510.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.15%)</title><rect x="335.2" y="483.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="338.2" y="494.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (550 samples, 1.85%)</title><rect x="337.0" y="547.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.0" y="558.0">j..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (550 samples, 1.85%)</title><rect x="337.0" y="531.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.0" y="542.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (550 samples, 1.85%)</title><rect x="337.0" y="515.0" width="21.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.0" y="526.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (550 samples, 1.85%)</title><rect x="337.0" y="499.0" width="21.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.0" y="510.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (550 samples, 1.85%)</title><rect x="337.0" y="483.0" width="21.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.0" y="494.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (550 samples, 1.85%)</title><rect x="337.0" y="467.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="340.0" y="478.0">j..</text>
</g>
<g>
<title>int[] (111 samples, 0.37%)</title><rect x="337.0" y="451.0" width="4.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="340.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (145 samples, 0.49%)</title><rect x="341.4" y="451.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="344.4" y="462.0"></text>
</g>
<g>
<title>long[] (138 samples, 0.46%)</title><rect x="347.2" y="451.0" width="5.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="350.2" y="462.0"></text>
</g>
<g>
<title>long[] (94 samples, 0.32%)</title><rect x="352.6" y="451.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.6" y="462.0"></text>
</g>
<g>
<title>short[] (62 samples, 0.21%)</title><rect x="356.4" y="451.0" width="2.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="359.4" y="462.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (827 samples, 2.78%)</title><rect x="358.8" y="547.0" width="32.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.8" y="558.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (827 samples, 2.78%)</title><rect x="358.8" y="531.0" width="32.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.8" y="542.0">or..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (827 samples, 2.78%)</title><rect x="358.8" y="515.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.8" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (827 samples, 2.78%)</title><rect x="358.8" y="499.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.8" y="510.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (827 samples, 2.78%)</title><rect x="358.8" y="483.0" width="32.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.8" y="494.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (827 samples, 2.78%)</title><rect x="358.8" y="467.0" width="32.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.8" y="478.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (827 samples, 2.78%)</title><rect x="358.8" y="451.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.8" y="462.0">or..</text>
</g>
<g>
<title>byte[] (827 samples, 2.78%)</title><rect x="358.8" y="435.0" width="32.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="361.8" y="446.0">by..</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (17 samples, 0.06%)</title><rect x="391.6" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.6" y="558.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.06%)</title><rect x="391.6" y="531.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="394.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (52 samples, 0.17%)</title><rect x="392.3" y="563.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.3" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.07%)</title><rect x="392.3" y="547.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="395.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (30 samples, 0.10%)</title><rect x="393.2" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (30 samples, 0.10%)</title><rect x="393.2" y="531.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="396.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getNoRepRequest (674 samples, 2.26%)</title><rect x="394.4" y="595.0" width="26.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.4" y="606.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.24%)</title><rect x="394.4" y="579.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (60 samples, 0.20%)</title><rect x="394.4" y="563.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (60 samples, 0.20%)</title><rect x="394.4" y="547.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.20%)</title><rect x="394.4" y="531.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (22 samples, 0.07%)</title><rect x="394.4" y="515.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.07%)</title><rect x="394.4" y="499.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="397.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (38 samples, 0.13%)</title><rect x="395.2" y="515.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (38 samples, 0.13%)</title><rect x="395.2" y="499.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.2" y="510.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.13%)</title><rect x="395.2" y="483.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="398.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1563015391.invoke (10 samples, 0.03%)</title><rect x="396.7" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1471522505.invoke (10 samples, 0.03%)</title><rect x="396.7" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="396.7" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.03%)</title><rect x="396.8" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.03%)</title><rect x="396.8" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.8" y="510.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="396.8" y="483.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="399.8" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (47 samples, 0.16%)</title><rect x="397.1" y="579.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.16%)</title><rect x="397.1" y="563.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.16%)</title><rect x="397.1" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.08%)</title><rect x="397.1" y="531.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="400.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.08%)</title><rect x="398.1" y="531.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.1" y="542.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.08%)</title><rect x="398.1" y="515.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="401.1" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (100 samples, 0.34%)</title><rect x="399.0" y="579.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (100 samples, 0.34%)</title><rect x="399.0" y="563.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (100 samples, 0.34%)</title><rect x="399.0" y="547.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.15%)</title><rect x="399.0" y="531.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="402.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.18%)</title><rect x="400.8" y="531.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.8" y="542.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.18%)</title><rect x="400.8" y="515.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="403.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getCloneRequest (457 samples, 1.54%)</title><rect x="403.0" y="579.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.28%)</title><rect x="403.0" y="563.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="403.0" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="406.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$136/1503005079.get$Lambda (10 samples, 0.03%)</title><rect x="403.0" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.internal.GetMethodServer$$Lambda$136 (10 samples, 0.03%)</title><rect x="403.0" y="515.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="406.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798154996.invoke (74 samples, 0.25%)</title><rect x="403.4" y="547.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="406.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.25%)</title><rect x="403.4" y="531.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="406.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (22 samples, 0.07%)</title><rect x="403.4" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.07%)</title><rect x="403.4" y="499.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="406.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.17%)</title><rect x="404.2" y="515.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.17%)</title><rect x="404.2" y="499.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.2" y="510.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.17%)</title><rect x="404.2" y="483.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="407.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (93 samples, 0.31%)</title><rect x="406.3" y="563.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.3" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (93 samples, 0.31%)</title><rect x="406.3" y="547.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="409.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (24 samples, 0.08%)</title><rect x="406.3" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.3" y="542.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (24 samples, 0.08%)</title><rect x="406.3" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="409.3" y="526.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (24 samples, 0.08%)</title><rect x="406.3" y="499.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="409.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (69 samples, 0.23%)</title><rect x="407.2" y="531.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.2" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (69 samples, 0.23%)</title><rect x="407.2" y="515.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="410.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (105 samples, 0.35%)</title><rect x="410.0" y="563.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (105 samples, 0.35%)</title><rect x="410.0" y="547.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="413.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (65 samples, 0.22%)</title><rect x="414.1" y="563.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (35 samples, 0.12%)</title><rect x="414.1" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (35 samples, 0.12%)</title><rect x="414.1" y="531.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (35 samples, 0.12%)</title><rect x="414.1" y="515.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (35 samples, 0.12%)</title><rect x="414.1" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.1" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (35 samples, 0.12%)</title><rect x="414.1" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (35 samples, 0.12%)</title><rect x="414.1" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.1" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (35 samples, 0.12%)</title><rect x="414.1" y="451.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="417.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (30 samples, 0.10%)</title><rect x="415.5" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (30 samples, 0.10%)</title><rect x="415.5" y="531.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="418.5" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Request (34 samples, 0.11%)</title><rect x="416.7" y="563.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="419.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (76 samples, 0.26%)</title><rect x="418.1" y="563.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.1" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (76 samples, 0.26%)</title><rect x="418.1" y="547.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="421.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getReplicaGetResponse (2,365 samples, 7.95%)</title><rect x="421.1" y="595.0" width="93.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.1" y="606.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (41 samples, 0.14%)</title><rect x="421.1" y="579.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (41 samples, 0.14%)</title><rect x="421.1" y="563.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (41 samples, 0.14%)</title><rect x="421.1" y="547.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.14%)</title><rect x="421.1" y="531.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.1" y="542.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.06%)</title><rect x="421.1" y="515.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="424.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.07%)</title><rect x="421.8" y="515.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.8" y="526.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="421.8" y="499.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="424.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.mergeGetResponses (115 samples, 0.39%)</title><rect x="422.7" y="579.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.7" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (29 samples, 0.10%)</title><rect x="422.7" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (9 samples, 0.03%)</title><rect x="422.7" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.7" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (9 samples, 0.03%)</title><rect x="422.7" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.7" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (9 samples, 0.03%)</title><rect x="422.7" y="515.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="425.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 0.07%)</title><rect x="423.1" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.1" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (20 samples, 0.07%)</title><rect x="423.1" y="531.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="426.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (9 samples, 0.03%)</title><rect x="423.9" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.9" y="574.0"></text>
</g>
<g>
<title>java.util.stream.Collectors$CollectorImpl (9 samples, 0.03%)</title><rect x="423.9" y="547.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="426.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (49 samples, 0.16%)</title><rect x="424.2" y="563.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (33 samples, 0.11%)</title><rect x="424.2" y="547.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (33 samples, 0.11%)</title><rect x="424.2" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.06%)</title><rect x="424.2" y="515.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (15 samples, 0.05%)</title><rect x="424.2" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (10 samples, 0.03%)</title><rect x="424.4" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (10 samples, 0.03%)</title><rect x="424.4" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="427.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$483/268621062.get (10 samples, 0.03%)</title><rect x="424.4" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="424.4" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="427.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (15 samples, 0.05%)</title><rect x="424.9" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (15 samples, 0.05%)</title><rect x="424.9" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.9" y="510.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3ReducingSink (15 samples, 0.05%)</title><rect x="424.9" y="483.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="427.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (16 samples, 0.05%)</title><rect x="425.5" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$3 (16 samples, 0.05%)</title><rect x="425.5" y="531.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="428.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (19 samples, 0.06%)</title><rect x="426.2" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.2" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (19 samples, 0.06%)</title><rect x="426.2" y="547.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="429.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (9 samples, 0.03%)</title><rect x="426.9" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.ackFromPair (211 samples, 0.71%)</title><rect x="427.3" y="579.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.3" y="590.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.03%)</title><rect x="427.3" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (8 samples, 0.03%)</title><rect x="427.4" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.4" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (8 samples, 0.03%)</title><rect x="427.4" y="531.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="430.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (161 samples, 0.54%)</title><rect x="428.0" y="563.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (161 samples, 0.54%)</title><rect x="428.0" y="547.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="431.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (161 samples, 0.54%)</title><rect x="428.0" y="531.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (153 samples, 0.51%)</title><rect x="428.0" y="515.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.0" y="526.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (143 samples, 0.48%)</title><rect x="428.0" y="499.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (143 samples, 0.48%)</title><rect x="428.0" y="483.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (143 samples, 0.48%)</title><rect x="428.0" y="467.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.0" y="478.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.tryAdvance (143 samples, 0.48%)</title><rect x="428.0" y="451.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.0" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (143 samples, 0.48%)</title><rect x="428.0" y="435.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$145/1948566048.apply (143 samples, 0.48%)</title><rect x="428.0" y="419.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$ackFromPair$0 (143 samples, 0.48%)</title><rect x="428.0" y="403.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.split (143 samples, 0.48%)</title><rect x="428.0" y="387.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.0" y="398.0"></text>
</g>
<g>
<title>java/lang/String.split (143 samples, 0.48%)</title><rect x="428.0" y="371.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String[] (12 samples, 0.04%)</title><rect x="428.0" y="355.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="431.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (81 samples, 0.27%)</title><rect x="428.5" y="355.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.5" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (81 samples, 0.27%)</title><rect x="428.5" y="339.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.5" y="350.0"></text>
</g>
<g>
<title>java.lang.String (38 samples, 0.13%)</title><rect x="428.5" y="323.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="431.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (43 samples, 0.14%)</title><rect x="430.0" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.0" y="334.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.14%)</title><rect x="430.0" y="307.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="433.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.17%)</title><rect x="431.7" y="355.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.17%)</title><rect x="431.7" y="339.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.17%)</title><rect x="431.7" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.17%)</title><rect x="431.7" y="307.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.7" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.17%)</title><rect x="431.7" y="291.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.17%)</title><rect x="431.7" y="275.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="434.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (10 samples, 0.03%)</title><rect x="433.7" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (10 samples, 0.03%)</title><rect x="434.4" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.4" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (10 samples, 0.03%)</title><rect x="434.4" y="547.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="437.4" y="558.0"></text>
</g>
<g>
<title>org.javatuples.Pair (8 samples, 0.03%)</title><rect x="434.8" y="563.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="437.8" y="574.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (14 samples, 0.05%)</title><rect x="435.1" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="438.1" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.02%)</title><rect x="435.1" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="438.1" y="558.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (7 samples, 0.02%)</title><rect x="435.4" y="547.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (7 samples, 0.02%)</title><rect x="435.4" y="531.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.4" y="542.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (7 samples, 0.02%)</title><rect x="435.4" y="515.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="438.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponsesFromReplicas (1,998 samples, 6.71%)</title><rect x="435.6" y="579.0" width="79.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.6" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (8 samples, 0.03%)</title><rect x="435.6" y="563.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="438.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/42121758.linkToTargetMethod (8 samples, 0.03%)</title><rect x="436.0" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1355531311.invokeStatic (8 samples, 0.03%)</title><rect x="436.0" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$152/987084221.get$Lambda (8 samples, 0.03%)</title><rect x="436.0" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.0" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.internal.GetMethodServer$$Lambda$152 (8 samples, 0.03%)</title><rect x="436.0" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="439.0" y="526.0"></text>
</g>
<g>
<title>java/util/Collection.stream (28 samples, 0.09%)</title><rect x="436.3" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.spliterator (12 samples, 0.04%)</title><rect x="436.3" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySpliterator (12 samples, 0.04%)</title><rect x="436.3" y="531.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="439.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (16 samples, 0.05%)</title><rect x="436.8" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (16 samples, 0.05%)</title><rect x="436.8" y="531.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="439.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (19 samples, 0.06%)</title><rect x="437.6" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (19 samples, 0.06%)</title><rect x="437.6" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (9 samples, 0.03%)</title><rect x="437.6" y="531.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="440.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.bipush (7 samples, 0.02%)</title><rect x="438.1" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$CoCompletion (7 samples, 0.02%)</title><rect x="438.1" y="515.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="441.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (20 samples, 0.07%)</title><rect x="438.7" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (20 samples, 0.07%)</title><rect x="438.7" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.7" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (20 samples, 0.07%)</title><rect x="438.7" y="531.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="441.7" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.limit (23 samples, 0.08%)</title><rect x="439.5" y="563.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.5" y="574.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps.makeRef (23 samples, 0.08%)</title><rect x="439.5" y="547.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.SliceOps$1 (23 samples, 0.08%)</title><rect x="439.5" y="531.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="442.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.map (31 samples, 0.10%)</title><rect x="440.4" y="563.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.4" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3 (31 samples, 0.10%)</title><rect x="440.4" y="547.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="443.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.toArray (1,846 samples, 6.20%)</title><rect x="441.7" y="563.0" width="73.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.7" y="574.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (1,842 samples, 6.19%)</title><rect x="441.7" y="547.0" width="73.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="444.7" y="558.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1,842 samples, 6.19%)</title><rect x="441.7" y="531.0" width="73.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.7" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1,820 samples, 6.12%)</title><rect x="441.7" y="515.0" width="72.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1,799 samples, 6.05%)</title><rect x="441.7" y="499.0" width="71.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.7" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1,799 samples, 6.05%)</title><rect x="441.7" y="483.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.7" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1,799 samples, 6.05%)</title><rect x="441.7" y="467.0" width="71.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="444.7" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.tryAdvance (1,799 samples, 6.05%)</title><rect x="441.7" y="451.0" width="71.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.7" y="462.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (1,799 samples, 6.05%)</title><rect x="441.7" y="435.0" width="71.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="444.7" y="446.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,799 samples, 6.05%)</title><rect x="441.7" y="419.0" width="71.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="430.0">java/uti..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (1,390 samples, 4.67%)</title><rect x="441.7" y="403.0" width="55.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.7" y="414.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$154/571048721.apply (1,390 samples, 4.67%)</title><rect x="441.7" y="387.0" width="55.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.7" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$2 (1,390 samples, 4.67%)</title><rect x="441.7" y="371.0" width="55.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.7" y="382.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (25 samples, 0.08%)</title><rect x="441.7" y="355.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (25 samples, 0.08%)</title><rect x="441.7" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (15 samples, 0.05%)</title><rect x="441.7" y="323.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="444.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="442.3" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="445.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="442.3" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="442.3" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="445.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (30 samples, 0.10%)</title><rect x="442.7" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (30 samples, 0.10%)</title><rect x="442.7" y="339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.7" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (16 samples, 0.05%)</title><rect x="442.7" y="323.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="445.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="443.4" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="443.4" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.05%)</title><rect x="443.4" y="291.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="446.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (29 samples, 0.10%)</title><rect x="443.9" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="446.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (29 samples, 0.10%)</title><rect x="443.9" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="446.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (16 samples, 0.05%)</title><rect x="443.9" y="323.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="446.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="444.6" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="444.6" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="444.6" y="291.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="447.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (784 samples, 2.63%)</title><rect x="445.1" y="355.0" width="31.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.1" y="366.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (784 samples, 2.63%)</title><rect x="445.1" y="339.0" width="31.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.1" y="350.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (784 samples, 2.63%)</title><rect x="445.1" y="323.0" width="31.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.1" y="334.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (784 samples, 2.63%)</title><rect x="445.1" y="307.0" width="31.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.1" y="318.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.07%)</title><rect x="445.3" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.07%)</title><rect x="445.3" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.04%)</title><rect x="445.3" y="259.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="448.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="445.8" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="445.8" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="445.8" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="448.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (24 samples, 0.08%)</title><rect x="446.1" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (24 samples, 0.08%)</title><rect x="446.1" y="275.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.03%)</title><rect x="446.1" y="259.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="449.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="446.5" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="446.5" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.05%)</title><rect x="446.5" y="227.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="449.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (36 samples, 0.12%)</title><rect x="447.1" y="291.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="450.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (39 samples, 0.13%)</title><rect x="448.5" y="291.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="451.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (340 samples, 1.14%)</title><rect x="450.0" y="291.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.0" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (45 samples, 0.15%)</title><rect x="450.0" y="275.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.0" y="286.0"></text>
</g>
<g>
<title>java/util/Collection.stream (41 samples, 0.14%)</title><rect x="450.0" y="259.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.0" y="270.0"></text>
</g>
<g>
<title>java/util/List.spliterator (21 samples, 0.07%)</title><rect x="450.0" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.0" y="254.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (21 samples, 0.07%)</title><rect x="450.0" y="227.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="453.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (20 samples, 0.07%)</title><rect x="450.9" y="243.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.9" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (20 samples, 0.07%)</title><rect x="450.9" y="227.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="453.9" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (77 samples, 0.26%)</title><rect x="451.8" y="275.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (77 samples, 0.26%)</title><rect x="451.8" y="259.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.8" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.03%)</title><rect x="451.8" y="243.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="454.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (19 samples, 0.06%)</title><rect x="452.2" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="455.2" y="254.0"></text>
</g>
<g>
<title>java.util.TreeSet (9 samples, 0.03%)</title><rect x="452.9" y="243.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="455.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="453.3" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="453.3" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.3" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.get$Lambda (10 samples, 0.03%)</title><rect x="453.3" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.3" y="222.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$160 (10 samples, 0.03%)</title><rect x="453.3" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="456.3" y="206.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (30 samples, 0.10%)</title><rect x="453.7" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.7" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap (30 samples, 0.10%)</title><rect x="453.7" y="227.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="456.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (156 samples, 0.52%)</title><rect x="455.1" y="275.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.1" y="286.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (156 samples, 0.52%)</title><rect x="455.1" y="259.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.1" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (146 samples, 0.49%)</title><rect x="455.1" y="243.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.1" y="254.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (146 samples, 0.49%)</title><rect x="455.1" y="227.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="458.1" y="238.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (146 samples, 0.49%)</title><rect x="455.1" y="211.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.1" y="222.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.12%)</title><rect x="455.1" y="195.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="458.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (33 samples, 0.11%)</title><rect x="456.5" y="195.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.5" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (33 samples, 0.11%)</title><rect x="456.5" y="179.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.5" y="190.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.11%)</title><rect x="456.5" y="163.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="459.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (76 samples, 0.26%)</title><rect x="457.8" y="195.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.26%)</title><rect x="457.8" y="179.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.10%)</title><rect x="457.8" y="163.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="460.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (47 samples, 0.16%)</title><rect x="459.0" y="163.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.0" y="174.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.16%)</title><rect x="459.0" y="147.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="462.0" y="158.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (10 samples, 0.03%)</title><rect x="460.9" y="243.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="463.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (25 samples, 0.08%)</title><rect x="461.3" y="275.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.08%)</title><rect x="461.3" y="259.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="464.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (32 samples, 0.11%)</title><rect x="462.2" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="465.2" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="462.2" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="465.2" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.03%)</title><rect x="462.6" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.6" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="462.6" y="243.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="465.6" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (13 samples, 0.04%)</title><rect x="463.0" y="259.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.0" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (13 samples, 0.04%)</title><rect x="463.0" y="243.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="466.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (205 samples, 0.69%)</title><rect x="463.5" y="291.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.5" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (11 samples, 0.04%)</title><rect x="463.5" y="275.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="466.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (24 samples, 0.08%)</title><rect x="463.9" y="275.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="466.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (166 samples, 0.56%)</title><rect x="465.1" y="275.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (166 samples, 0.56%)</title><rect x="465.1" y="259.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.1" y="270.0"></text>
</g>
<g>
<title>java.lang.Class[] (14 samples, 0.05%)</title><rect x="465.1" y="243.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="468.1" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.05%)</title><rect x="465.6" y="243.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="468.6" y="254.0"></text>
</g>
<g>
<title>java.util.LinkedList (13 samples, 0.04%)</title><rect x="466.2" y="243.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="469.2" y="254.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (82 samples, 0.28%)</title><rect x="466.7" y="243.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (82 samples, 0.28%)</title><rect x="466.7" y="227.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.7" y="238.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (82 samples, 0.28%)</title><rect x="466.7" y="211.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.7" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (82 samples, 0.28%)</title><rect x="466.7" y="195.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.7" y="206.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (82 samples, 0.28%)</title><rect x="466.7" y="179.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="469.7" y="190.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (22 samples, 0.07%)</title><rect x="469.9" y="243.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="472.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (22 samples, 0.07%)</title><rect x="469.9" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (17 samples, 0.06%)</title><rect x="470.1" y="211.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (17 samples, 0.06%)</title><rect x="470.1" y="195.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="473.1" y="206.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (21 samples, 0.07%)</title><rect x="470.8" y="243.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.8" y="254.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (21 samples, 0.07%)</title><rect x="470.8" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.8" y="238.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (21 samples, 0.07%)</title><rect x="470.8" y="211.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="473.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (114 samples, 0.38%)</title><rect x="471.6" y="291.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (24 samples, 0.08%)</title><rect x="471.6" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (8 samples, 0.03%)</title><rect x="471.6" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="474.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.05%)</title><rect x="472.0" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (16 samples, 0.05%)</title><rect x="472.0" y="243.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (16 samples, 0.05%)</title><rect x="472.0" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (16 samples, 0.05%)</title><rect x="472.0" y="211.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.0" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (16 samples, 0.05%)</title><rect x="472.0" y="195.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="475.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="472.6" y="275.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="475.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (78 samples, 0.26%)</title><rect x="473.1" y="275.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.06%)</title><rect x="473.1" y="259.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.06%)</title><rect x="473.1" y="243.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1494676242.get$Lambda (10 samples, 0.03%)</title><rect x="473.1" y="227.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$185 (10 samples, 0.03%)</title><rect x="473.1" y="211.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="476.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/547892778.get$Lambda (7 samples, 0.02%)</title><rect x="473.5" y="227.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$192 (7 samples, 0.02%)</title><rect x="473.5" y="211.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="476.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (61 samples, 0.20%)</title><rect x="473.7" y="259.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (61 samples, 0.20%)</title><rect x="473.7" y="243.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (31 samples, 0.10%)</title><rect x="473.7" y="227.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="476.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.10%)</title><rect x="475.0" y="227.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.10%)</title><rect x="475.0" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.10%)</title><rect x="475.0" y="195.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="478.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (520 samples, 1.75%)</title><rect x="476.2" y="355.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.23%)</title><rect x="476.2" y="339.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (15 samples, 0.05%)</title><rect x="476.2" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (15 samples, 0.05%)</title><rect x="476.2" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="476.2" y="291.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.05%)</title><rect x="476.2" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.05%)</title><rect x="476.2" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.2" y="270.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="476.2" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="479.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1045941616.invoke (53 samples, 0.18%)</title><rect x="476.8" y="323.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.18%)</title><rect x="476.8" y="307.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (20 samples, 0.07%)</title><rect x="476.8" y="291.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.07%)</title><rect x="476.8" y="275.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="479.8" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (33 samples, 0.11%)</title><rect x="477.6" y="291.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (33 samples, 0.11%)</title><rect x="477.6" y="275.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.6" y="286.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.11%)</title><rect x="477.6" y="259.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="480.6" y="270.0"></text>
</g>
<g>
<title>java/net/URI.create (205 samples, 0.69%)</title><rect x="478.9" y="339.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.9" y="350.0"></text>
</g>
<g>
<title>java.net.URI (49 samples, 0.16%)</title><rect x="478.9" y="323.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="481.9" y="334.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (156 samples, 0.52%)</title><rect x="480.8" y="323.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.8" y="334.0"></text>
</g>
<g>
<title>java.net.URI$Parser (15 samples, 0.05%)</title><rect x="480.8" y="307.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="483.8" y="318.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (141 samples, 0.47%)</title><rect x="481.4" y="307.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.4" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.08%)</title><rect x="481.4" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.4" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.08%)</title><rect x="481.4" y="275.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="484.4" y="286.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="481.4" y="259.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="484.4" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="482.0" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.0" y="270.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="482.0" y="243.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="485.0" y="254.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (117 samples, 0.39%)</title><rect x="482.3" y="291.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.3" y="302.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 0.22%)</title><rect x="482.3" y="275.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.22%)</title><rect x="482.3" y="259.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.09%)</title><rect x="482.3" y="243.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="485.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.12%)</title><rect x="483.5" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.5" y="254.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.12%)</title><rect x="483.5" y="227.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="486.5" y="238.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (52 samples, 0.17%)</title><rect x="484.9" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.9" y="286.0"></text>
</g>
<g>
<title>java/lang/String.substring (30 samples, 0.10%)</title><rect x="484.9" y="259.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (30 samples, 0.10%)</title><rect x="484.9" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.04%)</title><rect x="484.9" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="487.9" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.06%)</title><rect x="485.4" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.4" y="238.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="485.4" y="211.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="488.4" y="222.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (22 samples, 0.07%)</title><rect x="486.1" y="259.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.1" y="270.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (22 samples, 0.07%)</title><rect x="486.1" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.1" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.07%)</title><rect x="486.1" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.1" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.07%)</title><rect x="486.1" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="486.1" y="195.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="489.1" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="486.5" y="195.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.5" y="206.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="486.5" y="179.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="489.5" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (42 samples, 0.14%)</title><rect x="487.0" y="339.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (42 samples, 0.14%)</title><rect x="487.0" y="323.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (10 samples, 0.03%)</title><rect x="487.0" y="307.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="490.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (32 samples, 0.11%)</title><rect x="487.4" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.4" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.11%)</title><rect x="487.4" y="291.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="490.4" y="302.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (14 samples, 0.05%)</title><rect x="488.7" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.7" y="350.0"></text>
</g>
<g>
<title>java/time/Duration.create (14 samples, 0.05%)</title><rect x="488.7" y="323.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.7" y="334.0"></text>
</g>
<g>
<title>java.time.Duration (14 samples, 0.05%)</title><rect x="488.7" y="307.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="491.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (118 samples, 0.40%)</title><rect x="489.2" y="339.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (24 samples, 0.08%)</title><rect x="489.2" y="323.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="492.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (94 samples, 0.32%)</title><rect x="490.2" y="323.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (88 samples, 0.30%)</title><rect x="490.2" y="307.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (88 samples, 0.30%)</title><rect x="490.2" y="291.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.2" y="302.0"></text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.04%)</title><rect x="490.2" y="275.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="493.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap (19 samples, 0.06%)</title><rect x="490.6" y="275.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="493.6" y="286.0"></text>
</g>
<g>
<title>java.util.TreeSet (14 samples, 0.05%)</title><rect x="491.4" y="275.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="494.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="491.9" y="275.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="491.9" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.get$Lambda (16 samples, 0.05%)</title><rect x="491.9" y="243.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.9" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$160 (16 samples, 0.05%)</title><rect x="491.9" y="227.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="494.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.09%)</title><rect x="492.5" y="275.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.5" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.09%)</title><rect x="492.5" y="259.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="495.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.11%)</title><rect x="493.9" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.9" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.11%)</title><rect x="493.9" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.11%)</title><rect x="493.9" y="307.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.06%)</title><rect x="493.9" y="291.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="496.9" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.05%)</title><rect x="494.6" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.6" y="302.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="494.6" y="275.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="497.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (39 samples, 0.13%)</title><rect x="495.2" y="339.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.2" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.13%)</title><rect x="495.2" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.13%)</title><rect x="495.2" y="307.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.09%)</title><rect x="495.2" y="291.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="498.2" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="496.3" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.3" y="302.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="496.3" y="275.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="499.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$152/987084221.apply (409 samples, 1.37%)</title><rect x="496.8" y="403.0" width="16.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$0 (409 samples, 1.37%)</title><rect x="496.8" y="387.0" width="16.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.8" y="398.0"></text>
</g>
<g>
<title>org.javatuples.Pair (40 samples, 0.13%)</title><rect x="496.8" y="371.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="499.8" y="382.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (39 samples, 0.13%)</title><rect x="498.4" y="371.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.4" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.08%)</title><rect x="498.4" y="355.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="501.4" y="366.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (16 samples, 0.05%)</title><rect x="499.3" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="502.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.asList (16 samples, 0.05%)</title><rect x="499.3" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.3" y="350.0"></text>
</g>
<g>
<title>java.util.Arrays$ArrayList (16 samples, 0.05%)</title><rect x="499.3" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="502.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getNewRequest (330 samples, 1.11%)</title><rect x="499.9" y="371.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="502.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.11%)</title><rect x="499.9" y="355.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (32 samples, 0.11%)</title><rect x="499.9" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (32 samples, 0.11%)</title><rect x="499.9" y="323.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.11%)</title><rect x="499.9" y="307.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="502.9" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.05%)</title><rect x="499.9" y="291.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.9" y="302.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="499.9" y="275.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="502.9" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.06%)</title><rect x="500.5" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.06%)</title><rect x="500.5" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.5" y="286.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="500.5" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="503.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (31 samples, 0.10%)</title><rect x="501.2" y="355.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.2" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.10%)</title><rect x="501.2" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="504.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.10%)</title><rect x="501.2" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.06%)</title><rect x="501.2" y="307.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="504.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.05%)</title><rect x="501.9" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.9" y="318.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="501.9" y="291.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="504.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (25 samples, 0.08%)</title><rect x="502.4" y="355.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.4" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.08%)</title><rect x="502.4" y="339.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.08%)</title><rect x="502.4" y="323.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="502.4" y="307.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="505.4" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.03%)</title><rect x="503.0" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.0" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="503.0" y="291.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="506.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getCloneRequest (242 samples, 0.81%)</title><rect x="503.4" y="355.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.14%)</title><rect x="503.4" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/798154996.invoke (36 samples, 0.12%)</title><rect x="503.6" y="323.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.6" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.12%)</title><rect x="503.6" y="307.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.6" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.04%)</title><rect x="503.6" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.6" y="302.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.04%)</title><rect x="503.6" y="275.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="506.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.08%)</title><rect x="504.1" y="291.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.08%)</title><rect x="504.1" y="275.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.1" y="286.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="504.1" y="259.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="507.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (46 samples, 0.15%)</title><rect x="505.1" y="339.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.1" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (46 samples, 0.15%)</title><rect x="505.1" y="323.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (14 samples, 0.05%)</title><rect x="505.1" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.1" y="318.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (14 samples, 0.05%)</title><rect x="505.1" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.1" y="302.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (14 samples, 0.05%)</title><rect x="505.1" y="275.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="508.1" y="286.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (32 samples, 0.11%)</title><rect x="505.6" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.6" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (32 samples, 0.11%)</title><rect x="505.6" y="291.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="508.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (79 samples, 0.27%)</title><rect x="506.9" y="339.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.9" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (79 samples, 0.27%)</title><rect x="506.9" y="323.0" width="3.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="509.9" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (27 samples, 0.09%)</title><rect x="510.0" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.06%)</title><rect x="510.0" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (19 samples, 0.06%)</title><rect x="510.0" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (19 samples, 0.06%)</title><rect x="510.0" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (19 samples, 0.06%)</title><rect x="510.0" y="275.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.0" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (19 samples, 0.06%)</title><rect x="510.0" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (19 samples, 0.06%)</title><rect x="510.0" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.0" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (19 samples, 0.06%)</title><rect x="510.0" y="227.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="513.0" y="238.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (8 samples, 0.03%)</title><rect x="510.8" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.8" y="334.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (8 samples, 0.03%)</title><rect x="510.8" y="307.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="513.8" y="318.0"></text>
</g>
<g>
<title>one.nio.http.Request (14 samples, 0.05%)</title><rect x="511.1" y="339.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="514.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (34 samples, 0.11%)</title><rect x="511.7" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.7" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (34 samples, 0.11%)</title><rect x="511.7" y="323.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="514.7" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (21 samples, 0.07%)</title><rect x="513.0" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3.opWrapSink (16 samples, 0.05%)</title><rect x="513.0" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.0" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$3$1 (16 samples, 0.05%)</title><rect x="513.0" y="467.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="516.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.makeNodeBuilder (22 samples, 0.07%)</title><rect x="513.8" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.builder (22 samples, 0.07%)</title><rect x="513.8" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Nodes.builder (22 samples, 0.07%)</title><rect x="513.8" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.8" y="494.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$SpinedNodeBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="514.1" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.1" y="478.0"></text>
</g>
<g>
<title>java/util/stream/SpinedBuffer.&lt;init&gt; (16 samples, 0.05%)</title><rect x="514.1" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.05%)</title><rect x="514.1" y="435.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="517.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$533/1330260838.run (4,331 samples, 14.55%)</title><rect x="514.9" y="643.0" width="171.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.9" y="654.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$getRep$1 (4,331 samples, 14.55%)</title><rect x="514.9" y="627.0" width="171.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.9" y="638.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getRepInternal (4,331 samples, 14.55%)</title><rect x="514.9" y="611.0" width="171.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.9" y="622.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (468 samples, 1.57%)</title><rect x="514.9" y="595.0" width="18.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (361 samples, 1.21%)</title><rect x="514.9" y="579.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (234 samples, 0.79%)</title><rect x="514.9" y="563.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (234 samples, 0.79%)</title><rect x="514.9" y="547.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.9" y="558.0"></text>
</g>
<g>
<title>byte[] (234 samples, 0.79%)</title><rect x="514.9" y="531.0" width="9.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="517.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 0.43%)</title><rect x="524.1" y="563.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.1" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (127 samples, 0.43%)</title><rect x="524.1" y="547.0" width="5.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="527.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (107 samples, 0.36%)</title><rect x="529.2" y="579.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (107 samples, 0.36%)</title><rect x="529.2" y="563.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (107 samples, 0.36%)</title><rect x="529.2" y="547.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (48 samples, 0.16%)</title><rect x="529.2" y="531.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="532.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.20%)</title><rect x="531.1" y="531.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.1" y="542.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.20%)</title><rect x="531.1" y="515.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="534.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (206 samples, 0.69%)</title><rect x="533.4" y="595.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (121 samples, 0.41%)</title><rect x="533.4" y="579.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (121 samples, 0.41%)</title><rect x="533.4" y="563.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (121 samples, 0.41%)</title><rect x="533.4" y="547.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (121 samples, 0.41%)</title><rect x="533.4" y="531.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.4" y="542.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.41%)</title><rect x="533.4" y="515.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="536.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (85 samples, 0.29%)</title><rect x="538.2" y="579.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (85 samples, 0.29%)</title><rect x="538.2" y="563.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (85 samples, 0.29%)</title><rect x="538.2" y="547.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (85 samples, 0.29%)</title><rect x="538.2" y="531.0" width="3.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="541.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponseIfIdNotNull (3,657 samples, 12.29%)</title><rect x="541.6" y="595.0" width="145.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.6" y="606.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (3,569 samples, 11.99%)</title><rect x="541.6" y="579.0" width="141.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.6" y="590.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java.util.NoSuchElementException (61 samples, 0.20%)</title><rect x="541.6" y="563.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="544.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (161 samples, 0.54%)</title><rect x="544.0" y="563.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/665188480.invoke (161 samples, 0.54%)</title><rect x="544.0" y="547.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (161 samples, 0.54%)</title><rect x="544.0" y="531.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.0" y="542.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (43 samples, 0.14%)</title><rect x="544.0" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.0" y="526.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.14%)</title><rect x="544.0" y="499.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="547.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (118 samples, 0.40%)</title><rect x="545.7" y="515.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (118 samples, 0.40%)</title><rect x="545.7" y="499.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.7" y="510.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.40%)</title><rect x="545.7" y="483.0" width="4.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="548.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (521 samples, 1.75%)</title><rect x="550.4" y="563.0" width="20.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.4" y="574.0"></text>
</g>
<g>
<title>java.lang.StringBuffer (53 samples, 0.18%)</title><rect x="550.4" y="547.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="553.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.&lt;init&gt; (48 samples, 0.16%)</title><rect x="552.5" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.5" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (48 samples, 0.16%)</title><rect x="552.5" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.5" y="542.0"></text>
</g>
<g>
<title>byte[] (48 samples, 0.16%)</title><rect x="552.5" y="515.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="555.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (260 samples, 0.87%)</title><rect x="554.4" y="547.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="557.4" y="558.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (260 samples, 0.87%)</title><rect x="554.4" y="531.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="557.4" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (260 samples, 0.87%)</title><rect x="554.4" y="515.0" width="10.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (260 samples, 0.87%)</title><rect x="554.4" y="499.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.4" y="510.0"></text>
</g>
<g>
<title>byte[] (260 samples, 0.87%)</title><rect x="554.4" y="483.0" width="10.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="557.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (160 samples, 0.54%)</title><rect x="564.7" y="547.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (160 samples, 0.54%)</title><rect x="564.7" y="531.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.17%)</title><rect x="564.7" y="515.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="567.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (108 samples, 0.36%)</title><rect x="566.8" y="515.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.8" y="526.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.36%)</title><rect x="566.8" y="499.0" width="4.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="569.8" y="510.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1,132 samples, 3.80%)</title><rect x="571.1" y="563.0" width="44.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.1" y="574.0">java..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1,132 samples, 3.80%)</title><rect x="571.1" y="547.0" width="44.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.1" y="558.0">java..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1,132 samples, 3.80%)</title><rect x="571.1" y="531.0" width="44.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="542.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1,132 samples, 3.80%)</title><rect x="571.1" y="515.0" width="44.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.1" y="526.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,132 samples, 3.80%)</title><rect x="571.1" y="499.0" width="44.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="510.0">java..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1,132 samples, 3.80%)</title><rect x="571.1" y="483.0" width="44.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="494.0">java..</text>
</g>
<g>
<title>int[] (213 samples, 0.72%)</title><rect x="571.1" y="467.0" width="8.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="574.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (304 samples, 1.02%)</title><rect x="579.5" y="467.0" width="12.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="582.5" y="478.0"></text>
</g>
<g>
<title>long[] (287 samples, 0.96%)</title><rect x="591.6" y="467.0" width="11.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="594.6" y="478.0"></text>
</g>
<g>
<title>long[] (192 samples, 0.65%)</title><rect x="602.9" y="467.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="605.9" y="478.0"></text>
</g>
<g>
<title>short[] (136 samples, 0.46%)</title><rect x="610.5" y="467.0" width="5.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="613.5" y="478.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,658 samples, 5.57%)</title><rect x="615.9" y="563.0" width="65.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.9" y="574.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1,658 samples, 5.57%)</title><rect x="615.9" y="547.0" width="65.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.9" y="558.0">org/roc..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,658 samples, 5.57%)</title><rect x="615.9" y="531.0" width="65.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.9" y="542.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (1,658 samples, 5.57%)</title><rect x="615.9" y="515.0" width="65.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.9" y="526.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1,658 samples, 5.57%)</title><rect x="615.9" y="499.0" width="65.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.9" y="510.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,658 samples, 5.57%)</title><rect x="615.9" y="483.0" width="65.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.9" y="494.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1,658 samples, 5.57%)</title><rect x="615.9" y="467.0" width="65.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.9" y="478.0">org/roc..</text>
</g>
<g>
<title>byte[] (1,658 samples, 5.57%)</title><rect x="615.9" y="451.0" width="65.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="618.9" y="462.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (36 samples, 0.12%)</title><rect x="681.7" y="563.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.7" y="574.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.12%)</title><rect x="681.7" y="547.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="684.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.responseWithNoBody (88 samples, 0.30%)</title><rect x="683.1" y="579.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.1" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (33 samples, 0.11%)</title><rect x="683.1" y="563.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="686.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (55 samples, 0.18%)</title><rect x="684.4" y="563.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (55 samples, 0.18%)</title><rect x="684.4" y="547.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="687.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,291 samples, 11.06%)</title><rect x="686.6" y="691.0" width="130.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.6" y="702.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,291 samples, 11.06%)</title><rect x="686.6" y="675.0" width="130.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="689.6" y="686.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,291 samples, 11.06%)</title><rect x="686.6" y="659.0" width="130.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.6" y="670.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,291 samples, 11.06%)</title><rect x="686.6" y="643.0" width="130.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.6" y="654.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,291 samples, 11.06%)</title><rect x="686.6" y="627.0" width="130.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="689.6" y="638.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (3,291 samples, 11.06%)</title><rect x="686.6" y="611.0" width="130.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.6" y="622.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (220 samples, 0.74%)</title><rect x="686.6" y="595.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$206/1427897007.accept (220 samples, 0.74%)</title><rect x="686.6" y="579.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (220 samples, 0.74%)</title><rect x="686.6" y="563.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (220 samples, 0.74%)</title><rect x="686.6" y="547.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.6" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (220 samples, 0.74%)</title><rect x="686.6" y="531.0" width="8.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="689.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,071 samples, 10.32%)</title><rect x="695.3" y="595.0" width="121.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.3" y="606.0">java/util/concu..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$204/3562961.apply (3,071 samples, 10.32%)</title><rect x="695.3" y="579.0" width="121.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.3" y="590.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (3,071 samples, 10.32%)</title><rect x="695.3" y="563.0" width="121.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.3" y="574.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/String.valueOf (464 samples, 1.56%)</title><rect x="695.3" y="547.0" width="18.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (464 samples, 1.56%)</title><rect x="695.3" y="531.0" width="18.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.3" y="542.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.75%)</title><rect x="695.3" y="515.0" width="8.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="698.3" y="526.0"></text>
</g>
<g>
<title>java.lang.String (241 samples, 0.81%)</title><rect x="704.2" y="515.0" width="9.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="707.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (171 samples, 0.57%)</title><rect x="713.7" y="547.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (171 samples, 0.57%)</title><rect x="713.7" y="531.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$480/944057688.get$Lambda (171 samples, 0.57%)</title><rect x="713.7" y="515.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.7" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.Util$$Lambda$480 (171 samples, 0.57%)</title><rect x="713.7" y="499.0" width="6.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="716.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,221 samples, 4.10%)</title><rect x="720.5" y="547.0" width="48.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,221 samples, 4.10%)</title><rect x="720.5" y="531.0" width="48.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.5" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$480/944057688.accept (1,221 samples, 4.10%)</title><rect x="720.5" y="515.0" width="48.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.5" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$6 (1,221 samples, 4.10%)</title><rect x="720.5" y="499.0" width="48.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.5" y="510.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,221 samples, 4.10%)</title><rect x="720.5" y="483.0" width="48.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.5" y="494.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,221 samples, 4.10%)</title><rect x="720.5" y="467.0" width="48.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.5" y="478.0">java..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (1,221 samples, 4.10%)</title><rect x="720.5" y="451.0" width="48.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.5" y="462.0">java..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,221 samples, 4.10%)</title><rect x="720.5" y="435.0" width="48.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.5" y="446.0">java..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (445 samples, 1.50%)</title><rect x="720.5" y="419.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (445 samples, 1.50%)</title><rect x="720.5" y="403.0" width="17.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="723.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (776 samples, 2.61%)</title><rect x="738.2" y="419.0" width="30.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.2" y="430.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (776 samples, 2.61%)</title><rect x="738.2" y="403.0" width="30.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.2" y="414.0">jd..</text>
</g>
<g>
<title>byte[] (776 samples, 2.61%)</title><rect x="738.2" y="387.0" width="30.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="741.2" y="398.0">by..</text>
</g>
<g>
<title>one.nio.http.Response (275 samples, 0.92%)</title><rect x="768.9" y="547.0" width="10.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="771.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (940 samples, 3.16%)</title><rect x="779.8" y="547.0" width="37.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.8" y="558.0">one..</text>
</g>
<g>
<title>byte[] (449 samples, 1.51%)</title><rect x="779.8" y="531.0" width="17.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="782.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (262 samples, 0.88%)</title><rect x="797.6" y="531.0" width="10.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="800.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (229 samples, 0.77%)</title><rect x="808.0" y="531.0" width="9.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="811.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (415 samples, 1.39%)</title><rect x="817.1" y="691.0" width="16.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="817.1" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="817.1" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/268173736.get$Lambda (8 samples, 0.03%)</title><rect x="817.1" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$356 (8 samples, 0.03%)</title><rect x="817.1" y="627.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="820.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/603443293.linkToTargetMethod (13 samples, 0.04%)</title><rect x="817.6" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="820.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="817.6" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="820.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$360/1595048729.get$Lambda (13 samples, 0.04%)</title><rect x="817.6" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="820.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$360 (13 samples, 0.04%)</title><rect x="817.6" y="627.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="820.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (61 samples, 0.20%)</title><rect x="818.1" y="675.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/521791657.accept (48 samples, 0.16%)</title><rect x="818.1" y="659.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (48 samples, 0.16%)</title><rect x="818.1" y="643.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (48 samples, 0.16%)</title><rect x="818.1" y="627.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (48 samples, 0.16%)</title><rect x="818.1" y="611.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (48 samples, 0.16%)</title><rect x="818.1" y="595.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (48 samples, 0.16%)</title><rect x="818.1" y="579.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.16%)</title><rect x="818.1" y="563.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.16%)</title><rect x="818.1" y="547.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (48 samples, 0.16%)</title><rect x="818.1" y="531.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="821.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (48 samples, 0.16%)</title><rect x="818.1" y="515.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$272/1574090351.run (48 samples, 0.16%)</title><rect x="818.1" y="499.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (48 samples, 0.16%)</title><rect x="818.1" y="483.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (20 samples, 0.07%)</title><rect x="818.1" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (20 samples, 0.07%)</title><rect x="818.1" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (20 samples, 0.07%)</title><rect x="818.1" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (8 samples, 0.03%)</title><rect x="818.1" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (8 samples, 0.03%)</title><rect x="818.1" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="821.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (8 samples, 0.03%)</title><rect x="818.1" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (8 samples, 0.03%)</title><rect x="818.1" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (8 samples, 0.03%)</title><rect x="818.1" y="355.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="821.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.04%)</title><rect x="818.4" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="821.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.04%)</title><rect x="818.4" y="403.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.04%)</title><rect x="818.4" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.04%)</title><rect x="818.4" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.04%)</title><rect x="818.4" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12 samples, 0.04%)</title><rect x="818.4" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (12 samples, 0.04%)</title><rect x="818.4" y="323.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (12 samples, 0.04%)</title><rect x="818.4" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="821.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (25 samples, 0.08%)</title><rect x="819.0" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="822.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (9 samples, 0.03%)</title><rect x="819.0" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (7 samples, 0.02%)</title><rect x="819.0" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (7 samples, 0.02%)</title><rect x="819.0" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="822.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (16 samples, 0.05%)</title><rect x="819.4" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$270/1780858535.get (16 samples, 0.05%)</title><rect x="819.4" y="435.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (16 samples, 0.05%)</title><rect x="819.4" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (16 samples, 0.05%)</title><rect x="819.4" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.05%)</title><rect x="819.4" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="822.4" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="819.4" y="371.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="822.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$369/1204217064.accept (13 samples, 0.04%)</title><rect x="820.0" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (13 samples, 0.04%)</title><rect x="820.0" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$360/1595048729.run (13 samples, 0.04%)</title><rect x="820.0" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (13 samples, 0.04%)</title><rect x="820.0" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (13 samples, 0.04%)</title><rect x="820.0" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (13 samples, 0.04%)</title><rect x="820.0" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (13 samples, 0.04%)</title><rect x="820.0" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.0" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (13 samples, 0.04%)</title><rect x="820.0" y="547.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="823.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (33 samples, 0.11%)</title><rect x="820.5" y="675.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (33 samples, 0.11%)</title><rect x="820.5" y="659.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="823.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (18 samples, 0.06%)</title><rect x="821.8" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.02%)</title><rect x="821.8" y="659.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.02%)</title><rect x="821.8" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.02%)</title><rect x="821.8" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.02%)</title><rect x="821.8" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (7 samples, 0.02%)</title><rect x="821.8" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (7 samples, 0.02%)</title><rect x="821.8" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (7 samples, 0.02%)</title><rect x="821.8" y="563.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="824.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (11 samples, 0.04%)</title><rect x="822.1" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.1" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (11 samples, 0.04%)</title><rect x="822.1" y="643.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="825.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (60 samples, 0.20%)</title><rect x="822.5" y="675.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/295967340.run (27 samples, 0.09%)</title><rect x="822.5" y="659.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (27 samples, 0.09%)</title><rect x="822.5" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.09%)</title><rect x="822.5" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (27 samples, 0.09%)</title><rect x="822.5" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (27 samples, 0.09%)</title><rect x="822.5" y="595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (27 samples, 0.09%)</title><rect x="822.5" y="579.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="825.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$272/1574090351.run (27 samples, 0.09%)</title><rect x="822.5" y="563.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (27 samples, 0.09%)</title><rect x="822.5" y="547.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (27 samples, 0.09%)</title><rect x="822.5" y="531.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (27 samples, 0.09%)</title><rect x="822.5" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="825.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (20 samples, 0.07%)</title><rect x="822.5" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (20 samples, 0.07%)</title><rect x="822.5" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (20 samples, 0.07%)</title><rect x="822.5" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/534906248.linkToTargetMethod (15 samples, 0.05%)</title><rect x="822.5" y="451.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="825.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363988129.invoke (15 samples, 0.05%)</title><rect x="822.5" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="822.5" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.05%)</title><rect x="822.5" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.05%)</title><rect x="822.5" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.5" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="822.5" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="825.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (7 samples, 0.02%)</title><rect x="823.3" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="823.3" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.02%)</title><rect x="823.3" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.02%)</title><rect x="823.3" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.02%)</title><rect x="823.3" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (7 samples, 0.02%)</title><rect x="823.3" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (7 samples, 0.02%)</title><rect x="823.3" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (7 samples, 0.02%)</title><rect x="823.3" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (7 samples, 0.02%)</title><rect x="823.3" y="371.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="826.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$279/1034643703.run (33 samples, 0.11%)</title><rect x="823.6" y="659.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="826.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (33 samples, 0.11%)</title><rect x="823.6" y="643.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="823.6" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="823.6" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$377/1207993149.get$Lambda (8 samples, 0.03%)</title><rect x="823.6" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$377 (8 samples, 0.03%)</title><rect x="823.6" y="579.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="826.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.08%)</title><rect x="823.9" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.08%)</title><rect x="823.9" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (25 samples, 0.08%)</title><rect x="823.9" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="826.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (25 samples, 0.08%)</title><rect x="823.9" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (25 samples, 0.08%)</title><rect x="823.9" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (25 samples, 0.08%)</title><rect x="823.9" y="547.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="826.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (82 samples, 0.28%)</title><rect x="824.9" y="675.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="827.9" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (26 samples, 0.09%)</title><rect x="824.9" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.9" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (26 samples, 0.09%)</title><rect x="824.9" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="827.9" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (26 samples, 0.09%)</title><rect x="824.9" y="627.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="827.9" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (26 samples, 0.09%)</title><rect x="824.9" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="827.9" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (26 samples, 0.09%)</title><rect x="824.9" y="595.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="827.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (56 samples, 0.19%)</title><rect x="825.9" y="659.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="825.9" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="825.9" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$478/1062619544.get$Lambda (12 samples, 0.04%)</title><rect x="825.9" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$478 (12 samples, 0.04%)</title><rect x="825.9" y="595.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="828.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (44 samples, 0.15%)</title><rect x="826.4" y="643.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.06%)</title><rect x="826.4" y="627.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="829.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (26 samples, 0.09%)</title><rect x="827.1" y="627.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (26 samples, 0.09%)</title><rect x="827.1" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.1" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (26 samples, 0.09%)</title><rect x="827.1" y="595.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="830.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (56 samples, 0.19%)</title><rect x="828.2" y="675.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.2" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (34 samples, 0.11%)</title><rect x="828.3" y="659.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (15 samples, 0.05%)</title><rect x="828.3" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="831.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (15 samples, 0.05%)</title><rect x="828.3" y="627.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="831.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.06%)</title><rect x="828.9" y="643.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.9" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.06%)</title><rect x="828.9" y="627.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="831.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (18 samples, 0.06%)</title><rect x="829.7" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.7" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (18 samples, 0.06%)</title><rect x="829.7" y="643.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="832.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (43 samples, 0.14%)</title><rect x="830.4" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (43 samples, 0.14%)</title><rect x="830.4" y="659.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (43 samples, 0.14%)</title><rect x="830.4" y="643.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (43 samples, 0.14%)</title><rect x="830.4" y="627.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="833.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (43 samples, 0.14%)</title><rect x="830.4" y="611.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="833.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (24 samples, 0.08%)</title><rect x="832.1" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (24 samples, 0.08%)</title><rect x="832.1" y="659.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (24 samples, 0.08%)</title><rect x="832.1" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (24 samples, 0.08%)</title><rect x="832.1" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="835.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (21 samples, 0.07%)</title><rect x="832.2" y="611.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (21 samples, 0.07%)</title><rect x="832.2" y="595.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.2" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (21 samples, 0.07%)</title><rect x="832.2" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.2" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (21 samples, 0.07%)</title><rect x="832.2" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (21 samples, 0.07%)</title><rect x="832.2" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.2" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (21 samples, 0.07%)</title><rect x="832.2" y="531.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="835.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (7 samples, 0.02%)</title><rect x="833.0" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.02%)</title><rect x="833.0" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (7 samples, 0.02%)</title><rect x="833.0" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (7 samples, 0.02%)</title><rect x="833.0" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.02%)</title><rect x="833.0" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.02%)</title><rect x="833.0" y="595.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="836.0" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,989 samples, 30.21%)</title><rect x="833.6" y="691.0" width="356.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.6" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (253 samples, 0.85%)</title><rect x="833.6" y="675.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.6" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (253 samples, 0.85%)</title><rect x="833.6" y="659.0" width="10.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="836.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,736 samples, 29.36%)</title><rect x="843.6" y="675.0" width="346.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.6" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,736 samples, 29.36%)</title><rect x="843.6" y="659.0" width="346.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.6" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,736 samples, 29.36%)</title><rect x="843.6" y="643.0" width="346.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.6" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,618 samples, 5.44%)</title><rect x="843.6" y="627.0" width="64.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.6" y="638.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,618 samples, 5.44%)</title><rect x="843.6" y="611.0" width="64.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="846.6" y="622.0">one/nio..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (652 samples, 2.19%)</title><rect x="843.6" y="595.0" width="25.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.6" y="606.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (235 samples, 0.79%)</title><rect x="843.6" y="579.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (235 samples, 0.79%)</title><rect x="843.6" y="563.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (235 samples, 0.79%)</title><rect x="843.6" y="547.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (144 samples, 0.48%)</title><rect x="843.6" y="531.0" width="5.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="846.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (91 samples, 0.31%)</title><rect x="849.3" y="531.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.3" y="542.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.31%)</title><rect x="849.3" y="515.0" width="3.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="852.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (417 samples, 1.40%)</title><rect x="852.9" y="579.0" width="16.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (248 samples, 0.83%)</title><rect x="852.9" y="563.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (248 samples, 0.83%)</title><rect x="852.9" y="547.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$498/1539433281.get$Lambda (248 samples, 0.83%)</title><rect x="852.9" y="531.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="855.9" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$498 (248 samples, 0.83%)</title><rect x="852.9" y="515.0" width="9.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="855.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (169 samples, 0.57%)</title><rect x="862.7" y="563.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (169 samples, 0.57%)</title><rect x="862.7" y="547.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="865.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (166 samples, 0.56%)</title><rect x="862.7" y="531.0" width="6.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="865.7" y="542.0"></text>
</g>
<g>
<title>RequestHandler5_getRep.handleRequest (514 samples, 1.73%)</title><rect x="869.4" y="595.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (331 samples, 1.11%)</title><rect x="869.4" y="579.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (331 samples, 1.11%)</title><rect x="869.4" y="563.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (331 samples, 1.11%)</title><rect x="869.4" y="547.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.54%)</title><rect x="869.4" y="531.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="872.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (171 samples, 0.57%)</title><rect x="875.8" y="531.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.8" y="542.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.57%)</title><rect x="875.8" y="515.0" width="6.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="878.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getRep (183 samples, 0.61%)</title><rect x="882.6" y="579.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.28%)</title><rect x="882.6" y="563.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.28%)</title><rect x="882.6" y="547.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$533/1330260838.get$Lambda (83 samples, 0.28%)</title><rect x="882.6" y="531.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$533 (83 samples, 0.28%)</title><rect x="882.6" y="515.0" width="3.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="885.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (100 samples, 0.34%)</title><rect x="885.9" y="563.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (100 samples, 0.34%)</title><rect x="885.9" y="547.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="888.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (100 samples, 0.34%)</title><rect x="885.9" y="531.0" width="3.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="888.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (452 samples, 1.52%)</title><rect x="889.8" y="595.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (452 samples, 1.52%)</title><rect x="889.8" y="579.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (452 samples, 1.52%)</title><rect x="889.8" y="563.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (249 samples, 0.84%)</title><rect x="889.8" y="547.0" width="9.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="892.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (203 samples, 0.68%)</title><rect x="899.7" y="547.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.7" y="558.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.68%)</title><rect x="899.7" y="531.0" width="8.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="902.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,342 samples, 7.87%)</title><rect x="907.7" y="627.0" width="92.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.7" y="638.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (319 samples, 1.07%)</title><rect x="907.7" y="611.0" width="12.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="910.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (772 samples, 2.59%)</title><rect x="920.4" y="611.0" width="30.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.4" y="622.0">on..</text>
</g>
<g>
<title>java.lang.String[] (602 samples, 2.02%)</title><rect x="920.4" y="595.0" width="23.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="923.4" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String[] (170 samples, 0.57%)</title><rect x="944.3" y="595.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,251 samples, 4.20%)</title><rect x="951.0" y="611.0" width="49.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.0" y="622.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,251 samples, 4.20%)</title><rect x="951.0" y="595.0" width="49.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.0" y="606.0">one/n..</text>
</g>
<g>
<title>char[] (517 samples, 1.74%)</title><rect x="951.0" y="579.0" width="20.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="954.0" y="590.0"></text>
</g>
<g>
<title>char[] (83 samples, 0.28%)</title><rect x="971.5" y="579.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="974.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.43%)</title><rect x="974.8" y="579.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="977.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (522 samples, 1.75%)</title><rect x="979.9" y="579.0" width="20.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (522 samples, 1.75%)</title><rect x="979.9" y="563.0" width="20.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="982.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (522 samples, 1.75%)</title><rect x="979.9" y="547.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.9" y="558.0"></text>
</g>
<g>
<title>byte[] (522 samples, 1.75%)</title><rect x="979.9" y="531.0" width="20.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="982.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (71 samples, 0.24%)</title><rect x="1000.6" y="627.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.6" y="638.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.24%)</title><rect x="1000.6" y="611.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1003.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (171 samples, 0.57%)</title><rect x="1003.4" y="627.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (171 samples, 0.57%)</title><rect x="1003.4" y="611.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (171 samples, 0.57%)</title><rect x="1003.4" y="595.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.39%)</title><rect x="1003.4" y="579.0" width="4.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1006.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (56 samples, 0.19%)</title><rect x="1008.0" y="579.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.0" y="590.0"></text>
</g>
<g>
<title>byte[] (56 samples, 0.19%)</title><rect x="1008.0" y="563.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1011.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,534 samples, 15.24%)</title><rect x="1010.2" y="627.0" width="179.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1013.2" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,534 samples, 15.24%)</title><rect x="1010.2" y="611.0" width="179.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.2" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (1,924 samples, 6.47%)</title><rect x="1010.2" y="595.0" width="76.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1013.2" y="606.0">char[]</text>
</g>
<g>
<title>char[] (269 samples, 0.90%)</title><rect x="1086.5" y="595.0" width="10.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1089.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (781 samples, 2.62%)</title><rect x="1097.2" y="595.0" width="30.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1100.2" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,560 samples, 5.24%)</title><rect x="1128.1" y="595.0" width="61.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.1" y="606.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,560 samples, 5.24%)</title><rect x="1128.1" y="579.0" width="61.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.1" y="590.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,560 samples, 5.24%)</title><rect x="1128.1" y="563.0" width="61.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.1" y="574.0">java/l..</text>
</g>
<g>
<title>byte[] (1,556 samples, 5.23%)</title><rect x="1128.1" y="547.0" width="61.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1131.1" y="558.0">byte[]</text>
</g>
</g>
</svg>
