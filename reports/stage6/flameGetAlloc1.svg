<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (31,662 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,531 samples, 55.37%)</title><rect x="10.1" y="867.0" width="653.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.1" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,531 samples, 55.37%)</title><rect x="10.1" y="851.0" width="653.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.1" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,531 samples, 55.37%)</title><rect x="10.1" y="835.0" width="653.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.1" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,411 samples, 10.77%)</title><rect x="10.1" y="819.0" width="127.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.1" y="830.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,411 samples, 10.77%)</title><rect x="10.1" y="803.0" width="127.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.1" y="814.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,411 samples, 10.77%)</title><rect x="10.1" y="787.0" width="127.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.1" y="798.0">java/util/concur..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.04%)</title><rect x="10.1" y="771.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (3,399 samples, 10.74%)</title><rect x="10.6" y="771.0" width="126.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.6" y="782.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,399 samples, 10.74%)</title><rect x="10.6" y="755.0" width="126.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.6" y="766.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,399 samples, 10.74%)</title><rect x="10.6" y="739.0" width="126.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.6" y="750.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="10.6" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="10.6" y="707.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$348/1406690349.get$Lambda (12 samples, 0.04%)</title><rect x="10.6" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.6" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$348 (12 samples, 0.04%)</title><rect x="10.6" y="675.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="13.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.get$Lambda (11 samples, 0.03%)</title><rect x="11.0" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.0" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$351 (11 samples, 0.03%)</title><rect x="11.0" y="675.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="14.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (28 samples, 0.09%)</title><rect x="11.4" y="723.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="14.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (28 samples, 0.09%)</title><rect x="11.4" y="707.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (22 samples, 0.07%)</title><rect x="11.4" y="691.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (65 samples, 0.21%)</title><rect x="12.5" y="723.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (65 samples, 0.21%)</title><rect x="12.5" y="707.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (44 samples, 0.14%)</title><rect x="12.5" y="691.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="15.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.07%)</title><rect x="14.1" y="691.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.07%)</title><rect x="14.1" y="675.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.1" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.07%)</title><rect x="14.1" y="659.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="17.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,223 samples, 10.18%)</title><rect x="14.9" y="723.0" width="120.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.9" y="734.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,223 samples, 10.18%)</title><rect x="14.9" y="707.0" width="120.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.9" y="718.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,223 samples, 10.18%)</title><rect x="14.9" y="691.0" width="120.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="702.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.10%)</title><rect x="14.9" y="675.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.10%)</title><rect x="14.9" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.get$Lambda (13 samples, 0.04%)</title><rect x="15.1" y="643.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$175 (13 samples, 0.04%)</title><rect x="15.1" y="627.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="18.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.get$Lambda (13 samples, 0.04%)</title><rect x="15.6" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$289 (13 samples, 0.04%)</title><rect x="15.6" y="627.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="18.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,967 samples, 6.21%)</title><rect x="16.1" y="675.0" width="73.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.1" y="686.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,967 samples, 6.21%)</title><rect x="16.1" y="659.0" width="73.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.1" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,951 samples, 6.16%)</title><rect x="16.1" y="643.0" width="72.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="654.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (1,951 samples, 6.16%)</title><rect x="16.1" y="627.0" width="72.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.1" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,951 samples, 6.16%)</title><rect x="16.1" y="611.0" width="72.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.1" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,951 samples, 6.16%)</title><rect x="16.1" y="595.0" width="72.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.1" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (1,951 samples, 6.16%)</title><rect x="16.1" y="579.0" width="72.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.1" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,951 samples, 6.16%)</title><rect x="16.1" y="563.0" width="72.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.1" y="574.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="16.1" y="547.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="16.1" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.get$Lambda (15 samples, 0.05%)</title><rect x="16.1" y="515.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$346 (15 samples, 0.05%)</title><rect x="16.1" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="19.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (65 samples, 0.21%)</title><rect x="16.6" y="547.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (65 samples, 0.21%)</title><rect x="16.6" y="531.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="19.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (33 samples, 0.10%)</title><rect x="16.6" y="515.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (12 samples, 0.04%)</title><rect x="17.9" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (12 samples, 0.04%)</title><rect x="17.9" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (12 samples, 0.04%)</title><rect x="17.9" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (12 samples, 0.04%)</title><rect x="17.9" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (12 samples, 0.04%)</title><rect x="17.9" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (12 samples, 0.04%)</title><rect x="17.9" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.03%)</title><rect x="17.9" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.03%)</title><rect x="17.9" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.apply (8 samples, 0.03%)</title><rect x="17.9" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (8 samples, 0.03%)</title><rect x="17.9" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (8 samples, 0.03%)</title><rect x="17.9" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (8 samples, 0.03%)</title><rect x="17.9" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="18.3" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="18.3" y="499.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.06%)</title><rect x="18.3" y="483.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="21.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (33 samples, 0.10%)</title><rect x="19.1" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (33 samples, 0.10%)</title><rect x="19.1" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (20 samples, 0.06%)</title><rect x="19.1" y="515.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="19.8" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="19.8" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="19.8" y="483.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="22.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,838 samples, 5.81%)</title><rect x="20.3" y="547.0" width="68.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="558.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="20.3" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="20.3" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.get$Lambda (9 samples, 0.03%)</title><rect x="20.3" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$339 (9 samples, 0.03%)</title><rect x="20.3" y="483.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="23.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,552 samples, 4.90%)</title><rect x="20.8" y="531.0" width="57.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.8" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,552 samples, 4.90%)</title><rect x="20.8" y="515.0" width="57.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.8" y="526.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (7 samples, 0.02%)</title><rect x="20.8" y="499.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (1,522 samples, 4.81%)</title><rect x="21.1" y="499.0" width="56.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.1" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,522 samples, 4.81%)</title><rect x="21.1" y="483.0" width="56.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.1" y="494.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="21.1" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="21.1" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$359/1898355370.get$Lambda (9 samples, 0.03%)</title><rect x="21.1" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$359 (9 samples, 0.03%)</title><rect x="21.1" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="24.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (37 samples, 0.12%)</title><rect x="21.4" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (37 samples, 0.12%)</title><rect x="21.4" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.07%)</title><rect x="21.4" y="435.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="24.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="22.2" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="22.2" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="22.2" y="403.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="25.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="22.8" y="467.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="25.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (39 samples, 0.12%)</title><rect x="23.4" y="467.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (20 samples, 0.06%)</title><rect x="23.4" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.06%)</title><rect x="24.1" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (11 samples, 0.03%)</title><rect x="24.1" y="435.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (11 samples, 0.03%)</title><rect x="24.1" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (11 samples, 0.03%)</title><rect x="24.1" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (11 samples, 0.03%)</title><rect x="24.1" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.1" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.03%)</title><rect x="24.1" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="27.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.03%)</title><rect x="24.5" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.03%)</title><rect x="24.5" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.03%)</title><rect x="24.5" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.03%)</title><rect x="24.5" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8 samples, 0.03%)</title><rect x="24.5" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (8 samples, 0.03%)</title><rect x="24.5" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (34 samples, 0.11%)</title><rect x="24.8" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (34 samples, 0.11%)</title><rect x="24.8" y="451.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (9 samples, 0.03%)</title><rect x="24.8" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.03%)</title><rect x="24.8" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.03%)</title><rect x="24.8" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (9 samples, 0.03%)</title><rect x="24.8" y="387.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (25 samples, 0.08%)</title><rect x="25.2" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (25 samples, 0.08%)</title><rect x="25.2" y="419.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (19 samples, 0.06%)</title><rect x="25.2" y="403.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,388 samples, 4.38%)</title><rect x="26.1" y="467.0" width="51.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.1" y="478.0">jdk/i..</text>
</g>
<g>
<title>java.lang.StringBuilder (13 samples, 0.04%)</title><rect x="26.1" y="451.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="29.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (117 samples, 0.37%)</title><rect x="26.6" y="451.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (117 samples, 0.37%)</title><rect x="26.6" y="435.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (117 samples, 0.37%)</title><rect x="26.6" y="419.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.6" y="430.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.36%)</title><rect x="26.6" y="403.0" width="4.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="29.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (33 samples, 0.10%)</title><rect x="30.9" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.9" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (33 samples, 0.10%)</title><rect x="30.9" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.9" y="446.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.10%)</title><rect x="30.9" y="419.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="33.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (146 samples, 0.46%)</title><rect x="32.2" y="451.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (146 samples, 0.46%)</title><rect x="32.2" y="435.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="35.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="32.2" y="419.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="35.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (130 samples, 0.41%)</title><rect x="32.8" y="419.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.8" y="430.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.39%)</title><rect x="32.8" y="403.0" width="4.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="35.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.07%)</title><rect x="37.6" y="451.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.6" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.07%)</title><rect x="37.6" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.6" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.07%)</title><rect x="37.6" y="419.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="40.6" y="430.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.05%)</title><rect x="38.5" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.5" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.05%)</title><rect x="38.5" y="435.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="41.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (868 samples, 2.74%)</title><rect x="39.1" y="451.0" width="32.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.1" y="462.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (15 samples, 0.05%)</title><rect x="39.1" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.05%)</title><rect x="39.1" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.05%)</title><rect x="39.1" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.1" y="414.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.get$Lambda (15 samples, 0.05%)</title><rect x="39.1" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.1" y="398.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$366 (15 samples, 0.05%)</title><rect x="39.1" y="371.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="42.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (389 samples, 1.23%)</title><rect x="39.6" y="435.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (217 samples, 0.69%)</title><rect x="39.6" y="419.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.6" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (217 samples, 0.69%)</title><rect x="39.6" y="403.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.6" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (217 samples, 0.69%)</title><rect x="39.6" y="387.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (217 samples, 0.69%)</title><rect x="39.6" y="371.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.6" y="382.0"></text>
</g>
<g>
<title>byte[] (211 samples, 0.67%)</title><rect x="39.6" y="355.0" width="7.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="42.6" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (27 samples, 0.09%)</title><rect x="47.7" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.7" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (10 samples, 0.03%)</title><rect x="47.7" y="403.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="50.7" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (17 samples, 0.05%)</title><rect x="48.1" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (17 samples, 0.05%)</title><rect x="48.1" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (17 samples, 0.05%)</title><rect x="48.1" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="51.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (22 samples, 0.07%)</title><rect x="48.7" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.7" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (12 samples, 0.04%)</title><rect x="48.7" y="403.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="51.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (10 samples, 0.03%)</title><rect x="49.2" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.2" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (10 samples, 0.03%)</title><rect x="49.2" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="52.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.iterator (9 samples, 0.03%)</title><rect x="49.5" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.5" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$MapN$MapNIterator (9 samples, 0.03%)</title><rect x="49.5" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="52.5" y="414.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.test (109 samples, 0.34%)</title><rect x="50.1" y="419.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.1" y="430.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (109 samples, 0.34%)</title><rect x="50.1" y="403.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/111156771.test (109 samples, 0.34%)</title><rect x="50.1" y="387.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (109 samples, 0.34%)</title><rect x="50.1" y="371.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.1" y="382.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/282821294.test (109 samples, 0.34%)</title><rect x="50.1" y="355.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.1" y="366.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (109 samples, 0.34%)</title><rect x="50.1" y="339.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/494317290.test (109 samples, 0.34%)</title><rect x="50.1" y="323.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (109 samples, 0.34%)</title><rect x="50.1" y="307.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (109 samples, 0.34%)</title><rect x="50.1" y="291.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.34%)</title><rect x="50.1" y="275.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.16%)</title><rect x="50.1" y="259.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="53.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.18%)</title><rect x="52.0" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.0" y="270.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.18%)</title><rect x="52.0" y="243.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="55.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (464 samples, 1.47%)</title><rect x="54.1" y="435.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (464 samples, 1.47%)</title><rect x="54.1" y="419.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.1" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (464 samples, 1.47%)</title><rect x="54.1" y="403.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.1" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="54.3" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (32 samples, 0.10%)</title><rect x="54.7" y="387.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="57.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="56.1" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="56.1" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (16 samples, 0.05%)</title><rect x="56.1" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.1" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (16 samples, 0.05%)</title><rect x="56.1" y="339.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="59.1" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (14 samples, 0.04%)</title><rect x="56.7" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="59.7" y="398.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (14 samples, 0.04%)</title><rect x="56.7" y="371.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="59.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (347 samples, 1.10%)</title><rect x="57.3" y="387.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (347 samples, 1.10%)</title><rect x="57.3" y="371.0" width="12.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (347 samples, 1.10%)</title><rect x="57.3" y="355.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.11%)</title><rect x="57.3" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.3" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (36 samples, 0.11%)</title><rect x="57.3" y="323.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (36 samples, 0.11%)</title><rect x="57.3" y="307.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.11%)</title><rect x="57.3" y="291.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.11%)</title><rect x="57.3" y="275.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.3" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.11%)</title><rect x="57.3" y="259.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.11%)</title><rect x="57.3" y="243.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.11%)</title><rect x="57.3" y="227.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="60.3" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.11%)</title><rect x="57.3" y="211.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.3" y="222.0"></text>
</g>
<g>
<title>java/util/List.copyOf (175 samples, 0.55%)</title><rect x="58.6" y="339.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.6" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (175 samples, 0.55%)</title><rect x="58.6" y="323.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (81 samples, 0.26%)</title><rect x="58.6" y="307.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.26%)</title><rect x="58.6" y="291.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (81 samples, 0.26%)</title><rect x="58.6" y="275.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="61.6" y="286.0"></text>
</g>
<g>
<title>java/util/List.of (94 samples, 0.30%)</title><rect x="61.6" y="307.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.6" y="318.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (94 samples, 0.30%)</title><rect x="61.6" y="291.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.6" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (136 samples, 0.43%)</title><rect x="65.1" y="339.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.1" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (136 samples, 0.43%)</title><rect x="65.1" y="323.0" width="5.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="68.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (33 samples, 0.10%)</title><rect x="70.2" y="387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.10%)</title><rect x="70.2" y="371.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="73.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (45 samples, 0.14%)</title><rect x="71.4" y="451.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.4" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (9 samples, 0.03%)</title><rect x="71.4" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.4" y="446.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="71.4" y="419.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="74.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.11%)</title><rect x="71.8" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (36 samples, 0.11%)</title><rect x="71.8" y="419.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (36 samples, 0.11%)</title><rect x="71.8" y="403.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.11%)</title><rect x="71.8" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.8" y="398.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (17 samples, 0.05%)</title><rect x="71.8" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.05%)</title><rect x="71.8" y="355.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="74.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.06%)</title><rect x="72.4" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.06%)</title><rect x="72.4" y="355.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.4" y="366.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="72.4" y="339.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (35 samples, 0.11%)</title><rect x="73.1" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (35 samples, 0.11%)</title><rect x="73.1" y="435.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.11%)</title><rect x="73.1" y="419.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (35 samples, 0.11%)</title><rect x="73.1" y="403.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (35 samples, 0.11%)</title><rect x="73.1" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.11%)</title><rect x="73.1" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.06%)</title><rect x="73.1" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.1" y="366.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.06%)</title><rect x="73.1" y="339.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="76.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.05%)</title><rect x="73.8" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.05%)</title><rect x="73.8" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.8" y="350.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="73.8" y="323.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="76.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (92 samples, 0.29%)</title><rect x="74.4" y="451.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.4" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (23 samples, 0.07%)</title><rect x="74.4" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="77.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (36 samples, 0.11%)</title><rect x="75.3" y="435.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.11%)</title><rect x="75.3" y="419.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (33 samples, 0.10%)</title><rect x="76.6" y="435.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (33 samples, 0.10%)</title><rect x="76.6" y="419.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="79.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="77.8" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="77.8" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="77.8" y="467.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="80.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (46 samples, 0.15%)</title><rect x="78.7" y="531.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="81.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="80.4" y="531.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="83.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (212 samples, 0.67%)</title><rect x="80.9" y="531.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="80.9" y="515.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="80.9" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/932111771.get$Lambda (12 samples, 0.04%)</title><rect x="80.9" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$300 (12 samples, 0.04%)</title><rect x="80.9" y="467.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="83.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$305/93037820.get$Lambda (11 samples, 0.03%)</title><rect x="81.3" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$305 (11 samples, 0.03%)</title><rect x="81.3" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="84.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (20 samples, 0.06%)</title><rect x="81.7" y="515.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="84.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (12 samples, 0.04%)</title><rect x="82.5" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="85.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (17 samples, 0.05%)</title><rect x="82.9" y="515.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="85.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (68 samples, 0.21%)</title><rect x="83.6" y="515.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 0.21%)</title><rect x="83.6" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (68 samples, 0.21%)</title><rect x="83.6" y="483.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (68 samples, 0.21%)</title><rect x="83.6" y="467.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (68 samples, 0.21%)</title><rect x="83.6" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (68 samples, 0.21%)</title><rect x="83.6" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (68 samples, 0.21%)</title><rect x="83.6" y="419.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (68 samples, 0.21%)</title><rect x="83.6" y="403.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (68 samples, 0.21%)</title><rect x="83.6" y="387.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.10%)</title><rect x="83.6" y="371.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.10%)</title><rect x="83.6" y="355.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/837470131.get$Lambda (9 samples, 0.03%)</title><rect x="83.6" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$309 (9 samples, 0.03%)</title><rect x="83.6" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="86.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$314/737652253.get$Lambda (23 samples, 0.07%)</title><rect x="83.9" y="339.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="86.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$314 (23 samples, 0.07%)</title><rect x="83.9" y="323.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="86.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (17 samples, 0.05%)</title><rect x="84.8" y="371.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="87.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (19 samples, 0.06%)</title><rect x="85.4" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (19 samples, 0.06%)</title><rect x="85.4" y="355.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (10 samples, 0.03%)</title><rect x="85.4" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="88.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.03%)</title><rect x="85.8" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.03%)</title><rect x="85.8" y="323.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (56 samples, 0.18%)</title><rect x="86.1" y="515.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.1" y="526.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.05%)</title><rect x="86.1" y="499.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="89.1" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap (27 samples, 0.09%)</title><rect x="86.7" y="499.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="89.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (14 samples, 0.04%)</title><rect x="87.7" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.7" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (14 samples, 0.04%)</title><rect x="87.7" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.7" y="494.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="87.7" y="467.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="90.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (16 samples, 0.05%)</title><rect x="88.2" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="88.2" y="499.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="91.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="88.8" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="88.8" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="88.8" y="611.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="91.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (26 samples, 0.08%)</title><rect x="89.4" y="675.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (26 samples, 0.08%)</title><rect x="89.4" y="659.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.04%)</title><rect x="89.4" y="643.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="92.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="89.8" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="89.8" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="89.8" y="611.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="92.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,198 samples, 3.78%)</title><rect x="90.4" y="675.0" width="44.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.4" y="686.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.07%)</title><rect x="90.4" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.07%)</title><rect x="90.4" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$283/953386476.get$Lambda (14 samples, 0.04%)</title><rect x="90.4" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$283 (14 samples, 0.04%)</title><rect x="90.4" y="611.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="93.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/1482169443.get$Lambda (7 samples, 0.02%)</title><rect x="90.9" y="627.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$286 (7 samples, 0.02%)</title><rect x="90.9" y="611.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="93.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (41 samples, 0.13%)</title><rect x="91.1" y="659.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (41 samples, 0.13%)</title><rect x="91.1" y="643.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$286/1482169443.apply (14 samples, 0.04%)</title><rect x="91.1" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="94.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (14 samples, 0.04%)</title><rect x="91.1" y="611.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (14 samples, 0.04%)</title><rect x="91.1" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="91.1" y="579.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="94.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="91.7" y="627.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="91.7" y="611.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.09%)</title><rect x="91.7" y="595.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="94.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (17 samples, 0.05%)</title><rect x="92.7" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (17 samples, 0.05%)</title><rect x="92.7" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="92.7" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="92.7" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="92.7" y="595.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="95.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,119 samples, 3.53%)</title><rect x="93.3" y="659.0" width="41.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.3" y="670.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="93.3" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="93.3" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.get$Lambda (17 samples, 0.05%)</title><rect x="93.3" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$194 (17 samples, 0.05%)</title><rect x="93.3" y="595.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="96.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,026 samples, 3.24%)</title><rect x="93.9" y="643.0" width="38.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.9" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,026 samples, 3.24%)</title><rect x="93.9" y="627.0" width="38.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,012 samples, 3.20%)</title><rect x="93.9" y="611.0" width="37.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="622.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (1,012 samples, 3.20%)</title><rect x="93.9" y="595.0" width="37.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.9" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (1,012 samples, 3.20%)</title><rect x="93.9" y="579.0" width="37.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="590.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (1,012 samples, 3.20%)</title><rect x="93.9" y="563.0" width="37.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.9" y="574.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="93.9" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="93.9" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.get$Lambda (9 samples, 0.03%)</title><rect x="93.9" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$279 (9 samples, 0.03%)</title><rect x="93.9" y="499.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="96.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (400 samples, 1.26%)</title><rect x="94.3" y="547.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="97.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (400 samples, 1.26%)</title><rect x="94.3" y="531.0" width="14.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (400 samples, 1.26%)</title><rect x="94.3" y="515.0" width="14.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (383 samples, 1.21%)</title><rect x="94.3" y="499.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (383 samples, 1.21%)</title><rect x="94.3" y="483.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="97.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (383 samples, 1.21%)</title><rect x="94.3" y="467.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (383 samples, 1.21%)</title><rect x="94.3" y="451.0" width="14.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (257 samples, 0.81%)</title><rect x="94.3" y="435.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.3" y="446.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (70 samples, 0.22%)</title><rect x="94.3" y="419.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="94.3" y="403.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="97.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.09%)</title><rect x="94.7" y="403.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.09%)</title><rect x="94.7" y="387.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.7" y="398.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="94.7" y="371.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="97.7" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (29 samples, 0.09%)</title><rect x="95.8" y="403.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.8" y="414.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="95.8" y="387.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="98.8" y="398.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (14 samples, 0.04%)</title><rect x="96.9" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="99.9" y="430.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (14 samples, 0.04%)</title><rect x="96.9" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="99.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (131 samples, 0.41%)</title><rect x="97.4" y="419.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (18 samples, 0.06%)</title><rect x="97.4" y="403.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="100.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (95 samples, 0.30%)</title><rect x="98.1" y="403.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (95 samples, 0.30%)</title><rect x="98.1" y="387.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (65 samples, 0.21%)</title><rect x="98.1" y="371.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.21%)</title><rect x="98.1" y="355.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.get$Lambda (65 samples, 0.21%)</title><rect x="98.1" y="339.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$76 (65 samples, 0.21%)</title><rect x="98.1" y="323.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="101.1" y="334.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (30 samples, 0.09%)</title><rect x="100.5" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.run (30 samples, 0.09%)</title><rect x="100.5" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (30 samples, 0.09%)</title><rect x="100.5" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.5" y="350.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (30 samples, 0.09%)</title><rect x="100.5" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (30 samples, 0.09%)</title><rect x="100.5" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Integer (30 samples, 0.09%)</title><rect x="100.5" y="291.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="103.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (18 samples, 0.06%)</title><rect x="101.6" y="403.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (18 samples, 0.06%)</title><rect x="101.6" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.6" y="398.0"></text>
</g>
<g>
<title>int[] (18 samples, 0.06%)</title><rect x="101.6" y="371.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="104.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (42 samples, 0.13%)</title><rect x="102.3" y="419.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.3" y="430.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="102.3" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="105.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.06%)</title><rect x="103.1" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.06%)</title><rect x="103.1" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.1" y="398.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.06%)</title><rect x="103.1" y="371.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="106.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (126 samples, 0.40%)</title><rect x="103.8" y="435.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.8" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (35 samples, 0.11%)</title><rect x="103.8" y="419.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="106.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (39 samples, 0.12%)</title><rect x="105.1" y="419.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.1" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.12%)</title><rect x="105.1" y="403.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="108.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (52 samples, 0.16%)</title><rect x="106.6" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (52 samples, 0.16%)</title><rect x="106.6" y="403.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="109.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="108.5" y="499.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="108.5" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="108.5" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="111.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (603 samples, 1.90%)</title><rect x="109.2" y="547.0" width="22.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.2" y="558.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (51 samples, 0.16%)</title><rect x="109.2" y="531.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="112.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (543 samples, 1.71%)</title><rect x="111.1" y="531.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object (10 samples, 0.03%)</title><rect x="111.1" y="515.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="114.1" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList (21 samples, 0.07%)</title><rect x="111.4" y="515.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="114.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (12 samples, 0.04%)</title><rect x="112.2" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="115.2" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (24 samples, 0.08%)</title><rect x="112.7" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.7" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (24 samples, 0.08%)</title><rect x="112.7" y="499.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.7" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (24 samples, 0.08%)</title><rect x="112.7" y="483.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="115.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (13 samples, 0.04%)</title><rect x="113.6" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.04%)</title><rect x="113.6" y="499.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (32 samples, 0.10%)</title><rect x="114.1" y="515.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="117.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (23 samples, 0.07%)</title><rect x="115.2" y="515.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="118.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (32 samples, 0.10%)</title><rect x="116.1" y="515.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="119.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.11%)</title><rect x="117.3" y="515.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="120.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (180 samples, 0.57%)</title><rect x="118.6" y="515.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (15 samples, 0.05%)</title><rect x="118.6" y="499.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="121.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (12 samples, 0.04%)</title><rect x="119.2" y="499.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="122.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (10 samples, 0.03%)</title><rect x="119.6" y="499.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="122.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (9 samples, 0.03%)</title><rect x="120.0" y="499.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="123.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="120.3" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="120.3" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.get$Lambda (8 samples, 0.03%)</title><rect x="120.3" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$271 (8 samples, 0.03%)</title><rect x="120.3" y="451.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="123.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (15 samples, 0.05%)</title><rect x="120.6" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.05%)</title><rect x="120.6" y="483.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="123.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (11 samples, 0.03%)</title><rect x="121.2" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="124.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.06%)</title><rect x="121.6" y="499.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="124.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (82 samples, 0.26%)</title><rect x="122.3" y="499.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (20 samples, 0.06%)</title><rect x="122.3" y="483.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="125.3" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (23 samples, 0.07%)</title><rect x="123.0" y="483.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="126.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (15 samples, 0.05%)</title><rect x="123.9" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (15 samples, 0.05%)</title><rect x="123.9" y="467.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="126.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (24 samples, 0.08%)</title><rect x="124.4" y="483.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (7 samples, 0.02%)</title><rect x="124.4" y="467.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="127.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (11 samples, 0.03%)</title><rect x="124.7" y="467.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="127.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (96 samples, 0.30%)</title><rect x="125.3" y="515.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (11 samples, 0.03%)</title><rect x="125.5" y="499.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="128.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (10 samples, 0.03%)</title><rect x="125.9" y="499.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="128.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (9 samples, 0.03%)</title><rect x="126.3" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.03%)</title><rect x="126.3" y="483.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="129.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (60 samples, 0.19%)</title><rect x="126.7" y="499.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (8 samples, 0.03%)</title><rect x="126.7" y="483.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="129.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (22 samples, 0.07%)</title><rect x="126.9" y="483.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="129.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (24 samples, 0.08%)</title><rect x="128.0" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.03%)</title><rect x="128.0" y="467.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="131.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (9 samples, 0.03%)</title><rect x="128.3" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="131.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (7 samples, 0.02%)</title><rect x="128.6" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="131.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (13 samples, 0.04%)</title><rect x="128.9" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (13 samples, 0.04%)</title><rect x="128.9" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (13 samples, 0.04%)</title><rect x="128.9" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.9" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.04%)</title><rect x="128.9" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (13 samples, 0.04%)</title><rect x="128.9" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (13 samples, 0.04%)</title><rect x="128.9" y="435.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.9" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.04%)</title><rect x="128.9" y="419.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="131.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (52 samples, 0.16%)</title><rect x="129.4" y="515.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (14 samples, 0.04%)</title><rect x="129.4" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="129.4" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.get$Lambda (14 samples, 0.04%)</title><rect x="129.4" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$208 (14 samples, 0.04%)</title><rect x="129.4" y="451.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="132.4" y="462.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (38 samples, 0.12%)</title><rect x="129.9" y="499.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (38 samples, 0.12%)</title><rect x="129.9" y="483.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (38 samples, 0.12%)</title><rect x="129.9" y="467.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.9" y="478.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (9 samples, 0.03%)</title><rect x="129.9" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="132.9" y="462.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (29 samples, 0.09%)</title><rect x="130.2" y="451.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.2" y="462.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (12 samples, 0.04%)</title><rect x="130.2" y="435.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="133.2" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (17 samples, 0.05%)</title><rect x="130.7" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.7" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 0.05%)</title><rect x="130.7" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.7" y="430.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 0.05%)</title><rect x="130.7" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.7" y="414.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (17 samples, 0.05%)</title><rect x="130.7" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.7" y="398.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (17 samples, 0.05%)</title><rect x="130.7" y="371.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="133.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (9 samples, 0.03%)</title><rect x="131.3" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="131.3" y="515.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="134.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="131.6" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="131.6" y="595.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="131.6" y="579.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="134.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.07%)</title><rect x="132.2" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.07%)</title><rect x="132.2" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="132.2" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="132.2" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="132.2" y="579.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="135.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (53 samples, 0.17%)</title><rect x="133.0" y="643.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (36 samples, 0.11%)</title><rect x="133.0" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (36 samples, 0.11%)</title><rect x="133.0" y="611.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1520674271.linkToTargetMethod (36 samples, 0.11%)</title><rect x="133.0" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1612745536.invoke (36 samples, 0.11%)</title><rect x="133.0" y="579.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="136.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809170349.invoke (36 samples, 0.11%)</title><rect x="133.0" y="563.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.11%)</title><rect x="133.0" y="547.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="136.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.04%)</title><rect x="133.0" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="133.0" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="136.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (22 samples, 0.07%)</title><rect x="133.5" y="531.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (22 samples, 0.07%)</title><rect x="133.5" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="136.5" y="526.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="133.5" y="499.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="136.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (17 samples, 0.05%)</title><rect x="134.4" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="134.4" y="611.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="137.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (17 samples, 0.05%)</title><rect x="135.0" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (17 samples, 0.05%)</title><rect x="135.0" y="707.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (17 samples, 0.05%)</title><rect x="135.0" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.0" y="702.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (17 samples, 0.05%)</title><rect x="135.0" y="675.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="138.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (43 samples, 0.14%)</title><rect x="135.6" y="723.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.6" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (31 samples, 0.10%)</title><rect x="135.6" y="707.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="138.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (12 samples, 0.04%)</title><rect x="136.8" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (12 samples, 0.04%)</title><rect x="136.8" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.8" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.04%)</title><rect x="136.8" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.8" y="686.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (12 samples, 0.04%)</title><rect x="136.8" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.8" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.04%)</title><rect x="136.8" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.8" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.04%)</title><rect x="136.8" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (12 samples, 0.04%)</title><rect x="136.8" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.8" y="622.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.04%)</title><rect x="136.8" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.8" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.04%)</title><rect x="136.8" y="579.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.8" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.04%)</title><rect x="136.8" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.8" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (12 samples, 0.04%)</title><rect x="136.8" y="547.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="139.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (242 samples, 0.76%)</title><rect x="137.2" y="819.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (107 samples, 0.34%)</title><rect x="137.2" y="803.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (106 samples, 0.33%)</title><rect x="137.2" y="787.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (106 samples, 0.33%)</title><rect x="137.2" y="771.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.2" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (106 samples, 0.33%)</title><rect x="137.2" y="755.0" width="4.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="140.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (135 samples, 0.43%)</title><rect x="141.2" y="803.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (135 samples, 0.43%)</title><rect x="141.2" y="787.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (135 samples, 0.43%)</title><rect x="141.2" y="771.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.2" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (135 samples, 0.43%)</title><rect x="141.2" y="755.0" width="5.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="144.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.run (409 samples, 1.29%)</title><rect x="146.3" y="819.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="149.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (409 samples, 1.29%)</title><rect x="146.3" y="803.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (409 samples, 1.29%)</title><rect x="146.3" y="787.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (409 samples, 1.29%)</title><rect x="146.3" y="771.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (409 samples, 1.29%)</title><rect x="146.3" y="755.0" width="15.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="149.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (409 samples, 1.29%)</title><rect x="146.3" y="739.0" width="15.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (409 samples, 1.29%)</title><rect x="146.3" y="723.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (409 samples, 1.29%)</title><rect x="146.3" y="707.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (409 samples, 1.29%)</title><rect x="146.3" y="691.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (409 samples, 1.29%)</title><rect x="146.3" y="675.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (409 samples, 1.29%)</title><rect x="146.3" y="659.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (366 samples, 1.16%)</title><rect x="146.3" y="643.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="149.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.15%)</title><rect x="146.3" y="627.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.15%)</title><rect x="146.3" y="611.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$373/1353620768.get$Lambda (33 samples, 0.10%)</title><rect x="146.3" y="595.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$373 (33 samples, 0.10%)</title><rect x="146.3" y="579.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="149.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$403/77996944.get$Lambda (15 samples, 0.05%)</title><rect x="147.5" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$403 (15 samples, 0.05%)</title><rect x="147.5" y="579.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="150.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (318 samples, 1.00%)</title><rect x="148.0" y="627.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (31 samples, 0.10%)</title><rect x="148.0" y="611.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="151.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (287 samples, 0.91%)</title><rect x="149.2" y="611.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (287 samples, 0.91%)</title><rect x="149.2" y="595.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (287 samples, 0.91%)</title><rect x="149.2" y="579.0" width="10.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (119 samples, 0.38%)</title><rect x="149.2" y="563.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (46 samples, 0.15%)</title><rect x="149.2" y="547.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="152.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.apply (68 samples, 0.21%)</title><rect x="150.9" y="547.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (68 samples, 0.21%)</title><rect x="150.9" y="531.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (68 samples, 0.21%)</title><rect x="150.9" y="515.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.9" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (18 samples, 0.06%)</title><rect x="150.9" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.9" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (18 samples, 0.06%)</title><rect x="150.9" y="483.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.9" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (18 samples, 0.06%)</title><rect x="150.9" y="467.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="153.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (50 samples, 0.16%)</title><rect x="151.6" y="499.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="151.6" y="483.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="151.6" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.get$Lambda (11 samples, 0.03%)</title><rect x="151.6" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$408 (11 samples, 0.03%)</title><rect x="151.6" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="154.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (39 samples, 0.12%)</title><rect x="152.0" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="155.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (39 samples, 0.12%)</title><rect x="152.0" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.0" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.07%)</title><rect x="152.0" y="451.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="155.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="152.9" y="451.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="152.9" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="152.9" y="419.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (168 samples, 0.53%)</title><rect x="153.6" y="563.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (168 samples, 0.53%)</title><rect x="153.6" y="547.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (168 samples, 0.53%)</title><rect x="153.6" y="531.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (168 samples, 0.53%)</title><rect x="153.6" y="515.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (168 samples, 0.53%)</title><rect x="153.6" y="499.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (168 samples, 0.53%)</title><rect x="153.6" y="483.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (168 samples, 0.53%)</title><rect x="153.6" y="467.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="153.6" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="153.6" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.get$Lambda (11 samples, 0.03%)</title><rect x="153.6" y="419.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$389 (11 samples, 0.03%)</title><rect x="153.6" y="403.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="156.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (39 samples, 0.12%)</title><rect x="154.0" y="451.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (39 samples, 0.12%)</title><rect x="154.0" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (27 samples, 0.09%)</title><rect x="154.0" y="419.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="157.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="155.0" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="155.0" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="155.0" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="158.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (53 samples, 0.17%)</title><rect x="155.5" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="155.5" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="155.5" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$390/671188151.get$Lambda (9 samples, 0.03%)</title><rect x="155.5" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$390 (9 samples, 0.03%)</title><rect x="155.5" y="387.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="158.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (44 samples, 0.14%)</title><rect x="155.8" y="435.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (44 samples, 0.14%)</title><rect x="155.8" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (24 samples, 0.08%)</title><rect x="155.8" y="403.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="158.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="156.7" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="159.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="156.7" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.06%)</title><rect x="156.7" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="159.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (65 samples, 0.21%)</title><rect x="157.5" y="451.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (34 samples, 0.11%)</title><rect x="157.5" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (19 samples, 0.06%)</title><rect x="157.5" y="419.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="160.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (15 samples, 0.05%)</title><rect x="158.2" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (15 samples, 0.05%)</title><rect x="158.2" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="158.2" y="387.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="161.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.10%)</title><rect x="158.7" y="435.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (14 samples, 0.04%)</title><rect x="158.7" y="419.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="161.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.05%)</title><rect x="159.3" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (17 samples, 0.05%)</title><rect x="159.3" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (17 samples, 0.05%)</title><rect x="159.3" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (17 samples, 0.05%)</title><rect x="159.3" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (17 samples, 0.05%)</title><rect x="159.3" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.05%)</title><rect x="159.3" y="339.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="162.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (43 samples, 0.14%)</title><rect x="159.9" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (43 samples, 0.14%)</title><rect x="159.9" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (43 samples, 0.14%)</title><rect x="159.9" y="611.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (43 samples, 0.14%)</title><rect x="159.9" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (43 samples, 0.14%)</title><rect x="159.9" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.9" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (43 samples, 0.14%)</title><rect x="159.9" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.9" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (21 samples, 0.07%)</title><rect x="159.9" y="547.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.9" y="558.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (21 samples, 0.07%)</title><rect x="159.9" y="531.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.9" y="542.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (22 samples, 0.07%)</title><rect x="160.7" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.7" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (22 samples, 0.07%)</title><rect x="160.7" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="163.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,142 samples, 9.92%)</title><rect x="161.5" y="819.0" width="117.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.5" y="830.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,142 samples, 9.92%)</title><rect x="161.5" y="803.0" width="117.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.5" y="814.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,604 samples, 8.22%)</title><rect x="161.5" y="787.0" width="97.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="164.5" y="798.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (2,604 samples, 8.22%)</title><rect x="161.5" y="771.0" width="97.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.5" y="782.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,604 samples, 8.22%)</title><rect x="161.5" y="755.0" width="97.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.5" y="766.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (67 samples, 0.21%)</title><rect x="161.5" y="739.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (67 samples, 0.21%)</title><rect x="161.5" y="723.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (67 samples, 0.21%)</title><rect x="161.5" y="707.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (67 samples, 0.21%)</title><rect x="161.5" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/932285561.linkToTargetMethod (33 samples, 0.10%)</title><rect x="161.5" y="675.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574568002.invoke (33 samples, 0.10%)</title><rect x="161.5" y="659.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.10%)</title><rect x="161.5" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (33 samples, 0.10%)</title><rect x="161.5" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (33 samples, 0.10%)</title><rect x="161.5" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.5" y="622.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.10%)</title><rect x="161.5" y="595.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="164.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (34 samples, 0.11%)</title><rect x="162.7" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.11%)</title><rect x="162.7" y="659.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.11%)</title><rect x="162.7" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364/258005369.get$Lambda (34 samples, 0.11%)</title><rect x="162.7" y="627.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$364 (34 samples, 0.11%)</title><rect x="162.7" y="611.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="165.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,537 samples, 8.01%)</title><rect x="164.0" y="739.0" width="94.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.0" y="750.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,537 samples, 8.01%)</title><rect x="164.0" y="723.0" width="94.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.0" y="734.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,537 samples, 8.01%)</title><rect x="164.0" y="707.0" width="94.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.0" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,537 samples, 8.01%)</title><rect x="164.0" y="691.0" width="94.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.0" y="702.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,010 samples, 3.19%)</title><rect x="164.0" y="675.0" width="37.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.0" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,010 samples, 3.19%)</title><rect x="164.0" y="659.0" width="37.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.0" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,010 samples, 3.19%)</title><rect x="164.0" y="643.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.0" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,010 samples, 3.19%)</title><rect x="164.0" y="627.0" width="37.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.0" y="638.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,010 samples, 3.19%)</title><rect x="164.0" y="611.0" width="37.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.0" y="622.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,010 samples, 3.19%)</title><rect x="164.0" y="595.0" width="37.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.0" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,010 samples, 3.19%)</title><rect x="164.0" y="579.0" width="37.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.0" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (977 samples, 3.09%)</title><rect x="164.0" y="563.0" width="36.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.0" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (977 samples, 3.09%)</title><rect x="164.0" y="547.0" width="36.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.0" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (951 samples, 3.00%)</title><rect x="164.0" y="531.0" width="35.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="167.0" y="542.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (22 samples, 0.07%)</title><rect x="164.0" y="515.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="167.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$390/671188151.apply (26 samples, 0.08%)</title><rect x="164.8" y="515.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (26 samples, 0.08%)</title><rect x="164.8" y="499.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (26 samples, 0.08%)</title><rect x="164.8" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.08%)</title><rect x="164.8" y="467.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.08%)</title><rect x="164.8" y="451.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="167.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.apply (852 samples, 2.69%)</title><rect x="165.8" y="515.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.8" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (852 samples, 2.69%)</title><rect x="165.8" y="499.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.8" y="510.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="165.8" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.8" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="165.8" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="168.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.get$Lambda (9 samples, 0.03%)</title><rect x="165.8" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$477 (9 samples, 0.03%)</title><rect x="165.8" y="435.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="168.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (46 samples, 0.15%)</title><rect x="166.1" y="483.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (46 samples, 0.15%)</title><rect x="166.1" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="169.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (29 samples, 0.09%)</title><rect x="166.1" y="451.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="169.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="167.2" y="451.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="167.2" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="167.2" y="419.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="170.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (797 samples, 2.52%)</title><rect x="167.8" y="483.0" width="29.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.8" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="167.8" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="167.8" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$472/2092398521.get$Lambda (11 samples, 0.03%)</title><rect x="167.8" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$472 (11 samples, 0.03%)</title><rect x="167.8" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="170.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (46 samples, 0.15%)</title><rect x="168.2" y="467.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (46 samples, 0.15%)</title><rect x="168.2" y="451.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (31 samples, 0.10%)</title><rect x="168.2" y="435.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="171.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="169.4" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.05%)</title><rect x="169.4" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.05%)</title><rect x="169.4" y="403.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="172.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (740 samples, 2.34%)</title><rect x="170.0" y="467.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.0" y="478.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$143/1335662412.apply (38 samples, 0.12%)</title><rect x="170.0" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (38 samples, 0.12%)</title><rect x="170.0" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (38 samples, 0.12%)</title><rect x="170.0" y="419.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (15 samples, 0.05%)</title><rect x="170.0" y="403.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="173.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (23 samples, 0.07%)</title><rect x="170.5" y="403.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.5" y="414.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="170.5" y="387.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="173.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.03%)</title><rect x="171.0" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="174.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (702 samples, 2.22%)</title><rect x="171.4" y="451.0" width="26.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.4" y="462.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.07%)</title><rect x="171.4" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.07%)</title><rect x="171.4" y="419.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/1999221485.get$Lambda (10 samples, 0.03%)</title><rect x="171.4" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$464 (10 samples, 0.03%)</title><rect x="171.4" y="387.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="174.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$468/1721151277.get$Lambda (11 samples, 0.03%)</title><rect x="171.7" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$468 (11 samples, 0.03%)</title><rect x="171.7" y="387.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="174.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/59787151.linkToTargetMethod (24 samples, 0.08%)</title><rect x="172.2" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/366472008.invokeStatic (24 samples, 0.08%)</title><rect x="172.2" y="419.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.get$Lambda (24 samples, 0.08%)</title><rect x="172.2" y="403.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$441 (24 samples, 0.08%)</title><rect x="172.2" y="387.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="175.2" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (136 samples, 0.43%)</title><rect x="173.1" y="435.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.1" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (60 samples, 0.19%)</title><rect x="173.1" y="419.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.1" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.06%)</title><rect x="173.1" y="403.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.1" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.06%)</title><rect x="173.1" y="387.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="176.1" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (41 samples, 0.13%)</title><rect x="173.8" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.8" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (41 samples, 0.13%)</title><rect x="173.8" y="387.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="176.8" y="398.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (36 samples, 0.11%)</title><rect x="175.3" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.3" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (36 samples, 0.11%)</title><rect x="175.3" y="403.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (36 samples, 0.11%)</title><rect x="175.3" y="387.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.3" y="398.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.04%)</title><rect x="175.3" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.3" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (12 samples, 0.04%)</title><rect x="175.3" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (12 samples, 0.04%)</title><rect x="175.3" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.3" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (12 samples, 0.04%)</title><rect x="175.3" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="178.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$432/505681380.get (10 samples, 0.03%)</title><rect x="175.7" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.7" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (10 samples, 0.03%)</title><rect x="175.7" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="178.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (14 samples, 0.04%)</title><rect x="176.1" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.1" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (14 samples, 0.04%)</title><rect x="176.1" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.1" y="366.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (14 samples, 0.04%)</title><rect x="176.1" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.1" y="350.0"></text>
</g>
<g>
<title>java.util.OptionalLong (14 samples, 0.04%)</title><rect x="176.1" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="179.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (40 samples, 0.13%)</title><rect x="176.6" y="419.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.6" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (40 samples, 0.13%)</title><rect x="176.6" y="403.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="179.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (84 samples, 0.27%)</title><rect x="178.1" y="435.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (53 samples, 0.17%)</title><rect x="178.1" y="419.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.08%)</title><rect x="178.1" y="403.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="181.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="179.1" y="403.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.09%)</title><rect x="179.1" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.09%)</title><rect x="179.1" y="371.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="182.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (31 samples, 0.10%)</title><rect x="180.1" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (31 samples, 0.10%)</title><rect x="180.1" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.05%)</title><rect x="180.1" y="387.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="183.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="180.7" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="180.7" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.7" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="180.7" y="355.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="183.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (13 samples, 0.04%)</title><rect x="181.2" y="435.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="184.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (22 samples, 0.07%)</title><rect x="181.7" y="435.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="184.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.08%)</title><rect x="182.6" y="435.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="185.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (9 samples, 0.03%)</title><rect x="183.5" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="186.5" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (9 samples, 0.03%)</title><rect x="183.5" y="419.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="186.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (368 samples, 1.16%)</title><rect x="183.8" y="435.0" width="13.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.run (368 samples, 1.16%)</title><rect x="183.8" y="419.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (368 samples, 1.16%)</title><rect x="183.8" y="403.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.15%)</title><rect x="183.8" y="387.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.8" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.15%)</title><rect x="183.8" y="371.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/264340655.get$Lambda (10 samples, 0.03%)</title><rect x="183.8" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$444 (10 samples, 0.03%)</title><rect x="183.8" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="186.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.get$Lambda (16 samples, 0.05%)</title><rect x="184.2" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$448 (16 samples, 0.05%)</title><rect x="184.2" y="339.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="187.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$457/2069360447.get$Lambda (23 samples, 0.07%)</title><rect x="184.8" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$457 (23 samples, 0.07%)</title><rect x="184.8" y="339.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="187.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (41 samples, 0.13%)</title><rect x="185.6" y="387.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (41 samples, 0.13%)</title><rect x="185.6" y="371.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.07%)</title><rect x="185.6" y="355.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="188.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="186.4" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.06%)</title><rect x="186.4" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.06%)</title><rect x="186.4" y="323.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="189.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (26 samples, 0.08%)</title><rect x="187.2" y="387.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="190.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (34 samples, 0.11%)</title><rect x="188.1" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="191.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.11%)</title><rect x="188.1" y="371.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="191.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (58 samples, 0.18%)</title><rect x="189.4" y="387.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (58 samples, 0.18%)</title><rect x="189.4" y="371.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="189.4" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="189.4" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$461/1913827667.get$Lambda (23 samples, 0.07%)</title><rect x="189.4" y="323.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$461 (23 samples, 0.07%)</title><rect x="189.4" y="307.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="192.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.11%)</title><rect x="190.3" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.11%)</title><rect x="190.3" y="339.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.11%)</title><rect x="190.3" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="193.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (18 samples, 0.06%)</title><rect x="190.3" y="307.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="193.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="190.9" y="307.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="190.9" y="291.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="190.9" y="275.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="193.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (67 samples, 0.21%)</title><rect x="191.6" y="387.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (67 samples, 0.21%)</title><rect x="191.6" y="371.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="194.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2024542466.invoke (67 samples, 0.21%)</title><rect x="191.6" y="355.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (67 samples, 0.21%)</title><rect x="191.6" y="339.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.6" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.04%)</title><rect x="191.6" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.6" y="334.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="191.6" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="194.6" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (54 samples, 0.17%)</title><rect x="192.1" y="323.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (54 samples, 0.17%)</title><rect x="192.1" y="307.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.1" y="318.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.17%)</title><rect x="192.1" y="291.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="195.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (93 samples, 0.29%)</title><rect x="194.1" y="387.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (28 samples, 0.09%)</title><rect x="194.1" y="371.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="197.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (65 samples, 0.21%)</title><rect x="195.1" y="371.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.21%)</title><rect x="195.1" y="355.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2024542466.invoke (65 samples, 0.21%)</title><rect x="195.1" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.21%)</title><rect x="195.1" y="323.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (10 samples, 0.03%)</title><rect x="195.1" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.1" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="195.1" y="291.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="198.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (55 samples, 0.17%)</title><rect x="195.5" y="307.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (55 samples, 0.17%)</title><rect x="195.5" y="291.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.5" y="302.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.17%)</title><rect x="195.5" y="275.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="198.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$348/1406690349.apply (51 samples, 0.16%)</title><rect x="197.5" y="515.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (51 samples, 0.16%)</title><rect x="197.5" y="499.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (30 samples, 0.09%)</title><rect x="197.5" y="483.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.5" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (30 samples, 0.09%)</title><rect x="197.5" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.5" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (30 samples, 0.09%)</title><rect x="197.5" y="451.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.5" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (30 samples, 0.09%)</title><rect x="197.5" y="435.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="200.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (21 samples, 0.07%)</title><rect x="198.7" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.07%)</title><rect x="198.7" y="467.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="201.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (26 samples, 0.08%)</title><rect x="199.4" y="531.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (26 samples, 0.08%)</title><rect x="199.4" y="515.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.apply (26 samples, 0.08%)</title><rect x="199.4" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (26 samples, 0.08%)</title><rect x="199.4" y="483.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (26 samples, 0.08%)</title><rect x="199.4" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.08%)</title><rect x="199.4" y="451.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="202.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.apply (33 samples, 0.10%)</title><rect x="200.4" y="563.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (33 samples, 0.10%)</title><rect x="200.4" y="547.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (33 samples, 0.10%)</title><rect x="200.4" y="531.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="203.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,527 samples, 4.82%)</title><rect x="201.6" y="675.0" width="56.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.6" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (132 samples, 0.42%)</title><rect x="201.6" y="659.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (132 samples, 0.42%)</title><rect x="201.6" y="643.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.6" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (132 samples, 0.42%)</title><rect x="201.6" y="627.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.6" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (132 samples, 0.42%)</title><rect x="201.6" y="611.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (132 samples, 0.42%)</title><rect x="201.6" y="595.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.6" y="606.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.42%)</title><rect x="201.6" y="579.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="204.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (102 samples, 0.32%)</title><rect x="206.6" y="659.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.6" y="670.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (14 samples, 0.04%)</title><rect x="206.6" y="643.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="209.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.06%)</title><rect x="207.1" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.06%)</title><rect x="207.1" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.06%)</title><rect x="207.1" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.1" y="622.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="207.1" y="595.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="210.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.06%)</title><rect x="207.8" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.8" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.06%)</title><rect x="207.8" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.8" y="638.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.06%)</title><rect x="207.8" y="611.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="210.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (49 samples, 0.15%)</title><rect x="208.5" y="643.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.15%)</title><rect x="208.5" y="627.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (27 samples, 0.09%)</title><rect x="208.5" y="611.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="211.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.07%)</title><rect x="209.5" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.5" y="622.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="209.5" y="595.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="212.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (364 samples, 1.15%)</title><rect x="210.4" y="659.0" width="13.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.4" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (364 samples, 1.15%)</title><rect x="210.4" y="643.0" width="13.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (364 samples, 1.15%)</title><rect x="210.4" y="627.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.4" y="638.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (13 samples, 0.04%)</title><rect x="210.4" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="213.4" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.05%)</title><rect x="210.8" y="611.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="213.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.08%)</title><rect x="211.4" y="611.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="214.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (13 samples, 0.04%)</title><rect x="212.4" y="611.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="215.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="212.9" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="212.9" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (23 samples, 0.07%)</title><rect x="212.9" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="215.9" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (23 samples, 0.07%)</title><rect x="212.9" y="563.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="215.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (33 samples, 0.10%)</title><rect x="213.7" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="216.7" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (33 samples, 0.10%)</title><rect x="213.7" y="595.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="216.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (209 samples, 0.66%)</title><rect x="215.0" y="611.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (209 samples, 0.66%)</title><rect x="215.0" y="595.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (209 samples, 0.66%)</title><rect x="215.0" y="579.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (37 samples, 0.12%)</title><rect x="215.0" y="563.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (37 samples, 0.12%)</title><rect x="215.0" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (37 samples, 0.12%)</title><rect x="215.0" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (37 samples, 0.12%)</title><rect x="215.0" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (37 samples, 0.12%)</title><rect x="215.0" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (37 samples, 0.12%)</title><rect x="215.0" y="483.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (37 samples, 0.12%)</title><rect x="215.0" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (37 samples, 0.12%)</title><rect x="215.0" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.12%)</title><rect x="215.0" y="435.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="218.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (104 samples, 0.33%)</title><rect x="216.4" y="563.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.4" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (104 samples, 0.33%)</title><rect x="216.4" y="547.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (52 samples, 0.16%)</title><rect x="216.4" y="531.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.4" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.16%)</title><rect x="216.4" y="515.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.4" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.16%)</title><rect x="216.4" y="499.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="219.4" y="510.0"></text>
</g>
<g>
<title>java/util/List.of (52 samples, 0.16%)</title><rect x="218.3" y="531.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.3" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (52 samples, 0.16%)</title><rect x="218.3" y="515.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="221.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (68 samples, 0.21%)</title><rect x="220.2" y="563.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (68 samples, 0.21%)</title><rect x="220.2" y="547.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="223.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (31 samples, 0.10%)</title><rect x="222.8" y="611.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (31 samples, 0.10%)</title><rect x="222.8" y="595.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="225.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (929 samples, 2.93%)</title><rect x="223.9" y="659.0" width="34.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.9" y="670.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (51 samples, 0.16%)</title><rect x="223.9" y="643.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="226.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (52 samples, 0.16%)</title><rect x="225.8" y="643.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.8" y="654.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (52 samples, 0.16%)</title><rect x="225.8" y="627.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.8" y="638.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.16%)</title><rect x="225.8" y="611.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="228.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (127 samples, 0.40%)</title><rect x="227.8" y="643.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (127 samples, 0.40%)</title><rect x="227.8" y="627.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.17%)</title><rect x="227.8" y="611.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="230.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (72 samples, 0.23%)</title><rect x="229.8" y="611.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.8" y="622.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.23%)</title><rect x="229.8" y="595.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="232.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (699 samples, 2.21%)</title><rect x="232.5" y="643.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.5" y="654.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (210 samples, 0.66%)</title><rect x="232.5" y="627.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (210 samples, 0.66%)</title><rect x="232.5" y="611.0" width="7.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.27%)</title><rect x="232.5" y="595.0" width="3.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="235.5" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (124 samples, 0.39%)</title><rect x="235.7" y="595.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.7" y="606.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.39%)</title><rect x="235.7" y="579.0" width="4.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="238.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (98 samples, 0.31%)</title><rect x="240.3" y="627.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (98 samples, 0.31%)</title><rect x="240.3" y="611.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.3" y="622.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.14%)</title><rect x="240.3" y="595.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="243.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.17%)</title><rect x="241.9" y="595.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="244.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.trim (109 samples, 0.34%)</title><rect x="244.0" y="627.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (109 samples, 0.34%)</title><rect x="244.0" y="611.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.34%)</title><rect x="244.0" y="595.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (55 samples, 0.17%)</title><rect x="244.0" y="579.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="247.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.17%)</title><rect x="246.0" y="579.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.0" y="590.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.17%)</title><rect x="246.0" y="563.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="249.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (131 samples, 0.41%)</title><rect x="248.0" y="627.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (131 samples, 0.41%)</title><rect x="248.0" y="611.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (131 samples, 0.41%)</title><rect x="248.0" y="595.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (131 samples, 0.41%)</title><rect x="248.0" y="579.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.0" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (131 samples, 0.41%)</title><rect x="248.0" y="563.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="251.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (131 samples, 0.41%)</title><rect x="248.0" y="547.0" width="4.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="251.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (151 samples, 0.48%)</title><rect x="252.9" y="627.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (55 samples, 0.17%)</title><rect x="252.9" y="611.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="255.9" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (55 samples, 0.17%)</title><rect x="252.9" y="595.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="255.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (52 samples, 0.16%)</title><rect x="255.0" y="611.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="258.0" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (52 samples, 0.16%)</title><rect x="255.0" y="595.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="258.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$418/1114504486.apply (44 samples, 0.14%)</title><rect x="256.9" y="611.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (44 samples, 0.14%)</title><rect x="256.9" y="595.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.9" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (44 samples, 0.14%)</title><rect x="256.9" y="579.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="259.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (538 samples, 1.70%)</title><rect x="258.5" y="787.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (538 samples, 1.70%)</title><rect x="258.5" y="771.0" width="20.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (538 samples, 1.70%)</title><rect x="258.5" y="755.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (538 samples, 1.70%)</title><rect x="258.5" y="739.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (538 samples, 1.70%)</title><rect x="258.5" y="723.0" width="20.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (80 samples, 0.25%)</title><rect x="258.5" y="707.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.09%)</title><rect x="258.5" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="261.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.09%)</title><rect x="258.5" y="675.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$309/837470131.get$Lambda (17 samples, 0.05%)</title><rect x="258.5" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$309 (17 samples, 0.05%)</title><rect x="258.5" y="643.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="261.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$314/737652253.get$Lambda (12 samples, 0.04%)</title><rect x="259.2" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$314 (12 samples, 0.04%)</title><rect x="259.2" y="643.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="262.2" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (25 samples, 0.08%)</title><rect x="259.6" y="691.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="262.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (26 samples, 0.08%)</title><rect x="260.6" y="691.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (26 samples, 0.08%)</title><rect x="260.6" y="675.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (14 samples, 0.04%)</title><rect x="260.6" y="659.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="263.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.04%)</title><rect x="261.1" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.04%)</title><rect x="261.1" y="643.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="264.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (457 samples, 1.44%)</title><rect x="261.5" y="707.0" width="17.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (457 samples, 1.44%)</title><rect x="261.5" y="691.0" width="17.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (457 samples, 1.44%)</title><rect x="261.5" y="675.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (457 samples, 1.44%)</title><rect x="261.5" y="659.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (457 samples, 1.44%)</title><rect x="261.5" y="643.0" width="17.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (457 samples, 1.44%)</title><rect x="261.5" y="627.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (36 samples, 0.11%)</title><rect x="261.5" y="611.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (36 samples, 0.11%)</title><rect x="261.5" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.5" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (36 samples, 0.11%)</title><rect x="261.5" y="579.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="264.5" y="590.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.05%)</title><rect x="262.9" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.9" y="622.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.05%)</title><rect x="262.9" y="595.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/264340655.run (262 samples, 0.83%)</title><rect x="263.5" y="611.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (262 samples, 0.83%)</title><rect x="263.5" y="595.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (262 samples, 0.83%)</title><rect x="263.5" y="579.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.5" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (105 samples, 0.33%)</title><rect x="263.5" y="563.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.5" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (71 samples, 0.22%)</title><rect x="263.5" y="547.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.5" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (29 samples, 0.09%)</title><rect x="263.5" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.5" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (29 samples, 0.09%)</title><rect x="263.5" y="515.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="266.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (42 samples, 0.13%)</title><rect x="264.5" y="531.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.5" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (42 samples, 0.13%)</title><rect x="264.5" y="515.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="267.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (34 samples, 0.11%)</title><rect x="266.1" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.11%)</title><rect x="266.1" y="531.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (34 samples, 0.11%)</title><rect x="266.1" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/668210649.get (21 samples, 0.07%)</title><rect x="266.1" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (21 samples, 0.07%)</title><rect x="266.1" y="483.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="269.1" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (13 samples, 0.04%)</title><rect x="266.9" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (13 samples, 0.04%)</title><rect x="266.9" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.9" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (13 samples, 0.04%)</title><rect x="266.9" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.9" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (13 samples, 0.04%)</title><rect x="266.9" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="269.9" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (13 samples, 0.04%)</title><rect x="267.4" y="563.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.4" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (13 samples, 0.04%)</title><rect x="267.4" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.4" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (13 samples, 0.04%)</title><rect x="267.4" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.4" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (13 samples, 0.04%)</title><rect x="267.4" y="515.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="270.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (144 samples, 0.45%)</title><rect x="267.9" y="563.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.9" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.now (14 samples, 0.04%)</title><rect x="267.9" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.9" y="558.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (14 samples, 0.04%)</title><rect x="267.9" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.9" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (14 samples, 0.04%)</title><rect x="267.9" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.9" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (14 samples, 0.04%)</title><rect x="267.9" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.9" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (14 samples, 0.04%)</title><rect x="267.9" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="270.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (130 samples, 0.41%)</title><rect x="268.4" y="547.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (38 samples, 0.12%)</title><rect x="268.4" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.4" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="268.4" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (10 samples, 0.03%)</title><rect x="268.4" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="268.4" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.4" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="268.4" y="467.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.4" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="268.4" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.4" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="268.4" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="271.4" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (12 samples, 0.04%)</title><rect x="268.8" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.8" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (12 samples, 0.04%)</title><rect x="268.8" y="499.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.8" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.04%)</title><rect x="268.8" y="483.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="271.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (16 samples, 0.05%)</title><rect x="269.2" y="515.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="272.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (29 samples, 0.09%)</title><rect x="269.8" y="531.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.8" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.05%)</title><rect x="269.8" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (17 samples, 0.05%)</title><rect x="269.8" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (17 samples, 0.05%)</title><rect x="269.8" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.05%)</title><rect x="269.8" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="272.8" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (12 samples, 0.04%)</title><rect x="270.4" y="515.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.4" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (12 samples, 0.04%)</title><rect x="270.4" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.4" y="510.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (12 samples, 0.04%)</title><rect x="270.4" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="273.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (63 samples, 0.20%)</title><rect x="270.9" y="531.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (14 samples, 0.04%)</title><rect x="270.9" y="515.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="273.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (49 samples, 0.15%)</title><rect x="271.4" y="515.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (19 samples, 0.06%)</title><rect x="271.4" y="499.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (19 samples, 0.06%)</title><rect x="271.4" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (19 samples, 0.06%)</title><rect x="271.4" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (19 samples, 0.06%)</title><rect x="271.4" y="451.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="274.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.09%)</title><rect x="272.1" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="275.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.09%)</title><rect x="272.1" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (22 samples, 0.07%)</title><rect x="272.1" y="467.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="275.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (8 samples, 0.03%)</title><rect x="272.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (8 samples, 0.03%)</title><rect x="272.9" y="451.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="275.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (76 samples, 0.24%)</title><rect x="273.2" y="611.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (76 samples, 0.24%)</title><rect x="273.2" y="595.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (76 samples, 0.24%)</title><rect x="273.2" y="579.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 0.16%)</title><rect x="273.2" y="563.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.16%)</title><rect x="273.2" y="547.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (51 samples, 0.16%)</title><rect x="273.2" y="531.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (51 samples, 0.16%)</title><rect x="273.2" y="515.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/1999221485.accept (51 samples, 0.16%)</title><rect x="273.2" y="499.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="276.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (51 samples, 0.16%)</title><rect x="273.2" y="483.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (51 samples, 0.16%)</title><rect x="273.2" y="467.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.16%)</title><rect x="273.2" y="451.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (51 samples, 0.16%)</title><rect x="273.2" y="435.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.apply (51 samples, 0.16%)</title><rect x="273.2" y="419.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (51 samples, 0.16%)</title><rect x="273.2" y="403.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (51 samples, 0.16%)</title><rect x="273.2" y="387.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="276.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (25 samples, 0.08%)</title><rect x="275.1" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.1" y="574.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.08%)</title><rect x="275.1" y="547.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="278.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (67 samples, 0.21%)</title><rect x="276.1" y="611.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (67 samples, 0.21%)</title><rect x="276.1" y="595.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (67 samples, 0.21%)</title><rect x="276.1" y="579.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (67 samples, 0.21%)</title><rect x="276.1" y="563.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (67 samples, 0.21%)</title><rect x="276.1" y="547.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.1" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (33 samples, 0.10%)</title><rect x="276.1" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.1" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="276.1" y="515.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="279.1" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (19 samples, 0.06%)</title><rect x="276.6" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.6" y="526.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (19 samples, 0.06%)</title><rect x="276.6" y="499.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="279.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.11%)</title><rect x="277.3" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.11%)</title><rect x="277.3" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.11%)</title><rect x="277.3" y="499.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$502/1744977774.run (10,327 samples, 32.62%)</title><rect x="278.6" y="819.0" width="384.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.6" y="830.0">ru/mail/polis/service/stasyanoi/server/CustomServer$..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1 (10,327 samples, 32.62%)</title><rect x="278.6" y="803.0" width="384.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.6" y="814.0">ru/mail/polis/service/stasyanoi/server/CustomServer...</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (232 samples, 0.73%)</title><rect x="278.6" y="787.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (232 samples, 0.73%)</title><rect x="278.6" y="771.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$503/570452016.get$Lambda (232 samples, 0.73%)</title><rect x="278.6" y="755.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.6" y="766.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$503 (232 samples, 0.73%)</title><rect x="278.6" y="739.0" width="8.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="281.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (10,095 samples, 31.88%)</title><rect x="287.2" y="787.0" width="376.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.2" y="798.0">ru/mail/polis/service/stasyanoi/server/CustomServer..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (727 samples, 2.30%)</title><rect x="287.2" y="771.0" width="27.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.2" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (528 samples, 1.67%)</title><rect x="287.2" y="755.0" width="19.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (399 samples, 1.26%)</title><rect x="287.2" y="739.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (399 samples, 1.26%)</title><rect x="287.2" y="723.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.2" y="734.0"></text>
</g>
<g>
<title>byte[] (387 samples, 1.22%)</title><rect x="287.2" y="707.0" width="14.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="290.2" y="718.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="301.7" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (129 samples, 0.41%)</title><rect x="302.1" y="739.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.1" y="750.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (129 samples, 0.41%)</title><rect x="302.1" y="723.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="305.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (199 samples, 0.63%)</title><rect x="306.9" y="755.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (199 samples, 0.63%)</title><rect x="306.9" y="739.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="309.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (199 samples, 0.63%)</title><rect x="306.9" y="723.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.9" y="734.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.24%)</title><rect x="306.9" y="707.0" width="2.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="309.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 0.39%)</title><rect x="309.8" y="707.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.8" y="718.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.39%)</title><rect x="309.8" y="691.0" width="4.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="312.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$503/570452016.get (9,368 samples, 29.59%)</title><rect x="314.3" y="771.0" width="349.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.3" y="782.0">ru/mail/polis/service/stasyanoi/server/CustomSe..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (9,368 samples, 29.59%)</title><rect x="314.3" y="755.0" width="349.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.3" y="766.0">ru/mail/polis/service/stasyanoi/server/CustomSe..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas (9,368 samples, 29.59%)</title><rect x="314.3" y="739.0" width="349.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="317.3" y="750.0">ru/mail/polis/service/stasyanoi/server/CustomSe..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (161 samples, 0.51%)</title><rect x="314.3" y="723.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (161 samples, 0.51%)</title><rect x="314.3" y="707.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (161 samples, 0.51%)</title><rect x="314.3" y="691.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (161 samples, 0.51%)</title><rect x="314.3" y="675.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.3" y="686.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.26%)</title><rect x="314.3" y="659.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="317.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.25%)</title><rect x="317.4" y="659.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.4" y="670.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.25%)</title><rect x="317.4" y="643.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="320.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (6,360 samples, 20.09%)</title><rect x="320.5" y="723.0" width="237.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.5" y="734.0">ru/mail/polis/service/stasyanoi..</text>
</g>
<g>
<title>java/lang/String.getBytes (72 samples, 0.23%)</title><rect x="320.5" y="707.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (72 samples, 0.23%)</title><rect x="320.5" y="691.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (72 samples, 0.23%)</title><rect x="320.5" y="675.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.5" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (72 samples, 0.23%)</title><rect x="320.5" y="659.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.5" y="670.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.23%)</title><rect x="320.5" y="643.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="323.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (4,413 samples, 13.94%)</title><rect x="323.2" y="707.0" width="164.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.2" y="718.0">ru/mail/polis/dao/sta..</text>
</g>
<g>
<title>java/lang/String.valueOf (181 samples, 0.57%)</title><rect x="323.2" y="691.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.toString (181 samples, 0.57%)</title><rect x="323.2" y="675.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.2" y="686.0"></text>
</g>
<g>
<title>byte[] (99 samples, 0.31%)</title><rect x="323.2" y="659.0" width="3.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="326.2" y="670.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.26%)</title><rect x="326.9" y="659.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="329.9" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4,156 samples, 13.13%)</title><rect x="329.9" y="691.0" width="154.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.9" y="702.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (4,156 samples, 13.13%)</title><rect x="329.9" y="675.0" width="154.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.9" y="686.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>byte[] (146 samples, 0.46%)</title><rect x="329.9" y="659.0" width="5.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="332.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (4,010 samples, 12.67%)</title><rect x="335.4" y="659.0" width="149.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.4" y="670.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (4,010 samples, 12.67%)</title><rect x="335.4" y="643.0" width="149.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.4" y="654.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4,010 samples, 12.67%)</title><rect x="335.4" y="627.0" width="149.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.4" y="638.0">org/rocksdb/Abstrac..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4,010 samples, 12.67%)</title><rect x="335.4" y="611.0" width="149.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.4" y="622.0">org/rocksdb/Slice.d..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4,010 samples, 12.67%)</title><rect x="335.4" y="595.0" width="149.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.4" y="606.0">org/rocksdb/Slice.d..</text>
</g>
<g>
<title>byte[] (4,010 samples, 12.67%)</title><rect x="335.4" y="579.0" width="149.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="338.4" y="590.0">byte[]</text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (76 samples, 0.24%)</title><rect x="484.8" y="691.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.8" y="702.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.24%)</title><rect x="484.8" y="675.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="487.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (153 samples, 0.48%)</title><rect x="487.6" y="707.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (153 samples, 0.48%)</title><rect x="487.6" y="691.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.6" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (153 samples, 0.48%)</title><rect x="487.6" y="675.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.6" y="686.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (153 samples, 0.48%)</title><rect x="487.6" y="659.0" width="5.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="490.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithTimestamp (1,722 samples, 5.44%)</title><rect x="493.3" y="707.0" width="64.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.3" y="718.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Response.ok (375 samples, 1.18%)</title><rect x="493.3" y="691.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.3" y="702.0"></text>
</g>
<g>
<title>one.nio.http.Response (83 samples, 0.26%)</title><rect x="493.3" y="675.0" width="3.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="496.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (292 samples, 0.92%)</title><rect x="496.4" y="675.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.4" y="686.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.37%)</title><rect x="496.4" y="659.0" width="4.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="499.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (104 samples, 0.33%)</title><rect x="500.8" y="659.0" width="3.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="503.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.22%)</title><rect x="504.7" y="659.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="507.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (169 samples, 0.53%)</title><rect x="507.3" y="691.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="510.3" y="702.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.53%)</title><rect x="507.3" y="675.0" width="6.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="510.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeaderToResponse (565 samples, 1.78%)</title><rect x="513.6" y="691.0" width="21.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="516.6" y="702.0">r..</text>
</g>
<g>
<title>java.lang.StringBuilder (73 samples, 0.23%)</title><rect x="513.6" y="675.0" width="2.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="516.6" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (92 samples, 0.29%)</title><rect x="516.3" y="675.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (92 samples, 0.29%)</title><rect x="516.3" y="659.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.3" y="670.0"></text>
</g>
<g>
<title>byte[] (92 samples, 0.29%)</title><rect x="516.3" y="643.0" width="3.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="519.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (400 samples, 1.26%)</title><rect x="519.8" y="675.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1213216872.invoke (400 samples, 1.26%)</title><rect x="519.8" y="659.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (217 samples, 0.69%)</title><rect x="519.8" y="643.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (81 samples, 0.26%)</title><rect x="519.8" y="627.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.8" y="638.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.26%)</title><rect x="519.8" y="611.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="522.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (136 samples, 0.43%)</title><rect x="522.8" y="627.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (136 samples, 0.43%)</title><rect x="522.8" y="611.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.8" y="622.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.43%)</title><rect x="522.8" y="595.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="525.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/453211571.invoke (183 samples, 0.58%)</title><rect x="527.8" y="643.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (183 samples, 0.58%)</title><rect x="527.8" y="627.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (183 samples, 0.58%)</title><rect x="527.8" y="611.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (183 samples, 0.58%)</title><rect x="527.8" y="595.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (183 samples, 0.58%)</title><rect x="527.8" y="579.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.8" y="590.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.27%)</title><rect x="527.8" y="563.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="530.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (97 samples, 0.31%)</title><rect x="531.1" y="563.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.1" y="574.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.31%)</title><rect x="531.1" y="547.0" width="3.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="534.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.&lt;init&gt; (398 samples, 1.26%)</title><rect x="534.7" y="691.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.7" y="702.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.60%)</title><rect x="534.7" y="675.0" width="7.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="537.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (209 samples, 0.66%)</title><rect x="541.7" y="675.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.toString (209 samples, 0.66%)</title><rect x="541.7" y="659.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.7" y="670.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.39%)</title><rect x="541.7" y="643.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="544.7" y="654.0"></text>
</g>
<g>
<title>java.lang.String (84 samples, 0.27%)</title><rect x="546.4" y="643.0" width="3.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="549.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.getPureBody (117 samples, 0.37%)</title><rect x="549.5" y="691.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.37%)</title><rect x="549.5" y="675.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.5" y="686.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.37%)</title><rect x="549.5" y="659.0" width="4.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.getTimestamp (98 samples, 0.31%)</title><rect x="553.9" y="691.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (98 samples, 0.31%)</title><rect x="553.9" y="675.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.9" y="686.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.31%)</title><rect x="553.9" y="659.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="556.9" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicateGet (1,566 samples, 4.95%)</title><rect x="557.5" y="723.0" width="58.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.5" y="734.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (27 samples, 0.09%)</title><rect x="557.5" y="707.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.09%)</title><rect x="557.5" y="691.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="560.5" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.09%)</title><rect x="557.5" y="675.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="560.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetResponses (136 samples, 0.43%)</title><rect x="558.5" y="707.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.03%)</title><rect x="558.7" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.7" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.03%)</title><rect x="558.7" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="561.7" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.03%)</title><rect x="558.7" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (10 samples, 0.03%)</title><rect x="558.7" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.03%)</title><rect x="558.7" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="558.7" y="611.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="561.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.iterator (8 samples, 0.03%)</title><rect x="559.0" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.0" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList$COWIterator (8 samples, 0.03%)</title><rect x="559.0" y="675.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="562.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (34 samples, 0.11%)</title><rect x="559.3" y="691.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.11%)</title><rect x="559.3" y="675.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (34 samples, 0.11%)</title><rect x="559.3" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.3" y="670.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="559.3" y="643.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="562.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.06%)</title><rect x="559.9" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.9" y="654.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.06%)</title><rect x="559.9" y="627.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="562.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetInternal (80 samples, 0.25%)</title><rect x="560.6" y="691.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (80 samples, 0.25%)</title><rect x="560.6" y="675.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.6" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (80 samples, 0.25%)</title><rect x="560.6" y="659.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.6" y="670.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (80 samples, 0.25%)</title><rect x="560.6" y="643.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.6" y="654.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (33 samples, 0.10%)</title><rect x="560.6" y="627.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.6" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$509/466414549.compare (33 samples, 0.10%)</title><rect x="560.6" y="611.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.6" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (33 samples, 0.10%)</title><rect x="560.6" y="595.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger$$Lambda$507/664401844.applyAsLong (33 samples, 0.10%)</title><rect x="560.6" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.lambda$mergeGetInternal$0 (33 samples, 0.10%)</title><rect x="560.6" y="563.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (33 samples, 0.10%)</title><rect x="560.6" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.10%)</title><rect x="560.6" y="531.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.10%)</title><rect x="560.6" y="515.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.6" y="526.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="560.6" y="499.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="563.6" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.07%)</title><rect x="561.0" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.0" y="510.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="561.0" y="483.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="564.0" y="494.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (47 samples, 0.15%)</title><rect x="561.8" y="627.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.8" y="638.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$509/466414549.compare (47 samples, 0.15%)</title><rect x="561.8" y="611.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.8" y="622.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (47 samples, 0.15%)</title><rect x="561.8" y="595.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger$$Lambda$507/664401844.applyAsLong (47 samples, 0.15%)</title><rect x="561.8" y="579.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.lambda$mergeGetInternal$0 (47 samples, 0.15%)</title><rect x="561.8" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (47 samples, 0.15%)</title><rect x="561.8" y="547.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (47 samples, 0.15%)</title><rect x="561.8" y="531.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (47 samples, 0.15%)</title><rect x="561.8" y="515.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.06%)</title><rect x="561.8" y="499.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="564.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.09%)</title><rect x="562.5" y="499.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.5" y="510.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.09%)</title><rect x="562.5" y="483.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="565.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (1,403 samples, 4.43%)</title><rect x="563.6" y="707.0" width="52.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.6" y="718.0">ru/ma..</text>
</g>
<g>
<title>java.util.TreeMap (8 samples, 0.03%)</title><rect x="563.6" y="691.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="566.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (23 samples, 0.07%)</title><rect x="563.9" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (23 samples, 0.07%)</title><rect x="563.9" y="675.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (21 samples, 0.07%)</title><rect x="564.0" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (21 samples, 0.07%)</title><rect x="564.0" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.0" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (10 samples, 0.03%)</title><rect x="564.0" y="627.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="567.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (11 samples, 0.03%)</title><rect x="564.3" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.03%)</title><rect x="564.3" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="567.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (1,372 samples, 4.33%)</title><rect x="564.7" y="691.0" width="51.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.7" y="702.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="565.2" y="675.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="565.2" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$188/1091663911.get$Lambda (10 samples, 0.03%)</title><rect x="565.2" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.2" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$188 (10 samples, 0.03%)</title><rect x="565.2" y="627.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="568.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (17 samples, 0.05%)</title><rect x="565.5" y="675.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.5" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (12 samples, 0.04%)</title><rect x="565.7" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.03%)</title><rect x="566.2" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.03%)</title><rect x="566.2" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="569.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.03%)</title><rect x="566.2" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.03%)</title><rect x="566.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (8 samples, 0.03%)</title><rect x="566.2" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="566.2" y="595.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="569.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (10 samples, 0.03%)</title><rect x="566.5" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="569.5" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$SubList (10 samples, 0.03%)</title><rect x="566.5" y="659.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="569.5" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.toArray (9 samples, 0.03%)</title><rect x="566.8" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (24 samples, 0.08%)</title><rect x="567.4" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (24 samples, 0.08%)</title><rect x="567.4" y="659.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$BiRelay (12 samples, 0.04%)</title><rect x="567.4" y="643.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="570.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (7 samples, 0.02%)</title><rect x="567.8" y="643.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="570.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handleAsync (24 samples, 0.08%)</title><rect x="568.2" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (24 samples, 0.08%)</title><rect x="568.2" y="659.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.2" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (17 samples, 0.05%)</title><rect x="568.2" y="643.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="571.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="568.9" y="643.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="571.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.02%)</title><rect x="568.9" y="627.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.02%)</title><rect x="568.9" y="611.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="571.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.join (7 samples, 0.02%)</title><rect x="569.1" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (7 samples, 0.02%)</title><rect x="569.1" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (7 samples, 0.02%)</title><rect x="569.1" y="643.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="572.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (26 samples, 0.08%)</title><rect x="569.4" y="675.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (26 samples, 0.08%)</title><rect x="569.4" y="659.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniAccept (12 samples, 0.04%)</title><rect x="569.4" y="643.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="572.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="569.8" y="643.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="569.8" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="569.8" y="611.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="572.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (39 samples, 0.12%)</title><rect x="570.4" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (39 samples, 0.12%)</title><rect x="570.4" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.4" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (23 samples, 0.07%)</title><rect x="570.4" y="643.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="573.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="571.2" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="571.2" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="571.2" y="611.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="574.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (7 samples, 0.02%)</title><rect x="571.8" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (757 samples, 2.39%)</title><rect x="572.1" y="675.0" width="28.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.1" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (757 samples, 2.39%)</title><rect x="572.1" y="659.0" width="28.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.1" y="670.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (757 samples, 2.39%)</title><rect x="572.1" y="643.0" width="28.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.1" y="654.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (757 samples, 2.39%)</title><rect x="572.1" y="627.0" width="28.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.1" y="638.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="572.1" y="611.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="572.1" y="595.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/539612352.get$Lambda (7 samples, 0.02%)</title><rect x="572.1" y="579.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$180 (7 samples, 0.02%)</title><rect x="572.1" y="563.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="575.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (31 samples, 0.10%)</title><rect x="572.3" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (31 samples, 0.10%)</title><rect x="572.3" y="595.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.05%)</title><rect x="572.3" y="579.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="575.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="573.0" y="579.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="573.0" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="573.0" y="547.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="576.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (29 samples, 0.09%)</title><rect x="573.5" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (29 samples, 0.09%)</title><rect x="573.5" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.06%)</title><rect x="573.5" y="579.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="576.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="574.2" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="574.2" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="574.2" y="547.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="577.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (18 samples, 0.06%)</title><rect x="574.6" y="611.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="577.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (35 samples, 0.11%)</title><rect x="575.3" y="611.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="578.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (338 samples, 1.07%)</title><rect x="576.6" y="611.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.6" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (49 samples, 0.15%)</title><rect x="576.6" y="595.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.6" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (38 samples, 0.12%)</title><rect x="576.6" y="579.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.6" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (13 samples, 0.04%)</title><rect x="576.6" y="563.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.6" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (13 samples, 0.04%)</title><rect x="576.6" y="547.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="579.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (25 samples, 0.08%)</title><rect x="577.0" y="563.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (25 samples, 0.08%)</title><rect x="577.0" y="547.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="580.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (11 samples, 0.03%)</title><rect x="578.0" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.03%)</title><rect x="578.0" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.03%)</title><rect x="578.0" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/668210649.get (11 samples, 0.03%)</title><rect x="578.0" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (11 samples, 0.03%)</title><rect x="578.0" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="581.0" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (66 samples, 0.21%)</title><rect x="578.4" y="595.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="581.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (66 samples, 0.21%)</title><rect x="578.4" y="579.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.4" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="578.4" y="563.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="581.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (18 samples, 0.06%)</title><rect x="578.7" y="563.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="581.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="579.5" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="579.5" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.5" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (18 samples, 0.06%)</title><rect x="579.5" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.5" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (18 samples, 0.06%)</title><rect x="579.5" y="515.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="582.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (18 samples, 0.06%)</title><rect x="580.2" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (18 samples, 0.06%)</title><rect x="580.2" y="547.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="583.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (14 samples, 0.04%)</title><rect x="580.8" y="595.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="583.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (161 samples, 0.51%)</title><rect x="581.4" y="595.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.4" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (161 samples, 0.51%)</title><rect x="581.4" y="579.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.4" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (149 samples, 0.47%)</title><rect x="581.4" y="563.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.4" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (149 samples, 0.47%)</title><rect x="581.4" y="547.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.4" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (149 samples, 0.47%)</title><rect x="581.4" y="531.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.4" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (37 samples, 0.12%)</title><rect x="581.4" y="515.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="584.4" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (40 samples, 0.13%)</title><rect x="582.7" y="515.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.7" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (40 samples, 0.13%)</title><rect x="582.7" y="499.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.7" y="510.0"></text>
</g>
<g>
<title>byte[] (40 samples, 0.13%)</title><rect x="582.7" y="483.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="585.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (72 samples, 0.23%)</title><rect x="584.2" y="515.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 0.23%)</title><rect x="584.2" y="499.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.10%)</title><rect x="584.2" y="483.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="587.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.12%)</title><rect x="585.5" y="483.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.5" y="494.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.12%)</title><rect x="585.5" y="467.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="588.5" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (12 samples, 0.04%)</title><rect x="586.9" y="563.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="589.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (13 samples, 0.04%)</title><rect x="587.4" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.04%)</title><rect x="587.4" y="579.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="590.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (35 samples, 0.11%)</title><rect x="587.9" y="595.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.9" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.03%)</title><rect x="587.9" y="579.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="590.9" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 0.04%)</title><rect x="588.2" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.2" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="588.2" y="563.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="591.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.04%)</title><rect x="588.6" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.6" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (14 samples, 0.04%)</title><rect x="588.6" y="563.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="591.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (188 samples, 0.59%)</title><rect x="589.2" y="611.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="592.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.03%)</title><rect x="589.2" y="595.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="592.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (28 samples, 0.09%)</title><rect x="589.5" y="595.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="592.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (8 samples, 0.03%)</title><rect x="590.5" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.5" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (8 samples, 0.03%)</title><rect x="590.5" y="579.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="593.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (144 samples, 0.45%)</title><rect x="590.8" y="595.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (144 samples, 0.45%)</title><rect x="590.8" y="579.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.8" y="590.0"></text>
</g>
<g>
<title>java.lang.Class[] (14 samples, 0.04%)</title><rect x="590.8" y="563.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="593.8" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (16 samples, 0.05%)</title><rect x="591.3" y="563.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="594.3" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (19 samples, 0.06%)</title><rect x="591.9" y="563.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="594.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (73 samples, 0.23%)</title><rect x="592.6" y="563.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (73 samples, 0.23%)</title><rect x="592.6" y="547.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.6" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (73 samples, 0.23%)</title><rect x="592.6" y="531.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.6" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (73 samples, 0.23%)</title><rect x="592.6" y="515.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.6" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (73 samples, 0.23%)</title><rect x="592.6" y="499.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="595.6" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (18 samples, 0.06%)</title><rect x="595.3" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (18 samples, 0.06%)</title><rect x="595.3" y="547.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="598.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (15 samples, 0.05%)</title><rect x="595.3" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (15 samples, 0.05%)</title><rect x="595.3" y="515.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="598.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (111 samples, 0.35%)</title><rect x="596.2" y="611.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (24 samples, 0.08%)</title><rect x="596.2" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (11 samples, 0.03%)</title><rect x="596.2" y="579.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="599.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.04%)</title><rect x="596.6" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (13 samples, 0.04%)</title><rect x="596.6" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 0.04%)</title><rect x="596.6" y="547.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (13 samples, 0.04%)</title><rect x="596.6" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (13 samples, 0.04%)</title><rect x="596.6" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="599.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="597.1" y="595.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="600.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (77 samples, 0.24%)</title><rect x="597.4" y="595.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="597.4" y="579.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="597.4" y="563.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.get$Lambda (7 samples, 0.02%)</title><rect x="597.6" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$158 (7 samples, 0.02%)</title><rect x="597.6" y="531.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="600.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (65 samples, 0.21%)</title><rect x="597.9" y="579.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (65 samples, 0.21%)</title><rect x="597.9" y="563.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.9" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (40 samples, 0.13%)</title><rect x="597.9" y="547.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="600.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="599.4" y="547.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.08%)</title><rect x="599.4" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.08%)</title><rect x="599.4" y="515.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="602.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (418 samples, 1.32%)</title><rect x="600.3" y="675.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.17%)</title><rect x="600.3" y="659.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740547233.invoke (18 samples, 0.06%)</title><rect x="600.3" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/626025582.invoke (18 samples, 0.06%)</title><rect x="600.3" y="627.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.06%)</title><rect x="600.3" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (18 samples, 0.06%)</title><rect x="600.3" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (18 samples, 0.06%)</title><rect x="600.3" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.3" y="590.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.06%)</title><rect x="600.3" y="563.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="603.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/917819120.invoke (35 samples, 0.11%)</title><rect x="601.0" y="643.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.11%)</title><rect x="601.0" y="627.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (8 samples, 0.03%)</title><rect x="601.0" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="601.0" y="595.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="604.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.09%)</title><rect x="601.3" y="611.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.09%)</title><rect x="601.3" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.3" y="606.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.09%)</title><rect x="601.3" y="579.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="604.3" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (142 samples, 0.45%)</title><rect x="602.3" y="659.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="670.0"></text>
</g>
<g>
<title>java.net.URI (41 samples, 0.13%)</title><rect x="602.3" y="643.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="605.3" y="654.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (101 samples, 0.32%)</title><rect x="603.8" y="643.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.8" y="654.0"></text>
</g>
<g>
<title>java.net.URI$Parser (11 samples, 0.03%)</title><rect x="603.8" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="606.8" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (90 samples, 0.28%)</title><rect x="604.2" y="627.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.07%)</title><rect x="604.2" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (21 samples, 0.07%)</title><rect x="604.2" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="604.2" y="579.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="607.2" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="604.6" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="607.6" y="590.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="604.6" y="563.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="607.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (69 samples, 0.22%)</title><rect x="605.0" y="611.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.10%)</title><rect x="605.0" y="595.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="608.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.10%)</title><rect x="605.0" y="579.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.0" y="590.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="605.0" y="563.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="608.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.05%)</title><rect x="605.6" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.6" y="574.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="605.6" y="547.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="608.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (36 samples, 0.11%)</title><rect x="606.2" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.07%)</title><rect x="606.2" y="579.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.07%)</title><rect x="606.2" y="563.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.2" y="574.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="606.2" y="547.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="609.2" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.04%)</title><rect x="606.6" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.6" y="558.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="606.6" y="531.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="609.6" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (13 samples, 0.04%)</title><rect x="607.1" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.1" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (13 samples, 0.04%)</title><rect x="607.1" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.04%)</title><rect x="607.1" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.04%)</title><rect x="607.1" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.03%)</title><rect x="607.2" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.2" y="526.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="607.2" y="499.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="610.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (50 samples, 0.16%)</title><rect x="607.6" y="659.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (17 samples, 0.05%)</title><rect x="607.6" y="643.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="610.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (33 samples, 0.10%)</title><rect x="608.2" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (29 samples, 0.09%)</title><rect x="608.3" y="627.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (29 samples, 0.09%)</title><rect x="608.3" y="611.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="611.3" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.ofSeconds (14 samples, 0.04%)</title><rect x="609.4" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.4" y="670.0"></text>
</g>
<g>
<title>java/time/Duration.create (14 samples, 0.04%)</title><rect x="609.4" y="643.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.4" y="654.0"></text>
</g>
<g>
<title>java.time.Duration (14 samples, 0.04%)</title><rect x="609.4" y="627.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="612.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (94 samples, 0.30%)</title><rect x="610.0" y="659.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.0" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (16 samples, 0.05%)</title><rect x="610.0" y="643.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="613.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (78 samples, 0.25%)</title><rect x="610.5" y="643.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.5" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (72 samples, 0.23%)</title><rect x="610.5" y="627.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="613.5" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (72 samples, 0.23%)</title><rect x="610.5" y="611.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.5" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="610.5" y="595.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="613.5" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (17 samples, 0.05%)</title><rect x="610.9" y="595.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="613.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="611.8" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="611.8" y="579.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (14 samples, 0.04%)</title><rect x="611.8" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.8" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (14 samples, 0.04%)</title><rect x="611.8" y="547.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="614.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (25 samples, 0.08%)</title><rect x="612.3" y="595.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.3" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (25 samples, 0.08%)</title><rect x="612.3" y="579.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="615.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (26 samples, 0.08%)</title><rect x="613.5" y="659.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (26 samples, 0.08%)</title><rect x="613.5" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (26 samples, 0.08%)</title><rect x="613.5" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.5" y="638.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="613.5" y="611.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="616.5" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.05%)</title><rect x="613.8" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.8" y="622.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="613.8" y="595.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="616.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (39 samples, 0.12%)</title><rect x="614.4" y="659.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.12%)</title><rect x="614.4" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.12%)</title><rect x="614.4" y="627.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.4" y="638.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.05%)</title><rect x="614.4" y="611.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="617.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (23 samples, 0.07%)</title><rect x="615.0" y="611.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.0" y="622.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.07%)</title><rect x="615.0" y="595.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="618.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (1,277 samples, 4.03%)</title><rect x="615.9" y="723.0" width="47.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.9" y="734.0">ru/m..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.send (1,089 samples, 3.44%)</title><rect x="615.9" y="707.0" width="40.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.9" y="718.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.send (1,089 samples, 3.44%)</title><rect x="615.9" y="691.0" width="40.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.9" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (1,083 samples, 3.42%)</title><rect x="616.1" y="675.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.1" y="686.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (10 samples, 0.03%)</title><rect x="616.1" y="659.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (10 samples, 0.03%)</title><rect x="616.1" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (8 samples, 0.03%)</title><rect x="616.5" y="659.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="619.5" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (12 samples, 0.04%)</title><rect x="616.8" y="659.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="619.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (105 samples, 0.33%)</title><rect x="617.3" y="659.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.3" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (14 samples, 0.04%)</title><rect x="617.3" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.3" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (9 samples, 0.03%)</title><rect x="617.3" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.05%)</title><rect x="617.8" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.8" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.05%)</title><rect x="617.8" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (60 samples, 0.19%)</title><rect x="618.5" y="643.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="621.5" y="654.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (60 samples, 0.19%)</title><rect x="618.5" y="627.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.5" y="638.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (55 samples, 0.17%)</title><rect x="618.5" y="611.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.5" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (55 samples, 0.17%)</title><rect x="618.5" y="595.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.5" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (55 samples, 0.17%)</title><rect x="618.5" y="579.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.5" y="590.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.03%)</title><rect x="618.5" y="563.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="621.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (19 samples, 0.06%)</title><rect x="618.8" y="563.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.8" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (19 samples, 0.06%)</title><rect x="618.8" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.8" y="558.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.06%)</title><rect x="618.8" y="531.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="621.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (28 samples, 0.09%)</title><rect x="619.5" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.09%)</title><rect x="619.5" y="547.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="619.5" y="531.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="622.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.06%)</title><rect x="619.8" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.8" y="542.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.06%)</title><rect x="619.8" y="515.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="622.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.03%)</title><rect x="620.9" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (59 samples, 0.19%)</title><rect x="621.2" y="659.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.2" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (14 samples, 0.04%)</title><rect x="621.2" y="643.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="624.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (44 samples, 0.14%)</title><rect x="621.7" y="643.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (44 samples, 0.14%)</title><rect x="621.7" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (23 samples, 0.07%)</title><rect x="622.1" y="611.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (23 samples, 0.07%)</title><rect x="622.1" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.1" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (23 samples, 0.07%)</title><rect x="622.1" y="579.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.1" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (23 samples, 0.07%)</title><rect x="622.1" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.1" y="574.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (23 samples, 0.07%)</title><rect x="622.1" y="547.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="625.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (888 samples, 2.80%)</title><rect x="623.4" y="659.0" width="33.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.4" y="670.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (863 samples, 2.73%)</title><rect x="623.4" y="643.0" width="32.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.4" y="654.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (858 samples, 2.71%)</title><rect x="623.6" y="627.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.6" y="638.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (858 samples, 2.71%)</title><rect x="623.6" y="611.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.6" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (858 samples, 2.71%)</title><rect x="623.6" y="595.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.6" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (858 samples, 2.71%)</title><rect x="623.6" y="579.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.6" y="590.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (854 samples, 2.70%)</title><rect x="623.7" y="563.0" width="31.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (854 samples, 2.70%)</title><rect x="623.7" y="547.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.7" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (854 samples, 2.70%)</title><rect x="623.7" y="531.0" width="31.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.7" y="542.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 0.03%)</title><rect x="623.8" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 0.03%)</title><rect x="623.8" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="626.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (22 samples, 0.07%)</title><rect x="624.2" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (22 samples, 0.07%)</title><rect x="624.2" y="499.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (11 samples, 0.03%)</title><rect x="624.2" y="483.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="627.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="624.6" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="624.6" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.03%)</title><rect x="624.6" y="451.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="627.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (807 samples, 2.55%)</title><rect x="625.0" y="515.0" width="30.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (807 samples, 2.55%)</title><rect x="625.0" y="499.0" width="30.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (807 samples, 2.55%)</title><rect x="625.0" y="483.0" width="30.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.0" y="494.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (487 samples, 1.54%)</title><rect x="625.2" y="467.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (487 samples, 1.54%)</title><rect x="625.2" y="451.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (478 samples, 1.51%)</title><rect x="625.2" y="435.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (478 samples, 1.51%)</title><rect x="625.2" y="419.0" width="17.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (478 samples, 1.51%)</title><rect x="625.2" y="403.0" width="17.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (478 samples, 1.51%)</title><rect x="625.2" y="387.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (478 samples, 1.51%)</title><rect x="625.2" y="371.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="628.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (478 samples, 1.51%)</title><rect x="625.2" y="355.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (11 samples, 0.03%)</title><rect x="625.3" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (11 samples, 0.03%)</title><rect x="625.3" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (8 samples, 0.03%)</title><rect x="625.3" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="628.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (8 samples, 0.03%)</title><rect x="625.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (8 samples, 0.03%)</title><rect x="625.7" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.02%)</title><rect x="625.7" y="307.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="628.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (456 samples, 1.44%)</title><rect x="626.0" y="339.0" width="17.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="626.0" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="626.0" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="629.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.get$Lambda (7 samples, 0.02%)</title><rect x="626.0" y="291.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="629.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$339 (7 samples, 0.02%)</title><rect x="626.0" y="275.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="629.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (385 samples, 1.22%)</title><rect x="626.3" y="323.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="629.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (385 samples, 1.22%)</title><rect x="626.3" y="307.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (372 samples, 1.17%)</title><rect x="626.4" y="291.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="629.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (372 samples, 1.17%)</title><rect x="626.4" y="275.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="629.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (9 samples, 0.03%)</title><rect x="626.5" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (9 samples, 0.03%)</title><rect x="626.5" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (346 samples, 1.09%)</title><rect x="627.4" y="259.0" width="12.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (38 samples, 0.12%)</title><rect x="627.5" y="243.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (38 samples, 0.12%)</title><rect x="627.5" y="227.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (38 samples, 0.12%)</title><rect x="627.5" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.5" y="222.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.12%)</title><rect x="627.5" y="195.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="630.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="628.9" y="243.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.9" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (16 samples, 0.05%)</title><rect x="628.9" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.9" y="238.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="628.9" y="211.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="631.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (40 samples, 0.13%)</title><rect x="629.5" y="243.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (40 samples, 0.13%)</title><rect x="629.5" y="227.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.11%)</title><rect x="629.7" y="211.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.7" y="222.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.11%)</title><rect x="629.7" y="195.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="632.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (181 samples, 0.57%)</title><rect x="631.5" y="243.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (86 samples, 0.27%)</title><rect x="631.6" y="227.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (39 samples, 0.12%)</title><rect x="631.6" y="211.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.6" y="222.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (39 samples, 0.12%)</title><rect x="631.6" y="195.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.6" y="206.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (39 samples, 0.12%)</title><rect x="631.6" y="179.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.12%)</title><rect x="631.6" y="163.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="634.6" y="174.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.12%)</title><rect x="631.6" y="147.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="634.6" y="158.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (12 samples, 0.04%)</title><rect x="633.1" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.1" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.test (25 samples, 0.08%)</title><rect x="633.9" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.9" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (25 samples, 0.08%)</title><rect x="633.9" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/111156771.test (25 samples, 0.08%)</title><rect x="633.9" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (25 samples, 0.08%)</title><rect x="633.9" y="163.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.9" y="174.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/282821294.test (25 samples, 0.08%)</title><rect x="633.9" y="147.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.9" y="158.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (25 samples, 0.08%)</title><rect x="633.9" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/494317290.test (25 samples, 0.08%)</title><rect x="633.9" y="115.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (25 samples, 0.08%)</title><rect x="633.9" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.9" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.08%)</title><rect x="633.9" y="83.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.08%)</title><rect x="633.9" y="67.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.9" y="78.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="633.9" y="51.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="636.9" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="634.4" y="51.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.4" y="62.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="634.4" y="35.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="637.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (91 samples, 0.29%)</title><rect x="634.8" y="227.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.8" y="238.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (91 samples, 0.29%)</title><rect x="634.8" y="211.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.8" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (91 samples, 0.29%)</title><rect x="634.8" y="195.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.8" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap (7 samples, 0.02%)</title><rect x="635.1" y="179.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="638.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (62 samples, 0.20%)</title><rect x="635.8" y="179.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.8" y="190.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (62 samples, 0.20%)</title><rect x="635.8" y="163.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.8" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (62 samples, 0.20%)</title><rect x="635.8" y="147.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (35 samples, 0.11%)</title><rect x="636.0" y="131.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="639.0" y="142.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (35 samples, 0.11%)</title><rect x="636.0" y="115.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.0" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (18 samples, 0.06%)</title><rect x="636.0" y="99.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.06%)</title><rect x="636.0" y="83.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.0" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.06%)</title><rect x="636.0" y="67.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="639.0" y="78.0"></text>
</g>
<g>
<title>java/util/List.of (17 samples, 0.05%)</title><rect x="636.6" y="99.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.6" y="110.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (17 samples, 0.05%)</title><rect x="636.6" y="83.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="639.6" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.07%)</title><rect x="637.3" y="131.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.3" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.07%)</title><rect x="637.3" y="115.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="640.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (10 samples, 0.03%)</title><rect x="638.2" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (7 samples, 0.02%)</title><rect x="638.6" y="243.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (7 samples, 0.02%)</title><rect x="638.6" y="227.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="638.6" y="211.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (7 samples, 0.02%)</title><rect x="638.6" y="195.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (7 samples, 0.02%)</title><rect x="638.6" y="179.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="638.6" y="163.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (39 samples, 0.12%)</title><rect x="638.8" y="243.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.8" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="638.8" y="227.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="641.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (12 samples, 0.04%)</title><rect x="639.1" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.1" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="639.1" y="211.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="642.1" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.06%)</title><rect x="639.6" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.6" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (19 samples, 0.06%)</title><rect x="639.6" y="211.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="642.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="640.3" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="640.3" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="640.3" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="643.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (7 samples, 0.02%)</title><rect x="640.6" y="323.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="643.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (52 samples, 0.16%)</title><rect x="641.0" y="323.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (7 samples, 0.02%)</title><rect x="641.4" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="644.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (15 samples, 0.05%)</title><rect x="641.7" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.05%)</title><rect x="641.7" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.05%)</title><rect x="641.7" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15 samples, 0.05%)</title><rect x="641.7" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15 samples, 0.05%)</title><rect x="641.7" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15 samples, 0.05%)</title><rect x="641.7" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (15 samples, 0.05%)</title><rect x="641.7" y="211.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (15 samples, 0.05%)</title><rect x="641.7" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (15 samples, 0.05%)</title><rect x="641.7" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (15 samples, 0.05%)</title><rect x="642.2" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.2" y="318.0"></text>
</g>
<g>
<title>java.util.HashMap (7 samples, 0.02%)</title><rect x="642.4" y="291.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="645.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="643.0" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="643.0" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="643.0" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9 samples, 0.03%)</title><rect x="643.3" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9 samples, 0.03%)</title><rect x="643.3" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (307 samples, 0.97%)</title><rect x="643.6" y="467.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (293 samples, 0.93%)</title><rect x="644.2" y="451.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (271 samples, 0.86%)</title><rect x="644.2" y="435.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (271 samples, 0.86%)</title><rect x="644.2" y="419.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (269 samples, 0.85%)</title><rect x="644.2" y="403.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (269 samples, 0.85%)</title><rect x="644.2" y="387.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (269 samples, 0.85%)</title><rect x="644.2" y="371.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (269 samples, 0.85%)</title><rect x="644.2" y="355.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (115 samples, 0.36%)</title><rect x="644.3" y="339.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (115 samples, 0.36%)</title><rect x="644.3" y="323.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (115 samples, 0.36%)</title><rect x="644.3" y="307.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (111 samples, 0.35%)</title><rect x="644.3" y="291.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="647.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (111 samples, 0.35%)</title><rect x="644.3" y="275.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (111 samples, 0.35%)</title><rect x="644.3" y="259.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (111 samples, 0.35%)</title><rect x="644.3" y="243.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (77 samples, 0.24%)</title><rect x="644.3" y="227.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.3" y="238.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (25 samples, 0.08%)</title><rect x="644.3" y="211.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.03%)</title><rect x="644.5" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.03%)</title><rect x="644.5" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.5" y="190.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="644.5" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="647.5" y="174.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (8 samples, 0.03%)</title><rect x="644.9" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.9" y="206.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="644.9" y="179.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="647.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (35 samples, 0.11%)</title><rect x="645.3" y="211.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (29 samples, 0.09%)</title><rect x="645.4" y="195.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (29 samples, 0.09%)</title><rect x="645.4" y="179.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="648.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (19 samples, 0.06%)</title><rect x="645.4" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.4" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title><rect x="645.4" y="147.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.get$Lambda (19 samples, 0.06%)</title><rect x="645.4" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.4" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$76 (19 samples, 0.06%)</title><rect x="645.4" y="115.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="648.4" y="126.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.03%)</title><rect x="646.1" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.run (10 samples, 0.03%)</title><rect x="646.1" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (10 samples, 0.03%)</title><rect x="646.1" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.1" y="142.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (10 samples, 0.03%)</title><rect x="646.1" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.1" y="126.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (10 samples, 0.03%)</title><rect x="646.1" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.1" y="110.0"></text>
</g>
<g>
<title>java.lang.Integer (10 samples, 0.03%)</title><rect x="646.1" y="83.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="649.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (14 samples, 0.04%)</title><rect x="646.6" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="646.8" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.03%)</title><rect x="646.8" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (8 samples, 0.03%)</title><rect x="646.8" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="649.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (34 samples, 0.11%)</title><rect x="647.1" y="227.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.05%)</title><rect x="647.1" y="211.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="650.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (8 samples, 0.03%)</title><rect x="647.7" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.7" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (8 samples, 0.03%)</title><rect x="647.7" y="195.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="650.7" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.03%)</title><rect x="648.0" y="211.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.03%)</title><rect x="648.0" y="195.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="651.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (153 samples, 0.48%)</title><rect x="648.6" y="339.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (8 samples, 0.03%)</title><rect x="648.6" y="323.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="651.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (141 samples, 0.45%)</title><rect x="648.9" y="323.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (10 samples, 0.03%)</title><rect x="649.5" y="307.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="652.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (7 samples, 0.02%)</title><rect x="649.9" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="652.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (54 samples, 0.17%)</title><rect x="650.5" y="307.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (27 samples, 0.09%)</title><rect x="651.5" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (7 samples, 0.02%)</title><rect x="651.6" y="275.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="654.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (13 samples, 0.04%)</title><rect x="652.0" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (7 samples, 0.02%)</title><rect x="652.2" y="259.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="655.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (19 samples, 0.06%)</title><rect x="652.5" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (15 samples, 0.05%)</title><rect x="652.6" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (20 samples, 0.06%)</title><rect x="653.4" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="656.4" y="318.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (16 samples, 0.05%)</title><rect x="653.5" y="291.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (16 samples, 0.05%)</title><rect x="653.5" y="275.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (16 samples, 0.05%)</title><rect x="653.5" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.03%)</title><rect x="653.7" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (17 samples, 0.05%)</title><rect x="654.4" y="435.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (13 samples, 0.04%)</title><rect x="654.4" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (13 samples, 0.04%)</title><rect x="654.4" y="403.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1520674271.linkToTargetMethod (13 samples, 0.04%)</title><rect x="654.4" y="387.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="657.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1612745536.invoke (13 samples, 0.04%)</title><rect x="654.4" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809170349.invoke (13 samples, 0.04%)</title><rect x="654.4" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="654.4" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (8 samples, 0.03%)</title><rect x="654.6" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (8 samples, 0.03%)</title><rect x="654.6" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.6" y="318.0"></text>
</g>
<g>
<title>byte[] (8 samples, 0.03%)</title><rect x="654.6" y="291.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="657.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (21 samples, 0.07%)</title><rect x="655.7" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.05%)</title><rect x="655.8" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.05%)</title><rect x="655.8" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.8" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (9 samples, 0.03%)</title><rect x="655.8" y="595.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="658.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="656.2" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="656.2" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="656.2" y="563.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="659.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (126 samples, 0.40%)</title><rect x="656.5" y="707.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.06%)</title><rect x="656.5" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/917819120.invoke (12 samples, 0.04%)</title><rect x="656.7" y="675.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="656.7" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.03%)</title><rect x="656.7" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.03%)</title><rect x="656.7" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.7" y="638.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="656.7" y="611.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="659.7" y="622.0"></text>
</g>
<g>
<title>java/net/URI.create (45 samples, 0.14%)</title><rect x="657.1" y="691.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.1" y="702.0"></text>
</g>
<g>
<title>java.net.URI (8 samples, 0.03%)</title><rect x="657.1" y="675.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="660.1" y="686.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (37 samples, 0.12%)</title><rect x="657.4" y="675.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.4" y="686.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (34 samples, 0.11%)</title><rect x="657.5" y="659.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.5" y="670.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (30 samples, 0.09%)</title><rect x="657.7" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (17 samples, 0.05%)</title><rect x="657.7" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (17 samples, 0.05%)</title><rect x="657.7" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.7" y="622.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="657.7" y="595.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="660.7" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (7 samples, 0.02%)</title><rect x="658.1" y="595.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.1" y="606.0"></text>
</g>
<g>
<title>byte[] (7 samples, 0.02%)</title><rect x="658.1" y="579.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="661.1" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (13 samples, 0.04%)</title><rect x="658.3" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.3" y="638.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (7 samples, 0.02%)</title><rect x="658.5" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.5" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (7 samples, 0.02%)</title><rect x="658.5" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.02%)</title><rect x="658.5" y="579.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.02%)</title><rect x="658.5" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="661.5" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (15 samples, 0.05%)</title><rect x="658.8" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="661.8" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (9 samples, 0.03%)</title><rect x="658.8" y="675.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="661.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (27 samples, 0.09%)</title><rect x="659.4" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (25 samples, 0.08%)</title><rect x="659.5" y="675.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.5" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.07%)</title><rect x="659.5" y="659.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.5" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.07%)</title><rect x="659.5" y="643.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.5" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (9 samples, 0.03%)</title><rect x="659.6" y="627.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="662.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.02%)</title><rect x="660.0" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.02%)</title><rect x="660.0" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="663.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.get$Lambda (7 samples, 0.02%)</title><rect x="660.0" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.0" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$135 (7 samples, 0.02%)</title><rect x="660.0" y="579.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="663.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.03%)</title><rect x="660.4" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.03%)</title><rect x="660.4" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.03%)</title><rect x="660.4" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (12 samples, 0.04%)</title><rect x="660.7" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.04%)</title><rect x="660.7" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="663.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.04%)</title><rect x="660.7" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (62 samples, 0.20%)</title><rect x="661.2" y="707.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (10 samples, 0.03%)</title><rect x="661.2" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="664.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (10 samples, 0.03%)</title><rect x="661.2" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="661.2" y="659.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="664.2" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (35 samples, 0.11%)</title><rect x="661.6" y="691.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (35 samples, 0.11%)</title><rect x="661.6" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (35 samples, 0.11%)</title><rect x="661.6" y="659.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (35 samples, 0.11%)</title><rect x="661.6" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (29 samples, 0.09%)</title><rect x="661.6" y="627.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (29 samples, 0.09%)</title><rect x="661.6" y="611.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (29 samples, 0.09%)</title><rect x="661.6" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="664.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (29 samples, 0.09%)</title><rect x="661.6" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="664.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.04%)</title><rect x="661.6" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="661.6" y="547.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="664.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (15 samples, 0.05%)</title><rect x="662.1" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (15 samples, 0.05%)</title><rect x="662.1" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.1" y="558.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.05%)</title><rect x="662.1" y="531.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="665.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.03%)</title><rect x="663.1" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,393 samples, 10.72%)</title><rect x="663.5" y="867.0" width="126.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="666.5" y="878.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,393 samples, 10.72%)</title><rect x="663.5" y="851.0" width="126.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.5" y="862.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,393 samples, 10.72%)</title><rect x="663.5" y="835.0" width="126.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.5" y="846.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,393 samples, 10.72%)</title><rect x="663.5" y="819.0" width="126.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.5" y="830.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,393 samples, 10.72%)</title><rect x="663.5" y="803.0" width="126.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.5" y="814.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (3,393 samples, 10.72%)</title><rect x="663.5" y="787.0" width="126.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.5" y="798.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (209 samples, 0.66%)</title><rect x="663.5" y="771.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$188/1091663911.accept (209 samples, 0.66%)</title><rect x="663.5" y="755.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="666.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (209 samples, 0.66%)</title><rect x="663.5" y="739.0" width="7.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.5" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (209 samples, 0.66%)</title><rect x="663.5" y="723.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Object[] (209 samples, 0.66%)</title><rect x="663.5" y="707.0" width="7.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="666.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,184 samples, 10.06%)</title><rect x="671.3" y="771.0" width="118.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.3" y="782.0">java/util/conc..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$184/687509125.apply (3,184 samples, 10.06%)</title><rect x="671.3" y="755.0" width="118.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.3" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (3,184 samples, 10.06%)</title><rect x="671.3" y="739.0" width="118.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.3" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.valueOf (372 samples, 1.17%)</title><rect x="671.3" y="723.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (372 samples, 1.17%)</title><rect x="671.3" y="707.0" width="13.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.3" y="718.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.58%)</title><rect x="671.3" y="691.0" width="6.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="674.3" y="702.0"></text>
</g>
<g>
<title>java.lang.String (189 samples, 0.60%)</title><rect x="678.1" y="691.0" width="7.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="681.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (136 samples, 0.43%)</title><rect x="685.1" y="723.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="688.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (136 samples, 0.43%)</title><rect x="685.1" y="707.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.get$Lambda (136 samples, 0.43%)</title><rect x="685.1" y="691.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="688.1" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.Util$$Lambda$491 (136 samples, 0.43%)</title><rect x="685.1" y="675.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="688.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,768 samples, 5.58%)</title><rect x="690.2" y="723.0" width="65.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.2" y="734.0">java/ut..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,768 samples, 5.58%)</title><rect x="690.2" y="707.0" width="65.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.2" y="718.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (1,768 samples, 5.58%)</title><rect x="690.2" y="691.0" width="65.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.2" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (1,768 samples, 5.58%)</title><rect x="690.2" y="675.0" width="65.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.2" y="686.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,416 samples, 4.47%)</title><rect x="690.2" y="659.0" width="52.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.2" y="670.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1,416 samples, 4.47%)</title><rect x="690.2" y="643.0" width="52.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.2" y="654.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (1,416 samples, 4.47%)</title><rect x="690.2" y="627.0" width="52.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.2" y="638.0">java/..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,416 samples, 4.47%)</title><rect x="690.2" y="611.0" width="52.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.2" y="622.0">java/..</text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (535 samples, 1.69%)</title><rect x="690.2" y="595.0" width="19.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="693.2" y="606.0"></text>
</g>
<g>
<title>java.lang.String (535 samples, 1.69%)</title><rect x="690.2" y="579.0" width="19.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="693.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (881 samples, 2.78%)</title><rect x="710.1" y="595.0" width="32.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.1" y="606.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (881 samples, 2.78%)</title><rect x="710.1" y="579.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.1" y="590.0">jd..</text>
</g>
<g>
<title>byte[] (881 samples, 2.78%)</title><rect x="710.1" y="563.0" width="32.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="713.1" y="574.0">by..</text>
</g>
<g>
<title>one/nio/http/Response.addHeader (352 samples, 1.11%)</title><rect x="743.0" y="659.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (352 samples, 1.11%)</title><rect x="743.0" y="643.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.0" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (352 samples, 1.11%)</title><rect x="743.0" y="627.0" width="13.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="746.0" y="638.0"></text>
</g>
<g>
<title>one.nio.http.Response (217 samples, 0.69%)</title><rect x="756.1" y="723.0" width="8.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="759.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (691 samples, 2.18%)</title><rect x="764.2" y="723.0" width="25.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.2" y="734.0">o..</text>
</g>
<g>
<title>byte[] (320 samples, 1.01%)</title><rect x="764.2" y="707.0" width="11.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="767.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (209 samples, 0.66%)</title><rect x="776.1" y="707.0" width="7.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="779.1" y="718.0"></text>
</g>
<g>
<title>java.lang.String (162 samples, 0.51%)</title><rect x="783.9" y="707.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="786.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (452 samples, 1.43%)</title><rect x="789.9" y="867.0" width="16.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="789.9" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.9" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="789.9" y="835.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2143431083.linkToTargetMethod (8 samples, 0.03%)</title><rect x="790.4" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.4" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="790.4" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/1808560965.get$Lambda (8 samples, 0.03%)</title><rect x="790.4" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.4" y="830.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$356 (8 samples, 0.03%)</title><rect x="790.4" y="803.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="793.4" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (86 samples, 0.27%)</title><rect x="790.7" y="851.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/746362896.accept (74 samples, 0.23%)</title><rect x="790.7" y="835.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (74 samples, 0.23%)</title><rect x="790.7" y="819.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (74 samples, 0.23%)</title><rect x="790.7" y="803.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (74 samples, 0.23%)</title><rect x="790.7" y="787.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (74 samples, 0.23%)</title><rect x="790.7" y="771.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (74 samples, 0.23%)</title><rect x="790.7" y="755.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.23%)</title><rect x="790.7" y="739.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.23%)</title><rect x="790.7" y="723.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (74 samples, 0.23%)</title><rect x="790.7" y="707.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="793.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (74 samples, 0.23%)</title><rect x="790.7" y="691.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (74 samples, 0.23%)</title><rect x="790.7" y="675.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (74 samples, 0.23%)</title><rect x="790.7" y="659.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (20 samples, 0.06%)</title><rect x="790.7" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (20 samples, 0.06%)</title><rect x="790.7" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (20 samples, 0.06%)</title><rect x="790.7" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (11 samples, 0.03%)</title><rect x="790.7" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (11 samples, 0.03%)</title><rect x="790.7" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="793.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (11 samples, 0.03%)</title><rect x="790.7" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (11 samples, 0.03%)</title><rect x="790.7" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.03%)</title><rect x="790.7" y="531.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="793.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.03%)</title><rect x="791.1" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.03%)</title><rect x="791.1" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.03%)</title><rect x="791.1" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.03%)</title><rect x="791.1" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="794.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (9 samples, 0.03%)</title><rect x="791.1" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (9 samples, 0.03%)</title><rect x="791.1" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (9 samples, 0.03%)</title><rect x="791.1" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (9 samples, 0.03%)</title><rect x="791.1" y="483.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="794.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (48 samples, 0.15%)</title><rect x="791.6" y="643.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (20 samples, 0.06%)</title><rect x="791.6" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.6" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (14 samples, 0.04%)</title><rect x="791.6" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.6" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (14 samples, 0.04%)</title><rect x="791.6" y="595.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="794.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (28 samples, 0.09%)</title><rect x="792.4" y="627.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$227/1265580574.get (28 samples, 0.09%)</title><rect x="792.4" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="795.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (28 samples, 0.09%)</title><rect x="792.4" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (28 samples, 0.09%)</title><rect x="792.4" y="579.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (28 samples, 0.09%)</title><rect x="792.4" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.4" y="574.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.08%)</title><rect x="792.5" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/1215200694.accept (12 samples, 0.04%)</title><rect x="793.4" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="796.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (12 samples, 0.04%)</title><rect x="793.4" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/1808560965.run (12 samples, 0.04%)</title><rect x="793.4" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (12 samples, 0.04%)</title><rect x="793.4" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (12 samples, 0.04%)</title><rect x="793.4" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.04%)</title><rect x="793.4" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.4" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (12 samples, 0.04%)</title><rect x="793.4" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.4" y="750.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (12 samples, 0.04%)</title><rect x="793.4" y="723.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="796.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (39 samples, 0.12%)</title><rect x="793.9" y="851.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.9" y="862.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (39 samples, 0.12%)</title><rect x="793.9" y="835.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="796.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (20 samples, 0.06%)</title><rect x="795.3" y="851.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (9 samples, 0.03%)</title><rect x="795.3" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (9 samples, 0.03%)</title><rect x="795.3" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (9 samples, 0.03%)</title><rect x="795.3" y="803.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.03%)</title><rect x="795.3" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (9 samples, 0.03%)</title><rect x="795.3" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (9 samples, 0.03%)</title><rect x="795.3" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.3" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (9 samples, 0.03%)</title><rect x="795.3" y="739.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="798.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (11 samples, 0.03%)</title><rect x="795.7" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.7" y="846.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (11 samples, 0.03%)</title><rect x="795.7" y="819.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (62 samples, 0.20%)</title><rect x="796.1" y="851.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1656106719.run (28 samples, 0.09%)</title><rect x="796.1" y="835.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (28 samples, 0.09%)</title><rect x="796.1" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.09%)</title><rect x="796.1" y="803.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (28 samples, 0.09%)</title><rect x="796.1" y="787.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (28 samples, 0.09%)</title><rect x="796.1" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (28 samples, 0.09%)</title><rect x="796.1" y="755.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (28 samples, 0.09%)</title><rect x="796.1" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (28 samples, 0.09%)</title><rect x="796.1" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (28 samples, 0.09%)</title><rect x="796.1" y="707.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (28 samples, 0.09%)</title><rect x="796.1" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (18 samples, 0.06%)</title><rect x="796.1" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (18 samples, 0.06%)</title><rect x="796.1" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (18 samples, 0.06%)</title><rect x="796.1" y="643.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/932285561.linkToTargetMethod (14 samples, 0.04%)</title><rect x="796.1" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/574568002.invoke (14 samples, 0.04%)</title><rect x="796.1" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="796.1" y="595.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="799.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (14 samples, 0.04%)</title><rect x="796.1" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (14 samples, 0.04%)</title><rect x="796.1" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.1" y="574.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="796.1" y="547.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="799.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (10 samples, 0.03%)</title><rect x="796.7" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.03%)</title><rect x="796.7" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.03%)</title><rect x="796.7" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.03%)</title><rect x="796.7" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.03%)</title><rect x="796.7" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (10 samples, 0.03%)</title><rect x="796.7" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (10 samples, 0.03%)</title><rect x="796.7" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (10 samples, 0.03%)</title><rect x="796.7" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (10 samples, 0.03%)</title><rect x="796.7" y="547.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="799.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1005357483.run (34 samples, 0.11%)</title><rect x="797.1" y="835.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (34 samples, 0.11%)</title><rect x="797.1" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="797.1" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="800.1" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="797.1" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.get$Lambda (14 samples, 0.04%)</title><rect x="797.1" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.1" y="782.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$372 (14 samples, 0.04%)</title><rect x="797.1" y="755.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="800.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.06%)</title><rect x="797.6" y="803.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.06%)</title><rect x="797.6" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (20 samples, 0.06%)</title><rect x="797.6" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (20 samples, 0.06%)</title><rect x="797.6" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (20 samples, 0.06%)</title><rect x="797.6" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (20 samples, 0.06%)</title><rect x="797.6" y="723.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="800.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (123 samples, 0.39%)</title><rect x="798.4" y="851.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.4" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.now (21 samples, 0.07%)</title><rect x="798.4" y="835.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.4" y="846.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (21 samples, 0.07%)</title><rect x="798.4" y="819.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.4" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (21 samples, 0.07%)</title><rect x="798.4" y="803.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.4" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.create (21 samples, 0.07%)</title><rect x="798.4" y="787.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.4" y="798.0"></text>
</g>
<g>
<title>java.time.Instant (21 samples, 0.07%)</title><rect x="798.4" y="771.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="801.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (102 samples, 0.32%)</title><rect x="799.2" y="835.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.07%)</title><rect x="799.2" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.07%)</title><rect x="799.2" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$492/1690108546.get$Lambda (21 samples, 0.07%)</title><rect x="799.2" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.2" y="798.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$492 (21 samples, 0.07%)</title><rect x="799.2" y="771.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="802.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (81 samples, 0.26%)</title><rect x="799.9" y="819.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.9" y="830.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.12%)</title><rect x="799.9" y="803.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="802.9" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (43 samples, 0.14%)</title><rect x="801.4" y="803.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.4" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (43 samples, 0.14%)</title><rect x="801.4" y="787.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.4" y="798.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (43 samples, 0.14%)</title><rect x="801.4" y="771.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="804.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (76 samples, 0.24%)</title><rect x="803.0" y="851.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="803.0" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="803.0" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$354/272296365.get$Lambda (8 samples, 0.03%)</title><rect x="803.0" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.0" y="814.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$354 (8 samples, 0.03%)</title><rect x="803.0" y="787.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="806.0" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (37 samples, 0.12%)</title><rect x="803.3" y="835.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (18 samples, 0.06%)</title><rect x="803.3" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.3" y="830.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (18 samples, 0.06%)</title><rect x="803.3" y="803.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="806.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (19 samples, 0.06%)</title><rect x="803.9" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.9" y="830.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (19 samples, 0.06%)</title><rect x="803.9" y="803.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="806.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (31 samples, 0.10%)</title><rect x="804.6" y="835.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.6" y="846.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (31 samples, 0.10%)</title><rect x="804.6" y="819.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="807.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (9 samples, 0.03%)</title><rect x="805.8" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (9 samples, 0.03%)</title><rect x="805.8" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (9 samples, 0.03%)</title><rect x="805.8" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (9 samples, 0.03%)</title><rect x="805.8" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.02%)</title><rect x="805.9" y="787.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7 samples, 0.02%)</title><rect x="805.9" y="771.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 0.02%)</title><rect x="805.9" y="755.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.02%)</title><rect x="805.9" y="739.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.9" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (7 samples, 0.02%)</title><rect x="805.9" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.9" y="734.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (7 samples, 0.02%)</title><rect x="805.9" y="707.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="808.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (14 samples, 0.04%)</title><rect x="806.2" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (14 samples, 0.04%)</title><rect x="806.2" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (14 samples, 0.04%)</title><rect x="806.2" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.2" y="830.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (14 samples, 0.04%)</title><rect x="806.2" y="803.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="809.2" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,283 samples, 32.48%)</title><rect x="806.8" y="867.0" width="383.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="809.8" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (239 samples, 0.75%)</title><rect x="806.8" y="851.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.8" y="862.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (239 samples, 0.75%)</title><rect x="806.8" y="835.0" width="8.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="809.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (10,044 samples, 31.72%)</title><rect x="815.7" y="851.0" width="374.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.7" y="862.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (10,044 samples, 31.72%)</title><rect x="815.7" y="835.0" width="374.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.7" y="846.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10,044 samples, 31.72%)</title><rect x="815.7" y="819.0" width="374.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.7" y="830.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,029 samples, 3.25%)</title><rect x="815.7" y="803.0" width="38.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.7" y="814.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,029 samples, 3.25%)</title><rect x="815.7" y="787.0" width="38.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.7" y="798.0">one..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (660 samples, 2.08%)</title><rect x="815.7" y="771.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.7" y="782.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (337 samples, 1.06%)</title><rect x="815.7" y="755.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (337 samples, 1.06%)</title><rect x="815.7" y="739.0" width="12.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (337 samples, 1.06%)</title><rect x="815.7" y="723.0" width="12.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.7" y="734.0"></text>
</g>
<g>
<title>java.lang.String (154 samples, 0.49%)</title><rect x="815.7" y="707.0" width="5.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="818.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (183 samples, 0.58%)</title><rect x="821.4" y="707.0" width="6.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.4" y="718.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.58%)</title><rect x="821.4" y="691.0" width="6.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="824.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (323 samples, 1.02%)</title><rect x="828.2" y="755.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (211 samples, 0.67%)</title><rect x="828.2" y="739.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (211 samples, 0.67%)</title><rect x="828.2" y="723.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$502/1744977774.get$Lambda (211 samples, 0.67%)</title><rect x="828.2" y="707.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.2" y="718.0"></text>
</g>
<g>
<title>ru.mail.polis.service.stasyanoi.server.CustomServer$$Lambda$502 (211 samples, 0.67%)</title><rect x="828.2" y="691.0" width="7.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="831.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (112 samples, 0.35%)</title><rect x="836.1" y="739.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (112 samples, 0.35%)</title><rect x="836.1" y="723.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.1" y="734.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (112 samples, 0.35%)</title><rect x="836.1" y="707.0" width="4.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="839.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (369 samples, 1.17%)</title><rect x="840.3" y="771.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (369 samples, 1.17%)</title><rect x="840.3" y="755.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (369 samples, 1.17%)</title><rect x="840.3" y="739.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.3" y="750.0"></text>
</g>
<g>
<title>java.lang.String (187 samples, 0.59%)</title><rect x="840.3" y="723.0" width="6.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="843.3" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (182 samples, 0.57%)</title><rect x="847.2" y="723.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.2" y="734.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.57%)</title><rect x="847.2" y="707.0" width="6.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="850.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,541 samples, 8.03%)</title><rect x="854.0" y="803.0" width="94.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.0" y="814.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (241 samples, 0.76%)</title><rect x="854.0" y="787.0" width="9.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="857.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (380 samples, 1.20%)</title><rect x="863.0" y="787.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.0" y="798.0"></text>
</g>
<g>
<title>java.lang.String[] (361 samples, 1.14%)</title><rect x="863.0" y="771.0" width="13.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="866.0" y="782.0"></text>
</g>
<g>
<title>java.lang.String[] (19 samples, 0.06%)</title><rect x="876.5" y="771.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="879.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,920 samples, 6.06%)</title><rect x="877.2" y="787.0" width="71.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.2" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,920 samples, 6.06%)</title><rect x="877.2" y="771.0" width="71.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.2" y="782.0">one/nio/..</text>
</g>
<g>
<title>char[] (1,459 samples, 4.61%)</title><rect x="877.2" y="755.0" width="54.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="880.2" y="766.0">char[]</text>
</g>
<g>
<title>char[] (7 samples, 0.02%)</title><rect x="931.5" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.5" y="766.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.39%)</title><rect x="931.8" y="755.0" width="4.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="934.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (331 samples, 1.05%)</title><rect x="936.4" y="755.0" width="12.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (331 samples, 1.05%)</title><rect x="936.4" y="739.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (331 samples, 1.05%)</title><rect x="936.4" y="723.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.4" y="734.0"></text>
</g>
<g>
<title>byte[] (331 samples, 1.05%)</title><rect x="936.4" y="707.0" width="12.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="939.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (74 samples, 0.23%)</title><rect x="948.7" y="803.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.7" y="814.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.23%)</title><rect x="948.7" y="787.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="951.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (702 samples, 2.22%)</title><rect x="951.5" y="803.0" width="26.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="954.5" y="814.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (702 samples, 2.22%)</title><rect x="951.5" y="787.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.5" y="798.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (702 samples, 2.22%)</title><rect x="951.5" y="771.0" width="26.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.5" y="782.0">j..</text>
</g>
<g>
<title>java.lang.String (467 samples, 1.47%)</title><rect x="951.5" y="755.0" width="17.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="954.5" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (235 samples, 0.74%)</title><rect x="968.9" y="755.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.9" y="766.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.74%)</title><rect x="968.9" y="739.0" width="8.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="971.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,698 samples, 18.00%)</title><rect x="977.6" y="803.0" width="212.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="980.6" y="814.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,698 samples, 18.00%)</title><rect x="977.6" y="787.0" width="212.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.6" y="798.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (3,117 samples, 9.84%)</title><rect x="977.6" y="771.0" width="116.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="980.6" y="782.0">char[]</text>
</g>
<g>
<title>char[] (165 samples, 0.52%)</title><rect x="1093.8" y="771.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1096.8" y="782.0"></text>
</g>
<g>
<title>java.lang.String (706 samples, 2.23%)</title><rect x="1100.0" y="771.0" width="26.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1103.0" y="782.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,710 samples, 5.40%)</title><rect x="1126.3" y="771.0" width="63.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.3" y="782.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,710 samples, 5.40%)</title><rect x="1126.3" y="755.0" width="63.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.3" y="766.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,710 samples, 5.40%)</title><rect x="1126.3" y="739.0" width="63.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.3" y="750.0">java/la..</text>
</g>
<g>
<title>byte[] (1,710 samples, 5.40%)</title><rect x="1126.3" y="723.0" width="63.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1129.3" y="734.0">byte[]</text>
</g>
</g>
</svg>
