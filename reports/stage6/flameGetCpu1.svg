<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1430" onload="init(evt)" viewBox="0 0 1200 1430" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1413"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1413"> </text>
<g id="frames">
<g>
<title>all (1,905 samples, 100.00%)</title><rect x="10.0" y="1379.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="1390.0">all</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1 samples, 0.05%)</title><rect x="10.0" y="1363.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="1374.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.05%)</title><rect x="10.0" y="1347.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1358.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.05%)</title><rect x="10.0" y="1331.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="1342.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.05%)</title><rect x="10.0" y="1315.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="1326.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.05%)</title><rect x="10.0" y="1299.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="1310.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (1 samples, 0.05%)</title><rect x="10.0" y="1283.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="1294.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.05%)</title><rect x="10.0" y="1267.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="1278.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7079990043030843790.so (1 samples, 0.05%)</title><rect x="10.0" y="1251.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1262.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.05%)</title><rect x="10.0" y="1235.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="10.0" y="1219.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="1230.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="10.0" y="1203.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.05%)</title><rect x="10.0" y="1187.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.05%)</title><rect x="10.0" y="1171.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.05%)</title><rect x="10.0" y="1155.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="10.0" y="1139.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.68%)</title><rect x="10.6" y="1363.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.6" y="1374.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (13 samples, 0.68%)</title><rect x="10.6" y="1347.0" width="8.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.6" y="1358.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (13 samples, 0.68%)</title><rect x="10.6" y="1331.0" width="8.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.6" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.63%)</title><rect x="11.2" y="1315.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.2" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (6 samples, 0.31%)</title><rect x="11.2" y="1299.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="14.2" y="1310.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="15.0" y="1299.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="18.0" y="1310.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.16%)</title><rect x="16.2" y="1299.0" width="1.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="19.2" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="16.8" y="1283.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="19.8" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="16.8" y="1267.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.8" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="16.8" y="1251.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="19.8" y="1262.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="16.8" y="1235.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.8" y="1246.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="16.8" y="1219.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="19.8" y="1230.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="17.4" y="1203.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="20.4" y="1214.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="18.1" y="1299.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.1" y="1310.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.05%)</title><rect x="18.7" y="1363.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.7" y="1374.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.10%)</title><rect x="19.3" y="1363.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="22.3" y="1374.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.10%)</title><rect x="19.3" y="1347.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.3" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.10%)</title><rect x="19.3" y="1331.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="22.3" y="1342.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="19.3" y="1315.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.3" y="1326.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="19.3" y="1299.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.3" y="1310.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="19.9" y="1315.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="22.9" y="1326.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.05%)</title><rect x="19.9" y="1299.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.9" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="20.5" y="1363.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="23.5" y="1374.0"></text>
</g>
<g>
<title>__GI___open (1 samples, 0.05%)</title><rect x="20.5" y="1347.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="23.5" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="20.5" y="1331.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.5" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="20.5" y="1315.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="23.5" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.05%)</title><rect x="20.5" y="1299.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="23.5" y="1310.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.05%)</title><rect x="20.5" y="1283.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.5" y="1294.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.05%)</title><rect x="20.5" y="1267.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="23.5" y="1278.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.05%)</title><rect x="20.5" y="1251.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="23.5" y="1262.0"></text>
</g>
<g>
<title>vfs_open (1 samples, 0.05%)</title><rect x="20.5" y="1235.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.5" y="1246.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.05%)</title><rect x="20.5" y="1219.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.5" y="1230.0"></text>
</g>
<g>
<title>security_file_open (1 samples, 0.05%)</title><rect x="20.5" y="1203.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="23.5" y="1214.0"></text>
</g>
<g>
<title>apparmor_file_open (1 samples, 0.05%)</title><rect x="20.5" y="1187.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="23.5" y="1198.0"></text>
</g>
<g>
<title>aa_path_perm (1 samples, 0.05%)</title><rect x="20.5" y="1171.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="23.5" y="1182.0"></text>
</g>
<g>
<title>profile_path_perm.part.9 (1 samples, 0.05%)</title><rect x="20.5" y="1155.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.5" y="1166.0"></text>
</g>
<g>
<title>path_name (1 samples, 0.05%)</title><rect x="20.5" y="1139.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="23.5" y="1150.0"></text>
</g>
<g>
<title>aa_path_name (1 samples, 0.05%)</title><rect x="20.5" y="1123.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="23.5" y="1134.0"></text>
</g>
<g>
<title>d_absolute_path (1 samples, 0.05%)</title><rect x="20.5" y="1107.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.5" y="1118.0"></text>
</g>
<g>
<title>prepend_path (1 samples, 0.05%)</title><rect x="20.5" y="1091.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.5" y="1102.0"></text>
</g>
<g>
<title>prepend_name (1 samples, 0.05%)</title><rect x="20.5" y="1075.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.5" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="21.1" y="1347.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="24.1" y="1358.0"></text>
</g>
<g>
<title>[unknown_Java] (30 samples, 1.57%)</title><rect x="21.8" y="1363.0" width="18.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="24.8" y="1374.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.05%)</title><rect x="21.8" y="1347.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="24.8" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="22.4" y="1347.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="25.4" y="1358.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.05%)</title><rect x="22.4" y="1331.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.00%)</title><rect x="23.0" y="1347.0" width="11.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="26.0" y="1358.0"></text>
</g>
<g>
<title>clock_gettime (19 samples, 1.00%)</title><rect x="23.0" y="1331.0" width="11.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="26.0" y="1342.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.16%)</title><rect x="24.2" y="1315.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="27.2" y="1326.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 0.73%)</title><rect x="26.1" y="1315.0" width="8.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.1" y="1326.0"></text>
</g>
<g>
<title>[vdso] (13 samples, 0.68%)</title><rect x="26.7" y="1299.0" width="8.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="29.7" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.47%)</title><rect x="34.8" y="1347.0" width="5.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="37.8" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.47%)</title><rect x="34.8" y="1331.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="37.8" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.47%)</title><rect x="34.8" y="1315.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.8" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.47%)</title><rect x="34.8" y="1299.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.8" y="1310.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.47%)</title><rect x="34.8" y="1283.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="37.8" y="1294.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.47%)</title><rect x="34.8" y="1267.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.8" y="1278.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="36.0" y="1251.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.0" y="1262.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.31%)</title><rect x="36.6" y="1251.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="39.6" y="1262.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.31%)</title><rect x="36.6" y="1235.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="39.6" y="1246.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.31%)</title><rect x="36.6" y="1219.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="39.6" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.05%)</title><rect x="40.4" y="1363.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="43.4" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="40.4" y="1347.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.4" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="40.4" y="1331.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.4" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="40.4" y="1315.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.4" y="1326.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="40.4" y="1299.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="43.4" y="1310.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="40.4" y="1283.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.4" y="1294.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="40.4" y="1267.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.4" y="1278.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="41.0" y="1363.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="44.0" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="41.0" y="1347.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="44.0" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="41.0" y="1331.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="44.0" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="41.0" y="1315.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="44.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,378 samples, 72.34%)</title><rect x="41.6" y="1363.0" width="853.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.6" y="1374.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,378 samples, 72.34%)</title><rect x="41.6" y="1347.0" width="853.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.6" y="1358.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,378 samples, 72.34%)</title><rect x="41.6" y="1331.0" width="853.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.6" y="1342.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (8 samples, 0.42%)</title><rect x="45.3" y="1315.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.37%)</title><rect x="45.9" y="1299.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.9" y="1310.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (6 samples, 0.31%)</title><rect x="45.9" y="1283.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="48.9" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="46.5" y="1267.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="49.5" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.16%)</title><rect x="47.2" y="1267.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="50.2" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="49.0" y="1267.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="52.0" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="49.6" y="1283.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (160 samples, 8.40%)</title><rect x="50.3" y="1315.0" width="99.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.3" y="1326.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (160 samples, 8.40%)</title><rect x="50.3" y="1299.0" width="99.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.3" y="1310.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (160 samples, 8.40%)</title><rect x="50.3" y="1283.0" width="99.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.3" y="1294.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.05%)</title><rect x="50.9" y="1267.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1494676242.apply (1 samples, 0.05%)</title><rect x="50.9" y="1251.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$185/1494676242.apply (158 samples, 8.29%)</title><rect x="51.5" y="1267.0" width="97.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.5" y="1278.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (158 samples, 8.29%)</title><rect x="51.5" y="1251.0" width="97.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.5" y="1262.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (158 samples, 8.29%)</title><rect x="51.5" y="1235.0" width="97.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.5" y="1246.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (132 samples, 6.93%)</title><rect x="51.5" y="1219.0" width="81.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.5" y="1230.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (132 samples, 6.93%)</title><rect x="51.5" y="1203.0" width="81.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.5" y="1214.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (132 samples, 6.93%)</title><rect x="51.5" y="1187.0" width="81.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.5" y="1198.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (47 samples, 2.47%)</title><rect x="52.1" y="1171.0" width="29.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.1" y="1182.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (47 samples, 2.47%)</title><rect x="52.1" y="1155.0" width="29.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.1" y="1166.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="52.1" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$316/2068090598.apply (1 samples, 0.05%)</title><rect x="52.1" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (46 samples, 2.41%)</title><rect x="52.7" y="1139.0" width="28.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.7" y="1150.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$316/2068090598.apply (46 samples, 2.41%)</title><rect x="52.7" y="1123.0" width="28.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (46 samples, 2.41%)</title><rect x="52.7" y="1107.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.7" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (46 samples, 2.41%)</title><rect x="52.7" y="1091.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.7" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/1588773889.apply (46 samples, 2.41%)</title><rect x="52.7" y="1075.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.7" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (46 samples, 2.41%)</title><rect x="52.7" y="1059.0" width="28.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.7" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (46 samples, 2.41%)</title><rect x="52.7" y="1043.0" width="28.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.7" y="1054.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 2.26%)</title><rect x="52.7" y="1027.0" width="26.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.7" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 2.20%)</title><rect x="52.7" y="1011.0" width="26.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.7" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/811760192.apply (40 samples, 2.10%)</title><rect x="53.4" y="995.0" width="24.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.4" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (39 samples, 2.05%)</title><rect x="54.0" y="979.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.0" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.10%)</title><rect x="54.0" y="963.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.10%)</title><rect x="54.0" y="947.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="54.0" y="931.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="54.0" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.10%)</title><rect x="54.0" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.10%)</title><rect x="54.0" y="883.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.10%)</title><rect x="54.0" y="867.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.10%)</title><rect x="54.0" y="851.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.10%)</title><rect x="54.0" y="835.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.10%)</title><rect x="54.0" y="819.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.10%)</title><rect x="54.0" y="803.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.10%)</title><rect x="54.0" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.10%)</title><rect x="54.0" y="771.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.0" y="782.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.10%)</title><rect x="54.0" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.10%)</title><rect x="54.0" y="739.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="57.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.10%)</title><rect x="54.0" y="723.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.10%)</title><rect x="54.0" y="707.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="718.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="54.0" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.0" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="54.0" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="54.0" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.05%)</title><rect x="54.6" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.05%)</title><rect x="54.6" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="54.6" y="659.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="57.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="54.6" y="643.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="57.6" y="654.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.05%)</title><rect x="54.6" y="627.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="57.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="54.6" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.6" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="54.6" y="595.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="57.6" y="606.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.05%)</title><rect x="54.6" y="579.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.6" y="590.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.05%)</title><rect x="54.6" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="57.6" y="574.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.05%)</title><rect x="54.6" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.6" y="558.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.05%)</title><rect x="54.6" y="531.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.6" y="542.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.05%)</title><rect x="54.6" y="515.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.6" y="526.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.05%)</title><rect x="54.6" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.6" y="510.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="54.6" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.6" y="494.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="54.6" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="57.6" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.05%)</title><rect x="54.6" y="451.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.05%)</title><rect x="54.6" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.6" y="446.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="54.6" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.6" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="54.6" y="403.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="57.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="54.6" y="387.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="57.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="54.6" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="57.6" y="382.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="54.6" y="355.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.6" y="366.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.05%)</title><rect x="54.6" y="339.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.6" y="350.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.05%)</title><rect x="54.6" y="323.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.6" y="334.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="54.6" y="307.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="57.6" y="318.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="54.6" y="291.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.6" y="302.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="54.6" y="275.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.6" y="286.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="54.6" y="259.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.6" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="54.6" y="243.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.6" y="254.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.05%)</title><rect x="54.6" y="227.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.6" y="238.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.05%)</title><rect x="54.6" y="211.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="57.6" y="222.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="54.6" y="195.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.6" y="206.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="54.6" y="179.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.6" y="190.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="54.6" y="163.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="57.6" y="174.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="54.6" y="147.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="57.6" y="158.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="54.6" y="131.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="57.6" y="142.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="54.6" y="115.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="57.6" y="126.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="54.6" y="99.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.6" y="110.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="54.6" y="83.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.6" y="94.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="54.6" y="67.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="57.6" y="78.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="54.6" y="51.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="57.6" y="62.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="54.6" y="35.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (12 samples, 0.63%)</title><rect x="55.2" y="963.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (12 samples, 0.63%)</title><rect x="55.2" y="947.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (3 samples, 0.16%)</title><rect x="55.2" y="931.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.16%)</title><rect x="55.2" y="915.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.16%)</title><rect x="55.2" y="899.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.10%)</title><rect x="55.2" y="883.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.10%)</title><rect x="55.2" y="867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.2" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="55.2" y="851.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="58.2" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="55.2" y="835.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="58.2" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="55.2" y="819.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="58.2" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="55.2" y="803.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="58.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="55.8" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.8" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="55.8" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="58.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="56.5" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9 samples, 0.47%)</title><rect x="57.1" y="931.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9 samples, 0.47%)</title><rect x="57.1" y="915.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (8 samples, 0.42%)</title><rect x="57.7" y="899.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.42%)</title><rect x="57.7" y="883.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.42%)</title><rect x="57.7" y="867.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.7" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="58.9" y="851.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="61.9" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.10%)</title><rect x="58.9" y="835.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="61.9" y="846.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="58.9" y="819.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="61.9" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="59.6" y="819.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="62.6" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="59.6" y="803.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="62.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.21%)</title><rect x="60.2" y="851.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.21%)</title><rect x="60.2" y="835.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.21%)</title><rect x="60.2" y="819.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="63.2" y="830.0"></text>
</g>
<g>
<title>__GI_write (4 samples, 0.21%)</title><rect x="60.2" y="803.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="63.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="60.2" y="787.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="60.2" y="771.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="63.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.21%)</title><rect x="60.2" y="755.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.2" y="766.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.21%)</title><rect x="60.2" y="739.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="63.2" y="750.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.21%)</title><rect x="60.2" y="723.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="63.2" y="734.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.21%)</title><rect x="60.2" y="707.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="63.2" y="718.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.21%)</title><rect x="60.2" y="691.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.2" y="702.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.21%)</title><rect x="60.2" y="675.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="63.2" y="686.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.16%)</title><rect x="60.2" y="659.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.2" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.16%)</title><rect x="60.2" y="643.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="63.2" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.16%)</title><rect x="60.2" y="627.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="63.2" y="638.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="62.0" y="659.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="65.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (25 samples, 1.31%)</title><rect x="62.7" y="963.0" width="15.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.10%)</title><rect x="62.7" y="947.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.7" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.10%)</title><rect x="62.7" y="931.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.7" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.10%)</title><rect x="62.7" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.7" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (2 samples, 0.10%)</title><rect x="62.7" y="899.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.7" y="910.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="62.7" y="883.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="65.7" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="63.3" y="883.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="66.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (13 samples, 0.68%)</title><rect x="63.9" y="947.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.16%)</title><rect x="63.9" y="931.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.9" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.10%)</title><rect x="64.5" y="915.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.5" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="64.5" y="899.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="64.5" y="883.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="64.5" y="867.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.05%)</title><rect x="64.5" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.05%)</title><rect x="64.5" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="65.1" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="65.1" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="65.1" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="65.1" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (7 samples, 0.37%)</title><rect x="65.7" y="931.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="65.7" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.7" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="65.7" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.7" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.05%)</title><rect x="66.4" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.4" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="66.4" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.4" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="66.4" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.4" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="66.4" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="66.4" y="851.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.4" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN.entrySet (1 samples, 0.05%)</title><rect x="67.0" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.0" y="926.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$MapN$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="67.0" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.0" y="910.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$375/1561480963.test (4 samples, 0.21%)</title><rect x="67.6" y="915.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.6" y="926.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.21%)</title><rect x="67.6" y="899.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="67.6" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/898557489.test (3 samples, 0.16%)</title><rect x="68.2" y="883.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.16%)</title><rect x="68.2" y="867.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.2" y="878.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/1340565491.test (3 samples, 0.16%)</title><rect x="68.2" y="851.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.2" y="862.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.16%)</title><rect x="68.2" y="835.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1139700454.test (3 samples, 0.16%)</title><rect x="68.2" y="819.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.16%)</title><rect x="68.2" y="803.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.10%)</title><rect x="68.2" y="787.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="68.2" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="68.2" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="69.5" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="69.5" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="69.5" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3 samples, 0.16%)</title><rect x="70.1" y="931.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.16%)</title><rect x="70.1" y="915.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.1" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.16%)</title><rect x="70.1" y="899.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.1" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="70.7" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="70.7" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.7" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.get$Lambda (1 samples, 0.05%)</title><rect x="70.7" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.7" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.05%)</title><rect x="71.3" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (1 samples, 0.05%)</title><rect x="71.3" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.05%)</title><rect x="71.3" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.05%)</title><rect x="71.3" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="71.3" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (3 samples, 0.16%)</title><rect x="71.9" y="947.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.16%)</title><rect x="71.9" y="931.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.16%)</title><rect x="71.9" y="915.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (3 samples, 0.16%)</title><rect x="71.9" y="899.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.10%)</title><rect x="72.6" y="883.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.10%)</title><rect x="72.6" y="867.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="72.6" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="73.2" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.2" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="73.2" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.21%)</title><rect x="73.8" y="947.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="73.8" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.16%)</title><rect x="74.4" y="931.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.16%)</title><rect x="74.4" y="915.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.4" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.16%)</title><rect x="74.4" y="899.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (3 samples, 0.16%)</title><rect x="74.4" y="883.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.4" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.16%)</title><rect x="74.4" y="867.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.05%)</title><rect x="74.4" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="74.4" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="75.0" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="75.0" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.05%)</title><rect x="75.0" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (1 samples, 0.05%)</title><rect x="75.7" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.7" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="75.7" y="835.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="78.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.16%)</title><rect x="76.3" y="947.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.3" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="76.3" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.3" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="76.9" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.9" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="76.9" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.9" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="76.9" y="899.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="79.9" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="77.5" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="77.5" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="77.5" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="77.5" y="883.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$357/1358266.apply (1 samples, 0.05%)</title><rect x="78.1" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="78.8" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="81.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/811760192.apply (1 samples, 0.05%)</title><rect x="78.8" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.16%)</title><rect x="79.4" y="1027.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.10%)</title><rect x="80.0" y="1011.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="80.6" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (84 samples, 4.41%)</title><rect x="81.2" y="1171.0" width="52.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.2" y="1182.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="81.2" y="1155.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="81.2" y="1139.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="81.2" y="1123.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="81.2" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.10%)</title><rect x="81.9" y="1155.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.10%)</title><rect x="81.9" y="1139.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.05%)</title><rect x="81.9" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="81.9" y="1107.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="81.9" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="82.5" y="1123.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$311/1771069967.accept (1 samples, 0.05%)</title><rect x="82.5" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.05%)</title><rect x="82.5" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (81 samples, 4.25%)</title><rect x="83.1" y="1155.0" width="50.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.1" y="1166.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (67 samples, 3.52%)</title><rect x="83.1" y="1139.0" width="41.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.1" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (67 samples, 3.52%)</title><rect x="83.1" y="1123.0" width="41.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.1" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (67 samples, 3.52%)</title><rect x="83.1" y="1107.0" width="41.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.1" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.10%)</title><rect x="83.7" y="1091.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.7" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="83.7" y="1075.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="86.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$226/1232150608.apply (1 samples, 0.05%)</title><rect x="84.3" y="1075.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$226/1232150608.apply (64 samples, 3.36%)</title><rect x="85.0" y="1091.0" width="39.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="88.0" y="1102.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (64 samples, 3.36%)</title><rect x="85.0" y="1075.0" width="39.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.0" y="1086.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (64 samples, 3.36%)</title><rect x="85.0" y="1059.0" width="39.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.0" y="1070.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (30 samples, 1.57%)</title><rect x="85.6" y="1043.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (30 samples, 1.57%)</title><rect x="85.6" y="1027.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (30 samples, 1.57%)</title><rect x="85.6" y="1011.0" width="18.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$301/1299234764.apply (30 samples, 1.57%)</title><rect x="85.6" y="995.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (30 samples, 1.57%)</title><rect x="85.6" y="979.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (30 samples, 1.57%)</title><rect x="85.6" y="963.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (29 samples, 1.52%)</title><rect x="86.2" y="947.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (20 samples, 1.05%)</title><rect x="86.2" y="931.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (19 samples, 1.00%)</title><rect x="86.2" y="915.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (18 samples, 0.94%)</title><rect x="86.2" y="899.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (18 samples, 0.94%)</title><rect x="86.2" y="883.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.2" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (18 samples, 0.94%)</title><rect x="86.2" y="867.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.2" y="878.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.05%)</title><rect x="86.2" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="89.2" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (11 samples, 0.58%)</title><rect x="86.8" y="851.0" width="6.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="89.8" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.10%)</title><rect x="87.4" y="835.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="90.4" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.05%)</title><rect x="88.0" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="91.0" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="88.7" y="835.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="91.7" y="846.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.05%)</title><rect x="89.3" y="835.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="92.3" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.31%)</title><rect x="89.9" y="835.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.9" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.10%)</title><rect x="90.5" y="819.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="93.5" y="830.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.10%)</title><rect x="90.5" y="803.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="93.5" y="814.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.10%)</title><rect x="91.8" y="819.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.8" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="93.0" y="819.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="96.0" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="93.0" y="803.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="96.0" y="814.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="93.0" y="787.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="96.0" y="798.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.05%)</title><rect x="93.6" y="851.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="96.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/2100961961.run (5 samples, 0.26%)</title><rect x="94.2" y="851.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="97.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (5 samples, 0.26%)</title><rect x="94.2" y="835.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.2" y="846.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (5 samples, 0.26%)</title><rect x="94.2" y="819.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.2" y="830.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.16%)</title><rect x="94.9" y="803.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.9" y="814.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (1 samples, 0.05%)</title><rect x="95.5" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="95.5" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.5" y="782.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="96.1" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.1" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="96.1" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="96.1" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.1" y="766.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="96.7" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="96.7" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="97.3" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="97.3" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.3" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.05%)</title><rect x="97.3" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.05%)</title><rect x="98.0" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.0" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="98.0" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="98.0" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="98.0" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="98.0" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.0" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="98.0" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="98.0" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.47%)</title><rect x="98.6" y="931.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.6" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="99.8" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.31%)</title><rect x="100.4" y="915.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="102.3" y="899.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="102.3" y="883.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="102.3" y="867.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.3" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="103.5" y="899.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (33 samples, 1.73%)</title><rect x="104.2" y="1043.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (33 samples, 1.73%)</title><rect x="104.2" y="1027.0" width="20.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.10%)</title><rect x="104.8" y="1011.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (1 samples, 0.05%)</title><rect x="104.8" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.05%)</title><rect x="105.4" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.05%)</title><rect x="105.4" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.05%)</title><rect x="105.4" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.05%)</title><rect x="105.4" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="106.0" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="106.0" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (2 samples, 0.10%)</title><rect x="106.6" y="1011.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (2 samples, 0.10%)</title><rect x="106.6" y="995.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="106.6" y="979.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="109.6" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="106.6" y="963.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="109.6" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="106.6" y="947.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="109.6" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="106.6" y="931.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="109.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.05%)</title><rect x="107.2" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.05%)</title><rect x="107.2" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.2" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.05%)</title><rect x="107.2" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (27 samples, 1.42%)</title><rect x="107.9" y="1011.0" width="16.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.9" y="1022.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (27 samples, 1.42%)</title><rect x="107.9" y="995.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.9" y="1006.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (16 samples, 0.84%)</title><rect x="108.5" y="979.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="111.5" y="990.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.05%)</title><rect x="109.7" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="112.7" y="974.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.10%)</title><rect x="110.3" y="963.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="113.3" y="974.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.05%)</title><rect x="110.3" y="947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="113.3" y="958.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.05%)</title><rect x="110.3" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="113.3" y="942.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.05%)</title><rect x="111.0" y="947.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="114.0" y="958.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="111.6" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="114.6" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.05%)</title><rect x="112.2" y="963.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="115.2" y="974.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.31%)</title><rect x="112.8" y="963.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="115.8" y="974.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.05%)</title><rect x="112.8" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="115.8" y="958.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.26%)</title><rect x="113.4" y="947.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="116.4" y="958.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.10%)</title><rect x="114.1" y="931.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="117.1" y="942.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.10%)</title><rect x="115.3" y="931.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="118.3" y="942.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.16%)</title><rect x="116.5" y="963.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="119.5" y="974.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="116.5" y="947.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="119.5" y="958.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.05%)</title><rect x="116.5" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="119.5" y="942.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.10%)</title><rect x="117.2" y="947.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="120.2" y="958.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.10%)</title><rect x="117.2" y="931.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="120.2" y="942.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="117.8" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="120.8" y="926.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="117.8" y="899.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="120.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$252/448246594.run (8 samples, 0.42%)</title><rect x="118.4" y="979.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (8 samples, 0.42%)</title><rect x="118.4" y="963.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.4" y="974.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (7 samples, 0.37%)</title><rect x="119.0" y="947.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.0" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (7 samples, 0.37%)</title><rect x="119.0" y="931.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.0" y="942.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.37%)</title><rect x="119.0" y="915.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.0" y="926.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (7 samples, 0.37%)</title><rect x="119.0" y="899.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="119.0" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="119.0" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.0" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.05%)</title><rect x="119.0" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.0" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.31%)</title><rect x="119.6" y="883.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="119.6" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="119.6" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (4 samples, 0.21%)</title><rect x="120.3" y="867.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="122.1" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="122.1" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (1 samples, 0.05%)</title><rect x="122.1" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.05%)</title><rect x="122.1" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.1" y="814.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="122.7" y="867.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="125.7" y="878.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.10%)</title><rect x="123.4" y="979.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="126.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.16%)</title><rect x="124.6" y="1139.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.16%)</title><rect x="124.6" y="1123.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.6" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="124.6" y="1107.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="127.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$304/897664274.apply (1 samples, 0.05%)</title><rect x="125.2" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="125.8" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="125.8" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (11 samples, 0.58%)</title><rect x="126.5" y="1139.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (9 samples, 0.47%)</title><rect x="126.5" y="1123.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (9 samples, 0.47%)</title><rect x="126.5" y="1107.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.5" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="128.9" y="1091.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="131.9" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.05%)</title><rect x="128.9" y="1075.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="131.9" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.05%)</title><rect x="128.9" y="1059.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="131.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="129.5" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/957680741.linkToTargetMethod (2 samples, 0.10%)</title><rect x="130.2" y="1091.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/685293226.invoke (2 samples, 0.10%)</title><rect x="130.2" y="1075.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1625213256.invoke (2 samples, 0.10%)</title><rect x="130.2" y="1059.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="130.2" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (1 samples, 0.05%)</title><rect x="130.8" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="130.8" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="130.8" y="1011.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="130.8" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="131.4" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.10%)</title><rect x="132.0" y="1123.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="135.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.10%)</title><rect x="132.0" y="1107.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (2 samples, 0.10%)</title><rect x="132.0" y="1091.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (18 samples, 0.94%)</title><rect x="133.3" y="1219.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.3" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="133.3" y="1203.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="136.3" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.10%)</title><rect x="133.3" y="1187.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="136.3" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.10%)</title><rect x="133.3" y="1171.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="136.3" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="133.3" y="1155.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="136.3" y="1166.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="133.9" y="1155.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="136.9" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (6 samples, 0.31%)</title><rect x="134.5" y="1203.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.5" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.31%)</title><rect x="134.5" y="1187.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="135.7" y="1171.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="135.7" y="1155.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="135.7" y="1139.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="136.4" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="139.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="136.4" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.4" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="136.4" y="1091.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="139.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.10%)</title><rect x="137.0" y="1171.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.05%)</title><rect x="137.6" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.05%)</title><rect x="137.6" y="1139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.6" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.05%)</title><rect x="137.6" y="1123.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Long.compare (1 samples, 0.05%)</title><rect x="137.6" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (10 samples, 0.52%)</title><rect x="138.2" y="1203.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.2" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.52%)</title><rect x="138.2" y="1187.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.2" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.52%)</title><rect x="138.2" y="1171.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.52%)</title><rect x="138.2" y="1155.0" width="6.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="141.2" y="1166.0"></text>
</g>
<g>
<title>__GI_write (10 samples, 0.52%)</title><rect x="138.2" y="1139.0" width="6.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="141.2" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.47%)</title><rect x="138.8" y="1123.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="141.8" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.47%)</title><rect x="138.8" y="1107.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="141.8" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_write (9 samples, 0.47%)</title><rect x="138.8" y="1091.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.8" y="1102.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.47%)</title><rect x="138.8" y="1075.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="141.8" y="1086.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.47%)</title><rect x="138.8" y="1059.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="141.8" y="1070.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.42%)</title><rect x="138.8" y="1043.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="141.8" y="1054.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.42%)</title><rect x="138.8" y="1027.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.8" y="1038.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.37%)</title><rect x="139.5" y="1011.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.5" y="1022.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.05%)</title><rect x="139.5" y="995.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.5" y="1006.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.21%)</title><rect x="140.1" y="995.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.1" y="1006.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.21%)</title><rect x="140.1" y="979.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.1" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.21%)</title><rect x="140.1" y="963.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="143.1" y="974.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="142.6" y="995.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.6" y="1006.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="143.2" y="995.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.2" y="1006.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="143.8" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.8" y="1054.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="143.8" y="1027.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="146.8" y="1038.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="143.8" y="1011.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.8" y="1022.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="143.8" y="995.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.26%)</title><rect x="144.4" y="1219.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.4" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.05%)</title><rect x="144.4" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.4" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.05%)</title><rect x="144.4" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.4" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.05%)</title><rect x="144.4" y="1171.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.4" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="144.4" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="147.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.05%)</title><rect x="144.4" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.21%)</title><rect x="145.0" y="1203.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="148.0" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="145.0" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="148.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.16%)</title><rect x="145.7" y="1187.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.7" y="1198.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.05%)</title><rect x="146.9" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.9" y="1182.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.05%)</title><rect x="146.9" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="149.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.05%)</title><rect x="146.9" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.16%)</title><rect x="147.5" y="1219.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (3 samples, 0.16%)</title><rect x="147.5" y="1203.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (3 samples, 0.16%)</title><rect x="147.5" y="1187.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="150.5" y="1198.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.16%)</title><rect x="147.5" y="1171.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.5" y="1182.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.16%)</title><rect x="147.5" y="1155.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.5" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.05%)</title><rect x="147.5" y="1139.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="148.1" y="1139.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.1" y="1150.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="148.1" y="1123.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="151.1" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="148.8" y="1123.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="151.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (11 samples, 0.58%)</title><rect x="149.4" y="1315.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.58%)</title><rect x="149.4" y="1299.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (10 samples, 0.52%)</title><rect x="150.0" y="1283.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.0" y="1294.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="150.6" y="1267.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="153.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.21%)</title><rect x="151.8" y="1267.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.21%)</title><rect x="151.8" y="1251.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.21%)</title><rect x="151.8" y="1235.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.05%)</title><rect x="153.7" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$377/1207993149.run (2 samples, 0.10%)</title><rect x="154.3" y="1267.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="155.6" y="1267.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.10%)</title><rect x="156.2" y="1315.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="159.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="156.2" y="1299.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="159.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (2 samples, 0.10%)</title><rect x="156.2" y="1283.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="159.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (193 samples, 10.13%)</title><rect x="157.4" y="1315.0" width="119.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.4" y="1326.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (41 samples, 2.15%)</title><rect x="160.5" y="1299.0" width="25.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.5" y="1310.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (36 samples, 1.89%)</title><rect x="160.5" y="1283.0" width="22.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.5" y="1294.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.05%)</title><rect x="161.1" y="1267.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="161.8" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 1.73%)</title><rect x="162.4" y="1267.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="165.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 1.73%)</title><rect x="162.4" y="1251.0" width="20.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.4" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.73%)</title><rect x="162.4" y="1235.0" width="8.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="165.4" y="1246.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="164.9" y="1219.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="167.9" y="1230.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.10%)</title><rect x="165.5" y="1219.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="168.5" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="165.5" y="1203.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="168.5" y="1214.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="166.1" y="1203.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="169.1" y="1214.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.16%)</title><rect x="166.7" y="1219.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="169.7" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="167.3" y="1203.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="170.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="167.3" y="1187.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.3" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="168.6" y="1219.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="171.6" y="1230.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="169.2" y="1219.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="172.2" y="1230.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.10%)</title><rect x="169.8" y="1219.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="172.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.00%)</title><rect x="171.0" y="1235.0" width="11.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="174.0" y="1246.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="171.0" y="1219.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="174.0" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="171.7" y="1219.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="174.7" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (17 samples, 0.89%)</title><rect x="172.3" y="1219.0" width="10.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="175.3" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.89%)</title><rect x="172.3" y="1203.0" width="10.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.3" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.89%)</title><rect x="172.3" y="1187.0" width="10.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.3" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.79%)</title><rect x="172.3" y="1171.0" width="9.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="175.3" y="1182.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.73%)</title><rect x="172.9" y="1155.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="175.9" y="1166.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.68%)</title><rect x="173.5" y="1139.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.5" y="1150.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.52%)</title><rect x="173.5" y="1123.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.5" y="1134.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.52%)</title><rect x="173.5" y="1107.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="176.5" y="1118.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.47%)</title><rect x="174.1" y="1091.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="177.1" y="1102.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.31%)</title><rect x="176.0" y="1075.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.0" y="1086.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.16%)</title><rect x="179.7" y="1123.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.7" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="181.0" y="1107.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="184.0" y="1118.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="181.6" y="1171.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.6" y="1182.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="181.6" y="1155.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.6" y="1166.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="182.2" y="1171.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="185.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.10%)</title><rect x="182.8" y="1283.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.10%)</title><rect x="182.8" y="1267.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.10%)</title><rect x="182.8" y="1251.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.10%)</title><rect x="182.8" y="1235.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.05%)</title><rect x="182.8" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="183.4" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.16%)</title><rect x="184.1" y="1283.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.16%)</title><rect x="184.1" y="1267.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.16%)</title><rect x="184.1" y="1251.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.16%)</title><rect x="184.1" y="1235.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.16%)</title><rect x="184.1" y="1219.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.1" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="184.1" y="1203.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="187.1" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="184.7" y="1187.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="187.7" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="185.3" y="1203.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="188.3" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="185.3" y="1187.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="188.3" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="185.3" y="1171.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.3" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="185.3" y="1155.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.3" y="1166.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="185.3" y="1139.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.3" y="1150.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="185.3" y="1123.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="188.3" y="1134.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="185.3" y="1107.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.3" y="1118.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="185.3" y="1091.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.3" y="1102.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="185.3" y="1075.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="188.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (147 samples, 7.72%)</title><rect x="185.9" y="1299.0" width="91.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.9" y="1310.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (145 samples, 7.61%)</title><rect x="187.2" y="1283.0" width="89.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.2" y="1294.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.05%)</title><rect x="187.8" y="1267.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="187.8" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="187.8" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (79 samples, 4.15%)</title><rect x="188.4" y="1267.0" width="48.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="191.4" y="1278.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (79 samples, 4.15%)</title><rect x="188.4" y="1251.0" width="48.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="191.4" y="1262.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (79 samples, 4.15%)</title><rect x="188.4" y="1235.0" width="48.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.4" y="1246.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.84%)</title><rect x="190.9" y="1219.0" width="9.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="193.9" y="1230.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="191.5" y="1203.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="194.5" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="191.5" y="1187.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="194.5" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="192.1" y="1203.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="195.1" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="192.7" y="1203.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="195.7" y="1214.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="194.0" y="1203.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="197.0" y="1214.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.37%)</title><rect x="194.6" y="1203.0" width="4.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="197.6" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="195.2" y="1187.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="198.2" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="195.2" y="1171.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.2" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.26%)</title><rect x="195.8" y="1171.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="198.8" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="195.8" y="1155.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="198.8" y="1166.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="195.8" y="1139.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.8" y="1150.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="195.8" y="1123.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="198.8" y="1134.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="195.8" y="1107.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="198.8" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="196.4" y="1123.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.4" y="1134.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.16%)</title><rect x="197.1" y="1155.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="200.1" y="1166.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.16%)</title><rect x="197.1" y="1139.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.1" y="1150.0"></text>
</g>
<g>
<title>dput (1 samples, 0.05%)</title><rect x="198.3" y="1123.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="201.3" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="198.9" y="1203.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="201.9" y="1214.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.10%)</title><rect x="199.5" y="1203.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="202.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.26%)</title><rect x="200.8" y="1219.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="203.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="200.8" y="1203.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="203.8" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.10%)</title><rect x="200.8" y="1187.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="203.8" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.10%)</title><rect x="200.8" y="1171.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="203.8" y="1182.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.10%)</title><rect x="200.8" y="1155.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="203.8" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.16%)</title><rect x="202.0" y="1203.0" width="1.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="205.0" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.10%)</title><rect x="202.6" y="1187.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="205.6" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="203.3" y="1171.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="206.3" y="1182.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="203.3" y="1155.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="206.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.05%)</title><rect x="203.9" y="1219.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="206.9" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (49 samples, 2.57%)</title><rect x="204.5" y="1219.0" width="30.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="207.5" y="1230.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (40 samples, 2.10%)</title><rect x="210.1" y="1203.0" width="24.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="213.1" y="1214.0">e..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="210.1" y="1187.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="213.1" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 1.99%)</title><rect x="210.7" y="1187.0" width="23.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="213.7" y="1198.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 1.47%)</title><rect x="213.2" y="1171.0" width="17.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="216.2" y="1182.0"></text>
</g>
<g>
<title>do_futex (28 samples, 1.47%)</title><rect x="213.2" y="1155.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="216.2" y="1166.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="215.0" y="1139.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.0" y="1150.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="215.0" y="1123.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.0" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="215.0" y="1107.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.0" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="215.0" y="1091.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="218.0" y="1102.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.05%)</title><rect x="215.0" y="1075.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="218.0" y="1086.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.05%)</title><rect x="215.0" y="1059.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.0" y="1070.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="215.0" y="1043.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="218.0" y="1054.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 1.26%)</title><rect x="215.6" y="1139.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.6" y="1150.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.84%)</title><rect x="216.9" y="1123.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.9" y="1134.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (4 samples, 0.21%)</title><rect x="216.9" y="1107.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="219.9" y="1118.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.21%)</title><rect x="216.9" y="1091.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="219.9" y="1102.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.21%)</title><rect x="216.9" y="1075.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.9" y="1086.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="219.4" y="1107.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="222.4" y="1118.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="220.0" y="1107.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="223.0" y="1118.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.52%)</title><rect x="220.6" y="1107.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="223.6" y="1118.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.52%)</title><rect x="220.6" y="1091.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="223.6" y="1102.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.42%)</title><rect x="221.8" y="1075.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="224.8" y="1086.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.16%)</title><rect x="226.8" y="1123.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.8" y="1134.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="228.0" y="1107.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="231.0" y="1118.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.16%)</title><rect x="228.7" y="1123.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="231.7" y="1134.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.16%)</title><rect x="228.7" y="1107.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="231.7" y="1118.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="228.7" y="1091.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.7" y="1102.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.05%)</title><rect x="229.9" y="1091.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.9" y="1102.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.21%)</title><rect x="230.5" y="1171.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="233.5" y="1182.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="231.8" y="1155.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.8" y="1166.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="232.4" y="1155.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="235.4" y="1166.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.10%)</title><rect x="233.0" y="1171.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="236.0" y="1182.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="233.6" y="1155.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.6" y="1166.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="233.6" y="1139.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="236.6" y="1150.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="234.2" y="1187.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.2" y="1198.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.16%)</title><rect x="234.9" y="1219.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="237.9" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="236.7" y="1219.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (50 samples, 2.62%)</title><rect x="237.3" y="1267.0" width="31.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.3" y="1278.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.21%)</title><rect x="265.8" y="1251.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.21%)</title><rect x="265.8" y="1235.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (14 samples, 0.73%)</title><rect x="268.3" y="1267.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.3" y="1278.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.10%)</title><rect x="272.6" y="1251.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="275.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.10%)</title><rect x="273.9" y="1251.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.9" y="1262.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.16%)</title><rect x="275.1" y="1251.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="278.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$377/1207993149.run (137 samples, 7.19%)</title><rect x="277.0" y="1315.0" width="84.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.0" y="1326.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (137 samples, 7.19%)</title><rect x="277.0" y="1299.0" width="84.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.0" y="1310.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (137 samples, 7.19%)</title><rect x="277.0" y="1283.0" width="84.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="280.0" y="1294.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (136 samples, 7.14%)</title><rect x="277.0" y="1267.0" width="84.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.0" y="1278.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.theExecutor (1 samples, 0.05%)</title><rect x="277.0" y="1251.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.0" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="277.0" y="1235.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="280.0" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="277.0" y="1219.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.0" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="277.0" y="1203.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="280.0" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="277.0" y="1187.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="280.0" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="277.0" y="1171.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="280.0" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="277.0" y="1155.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="280.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (135 samples, 7.09%)</title><rect x="277.6" y="1251.0" width="83.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.6" y="1262.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (135 samples, 7.09%)</title><rect x="277.6" y="1235.0" width="83.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.6" y="1246.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (133 samples, 6.98%)</title><rect x="277.6" y="1219.0" width="82.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.6" y="1230.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (133 samples, 6.98%)</title><rect x="277.6" y="1203.0" width="82.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.6" y="1214.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (131 samples, 6.88%)</title><rect x="278.8" y="1187.0" width="81.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.8" y="1198.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="278.8" y="1171.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.05%)</title><rect x="278.8" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.05%)</title><rect x="278.8" y="1139.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (129 samples, 6.77%)</title><rect x="279.4" y="1171.0" width="80.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.4" y="1182.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (128 samples, 6.72%)</title><rect x="280.1" y="1155.0" width="79.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.1" y="1166.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (29 samples, 1.52%)</title><rect x="281.3" y="1139.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (27 samples, 1.42%)</title><rect x="282.5" y="1123.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 1.42%)</title><rect x="282.5" y="1107.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (21 samples, 1.10%)</title><rect x="282.5" y="1091.0" width="13.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.10%)</title><rect x="282.5" y="1075.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.5" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="283.2" y="1059.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="286.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 1.00%)</title><rect x="283.8" y="1075.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.26%)</title><rect x="283.8" y="1059.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.10%)</title><rect x="283.8" y="1043.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.8" y="1054.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/923219673.apply (1 samples, 0.05%)</title><rect x="283.8" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/1520963950.apply (1 samples, 0.05%)</title><rect x="284.4" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$405/1520963950.apply (3 samples, 0.16%)</title><rect x="285.0" y="1043.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.16%)</title><rect x="285.0" y="1027.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.16%)</title><rect x="285.0" y="1011.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.16%)</title><rect x="285.0" y="995.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="285.0" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="285.0" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$413/1220165597.get$Lambda (1 samples, 0.05%)</title><rect x="285.0" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.10%)</title><rect x="285.6" y="979.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.10%)</title><rect x="285.6" y="963.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.10%)</title><rect x="285.6" y="947.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$301/1299234764.apply (2 samples, 0.10%)</title><rect x="285.6" y="931.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (2 samples, 0.10%)</title><rect x="285.6" y="915.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.10%)</title><rect x="285.6" y="899.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.10%)</title><rect x="285.6" y="883.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.10%)</title><rect x="285.6" y="867.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2 samples, 0.10%)</title><rect x="285.6" y="851.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.10%)</title><rect x="285.6" y="835.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (2 samples, 0.10%)</title><rect x="285.6" y="819.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.6" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (2 samples, 0.10%)</title><rect x="285.6" y="803.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.58%)</title><rect x="286.9" y="1059.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.58%)</title><rect x="286.9" y="1043.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.05%)</title><rect x="287.5" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/533652067.apply (1 samples, 0.05%)</title><rect x="287.5" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$358/533652067.apply (9 samples, 0.47%)</title><rect x="288.1" y="1027.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.05%)</title><rect x="288.7" y="1011.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="291.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.37%)</title><rect x="289.4" y="1011.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.37%)</title><rect x="289.4" y="995.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="292.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/333725311.apply (3 samples, 0.16%)</title><rect x="289.4" y="979.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3 samples, 0.16%)</title><rect x="289.4" y="963.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.10%)</title><rect x="289.4" y="947.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.10%)</title><rect x="289.4" y="931.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="289.4" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.05%)</title><rect x="289.4" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="292.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="290.0" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="290.0" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.05%)</title><rect x="290.6" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="290.6" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="290.6" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="293.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="290.6" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="293.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="290.6" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/1588773889.apply (4 samples, 0.21%)</title><rect x="291.2" y="979.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (4 samples, 0.21%)</title><rect x="291.2" y="963.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4 samples, 0.21%)</title><rect x="291.2" y="947.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (4 samples, 0.21%)</title><rect x="291.2" y="931.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (3 samples, 0.16%)</title><rect x="291.2" y="915.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.05%)</title><rect x="293.1" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="293.7" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.05%)</title><rect x="293.7" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.05%)</title><rect x="293.7" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.05%)</title><rect x="293.7" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.05%)</title><rect x="294.3" y="1059.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="294.3" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="294.3" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.05%)</title><rect x="294.3" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.05%)</title><rect x="294.3" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="297.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.05%)</title><rect x="294.3" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.05%)</title><rect x="294.3" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="294.3" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="294.3" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="297.3" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="294.3" y="915.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.3" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="294.3" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="294.3" y="883.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="297.3" y="894.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="294.3" y="867.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="297.3" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="294.3" y="851.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="297.3" y="862.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.05%)</title><rect x="294.3" y="835.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="297.3" y="846.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="294.9" y="1059.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="297.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.31%)</title><rect x="295.6" y="1091.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.31%)</title><rect x="295.6" y="1075.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.31%)</title><rect x="295.6" y="1059.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.31%)</title><rect x="295.6" y="1043.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.31%)</title><rect x="295.6" y="1027.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (6 samples, 0.31%)</title><rect x="295.6" y="1011.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (6 samples, 0.31%)</title><rect x="295.6" y="995.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="298.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (6 samples, 0.31%)</title><rect x="295.6" y="979.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.05%)</title><rect x="298.7" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.16%)</title><rect x="299.3" y="1139.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.16%)</title><rect x="299.3" y="1123.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.16%)</title><rect x="299.3" y="1107.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (1 samples, 0.05%)</title><rect x="300.5" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (94 samples, 4.93%)</title><rect x="301.1" y="1139.0" width="58.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.1" y="1150.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (94 samples, 4.93%)</title><rect x="301.1" y="1123.0" width="58.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.1" y="1134.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (94 samples, 4.93%)</title><rect x="301.1" y="1107.0" width="58.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.1" y="1118.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (94 samples, 4.93%)</title><rect x="301.1" y="1091.0" width="58.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.1" y="1102.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$388/402908570.run (4 samples, 0.21%)</title><rect x="301.1" y="1075.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.21%)</title><rect x="301.1" y="1059.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4 samples, 0.21%)</title><rect x="301.1" y="1043.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (3 samples, 0.16%)</title><rect x="301.7" y="1027.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.theExecutor (1 samples, 0.05%)</title><rect x="302.4" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.05%)</title><rect x="303.0" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.05%)</title><rect x="303.0" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.05%)</title><rect x="303.0" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (90 samples, 4.72%)</title><rect x="303.6" y="1075.0" width="55.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.6" y="1086.0">jdk/i..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (89 samples, 4.67%)</title><rect x="303.6" y="1059.0" width="55.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="306.6" y="1070.0">java/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (89 samples, 4.67%)</title><rect x="303.6" y="1043.0" width="55.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.6" y="1054.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (89 samples, 4.67%)</title><rect x="303.6" y="1027.0" width="55.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.6" y="1038.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (89 samples, 4.67%)</title><rect x="303.6" y="1011.0" width="55.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.6" y="1022.0">sun/n..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="304.2" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.05%)</title><rect x="304.2" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.2" y="990.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.05%)</title><rect x="304.2" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="307.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="304.2" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.2" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="304.2" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.2" y="942.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="304.2" y="915.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="307.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.16%)</title><rect x="304.8" y="995.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (1 samples, 0.05%)</title><rect x="304.8" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="304.8" y="963.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="307.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (1 samples, 0.05%)</title><rect x="304.8" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.insert (1 samples, 0.05%)</title><rect x="304.8" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.&lt;init&gt; (2 samples, 0.10%)</title><rect x="305.5" y="979.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="308.5" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/AllocatedNativeObject.&lt;init&gt; (1 samples, 0.05%)</title><rect x="306.1" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (1 samples, 0.05%)</title><rect x="306.7" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.7" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (83 samples, 4.36%)</title><rect x="307.3" y="995.0" width="51.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.3" y="1006.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (83 samples, 4.36%)</title><rect x="307.3" y="979.0" width="51.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.3" y="990.0">sun/n..</text>
</g>
<g>
<title>[unknown] (82 samples, 4.30%)</title><rect x="307.9" y="963.0" width="50.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="310.9" y="974.0">[unkn..</text>
</g>
<g>
<title>[unknown] (82 samples, 4.30%)</title><rect x="307.9" y="947.0" width="50.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="310.9" y="958.0">[unkn..</text>
</g>
<g>
<title>__GI___writev (82 samples, 4.30%)</title><rect x="307.9" y="931.0" width="50.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="310.9" y="942.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 4.09%)</title><rect x="310.4" y="915.0" width="48.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.4" y="926.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (78 samples, 4.09%)</title><rect x="310.4" y="899.0" width="48.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.4" y="910.0">do_s..</text>
</g>
<g>
<title>__x64_sys_writev (78 samples, 4.09%)</title><rect x="310.4" y="883.0" width="48.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="313.4" y="894.0">__x6..</text>
</g>
<g>
<title>do_writev (78 samples, 4.09%)</title><rect x="310.4" y="867.0" width="48.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="313.4" y="878.0">do_w..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="310.4" y="851.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.4" y="862.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="310.4" y="835.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.4" y="846.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="310.4" y="819.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.4" y="830.0"></text>
</g>
<g>
<title>vfs_writev (77 samples, 4.04%)</title><rect x="311.0" y="851.0" width="47.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.0" y="862.0">vfs_..</text>
</g>
<g>
<title>do_iter_write (76 samples, 3.99%)</title><rect x="311.0" y="835.0" width="47.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.0" y="846.0">do_i..</text>
</g>
<g>
<title>do_iter_readv_writev (74 samples, 3.88%)</title><rect x="311.0" y="819.0" width="45.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.0" y="830.0">do_i..</text>
</g>
<g>
<title>sock_write_iter (74 samples, 3.88%)</title><rect x="311.0" y="803.0" width="45.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.0" y="814.0">sock..</text>
</g>
<g>
<title>sock_sendmsg (74 samples, 3.88%)</title><rect x="311.0" y="787.0" width="45.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="314.0" y="798.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (73 samples, 3.83%)</title><rect x="311.0" y="771.0" width="45.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.0" y="782.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (73 samples, 3.83%)</title><rect x="311.0" y="755.0" width="45.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.0" y="766.0">tcp_..</text>
</g>
<g>
<title>tcp_sendmsg_locked (73 samples, 3.83%)</title><rect x="311.0" y="739.0" width="45.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="314.0" y="750.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.16%)</title><rect x="311.7" y="723.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="314.7" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.16%)</title><rect x="311.7" y="707.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="314.7" y="718.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.05%)</title><rect x="311.7" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.7" y="702.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="311.7" y="675.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.7" y="686.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="312.3" y="691.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="315.3" y="702.0"></text>
</g>
<g>
<title>tcp_push (68 samples, 3.57%)</title><rect x="313.5" y="723.0" width="42.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="316.5" y="734.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (68 samples, 3.57%)</title><rect x="313.5" y="707.0" width="42.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="316.5" y="718.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (68 samples, 3.57%)</title><rect x="313.5" y="691.0" width="42.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.5" y="702.0">tcp_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="314.8" y="675.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.8" y="686.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (64 samples, 3.36%)</title><rect x="315.4" y="675.0" width="39.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="318.4" y="686.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (63 samples, 3.31%)</title><rect x="316.0" y="659.0" width="39.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.0" y="670.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (63 samples, 3.31%)</title><rect x="316.0" y="643.0" width="39.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.0" y="654.0">__i..</text>
</g>
<g>
<title>ip_local_out (62 samples, 3.25%)</title><rect x="316.0" y="627.0" width="38.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="319.0" y="638.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.42%)</title><rect x="316.0" y="611.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="319.0" y="622.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="316.0" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="319.0" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="316.6" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.6" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="317.2" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.2" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.26%)</title><rect x="317.9" y="595.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="320.9" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.10%)</title><rect x="317.9" y="579.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.9" y="590.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="317.9" y="563.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="320.9" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.16%)</title><rect x="319.1" y="579.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.1" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.16%)</title><rect x="319.1" y="563.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.1" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.10%)</title><rect x="319.1" y="547.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="322.1" y="558.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="320.3" y="547.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="323.3" y="558.0"></text>
</g>
<g>
<title>ip_output (54 samples, 2.83%)</title><rect x="321.0" y="611.0" width="33.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="324.0" y="622.0">ip..</text>
</g>
<g>
<title>ip_finish_output (53 samples, 2.78%)</title><rect x="321.0" y="595.0" width="32.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.0" y="606.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (53 samples, 2.78%)</title><rect x="321.0" y="579.0" width="32.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.0" y="590.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 2.78%)</title><rect x="321.0" y="563.0" width="32.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.0" y="574.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (49 samples, 2.57%)</title><rect x="321.6" y="547.0" width="30.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="324.6" y="558.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (48 samples, 2.52%)</title><rect x="322.2" y="531.0" width="29.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="325.2" y="542.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (48 samples, 2.52%)</title><rect x="322.2" y="515.0" width="29.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="325.2" y="526.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (48 samples, 2.52%)</title><rect x="322.2" y="499.0" width="29.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="325.2" y="510.0">__..</text>
</g>
<g>
<title>net_rx_action (48 samples, 2.52%)</title><rect x="322.2" y="483.0" width="29.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="325.2" y="494.0">ne..</text>
</g>
<g>
<title>process_backlog (47 samples, 2.47%)</title><rect x="322.8" y="467.0" width="29.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="325.8" y="478.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 2.41%)</title><rect x="323.4" y="451.0" width="28.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="326.4" y="462.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 2.41%)</title><rect x="323.4" y="435.0" width="28.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.4" y="446.0">__..</text>
</g>
<g>
<title>ip_rcv (44 samples, 2.31%)</title><rect x="323.4" y="419.0" width="27.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.4" y="430.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (43 samples, 2.26%)</title><rect x="323.4" y="403.0" width="26.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.4" y="414.0">i..</text>
</g>
<g>
<title>ip_local_deliver (42 samples, 2.20%)</title><rect x="323.4" y="387.0" width="26.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.4" y="398.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 2.05%)</title><rect x="323.4" y="371.0" width="24.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.4" y="382.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (38 samples, 1.99%)</title><rect x="324.0" y="355.0" width="23.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.0" y="366.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (38 samples, 1.99%)</title><rect x="324.0" y="339.0" width="23.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="327.0" y="350.0">t..</text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 1.94%)</title><rect x="324.7" y="323.0" width="22.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="327.7" y="334.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 1.94%)</title><rect x="324.7" y="307.0" width="22.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="327.7" y="318.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.16%)</title><rect x="325.3" y="291.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.3" y="302.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.16%)</title><rect x="325.3" y="275.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.3" y="286.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.16%)</title><rect x="325.3" y="259.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.3" y="270.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.16%)</title><rect x="325.3" y="243.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="328.3" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.16%)</title><rect x="325.3" y="227.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.3" y="238.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.58%)</title><rect x="327.1" y="291.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="330.1" y="302.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="328.4" y="275.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.4" y="286.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="329.0" y="275.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.0" y="286.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.26%)</title><rect x="329.6" y="275.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.6" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.16%)</title><rect x="330.9" y="259.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.9" y="270.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.16%)</title><rect x="330.9" y="243.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.9" y="254.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.16%)</title><rect x="330.9" y="227.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="333.9" y="238.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="332.1" y="211.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="335.1" y="222.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="332.1" y="195.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="335.1" y="206.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.10%)</title><rect x="332.7" y="275.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="335.7" y="286.0"></text>
</g>
<g>
<title>tcp_data_ready (21 samples, 1.10%)</title><rect x="334.0" y="291.0" width="13.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="337.0" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (21 samples, 1.10%)</title><rect x="334.0" y="275.0" width="13.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="337.0" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (21 samples, 1.10%)</title><rect x="334.0" y="259.0" width="13.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="337.0" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 1.10%)</title><rect x="334.0" y="243.0" width="13.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="337.0" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (21 samples, 1.10%)</title><rect x="334.0" y="227.0" width="13.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.0" y="238.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.05%)</title><rect x="347.0" y="291.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.0" y="302.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.10%)</title><rect x="347.6" y="371.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="350.6" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="348.8" y="371.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="351.8" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="348.8" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="351.8" y="366.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="348.8" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="351.8" y="350.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.05%)</title><rect x="349.4" y="387.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.4" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="350.1" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="353.1" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="350.1" y="387.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="353.1" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="350.1" y="371.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="353.1" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="350.7" y="419.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.7" y="430.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.16%)</title><rect x="351.9" y="547.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="354.9" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.16%)</title><rect x="351.9" y="531.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.9" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.10%)</title><rect x="352.5" y="515.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="355.5" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="352.5" y="499.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="355.5" y="510.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="353.2" y="499.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.2" y="510.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="353.2" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.2" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="353.8" y="595.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.8" y="606.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="353.8" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="356.8" y="590.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="353.8" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.8" y="574.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="354.4" y="627.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.4" y="638.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="355.0" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="358.0" y="686.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="355.0" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.0" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="355.0" y="643.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.0" y="654.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="355.0" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.0" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="355.0" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="358.0" y="622.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="355.6" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.6" y="734.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="355.6" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="358.6" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="356.3" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.3" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="356.3" y="755.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.3" y="766.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="356.3" y="739.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="359.3" y="750.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="356.9" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="359.9" y="830.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="356.9" y="803.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="359.9" y="814.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="356.9" y="787.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="359.9" y="798.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="356.9" y="771.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="359.9" y="782.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.05%)</title><rect x="357.5" y="819.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="360.5" y="830.0"></text>
</g>
<g>
<title>import_iovec (1 samples, 0.05%)</title><rect x="358.1" y="835.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="361.1" y="846.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (1 samples, 0.05%)</title><rect x="358.1" y="819.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="361.1" y="830.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="358.1" y="803.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.1" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.05%)</title><rect x="358.7" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.05%)</title><rect x="358.7" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="359.4" y="1171.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.10%)</title><rect x="360.0" y="1219.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="360.6" y="1203.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (1 samples, 0.05%)</title><rect x="361.2" y="1267.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.05%)</title><rect x="361.2" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (165 samples, 8.66%)</title><rect x="361.8" y="1315.0" width="102.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.8" y="1326.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (165 samples, 8.66%)</title><rect x="361.8" y="1299.0" width="102.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.8" y="1310.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (86 samples, 4.51%)</title><rect x="362.5" y="1283.0" width="53.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.5" y="1294.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (85 samples, 4.46%)</title><rect x="363.1" y="1267.0" width="52.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.1" y="1278.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (85 samples, 4.46%)</title><rect x="363.1" y="1251.0" width="52.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.1" y="1262.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (13 samples, 0.68%)</title><rect x="364.3" y="1235.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (13 samples, 0.68%)</title><rect x="364.3" y="1219.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="367.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13 samples, 0.68%)</title><rect x="364.3" y="1203.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13 samples, 0.68%)</title><rect x="364.3" y="1187.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/534906248.linkToTargetMethod (2 samples, 0.10%)</title><rect x="364.3" y="1171.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/363988129.invoke (2 samples, 0.10%)</title><rect x="364.3" y="1155.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1708570683.invokeStatic (1 samples, 0.05%)</title><rect x="364.3" y="1139.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="367.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="364.3" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="367.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.05%)</title><rect x="364.3" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/689401025.invokeStatic (1 samples, 0.05%)</title><rect x="364.9" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.05%)</title><rect x="364.9" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.05%)</title><rect x="364.9" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.47%)</title><rect x="365.5" y="1171.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="365.5" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (1 samples, 0.05%)</title><rect x="365.5" y="1139.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8 samples, 0.42%)</title><rect x="366.2" y="1155.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (7 samples, 0.37%)</title><rect x="366.8" y="1139.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (7 samples, 0.37%)</title><rect x="366.8" y="1123.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="369.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.31%)</title><rect x="367.4" y="1107.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.4" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="367.4" y="1091.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="370.4" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.10%)</title><rect x="367.4" y="1075.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="370.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.10%)</title><rect x="367.4" y="1059.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="370.4" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.10%)</title><rect x="367.4" y="1043.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="370.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.21%)</title><rect x="368.6" y="1091.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.21%)</title><rect x="368.6" y="1075.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.21%)</title><rect x="368.6" y="1059.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="371.6" y="1070.0"></text>
</g>
<g>
<title>__GI_write (4 samples, 0.21%)</title><rect x="368.6" y="1043.0" width="2.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="371.6" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="368.6" y="1027.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="371.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="368.6" y="1011.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.6" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.21%)</title><rect x="368.6" y="995.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="371.6" y="1006.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.21%)</title><rect x="368.6" y="979.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="371.6" y="990.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.21%)</title><rect x="368.6" y="963.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.6" y="974.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.16%)</title><rect x="368.6" y="947.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.6" y="958.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.16%)</title><rect x="368.6" y="931.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.6" y="942.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.16%)</title><rect x="368.6" y="915.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.6" y="926.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.10%)</title><rect x="368.6" y="899.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.6" y="910.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="368.6" y="883.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.6" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="368.6" y="867.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="371.6" y="878.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="369.9" y="899.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.9" y="910.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="370.5" y="947.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="373.5" y="958.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="370.5" y="931.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="373.5" y="942.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="370.5" y="915.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="373.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.05%)</title><rect x="371.1" y="1171.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.05%)</title><rect x="371.7" y="1171.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.05%)</title><rect x="371.7" y="1155.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.05%)</title><rect x="371.7" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (70 samples, 3.67%)</title><rect x="372.4" y="1235.0" width="43.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="375.4" y="1246.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.10%)</title><rect x="372.4" y="1219.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (68 samples, 3.57%)</title><rect x="373.6" y="1219.0" width="42.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.6" y="1230.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (68 samples, 3.57%)</title><rect x="373.6" y="1203.0" width="42.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.6" y="1214.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (68 samples, 3.57%)</title><rect x="373.6" y="1187.0" width="42.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.6" y="1198.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (43 samples, 2.26%)</title><rect x="373.6" y="1171.0" width="26.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.6" y="1182.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (43 samples, 2.26%)</title><rect x="373.6" y="1155.0" width="26.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.6" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (43 samples, 2.26%)</title><rect x="373.6" y="1139.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.6" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (43 samples, 2.26%)</title><rect x="373.6" y="1123.0" width="26.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="376.6" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (43 samples, 2.26%)</title><rect x="373.6" y="1107.0" width="26.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.6" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (42 samples, 2.20%)</title><rect x="373.6" y="1091.0" width="26.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.6" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (41 samples, 2.15%)</title><rect x="374.2" y="1075.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="377.2" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.10%)</title><rect x="374.2" y="1059.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="377.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.10%)</title><rect x="374.2" y="1043.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.10%)</title><rect x="374.2" y="1027.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.05%)</title><rect x="375.5" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.5" y="1070.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="375.5" y="1043.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="378.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (34 samples, 1.78%)</title><rect x="376.1" y="1059.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.1" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (34 samples, 1.78%)</title><rect x="376.1" y="1043.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.1" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (31 samples, 1.63%)</title><rect x="376.1" y="1027.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.10%)</title><rect x="376.1" y="1011.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.1" y="1022.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/923219673.apply (1 samples, 0.05%)</title><rect x="376.1" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$411/400399565.apply (1 samples, 0.05%)</title><rect x="376.7" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/547892778.apply (23 samples, 1.21%)</title><rect x="377.3" y="1011.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (23 samples, 1.21%)</title><rect x="377.3" y="995.0" width="14.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="380.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (23 samples, 1.21%)</title><rect x="377.3" y="979.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="380.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="377.3" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="377.3" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="377.3" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="377.3" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (22 samples, 1.15%)</title><rect x="377.9" y="963.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (22 samples, 1.15%)</title><rect x="377.9" y="947.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (12 samples, 0.63%)</title><rect x="377.9" y="931.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.9" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.21%)</title><rect x="377.9" y="915.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.9" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="378.6" y="899.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="378.6" y="883.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.6" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="378.6" y="867.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="381.6" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.10%)</title><rect x="378.6" y="851.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="381.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="378.6" y="835.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="379.2" y="819.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="379.2" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.05%)</title><rect x="379.2" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.2" y="798.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.05%)</title><rect x="379.8" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.8" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="380.4" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.4" y="926.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.05%)</title><rect x="380.4" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.4" y="910.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="380.4" y="883.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.37%)</title><rect x="381.0" y="915.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.37%)</title><rect x="381.0" y="899.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.37%)</title><rect x="381.0" y="883.0" width="4.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.0" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.37%)</title><rect x="381.0" y="867.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.31%)</title><rect x="381.0" y="851.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.31%)</title><rect x="381.0" y="835.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.0" y="846.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.05%)</title><rect x="381.0" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.0" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.estimateSize (1 samples, 0.05%)</title><rect x="381.0" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.0" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (1 samples, 0.05%)</title><rect x="381.0" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.0" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="381.0" y="771.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="384.0" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.16%)</title><rect x="381.7" y="819.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="384.7" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="382.3" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.05%)</title><rect x="382.3" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.05%)</title><rect x="382.9" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.cancellationRequested (1 samples, 0.05%)</title><rect x="382.9" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.05%)</title><rect x="383.5" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.5" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="383.5" y="803.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="386.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.05%)</title><rect x="384.1" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.1" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="384.1" y="803.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="387.1" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.05%)</title><rect x="384.8" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (1 samples, 0.05%)</title><rect x="384.8" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.8" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="384.8" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.05%)</title><rect x="384.8" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="385.4" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="385.4" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="385.4" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="385.4" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.47%)</title><rect x="386.0" y="931.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$429/1981871911.run (9 samples, 0.47%)</title><rect x="386.0" y="915.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.42%)</title><rect x="386.6" y="899.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="386.6" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="389.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="386.6" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$438/1212985765.get$Lambda (1 samples, 0.05%)</title><rect x="386.6" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="389.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$438/1212985765.&lt;init&gt; (1 samples, 0.05%)</title><rect x="386.6" y="835.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (1 samples, 0.05%)</title><rect x="387.2" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (4 samples, 0.21%)</title><rect x="387.8" y="883.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.21%)</title><rect x="387.8" y="867.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.8" y="878.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (4 samples, 0.21%)</title><rect x="387.8" y="851.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.8" y="862.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.21%)</title><rect x="387.8" y="835.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.8" y="846.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.21%)</title><rect x="387.8" y="819.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.8" y="830.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.10%)</title><rect x="387.8" y="803.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="390.8" y="814.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="387.8" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="390.8" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="388.5" y="787.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="391.5" y="798.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="388.5" y="771.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="391.5" y="782.0"></text>
</g>
<g>
<title>JVM_IHashCode@plt (1 samples, 0.05%)</title><rect x="389.1" y="803.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="392.1" y="814.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.05%)</title><rect x="389.7" y="803.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="392.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.05%)</title><rect x="390.3" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.05%)</title><rect x="390.9" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.05%)</title><rect x="390.9" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.05%)</title><rect x="390.9" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.05%)</title><rect x="390.9" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.05%)</title><rect x="390.9" y="819.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.05%)</title><rect x="390.9" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.05%)</title><rect x="390.9" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/388445390.apply (6 samples, 0.31%)</title><rect x="391.6" y="1011.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (6 samples, 0.31%)</title><rect x="391.6" y="995.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (6 samples, 0.31%)</title><rect x="391.6" y="979.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.6" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (1 samples, 0.05%)</title><rect x="392.2" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.2" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="392.2" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.2" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="392.2" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="395.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (4 samples, 0.21%)</title><rect x="392.8" y="963.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.21%)</title><rect x="392.8" y="947.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.8" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="392.8" y="931.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="395.8" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="392.8" y="915.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="395.8" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.16%)</title><rect x="393.4" y="931.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.05%)</title><rect x="393.4" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.4" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.10%)</title><rect x="394.0" y="915.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.10%)</title><rect x="394.0" y="899.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.0" y="910.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.05%)</title><rect x="394.0" y="883.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="397.0" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="394.0" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="397.0" y="878.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="394.7" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="397.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.10%)</title><rect x="395.3" y="1027.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="398.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.05%)</title><rect x="395.9" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="398.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$364/853251833.apply (1 samples, 0.05%)</title><rect x="395.9" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.05%)</title><rect x="395.9" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1 samples, 0.05%)</title><rect x="395.9" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="398.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1 samples, 0.05%)</title><rect x="395.9" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.05%)</title><rect x="395.9" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.9" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.05%)</title><rect x="395.9" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.9" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.05%)</title><rect x="395.9" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.9" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.05%)</title><rect x="395.9" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.05%)</title><rect x="395.9" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="398.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="396.5" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$413/1220165597.apply (4 samples, 0.21%)</title><rect x="397.1" y="1059.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (4 samples, 0.21%)</title><rect x="397.1" y="1043.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.10%)</title><rect x="397.8" y="1027.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="399.0" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="402.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="399.0" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.channel (1 samples, 0.05%)</title><rect x="399.0" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="399.6" y="1091.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="399.6" y="1075.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="399.6" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="399.6" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.05%)</title><rect x="399.6" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.05%)</title><rect x="399.6" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.05%)</title><rect x="399.6" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (24 samples, 1.26%)</title><rect x="400.2" y="1171.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.05%)</title><rect x="401.5" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.05%)</title><rect x="402.1" y="1155.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="405.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (2 samples, 0.10%)</title><rect x="402.7" y="1155.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.10%)</title><rect x="404.0" y="1155.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.05%)</title><rect x="405.2" y="1155.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (1 samples, 0.05%)</title><rect x="405.8" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="405.8" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4 samples, 0.21%)</title><rect x="406.4" y="1155.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="409.4" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.16%)</title><rect x="406.4" y="1139.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.4" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.16%)</title><rect x="406.4" y="1123.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.4" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.05%)</title><rect x="406.4" y="1107.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="409.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.10%)</title><rect x="407.0" y="1107.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.0" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$160/1124632415.accept (2 samples, 0.10%)</title><rect x="407.0" y="1091.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="410.0" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.10%)</title><rect x="407.0" y="1075.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.0" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.05%)</title><rect x="407.0" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.0" y="1070.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.05%)</title><rect x="407.7" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.7" y="1070.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.05%)</title><rect x="407.7" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.7" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (1 samples, 0.05%)</title><rect x="407.7" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="407.7" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="408.3" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.05%)</title><rect x="408.3" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.05%)</title><rect x="408.3" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (10 samples, 0.52%)</title><rect x="408.9" y="1155.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.10%)</title><rect x="408.9" y="1139.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.newString (2 samples, 0.10%)</title><rect x="408.9" y="1123.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="409.5" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 0.42%)</title><rect x="410.1" y="1139.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="410.1" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="410.8" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="410.8" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.16%)</title><rect x="411.4" y="1123.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="412.6" y="1107.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="412.6" y="1091.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="415.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="412.6" y="1075.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="413.2" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.2" y="1134.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="413.2" y="1107.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="416.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.10%)</title><rect x="413.9" y="1123.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="416.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.10%)</title><rect x="413.9" y="1107.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.9" y="1118.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.05%)</title><rect x="414.5" y="1091.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="417.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$325/516518614.accept (1 samples, 0.05%)</title><rect x="415.1" y="1171.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.05%)</title><rect x="415.1" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.05%)</title><rect x="415.1" y="1139.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (78 samples, 4.09%)</title><rect x="415.7" y="1283.0" width="48.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.7" y="1294.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.05%)</title><rect x="415.7" y="1267.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (77 samples, 4.04%)</title><rect x="416.3" y="1267.0" width="47.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.3" y="1278.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (76 samples, 3.99%)</title><rect x="416.3" y="1251.0" width="47.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.3" y="1262.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$292/41133781.run (76 samples, 3.99%)</title><rect x="416.3" y="1235.0" width="47.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.3" y="1246.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (76 samples, 3.99%)</title><rect x="416.3" y="1219.0" width="47.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.3" y="1230.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (74 samples, 3.88%)</title><rect x="416.3" y="1203.0" width="45.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.3" y="1214.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (3 samples, 0.16%)</title><rect x="416.3" y="1187.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.16%)</title><rect x="416.3" y="1171.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.16%)</title><rect x="416.3" y="1155.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (71 samples, 3.73%)</title><rect x="418.2" y="1187.0" width="44.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.2" y="1198.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (71 samples, 3.73%)</title><rect x="418.2" y="1171.0" width="44.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.2" y="1182.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$434/1948962483.run (29 samples, 1.52%)</title><rect x="418.8" y="1155.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (28 samples, 1.47%)</title><rect x="419.4" y="1139.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (28 samples, 1.47%)</title><rect x="419.4" y="1123.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.4" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.37%)</title><rect x="419.4" y="1107.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.4" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.10%)</title><rect x="419.4" y="1091.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.4" y="1102.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="419.4" y="1075.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.4" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="419.4" y="1059.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.4" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="419.4" y="1043.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.05%)</title><rect x="419.4" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (1 samples, 0.05%)</title><rect x="419.4" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="420.1" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.21%)</title><rect x="420.7" y="1091.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.21%)</title><rect x="420.7" y="1075.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.21%)</title><rect x="420.7" y="1059.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.7" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.21%)</title><rect x="420.7" y="1043.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.7" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.21%)</title><rect x="420.7" y="1027.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.7" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="421.9" y="1011.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="424.9" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="421.9" y="995.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.9" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="421.9" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="424.9" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="421.9" y="963.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.9" y="974.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.05%)</title><rect x="421.9" y="947.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.9" y="958.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.05%)</title><rect x="421.9" y="931.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="424.9" y="942.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.05%)</title><rect x="421.9" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="424.9" y="926.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.05%)</title><rect x="421.9" y="899.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.9" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="421.9" y="883.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.9" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="421.9" y="867.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="424.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.cancellationRequested (1 samples, 0.05%)</title><rect x="422.5" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.5" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.05%)</title><rect x="423.2" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.05%)</title><rect x="423.2" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="423.2" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.05%)</title><rect x="423.2" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.05%)</title><rect x="423.2" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.05%)</title><rect x="423.2" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="426.2" y="1022.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.05%)</title><rect x="423.2" y="995.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (21 samples, 1.10%)</title><rect x="423.8" y="1107.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.8" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.10%)</title><rect x="423.8" y="1091.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="426.8" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.10%)</title><rect x="423.8" y="1075.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="423.8" y="1059.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.8" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="423.8" y="1043.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="426.8" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="424.4" y="1043.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="427.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (19 samples, 1.00%)</title><rect x="425.0" y="1091.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.0" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="425.6" y="1075.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="428.6" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="425.6" y="1059.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="428.6" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="425.6" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="428.6" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="425.6" y="1027.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="428.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (4 samples, 0.21%)</title><rect x="426.3" y="1075.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.3" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.16%)</title><rect x="426.3" y="1059.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.3" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.16%)</title><rect x="426.3" y="1043.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.3" y="1054.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.16%)</title><rect x="426.3" y="1027.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="429.3" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.05%)</title><rect x="427.5" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.5" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.05%)</title><rect x="427.5" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="430.5" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (1 samples, 0.05%)</title><rect x="428.1" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.1" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (1 samples, 0.05%)</title><rect x="428.1" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.10%)</title><rect x="428.7" y="1075.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="428.7" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="428.7" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.05%)</title><rect x="428.7" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.05%)</title><rect x="428.7" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="431.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.05%)</title><rect x="428.7" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.7" y="1006.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.05%)</title><rect x="428.7" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.7" y="990.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.05%)</title><rect x="428.7" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="429.3" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="429.3" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (11 samples, 0.58%)</title><rect x="430.0" y="1075.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.58%)</title><rect x="430.0" y="1059.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="433.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.05%)</title><rect x="430.0" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.05%)</title><rect x="430.0" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="430.0" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.05%)</title><rect x="430.0" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="433.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (10 samples, 0.52%)</title><rect x="430.6" y="1043.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (10 samples, 0.52%)</title><rect x="430.6" y="1027.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (10 samples, 0.52%)</title><rect x="430.6" y="1011.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (10 samples, 0.52%)</title><rect x="430.6" y="995.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.52%)</title><rect x="430.6" y="979.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="433.6" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="430.6" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="433.6" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="430.6" y="947.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="433.6" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="430.6" y="931.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="433.6" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="430.6" y="915.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="433.6" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="431.2" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.2" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.42%)</title><rect x="431.8" y="963.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.42%)</title><rect x="431.8" y="947.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.42%)</title><rect x="431.8" y="931.0" width="5.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="434.8" y="942.0"></text>
</g>
<g>
<title>__GI_write (8 samples, 0.42%)</title><rect x="431.8" y="915.0" width="5.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="434.8" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.42%)</title><rect x="431.8" y="899.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="434.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.42%)</title><rect x="431.8" y="883.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="434.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_write (7 samples, 0.37%)</title><rect x="431.8" y="867.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.8" y="878.0"></text>
</g>
<g>
<title>ksys_write (7 samples, 0.37%)</title><rect x="431.8" y="851.0" width="4.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="434.8" y="862.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.10%)</title><rect x="431.8" y="835.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="434.8" y="846.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="431.8" y="819.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.8" y="830.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="432.4" y="803.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.4" y="814.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.26%)</title><rect x="433.1" y="835.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.1" y="846.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 0.21%)</title><rect x="433.1" y="819.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.1" y="830.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.21%)</title><rect x="433.1" y="803.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="436.1" y="814.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.21%)</title><rect x="433.1" y="787.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.1" y="798.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.10%)</title><rect x="433.1" y="771.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="436.1" y="782.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="433.1" y="755.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.1" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="433.1" y="739.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.1" y="750.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.05%)</title><rect x="434.3" y="771.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="437.3" y="782.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="434.9" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.9" y="782.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="435.5" y="819.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="438.5" y="830.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="435.5" y="803.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="438.5" y="814.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="436.2" y="867.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="439.2" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="436.2" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$438/1212985765.accept (4 samples, 0.21%)</title><rect x="436.8" y="1155.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (3 samples, 0.16%)</title><rect x="437.4" y="1139.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (3 samples, 0.16%)</title><rect x="437.4" y="1123.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.16%)</title><rect x="437.4" y="1107.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.16%)</title><rect x="437.4" y="1091.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.16%)</title><rect x="437.4" y="1075.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="438.0" y="1059.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="438.0" y="1043.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.10%)</title><rect x="438.0" y="1027.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="441.0" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="438.0" y="1011.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="441.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$450/1393523883.accept (1 samples, 0.05%)</title><rect x="438.6" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (36 samples, 1.89%)</title><rect x="439.3" y="1155.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.3" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (36 samples, 1.89%)</title><rect x="439.3" y="1139.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.3" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (35 samples, 1.84%)</title><rect x="439.9" y="1123.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.9" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (35 samples, 1.84%)</title><rect x="439.9" y="1107.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="442.9" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (35 samples, 1.84%)</title><rect x="439.9" y="1091.0" width="21.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="442.9" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 1.73%)</title><rect x="441.1" y="1075.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (32 samples, 1.68%)</title><rect x="441.7" y="1059.0" width="19.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="444.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$459/960295569.accept (31 samples, 1.63%)</title><rect x="442.4" y="1043.0" width="19.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="445.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (31 samples, 1.63%)</title><rect x="442.4" y="1027.0" width="19.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (31 samples, 1.63%)</title><rect x="442.4" y="1011.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (31 samples, 1.63%)</title><rect x="442.4" y="995.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.26%)</title><rect x="442.4" y="979.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.16%)</title><rect x="442.4" y="963.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/612118843.apply (3 samples, 0.16%)</title><rect x="442.4" y="947.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$468/612118843.apply (2 samples, 0.10%)</title><rect x="444.2" y="963.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.10%)</title><rect x="444.2" y="947.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.10%)</title><rect x="444.2" y="931.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="447.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (26 samples, 1.36%)</title><rect x="445.5" y="979.0" width="16.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (25 samples, 1.31%)</title><rect x="446.1" y="963.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (25 samples, 1.31%)</title><rect x="446.1" y="947.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 1.10%)</title><rect x="446.1" y="931.0" width="13.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (21 samples, 1.10%)</title><rect x="446.1" y="915.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (21 samples, 1.10%)</title><rect x="446.1" y="899.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (21 samples, 1.10%)</title><rect x="446.1" y="883.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 1.10%)</title><rect x="446.1" y="867.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 1.10%)</title><rect x="446.1" y="851.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.1" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="446.1" y="835.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="449.1" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="446.1" y="819.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="449.1" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="446.7" y="819.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="449.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.89%)</title><rect x="447.3" y="835.0" width="10.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="450.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.79%)</title><rect x="448.6" y="819.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.79%)</title><rect x="448.6" y="803.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.79%)</title><rect x="448.6" y="787.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="451.6" y="798.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.79%)</title><rect x="448.6" y="771.0" width="9.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="451.6" y="782.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.79%)</title><rect x="448.6" y="755.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.6" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="449.2" y="739.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.2" y="750.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.68%)</title><rect x="449.8" y="739.0" width="8.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.8" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.68%)</title><rect x="449.8" y="723.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="452.8" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.68%)</title><rect x="449.8" y="707.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.8" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.10%)</title><rect x="457.8" y="835.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="460.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.21%)</title><rect x="459.1" y="931.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.1" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="459.1" y="915.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="462.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="459.7" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.7" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.05%)</title><rect x="459.7" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$467/419930909.accept (2 samples, 0.10%)</title><rect x="460.3" y="915.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="461.6" y="1155.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.10%)</title><rect x="462.2" y="1203.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.10%)</title><rect x="462.2" y="1187.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.10%)</title><rect x="462.2" y="1171.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.10%)</title><rect x="462.2" y="1155.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2 samples, 0.10%)</title><rect x="462.2" y="1139.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (2 samples, 0.10%)</title><rect x="462.2" y="1123.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.10%)</title><rect x="462.2" y="1107.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.10%)</title><rect x="462.2" y="1091.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.10%)</title><rect x="462.2" y="1075.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="463.4" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.4" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="463.4" y="1235.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="466.4" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="463.4" y="1219.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.4" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="463.4" y="1203.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="466.4" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="463.4" y="1187.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.4" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="463.4" y="1171.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.4" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="463.4" y="1155.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="466.4" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$498/1539433281.run (362 samples, 19.00%)</title><rect x="464.0" y="1315.0" width="224.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.0" y="1326.0">ru/mail/polis/service/stasyano..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (362 samples, 19.00%)</title><rect x="464.0" y="1299.0" width="224.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.0" y="1310.0">ru/mail/polis/service/stasyano..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getInternal (362 samples, 19.00%)</title><rect x="464.0" y="1283.0" width="224.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.0" y="1294.0">ru/mail/polis/service/stasyano..</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (6 samples, 0.31%)</title><rect x="464.7" y="1267.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.7" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (6 samples, 0.31%)</title><rect x="464.7" y="1251.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (5 samples, 0.26%)</title><rect x="464.7" y="1235.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (4 samples, 0.21%)</title><rect x="465.3" y="1219.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.3" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (4 samples, 0.21%)</title><rect x="465.3" y="1203.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.3" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.10%)</title><rect x="466.5" y="1187.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.5" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.10%)</title><rect x="466.5" y="1171.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.5" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.10%)</title><rect x="466.5" y="1155.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.5" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (1 samples, 0.05%)</title><rect x="467.8" y="1235.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.8" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.05%)</title><rect x="468.4" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.4" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.05%)</title><rect x="468.4" y="1251.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.4" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (66 samples, 3.46%)</title><rect x="469.0" y="1267.0" width="40.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.0" y="1278.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 3.46%)</title><rect x="469.0" y="1251.0" width="40.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.0" y="1262.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="469.0" y="1235.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.05%)</title><rect x="469.0" y="1219.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="469.0" y="1203.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="469.0" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="469.0" y="1171.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 3.41%)</title><rect x="469.6" y="1235.0" width="40.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.6" y="1246.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 3.41%)</title><rect x="469.6" y="1219.0" width="40.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.6" y="1230.0">one..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (64 samples, 3.36%)</title><rect x="469.6" y="1203.0" width="39.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.6" y="1214.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (64 samples, 3.36%)</title><rect x="469.6" y="1187.0" width="39.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.6" y="1198.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.21%)</title><rect x="470.2" y="1171.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="473.2" y="1182.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="471.5" y="1155.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="474.5" y="1166.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="472.1" y="1155.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="475.1" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="472.1" y="1139.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="475.1" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="472.1" y="1123.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="475.1" y="1134.0"></text>
</g>
<g>
<title>__libc_send (59 samples, 3.10%)</title><rect x="472.7" y="1171.0" width="36.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="475.7" y="1182.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 3.10%)</title><rect x="472.7" y="1155.0" width="36.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="475.7" y="1166.0">ent..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="472.7" y="1139.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="475.7" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 3.04%)</title><rect x="473.3" y="1139.0" width="36.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="476.3" y="1150.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (58 samples, 3.04%)</title><rect x="473.3" y="1123.0" width="36.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="476.3" y="1134.0">__x..</text>
</g>
<g>
<title>__sys_sendto (58 samples, 3.04%)</title><rect x="473.3" y="1107.0" width="36.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.3" y="1118.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (58 samples, 3.04%)</title><rect x="473.3" y="1091.0" width="36.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.3" y="1102.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (54 samples, 2.83%)</title><rect x="473.3" y="1075.0" width="33.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="476.3" y="1086.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (54 samples, 2.83%)</title><rect x="473.3" y="1059.0" width="33.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="476.3" y="1070.0">tc..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="473.3" y="1043.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.3" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (52 samples, 2.73%)</title><rect x="473.9" y="1043.0" width="32.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="476.9" y="1054.0">tc..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="473.9" y="1027.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="476.9" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.21%)</title><rect x="474.6" y="1027.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="477.6" y="1038.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.21%)</title><rect x="474.6" y="1011.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="477.6" y="1022.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="475.2" y="995.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="478.2" y="1006.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="475.8" y="995.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="478.8" y="1006.0"></text>
</g>
<g>
<title>tcp_push (47 samples, 2.47%)</title><rect x="477.0" y="1027.0" width="29.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.0" y="1038.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (46 samples, 2.41%)</title><rect x="477.0" y="1011.0" width="28.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="480.0" y="1022.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (46 samples, 2.41%)</title><rect x="477.0" y="995.0" width="28.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.0" y="1006.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (44 samples, 2.31%)</title><rect x="477.7" y="979.0" width="27.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.7" y="990.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.10%)</title><rect x="480.1" y="963.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.1" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (38 samples, 1.99%)</title><rect x="481.4" y="963.0" width="23.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.4" y="974.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (38 samples, 1.99%)</title><rect x="481.4" y="947.0" width="23.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.4" y="958.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="481.4" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="484.4" y="942.0"></text>
</g>
<g>
<title>ip_local_out (37 samples, 1.94%)</title><rect x="482.0" y="931.0" width="22.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.0" y="942.0">i..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.16%)</title><rect x="482.0" y="915.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.0" y="926.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="482.0" y="899.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.0" y="910.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="482.6" y="899.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.6" y="910.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.10%)</title><rect x="482.6" y="883.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="485.6" y="894.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.10%)</title><rect x="482.6" y="867.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.6" y="878.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="482.6" y="851.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="485.6" y="862.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="483.2" y="851.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.2" y="862.0"></text>
</g>
<g>
<title>ip_output (33 samples, 1.73%)</title><rect x="483.9" y="915.0" width="20.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.9" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (33 samples, 1.73%)</title><rect x="483.9" y="899.0" width="20.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="486.9" y="910.0"></text>
</g>
<g>
<title>__ip_finish_output (32 samples, 1.68%)</title><rect x="483.9" y="883.0" width="19.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.9" y="894.0"></text>
</g>
<g>
<title>ip_finish_output2 (31 samples, 1.63%)</title><rect x="484.5" y="867.0" width="19.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="487.5" y="878.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 1.36%)</title><rect x="484.5" y="851.0" width="16.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.5" y="862.0"></text>
</g>
<g>
<title>do_softirq.part.20 (26 samples, 1.36%)</title><rect x="484.5" y="835.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="487.5" y="846.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 1.31%)</title><rect x="485.1" y="819.0" width="15.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.1" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 1.31%)</title><rect x="485.1" y="803.0" width="15.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.1" y="814.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 1.31%)</title><rect x="485.1" y="787.0" width="15.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="488.1" y="798.0"></text>
</g>
<g>
<title>process_backlog (24 samples, 1.26%)</title><rect x="485.7" y="771.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.7" y="782.0"></text>
</g>
<g>
<title>__netif_receive_skb (24 samples, 1.26%)</title><rect x="485.7" y="755.0" width="14.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.7" y="766.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 1.26%)</title><rect x="485.7" y="739.0" width="14.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.7" y="750.0"></text>
</g>
<g>
<title>ip_rcv (24 samples, 1.26%)</title><rect x="485.7" y="723.0" width="14.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="488.7" y="734.0"></text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 1.21%)</title><rect x="486.3" y="707.0" width="14.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.3" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 1.21%)</title><rect x="486.3" y="691.0" width="14.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="489.3" y="702.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 1.15%)</title><rect x="486.3" y="675.0" width="13.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="489.3" y="686.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (22 samples, 1.15%)</title><rect x="486.3" y="659.0" width="13.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="489.3" y="670.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 1.10%)</title><rect x="487.0" y="643.0" width="13.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="490.0" y="654.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="487.0" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="490.0" y="638.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 1.05%)</title><rect x="487.6" y="627.0" width="12.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="490.6" y="638.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="487.6" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="490.6" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 1.00%)</title><rect x="488.2" y="611.0" width="11.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="491.2" y="622.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.05%)</title><rect x="488.2" y="595.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="491.2" y="606.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.05%)</title><rect x="488.2" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="491.2" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="488.2" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="491.2" y="574.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="488.2" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="491.2" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="488.2" y="531.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="491.2" y="542.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.21%)</title><rect x="488.8" y="595.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="491.8" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="490.1" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.1" y="590.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="490.7" y="579.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.7" y="590.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="491.3" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="494.3" y="606.0"></text>
</g>
<g>
<title>tcp_data_ready (12 samples, 0.63%)</title><rect x="491.9" y="595.0" width="7.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.9" y="606.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.63%)</title><rect x="491.9" y="579.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="494.9" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.63%)</title><rect x="491.9" y="563.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.9" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.63%)</title><rect x="491.9" y="547.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.9" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.63%)</title><rect x="491.9" y="531.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.9" y="542.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="499.3" y="595.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="502.3" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="500.0" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.0" y="686.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="500.0" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="503.0" y="670.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.05%)</title><rect x="500.0" y="643.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="503.0" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.26%)</title><rect x="500.6" y="851.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.6" y="862.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.26%)</title><rect x="500.6" y="835.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.6" y="846.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.10%)</title><rect x="501.8" y="819.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="504.8" y="830.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="501.8" y="803.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="504.8" y="814.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="502.4" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="505.4" y="814.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="502.4" y="787.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.4" y="798.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="503.1" y="819.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.1" y="830.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="503.1" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="506.1" y="814.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="503.7" y="883.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="506.7" y="894.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="504.3" y="915.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="507.3" y="926.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="504.9" y="979.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="507.9" y="990.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="504.9" y="963.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.9" y="974.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="504.9" y="947.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.9" y="958.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="504.9" y="931.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="507.9" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="504.9" y="915.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="507.9" y="926.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="505.5" y="1011.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="508.5" y="1022.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.05%)</title><rect x="506.2" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="509.2" y="1054.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.21%)</title><rect x="506.8" y="1075.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.8" y="1086.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.21%)</title><rect x="506.8" y="1059.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="509.8" y="1070.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.21%)</title><rect x="506.8" y="1043.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="509.8" y="1054.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.21%)</title><rect x="506.8" y="1027.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="509.8" y="1038.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.05%)</title><rect x="507.4" y="1011.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="510.4" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="508.0" y="1011.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="511.0" y="1022.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="508.6" y="995.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="511.6" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="509.3" y="1203.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="512.3" y="1214.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="509.3" y="1187.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="512.3" y="1198.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="509.3" y="1171.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="512.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getProxy (150 samples, 7.87%)</title><rect x="509.9" y="1267.0" width="92.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.9" y="1278.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/FrameServer.routeRequest (51 samples, 2.68%)</title><rect x="509.9" y="1251.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.9" y="1262.0">ru..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.10%)</title><rect x="509.9" y="1235.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.10%)</title><rect x="509.9" y="1219.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="510.5" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.5" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="511.1" y="1235.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.1" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="511.1" y="1219.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (47 samples, 2.47%)</title><rect x="512.4" y="1235.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.4" y="1246.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (47 samples, 2.47%)</title><rect x="512.4" y="1219.0" width="29.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.4" y="1230.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 1.00%)</title><rect x="512.4" y="1203.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 1.00%)</title><rect x="512.4" y="1187.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.4" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.10%)</title><rect x="513.0" y="1171.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="516.0" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (16 samples, 0.84%)</title><rect x="514.2" y="1171.0" width="9.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="517.2" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.79%)</title><rect x="514.8" y="1155.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.8" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.79%)</title><rect x="514.8" y="1139.0" width="9.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.8" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.73%)</title><rect x="514.8" y="1123.0" width="8.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="517.8" y="1134.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 0.73%)</title><rect x="514.8" y="1107.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.8" y="1118.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="514.8" y="1091.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="517.8" y="1102.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="514.8" y="1075.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="517.8" y="1086.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.68%)</title><rect x="515.4" y="1091.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.4" y="1102.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.68%)</title><rect x="515.4" y="1075.0" width="8.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.4" y="1086.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.68%)</title><rect x="515.4" y="1059.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.4" y="1070.0"></text>
</g>
<g>
<title>sk_wait_data (3 samples, 0.16%)</title><rect x="515.4" y="1043.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="518.4" y="1054.0"></text>
</g>
<g>
<title>wait_woken (3 samples, 0.16%)</title><rect x="515.4" y="1027.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="518.4" y="1038.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.16%)</title><rect x="515.4" y="1011.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="518.4" y="1022.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.16%)</title><rect x="515.4" y="995.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.4" y="1006.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.16%)</title><rect x="515.4" y="979.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="518.4" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="516.1" y="963.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.1" y="974.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.05%)</title><rect x="517.3" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="520.3" y="1054.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.05%)</title><rect x="517.3" y="1027.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.3" y="1038.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.05%)</title><rect x="517.3" y="1011.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="520.3" y="1022.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="517.3" y="995.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="520.3" y="1006.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.47%)</title><rect x="517.9" y="1043.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="520.9" y="1054.0"></text>
</g>
<g>
<title>tcp_send_ack (9 samples, 0.47%)</title><rect x="517.9" y="1027.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="520.9" y="1038.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (9 samples, 0.47%)</title><rect x="517.9" y="1011.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.9" y="1022.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.05%)</title><rect x="517.9" y="995.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="520.9" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.05%)</title><rect x="517.9" y="979.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="520.9" y="990.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="517.9" y="963.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.9" y="974.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (8 samples, 0.42%)</title><rect x="518.5" y="995.0" width="5.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.5" y="1006.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 0.37%)</title><rect x="519.2" y="979.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="522.2" y="990.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 0.37%)</title><rect x="519.2" y="963.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="522.2" y="974.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 0.37%)</title><rect x="519.2" y="947.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="522.2" y="958.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.10%)</title><rect x="519.2" y="931.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.2" y="942.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="519.2" y="915.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="522.2" y="926.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.05%)</title><rect x="519.2" y="899.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.2" y="910.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.05%)</title><rect x="519.2" y="883.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="522.2" y="894.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="519.8" y="899.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="522.8" y="910.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="519.8" y="883.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.8" y="894.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="519.8" y="867.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.8" y="878.0"></text>
</g>
<g>
<title>ip_output (5 samples, 0.26%)</title><rect x="520.4" y="931.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="523.4" y="942.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.26%)</title><rect x="520.4" y="915.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="523.4" y="926.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 0.26%)</title><rect x="520.4" y="899.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="523.4" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.26%)</title><rect x="520.4" y="883.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.4" y="894.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.21%)</title><rect x="520.4" y="867.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.4" y="878.0"></text>
</g>
<g>
<title>do_softirq.part.20 (4 samples, 0.21%)</title><rect x="520.4" y="851.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="523.4" y="862.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.21%)</title><rect x="520.4" y="835.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.4" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.21%)</title><rect x="520.4" y="819.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.4" y="830.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.10%)</title><rect x="521.6" y="803.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="524.6" y="814.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="521.6" y="787.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="524.6" y="798.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="522.3" y="787.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.3" y="798.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="522.3" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.3" y="782.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="522.3" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.3" y="766.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="522.3" y="739.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.3" y="750.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="522.3" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.3" y="734.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="522.3" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="525.3" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="522.3" y="691.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="525.3" y="702.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.05%)</title><rect x="522.3" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.3" y="686.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.05%)</title><rect x="522.3" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.3" y="670.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.05%)</title><rect x="522.3" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.3" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.05%)</title><rect x="522.3" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="525.3" y="638.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="522.3" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="525.3" y="622.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.05%)</title><rect x="522.3" y="595.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="525.3" y="606.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.05%)</title><rect x="522.9" y="867.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.9" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.05%)</title><rect x="522.9" y="851.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.9" y="862.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="522.9" y="835.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="525.9" y="846.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="522.9" y="819.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.9" y="830.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="522.9" y="803.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="525.9" y="814.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="523.5" y="1123.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="526.5" y="1134.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="523.5" y="1107.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.31%)</title><rect x="524.1" y="1203.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.16%)</title><rect x="524.1" y="1187.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="524.1" y="1171.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="524.1" y="1155.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="526.0" y="1187.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="526.6" y="1187.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.05%)</title><rect x="527.2" y="1187.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="527.2" y="1171.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="527.2" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.05%)</title><rect x="527.8" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (1 samples, 0.05%)</title><rect x="528.5" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.5" y="1214.0"></text>
</g>
<g>
<title>__GI___setsockopt (1 samples, 0.05%)</title><rect x="528.5" y="1187.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="531.5" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="528.5" y="1171.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="531.5" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="528.5" y="1155.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="531.5" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.05%)</title><rect x="528.5" y="1139.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="531.5" y="1150.0"></text>
</g>
<g>
<title>__sys_setsockopt (1 samples, 0.05%)</title><rect x="528.5" y="1123.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.5" y="1134.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.05%)</title><rect x="528.5" y="1107.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="531.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (17 samples, 0.89%)</title><rect x="529.1" y="1203.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.1" y="1214.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.10%)</title><rect x="529.1" y="1187.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="532.1" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="529.1" y="1171.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="532.1" y="1182.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="529.7" y="1171.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="532.7" y="1182.0"></text>
</g>
<g>
<title>__libc_send (15 samples, 0.79%)</title><rect x="530.3" y="1187.0" width="9.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="533.3" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.79%)</title><rect x="530.3" y="1171.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="533.3" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.79%)</title><rect x="530.3" y="1155.0" width="9.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="533.3" y="1166.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.05%)</title><rect x="530.3" y="1139.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="533.3" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_sendto (14 samples, 0.73%)</title><rect x="530.9" y="1139.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.9" y="1150.0"></text>
</g>
<g>
<title>__sys_sendto (14 samples, 0.73%)</title><rect x="530.9" y="1123.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="533.9" y="1134.0"></text>
</g>
<g>
<title>sock_sendmsg (14 samples, 0.73%)</title><rect x="530.9" y="1107.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.9" y="1118.0"></text>
</g>
<g>
<title>inet6_sendmsg (14 samples, 0.73%)</title><rect x="530.9" y="1091.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="533.9" y="1102.0"></text>
</g>
<g>
<title>tcp_sendmsg (14 samples, 0.73%)</title><rect x="530.9" y="1075.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="533.9" y="1086.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 0.73%)</title><rect x="530.9" y="1059.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="533.9" y="1070.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.05%)</title><rect x="530.9" y="1043.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.9" y="1054.0"></text>
</g>
<g>
<title>tcp_push (13 samples, 0.68%)</title><rect x="531.6" y="1043.0" width="8.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="534.6" y="1054.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 0.68%)</title><rect x="531.6" y="1027.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="534.6" y="1038.0"></text>
</g>
<g>
<title>tcp_write_xmit (12 samples, 0.63%)</title><rect x="532.2" y="1011.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.2" y="1022.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (11 samples, 0.58%)</title><rect x="532.2" y="995.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="535.2" y="1006.0"></text>
</g>
<g>
<title>ip_queue_xmit (10 samples, 0.52%)</title><rect x="532.8" y="979.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.8" y="990.0"></text>
</g>
<g>
<title>__ip_queue_xmit (10 samples, 0.52%)</title><rect x="532.8" y="963.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="535.8" y="974.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.47%)</title><rect x="533.4" y="947.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="536.4" y="958.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="533.4" y="931.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="536.4" y="942.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="533.4" y="915.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="536.4" y="926.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="533.4" y="899.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="536.4" y="910.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="533.4" y="883.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="536.4" y="894.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="533.4" y="867.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="536.4" y="878.0"></text>
</g>
<g>
<title>ip_output (8 samples, 0.42%)</title><rect x="534.0" y="931.0" width="5.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="537.0" y="942.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 0.42%)</title><rect x="534.0" y="915.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="537.0" y="926.0"></text>
</g>
<g>
<title>__ip_finish_output (7 samples, 0.37%)</title><rect x="534.7" y="899.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="537.7" y="910.0"></text>
</g>
<g>
<title>ip_finish_output2 (7 samples, 0.37%)</title><rect x="534.7" y="883.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="537.7" y="894.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 0.26%)</title><rect x="534.7" y="867.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="537.7" y="878.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 0.26%)</title><rect x="534.7" y="851.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="537.7" y="862.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 0.26%)</title><rect x="534.7" y="835.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="537.7" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.26%)</title><rect x="534.7" y="819.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.7" y="830.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 0.26%)</title><rect x="534.7" y="803.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="537.7" y="814.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 0.26%)</title><rect x="534.7" y="787.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.7" y="798.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 0.26%)</title><rect x="534.7" y="771.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.7" y="782.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 0.26%)</title><rect x="534.7" y="755.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="537.7" y="766.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.21%)</title><rect x="534.7" y="739.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="537.7" y="750.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.21%)</title><rect x="534.7" y="723.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="537.7" y="734.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.21%)</title><rect x="534.7" y="707.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="537.7" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.21%)</title><rect x="534.7" y="691.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.7" y="702.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.21%)</title><rect x="534.7" y="675.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="537.7" y="686.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.21%)</title><rect x="534.7" y="659.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="537.7" y="670.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="534.7" y="643.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="537.7" y="654.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="534.7" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.7" y="638.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.16%)</title><rect x="535.3" y="643.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="538.3" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.16%)</title><rect x="535.3" y="627.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="538.3" y="638.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.16%)</title><rect x="535.3" y="611.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.3" y="622.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.16%)</title><rect x="535.3" y="595.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="538.3" y="606.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.16%)</title><rect x="535.3" y="579.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="538.3" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.16%)</title><rect x="535.3" y="563.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.3" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.16%)</title><rect x="535.3" y="547.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="538.3" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="537.1" y="739.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="540.1" y="750.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.10%)</title><rect x="537.7" y="867.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="540.7" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.10%)</title><rect x="537.7" y="851.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.7" y="862.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="538.4" y="835.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="541.4" y="846.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.05%)</title><rect x="538.4" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="541.4" y="830.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.05%)</title><rect x="539.0" y="995.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="542.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.16%)</title><rect x="539.6" y="1203.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.10%)</title><rect x="540.2" y="1187.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.2" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponseIfIdNotNull (99 samples, 5.20%)</title><rect x="541.5" y="1251.0" width="61.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.5" y="1262.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (99 samples, 5.20%)</title><rect x="541.5" y="1235.0" width="61.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.5" y="1246.0">ru/mai..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (13 samples, 0.68%)</title><rect x="541.5" y="1219.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (13 samples, 0.68%)</title><rect x="541.5" y="1203.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (13 samples, 0.68%)</title><rect x="541.5" y="1187.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (13 samples, 0.68%)</title><rect x="541.5" y="1171.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (13 samples, 0.68%)</title><rect x="541.5" y="1155.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (13 samples, 0.68%)</title><rect x="541.5" y="1139.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.5" y="1150.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (13 samples, 0.68%)</title><rect x="541.5" y="1123.0" width="8.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="544.5" y="1134.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (13 samples, 0.68%)</title><rect x="541.5" y="1107.0" width="8.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="544.5" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="541.5" y="1091.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="544.5" y="1102.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (1 samples, 0.05%)</title><rect x="542.1" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="545.1" y="1102.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (11 samples, 0.58%)</title><rect x="542.7" y="1091.0" width="6.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="545.7" y="1102.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (11 samples, 0.58%)</title><rect x="542.7" y="1075.0" width="6.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="545.7" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.10%)</title><rect x="544.6" y="1059.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="547.6" y="1070.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.10%)</title><rect x="545.8" y="1059.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="548.8" y="1070.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="545.8" y="1043.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="548.8" y="1054.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="546.4" y="1043.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="549.4" y="1054.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (2 samples, 0.10%)</title><rect x="547.0" y="1059.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="550.0" y="1070.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.10%)</title><rect x="548.3" y="1059.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="551.3" y="1070.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.10%)</title><rect x="548.3" y="1043.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="551.3" y="1054.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="548.9" y="1027.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="551.9" y="1038.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="548.9" y="1011.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="551.9" y="1022.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (86 samples, 4.51%)</title><rect x="549.5" y="1219.0" width="53.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="552.5" y="1230.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (86 samples, 4.51%)</title><rect x="549.5" y="1203.0" width="53.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.5" y="1214.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (67 samples, 3.52%)</title><rect x="550.1" y="1187.0" width="41.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="553.1" y="1198.0">Jav..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.05%)</title><rect x="550.1" y="1171.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="553.1" y="1182.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.05%)</title><rect x="550.8" y="1171.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="553.8" y="1182.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.05%)</title><rect x="551.4" y="1171.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="554.4" y="1182.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (64 samples, 3.36%)</title><rect x="552.0" y="1171.0" width="39.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="555.0" y="1182.0">roc..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="552.6" y="1155.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="555.6" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="552.6" y="1139.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="555.6" y="1150.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (62 samples, 3.25%)</title><rect x="553.2" y="1155.0" width="38.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="556.2" y="1166.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (62 samples, 3.25%)</title><rect x="553.2" y="1139.0" width="38.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="556.2" y="1150.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (61 samples, 3.20%)</title><rect x="553.9" y="1123.0" width="37.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="556.9" y="1134.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.05%)</title><rect x="553.9" y="1107.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="556.9" y="1118.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (60 samples, 3.15%)</title><rect x="554.5" y="1107.0" width="37.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="557.5" y="1118.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (55 samples, 2.89%)</title><rect x="555.7" y="1091.0" width="34.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="558.7" y="1102.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni7079990043030843790.so (54 samples, 2.83%)</title><rect x="556.3" y="1075.0" width="33.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="559.3" y="1086.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni7079990043030843790.so (2 samples, 0.10%)</title><rect x="556.3" y="1059.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="559.3" y="1070.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="557.0" y="1043.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="560.0" y="1054.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="557.0" y="1027.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="560.0" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="557.0" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="560.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (52 samples, 2.73%)</title><rect x="557.6" y="1059.0" width="32.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="560.6" y="1070.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (51 samples, 2.68%)</title><rect x="558.2" y="1043.0" width="31.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="561.2" y="1054.0">ro..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (49 samples, 2.57%)</title><rect x="558.8" y="1027.0" width="30.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="561.8" y="1038.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (12 samples, 0.63%)</title><rect x="559.4" y="1011.0" width="7.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="562.4" y="1022.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (12 samples, 0.63%)</title><rect x="559.4" y="995.0" width="7.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="562.4" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="559.4" y="979.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="562.4" y="990.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (10 samples, 0.52%)</title><rect x="560.0" y="979.0" width="6.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="563.0" y="990.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.05%)</title><rect x="563.1" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="566.1" y="974.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.05%)</title><rect x="563.8" y="963.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="566.8" y="974.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.16%)</title><rect x="564.4" y="963.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="567.4" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.05%)</title><rect x="564.4" y="947.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="567.4" y="958.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.05%)</title><rect x="565.0" y="947.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="568.0" y="958.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.05%)</title><rect x="565.6" y="947.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="568.6" y="958.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="566.2" y="979.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="569.2" y="990.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (21 samples, 1.10%)</title><rect x="566.9" y="1011.0" width="13.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="569.9" y="1022.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="566.9" y="995.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="569.9" y="1006.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (20 samples, 1.05%)</title><rect x="567.5" y="995.0" width="12.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="570.5" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="568.7" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="571.7" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="569.3" y="979.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="572.3" y="990.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (16 samples, 0.84%)</title><rect x="570.0" y="979.0" width="9.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="573.0" y="990.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.10%)</title><rect x="571.2" y="963.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="574.2" y="974.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.10%)</title><rect x="572.4" y="963.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="575.4" y="974.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.47%)</title><rect x="573.7" y="963.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.7" y="974.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.05%)</title><rect x="573.7" y="947.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="576.7" y="958.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.10%)</title><rect x="574.3" y="947.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="577.3" y="958.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.26%)</title><rect x="575.5" y="947.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="578.5" y="958.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.05%)</title><rect x="577.4" y="931.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="580.4" y="942.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.05%)</title><rect x="578.0" y="931.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="581.0" y="942.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.05%)</title><rect x="578.6" y="947.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="581.6" y="958.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.05%)</title><rect x="579.2" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="582.2" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="579.9" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="582.9" y="1022.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.05%)</title><rect x="580.5" y="1011.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="583.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="580.5" y="995.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="583.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="580.5" y="979.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="580.5" y="963.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="583.5" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="580.5" y="947.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.5" y="958.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="580.5" y="931.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.5" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="580.5" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="583.5" y="926.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="580.5" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="583.5" y="910.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="580.5" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.5" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="580.5" y="867.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="583.5" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.26%)</title><rect x="581.1" y="1011.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="584.1" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="581.7" y="995.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="584.7" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="581.7" y="979.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.7" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.16%)</title><rect x="582.3" y="963.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="585.3" y="974.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.16%)</title><rect x="582.3" y="947.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="585.3" y="958.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.16%)</title><rect x="582.3" y="931.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="585.3" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="582.3" y="915.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="585.3" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.10%)</title><rect x="583.0" y="915.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.0" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.10%)</title><rect x="583.0" y="899.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.0" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="583.0" y="883.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.0" y="894.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.21%)</title><rect x="584.2" y="1011.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="587.2" y="1022.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.10%)</title><rect x="584.2" y="995.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="587.2" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="585.4" y="995.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="588.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (3 samples, 0.16%)</title><rect x="586.7" y="1011.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="589.7" y="1022.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.05%)</title><rect x="587.9" y="995.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="590.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.05%)</title><rect x="588.5" y="1011.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="591.5" y="1022.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.05%)</title><rect x="589.2" y="1027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.2" y="1038.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.10%)</title><rect x="589.8" y="1091.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="592.8" y="1102.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.05%)</title><rect x="591.0" y="1091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="594.0" y="1102.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.10%)</title><rect x="591.6" y="1187.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.6" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 0.84%)</title><rect x="592.9" y="1187.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.9" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 0.84%)</title><rect x="592.9" y="1171.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.9" y="1182.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (15 samples, 0.79%)</title><rect x="593.5" y="1155.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.5" y="1166.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (15 samples, 0.79%)</title><rect x="593.5" y="1139.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.5" y="1150.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (13 samples, 0.68%)</title><rect x="594.7" y="1123.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.7" y="1134.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (13 samples, 0.68%)</title><rect x="594.7" y="1107.0" width="8.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="597.7" y="1118.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="594.7" y="1091.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="597.7" y="1102.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.10%)</title><rect x="595.4" y="1091.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="598.4" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="595.4" y="1075.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="598.4" y="1086.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 0.42%)</title><rect x="596.6" y="1091.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="599.6" y="1102.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.10%)</title><rect x="597.2" y="1075.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="600.2" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="598.5" y="1075.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="601.5" y="1086.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.21%)</title><rect x="599.1" y="1075.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="602.1" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="600.3" y="1059.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="603.3" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="600.3" y="1043.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="603.3" y="1054.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="600.3" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.3" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="600.9" y="1043.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="603.9" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.10%)</title><rect x="601.5" y="1091.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="604.5" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="601.5" y="1075.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="604.5" y="1086.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="602.2" y="1075.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="605.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getNoRepRequest (14 samples, 0.73%)</title><rect x="602.8" y="1267.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="603.4" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="603.4" y="1235.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (1 samples, 0.05%)</title><rect x="603.4" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="603.4" y="1203.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.05%)</title><rect x="603.4" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.toString (1 samples, 0.05%)</title><rect x="603.4" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.05%)</title><rect x="604.0" y="1251.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="604.0" y="1235.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="604.0" y="1219.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.0" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="604.0" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (3 samples, 0.16%)</title><rect x="604.6" y="1251.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.6" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.10%)</title><rect x="605.3" y="1235.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="605.9" y="1219.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="605.9" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.9" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="605.9" y="1187.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="608.9" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getCloneRequest (8 samples, 0.42%)</title><rect x="606.5" y="1251.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.5" y="1262.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (1 samples, 0.05%)</title><rect x="606.5" y="1235.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.5" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.stream (1 samples, 0.05%)</title><rect x="606.5" y="1219.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="609.5" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.spliterator (1 samples, 0.05%)</title><rect x="606.5" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.5" y="1214.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1 samples, 0.05%)</title><rect x="606.5" y="1187.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.5" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.05%)</title><rect x="606.5" y="1171.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="609.5" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (6 samples, 0.31%)</title><rect x="607.1" y="1235.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.1" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.26%)</title><rect x="607.1" y="1219.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.1" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.05%)</title><rect x="607.1" y="1203.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="610.1" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.21%)</title><rect x="607.7" y="1203.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.7" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.21%)</title><rect x="607.7" y="1187.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.7" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.21%)</title><rect x="607.7" y="1171.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.7" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.21%)</title><rect x="607.7" y="1155.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.05%)</title><rect x="607.7" y="1139.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.7" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="607.7" y="1123.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="610.7" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.10%)</title><rect x="608.4" y="1139.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.10%)</title><rect x="608.4" y="1123.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.4" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.05%)</title><rect x="609.0" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (1 samples, 0.05%)</title><rect x="609.6" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.6" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (1 samples, 0.05%)</title><rect x="610.2" y="1219.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.2" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.2" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.2" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.2" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="610.8" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.8" y="1246.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.characteristics (1 samples, 0.05%)</title><rect x="610.8" y="1219.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.8" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getReplicaGetResponse (124 samples, 6.51%)</title><rect x="611.5" y="1267.0" width="76.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.5" y="1278.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.10%)</title><rect x="611.5" y="1251.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.5" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.10%)</title><rect x="611.5" y="1235.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.10%)</title><rect x="611.5" y="1219.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.10%)</title><rect x="611.5" y="1203.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.5" y="1214.0"></text>
</g>
<g>
<title>org/javatuples/Pair.getValue0 (1 samples, 0.05%)</title><rect x="612.7" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.7" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponsesFromReplicas (1 samples, 0.05%)</title><rect x="612.7" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.7" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.mergeGetResponses (7 samples, 0.37%)</title><rect x="613.3" y="1251.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.3" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/Collectors.toList (1 samples, 0.05%)</title><rect x="613.3" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.3" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="613.3" y="1219.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.3" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$CollectorImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="613.3" y="1203.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="613.3" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="616.3" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (6 samples, 0.31%)</title><rect x="613.9" y="1235.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.9" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.26%)</title><rect x="613.9" y="1219.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="616.9" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.26%)</title><rect x="613.9" y="1203.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.9" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.21%)</title><rect x="613.9" y="1187.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.9" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.21%)</title><rect x="613.9" y="1171.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.9" y="1182.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (3 samples, 0.16%)</title><rect x="613.9" y="1155.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.9" y="1166.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="613.9" y="1139.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="616.9" y="1150.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.characteristics (2 samples, 0.10%)</title><rect x="614.6" y="1139.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.6" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (1 samples, 0.05%)</title><rect x="615.8" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.8" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3ReducingSink.begin (1 samples, 0.05%)</title><rect x="615.8" y="1139.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/Collectors$$Lambda$483/268621062.get (1 samples, 0.05%)</title><rect x="615.8" y="1123.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.8" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="615.8" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.05%)</title><rect x="616.4" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$3.makeSink (1 samples, 0.05%)</title><rect x="616.4" y="1171.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.4" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (1 samples, 0.05%)</title><rect x="617.0" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.0" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.ackFromPair (5 samples, 0.26%)</title><rect x="617.7" y="1251.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="617.7" y="1235.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="617.7" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.7" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.05%)</title><rect x="618.3" y="1235.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.3" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.05%)</title><rect x="618.3" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.3" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.05%)</title><rect x="618.3" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.3" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="618.3" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.3" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.16%)</title><rect x="618.9" y="1235.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.9" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.16%)</title><rect x="618.9" y="1219.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.9" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.05%)</title><rect x="618.9" y="1203.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.9" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.10%)</title><rect x="619.5" y="1203.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.5" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.05%)</title><rect x="620.1" y="1187.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.1" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.05%)</title><rect x="620.1" y="1171.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.1" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.05%)</title><rect x="620.1" y="1155.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="623.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.05%)</title><rect x="620.1" y="1139.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.1" y="1150.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="620.1" y="1123.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.05%)</title><rect x="620.1" y="1107.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponsesFromReplicas (109 samples, 5.72%)</title><rect x="620.8" y="1251.0" width="67.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.8" y="1262.0">ru/mail..</text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.05%)</title><rect x="620.8" y="1235.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="623.8" y="1246.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="621.4" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.4" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="621.4" y="1219.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.4" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.05%)</title><rect x="621.4" y="1203.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.4" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.characteristics (1 samples, 0.05%)</title><rect x="621.4" y="1187.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.join (17 samples, 0.89%)</title><rect x="622.0" y="1235.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (17 samples, 0.89%)</title><rect x="622.0" y="1219.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.10%)</title><rect x="622.0" y="1203.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.10%)</title><rect x="622.0" y="1187.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.0" y="1198.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.05%)</title><rect x="622.0" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="625.0" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Merger.mergeGetResponses (1 samples, 0.05%)</title><rect x="622.6" y="1171.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (15 samples, 0.79%)</title><rect x="623.2" y="1203.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (14 samples, 0.73%)</title><rect x="623.8" y="1187.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.73%)</title><rect x="623.8" y="1171.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.73%)</title><rect x="623.8" y="1155.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.8" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.21%)</title><rect x="625.1" y="1139.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="628.1" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="625.7" y="1123.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="628.7" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="625.7" y="1107.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="628.7" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="626.3" y="1123.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="629.3" y="1134.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.05%)</title><rect x="626.9" y="1123.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="629.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.42%)</title><rect x="627.6" y="1139.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="630.6" y="1150.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.05%)</title><rect x="627.6" y="1123.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="630.6" y="1134.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="628.2" y="1123.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="631.2" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (6 samples, 0.31%)</title><rect x="628.8" y="1123.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="631.8" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="628.8" y="1107.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="631.8" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.31%)</title><rect x="628.8" y="1091.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="631.8" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.26%)</title><rect x="629.4" y="1075.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="632.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.21%)</title><rect x="630.0" y="1059.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.0" y="1070.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.21%)</title><rect x="630.0" y="1043.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="633.0" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.16%)</title><rect x="630.7" y="1027.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.7" y="1038.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.16%)</title><rect x="630.7" y="1011.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.7" y="1022.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.16%)</title><rect x="630.7" y="995.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="633.7" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="631.3" y="979.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.05%)</title><rect x="632.5" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.5" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="632.5" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.5" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.toArray (89 samples, 4.67%)</title><rect x="633.1" y="1235.0" width="55.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.1" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluateToArrayNode (89 samples, 4.67%)</title><rect x="633.1" y="1219.0" width="55.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.1" y="1230.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (89 samples, 4.67%)</title><rect x="633.1" y="1203.0" width="55.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="636.1" y="1214.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (89 samples, 4.67%)</title><rect x="633.1" y="1187.0" width="55.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.1" y="1198.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (88 samples, 4.62%)</title><rect x="633.1" y="1171.0" width="54.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.1" y="1182.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (88 samples, 4.62%)</title><rect x="633.1" y="1155.0" width="54.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.1" y="1166.0">java/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (88 samples, 4.62%)</title><rect x="633.1" y="1139.0" width="54.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.1" y="1150.0">java/..</text>
</g>
<g>
<title>java/util/TreeMap$EntrySpliterator.tryAdvance (87 samples, 4.57%)</title><rect x="633.1" y="1123.0" width="53.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.1" y="1134.0">java/..</text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.accept (86 samples, 4.51%)</title><rect x="633.8" y="1107.0" width="53.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.8" y="1118.0">java/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (86 samples, 4.51%)</title><rect x="633.8" y="1091.0" width="53.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.8" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$3$1.accept (78 samples, 4.09%)</title><rect x="633.8" y="1075.0" width="48.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.8" y="1086.0">java..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="634.4" y="1059.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="637.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$154/571048721.apply (76 samples, 3.99%)</title><rect x="635.0" y="1059.0" width="47.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.0" y="1070.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$2 (75 samples, 3.94%)</title><rect x="635.6" y="1043.0" width="46.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.6" y="1054.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.05%)</title><rect x="635.6" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.05%)</title><rect x="635.6" y="1011.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.05%)</title><rect x="635.6" y="995.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$301/1299234764.apply (1 samples, 0.05%)</title><rect x="635.6" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (1 samples, 0.05%)</title><rect x="635.6" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.05%)</title><rect x="635.6" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.05%)</title><rect x="635.6" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.05%)</title><rect x="635.6" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.05%)</title><rect x="635.6" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="638.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="635.6" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="635.6" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.6" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.05%)</title><rect x="635.6" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="638.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (59 samples, 3.10%)</title><rect x="636.2" y="1027.0" width="36.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.2" y="1038.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (59 samples, 3.10%)</title><rect x="636.2" y="1011.0" width="36.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.2" y="1022.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (59 samples, 3.10%)</title><rect x="636.2" y="995.0" width="36.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="639.2" y="1006.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (59 samples, 3.10%)</title><rect x="636.2" y="979.0" width="36.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.2" y="990.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="636.9" y="963.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.9" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="636.9" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$201/1268286980.get$Lambda (1 samples, 0.05%)</title><rect x="636.9" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (25 samples, 1.31%)</title><rect x="637.5" y="963.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.5" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.26%)</title><rect x="638.1" y="947.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.1" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.05%)</title><rect x="638.1" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="641.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="638.1" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.1" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.05%)</title><rect x="638.1" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.1" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="638.1" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="638.1" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.1" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.05%)</title><rect x="638.1" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.1" y="862.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="638.7" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="638.7" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.05%)</title><rect x="638.7" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="638.7" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="638.7" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="641.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.16%)</title><rect x="639.3" y="931.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.3" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.16%)</title><rect x="639.3" y="915.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.16%)</title><rect x="639.3" y="899.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.10%)</title><rect x="639.3" y="883.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.10%)</title><rect x="639.3" y="867.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.3" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.10%)</title><rect x="639.3" y="851.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.3" y="862.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.10%)</title><rect x="639.3" y="835.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.3" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.estimateSize (2 samples, 0.10%)</title><rect x="639.3" y="819.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.3" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (2 samples, 0.10%)</title><rect x="639.3" y="803.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.3" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="639.3" y="787.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="642.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/1561408618.get (1 samples, 0.05%)</title><rect x="640.6" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.6" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="640.6" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.6" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (1 samples, 0.05%)</title><rect x="640.6" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="640.6" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.6" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.10%)</title><rect x="641.2" y="947.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.2" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.10%)</title><rect x="641.2" y="931.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.10%)</title><rect x="641.2" y="915.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.2" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="641.2" y="899.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="644.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (14 samples, 0.73%)</title><rect x="642.4" y="947.0" width="8.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.4" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (14 samples, 0.73%)</title><rect x="642.4" y="931.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.4" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.73%)</title><rect x="642.4" y="915.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.4" y="926.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="642.4" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.4" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.37%)</title><rect x="643.0" y="899.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="646.0" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.10%)</title><rect x="643.0" y="883.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="646.0" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (2 samples, 0.10%)</title><rect x="643.0" y="867.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="646.0" y="878.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="644.3" y="883.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="647.3" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.05%)</title><rect x="644.9" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="647.9" y="894.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.10%)</title><rect x="645.5" y="883.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="648.5" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="645.5" y="867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.5" y="878.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.05%)</title><rect x="646.1" y="867.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="649.1" y="878.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.05%)</title><rect x="646.8" y="883.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="649.8" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.31%)</title><rect x="647.4" y="899.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.4" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.31%)</title><rect x="647.4" y="883.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.4" y="894.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (3 samples, 0.16%)</title><rect x="649.2" y="867.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.2" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.16%)</title><rect x="649.2" y="851.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.16%)</title><rect x="649.2" y="835.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.16%)</title><rect x="649.2" y="819.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.16%)</title><rect x="649.2" y="803.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="651.1" y="947.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.1" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.05%)</title><rect x="651.1" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.10%)</title><rect x="651.7" y="947.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.10%)</title><rect x="651.7" y="931.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (4 samples, 0.21%)</title><rect x="653.0" y="963.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.05%)</title><rect x="653.6" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="653.6" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="653.6" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2 samples, 0.10%)</title><rect x="654.2" y="947.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.10%)</title><rect x="654.2" y="931.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="657.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (1 samples, 0.05%)</title><rect x="654.2" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.2" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="654.8" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.8" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.05%)</title><rect x="654.8" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.8" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.05%)</title><rect x="654.8" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.8" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.05%)</title><rect x="654.8" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (1 samples, 0.05%)</title><rect x="654.8" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.05%)</title><rect x="654.8" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="657.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader (1 samples, 0.05%)</title><rect x="654.8" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Class.getClassLoader0 (1 samples, 0.05%)</title><rect x="654.8" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (28 samples, 1.47%)</title><rect x="655.4" y="963.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (26 samples, 1.36%)</title><rect x="655.4" y="947.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 1.36%)</title><rect x="655.4" y="931.0" width="16.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (26 samples, 1.36%)</title><rect x="655.4" y="915.0" width="16.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (26 samples, 1.36%)</title><rect x="655.4" y="899.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (26 samples, 1.36%)</title><rect x="655.4" y="883.0" width="16.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 1.36%)</title><rect x="655.4" y="867.0" width="16.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (26 samples, 1.36%)</title><rect x="655.4" y="851.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.4" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.16%)</title><rect x="655.4" y="835.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="658.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="656.1" y="819.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="659.1" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="656.7" y="819.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="659.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 1.15%)</title><rect x="657.3" y="835.0" width="13.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="660.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.10%)</title><rect x="657.9" y="819.0" width="13.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="660.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.10%)</title><rect x="657.9" y="803.0" width="13.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="660.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 1.05%)</title><rect x="658.5" y="787.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="661.5" y="798.0"></text>
</g>
<g>
<title>do_futex (20 samples, 1.05%)</title><rect x="658.5" y="771.0" width="12.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.5" y="782.0"></text>
</g>
<g>
<title>futex_wake (19 samples, 1.00%)</title><rect x="658.5" y="755.0" width="11.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="661.5" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.10%)</title><rect x="659.2" y="739.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.2" y="750.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="659.8" y="723.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="662.8" y="734.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.84%)</title><rect x="660.4" y="739.0" width="9.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="663.4" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.84%)</title><rect x="660.4" y="723.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="663.4" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.79%)</title><rect x="661.0" y="707.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="664.0" y="718.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="670.3" y="755.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.3" y="766.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="670.9" y="835.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="673.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.10%)</title><rect x="671.5" y="947.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.10%)</title><rect x="671.5" y="931.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="674.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.10%)</title><rect x="671.5" y="915.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.10%)</title><rect x="671.5" y="899.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.10%)</title><rect x="671.5" y="883.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="674.5" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (15 samples, 0.79%)</title><rect x="672.8" y="1027.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.16%)</title><rect x="672.8" y="1011.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="672.8" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (1 samples, 0.05%)</title><rect x="672.8" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (1 samples, 0.05%)</title><rect x="672.8" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.8" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="672.8" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.8" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="672.8" y="931.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="675.8" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1045941616.invoke (2 samples, 0.10%)</title><rect x="673.4" y="995.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.10%)</title><rect x="673.4" y="979.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.05%)</title><rect x="673.4" y="963.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="673.4" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="673.4" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="674.0" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.05%)</title><rect x="674.0" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.0" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="674.0" y="931.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="677.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI.create (10 samples, 0.52%)</title><rect x="674.6" y="1011.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="677.6" y="1022.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (10 samples, 0.52%)</title><rect x="674.6" y="995.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.6" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (10 samples, 0.52%)</title><rect x="674.6" y="979.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.6" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (10 samples, 0.52%)</title><rect x="674.6" y="963.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.6" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (7 samples, 0.37%)</title><rect x="675.9" y="947.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.10%)</title><rect x="675.9" y="931.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.10%)</title><rect x="675.9" y="915.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.9" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.10%)</title><rect x="675.9" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="678.9" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.21%)</title><rect x="677.1" y="931.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.1" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.10%)</title><rect x="677.1" y="915.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="680.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="677.1" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="677.1" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.1" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="677.7" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.7" y="910.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.05%)</title><rect x="677.7" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.7" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.10%)</title><rect x="678.4" y="915.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="679.0" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="679.0" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.0" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="679.6" y="931.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.6" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="680.2" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="680.2" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="680.2" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="680.2" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.2" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (1 samples, 0.05%)</title><rect x="680.8" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="680.8" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1 samples, 0.05%)</title><rect x="681.5" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$152/987084221.apply (8 samples, 0.42%)</title><rect x="682.1" y="1075.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getResponsesFromReplicas$0 (7 samples, 0.37%)</title><rect x="682.7" y="1059.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getNewRequest (7 samples, 0.37%)</title><rect x="682.7" y="1043.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.05%)</title><rect x="682.7" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="685.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="682.7" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getCloneRequest (6 samples, 0.31%)</title><rect x="683.3" y="1027.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.3" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.05%)</title><rect x="683.3" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.3" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.05%)</title><rect x="683.3" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.05%)</title><rect x="683.3" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="683.3" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.3" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="683.3" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (5 samples, 0.26%)</title><rect x="683.9" y="1011.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.9" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.26%)</title><rect x="683.9" y="995.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.9" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.26%)</title><rect x="683.9" y="979.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (5 samples, 0.26%)</title><rect x="683.9" y="963.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.26%)</title><rect x="683.9" y="947.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.26%)</title><rect x="683.9" y="931.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.9" y="942.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (5 samples, 0.26%)</title><rect x="683.9" y="915.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.9" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.26%)</title><rect x="683.9" y="899.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.9" y="910.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="683.9" y="883.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="686.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.10%)</title><rect x="685.2" y="883.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$131/786814935.test (2 samples, 0.10%)</title><rect x="685.2" y="867.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.lambda$getCloneRequest$4 (2 samples, 0.10%)</title><rect x="685.2" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.contains (2 samples, 0.10%)</title><rect x="685.2" y="835.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="685.2" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$127/723820855.test (1 samples, 0.05%)</title><rect x="686.4" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/SliceOps$1$1.cancellationRequested (1 samples, 0.05%)</title><rect x="687.0" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/Nodes$SpinedNodeBuilder.build (1 samples, 0.05%)</title><rect x="687.6" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="690.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$533/1330260838.run (334 samples, 17.53%)</title><rect x="688.3" y="1315.0" width="206.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="1326.0">ru/mail/polis/service/stasy..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$getRep$1 (334 samples, 17.53%)</title><rect x="688.3" y="1299.0" width="206.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="691.3" y="1310.0">ru/mail/polis/service/stasy..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getRepInternal (334 samples, 17.53%)</title><rect x="688.3" y="1283.0" width="206.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.3" y="1294.0">ru/mail/polis/service/stasy..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (84 samples, 4.41%)</title><rect x="688.3" y="1267.0" width="52.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.3" y="1278.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (77 samples, 4.04%)</title><rect x="689.5" y="1251.0" width="47.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.5" y="1262.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.21%)</title><rect x="689.5" y="1235.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.10%)</title><rect x="690.7" y="1219.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.05%)</title><rect x="690.7" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="693.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="691.4" y="1203.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="691.4" y="1187.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.05%)</title><rect x="691.4" y="1171.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (73 samples, 3.83%)</title><rect x="692.0" y="1235.0" width="45.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.0" y="1246.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 3.78%)</title><rect x="692.6" y="1219.0" width="44.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.6" y="1230.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (72 samples, 3.78%)</title><rect x="692.6" y="1203.0" width="44.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="695.6" y="1214.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (72 samples, 3.78%)</title><rect x="692.6" y="1187.0" width="44.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.6" y="1198.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.10%)</title><rect x="693.2" y="1171.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="696.2" y="1182.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="693.2" y="1155.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="696.2" y="1166.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="693.8" y="1155.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="696.8" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="693.8" y="1139.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="696.8" y="1150.0"></text>
</g>
<g>
<title>__libc_send (68 samples, 3.57%)</title><rect x="694.5" y="1171.0" width="42.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="697.5" y="1182.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 3.52%)</title><rect x="695.1" y="1155.0" width="41.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.1" y="1166.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (67 samples, 3.52%)</title><rect x="695.1" y="1139.0" width="41.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="698.1" y="1150.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (64 samples, 3.36%)</title><rect x="696.3" y="1123.0" width="39.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="699.3" y="1134.0">__x..</text>
</g>
<g>
<title>__sys_sendto (63 samples, 3.31%)</title><rect x="696.3" y="1107.0" width="39.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.3" y="1118.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (62 samples, 3.25%)</title><rect x="696.3" y="1091.0" width="38.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.3" y="1102.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (60 samples, 3.15%)</title><rect x="696.9" y="1075.0" width="37.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="699.9" y="1086.0">ine..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="696.9" y="1059.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="699.9" y="1070.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="697.6" y="1059.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="700.6" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg (58 samples, 3.04%)</title><rect x="698.2" y="1059.0" width="35.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.2" y="1070.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (58 samples, 3.04%)</title><rect x="698.2" y="1043.0" width="35.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.2" y="1054.0">tcp..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="698.2" y="1027.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.2" y="1038.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.26%)</title><rect x="698.8" y="1027.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.8" y="1038.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.26%)</title><rect x="698.8" y="1011.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="701.8" y="1022.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 0.16%)</title><rect x="698.8" y="995.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.8" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.16%)</title><rect x="698.8" y="979.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.8" y="990.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="700.7" y="995.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.7" y="1006.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="701.3" y="995.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.3" y="1006.0"></text>
</g>
<g>
<title>tcp_push (49 samples, 2.57%)</title><rect x="701.9" y="1027.0" width="30.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.9" y="1038.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (49 samples, 2.57%)</title><rect x="701.9" y="1011.0" width="30.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.9" y="1022.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (49 samples, 2.57%)</title><rect x="701.9" y="995.0" width="30.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.9" y="1006.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (46 samples, 2.41%)</title><rect x="701.9" y="979.0" width="28.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="704.9" y="990.0">__..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="703.1" y="963.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.1" y="974.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="703.8" y="963.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="706.8" y="974.0"></text>
</g>
<g>
<title>ip_queue_xmit (42 samples, 2.20%)</title><rect x="704.4" y="963.0" width="26.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="707.4" y="974.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 2.15%)</title><rect x="704.4" y="947.0" width="25.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="707.4" y="958.0">_..</text>
</g>
<g>
<title>ip_local_out (41 samples, 2.15%)</title><rect x="704.4" y="931.0" width="25.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="707.4" y="942.0">i..</text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.42%)</title><rect x="705.0" y="915.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="708.0" y="926.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.10%)</title><rect x="705.0" y="899.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="708.0" y="910.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.31%)</title><rect x="706.2" y="899.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="709.2" y="910.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (6 samples, 0.31%)</title><rect x="706.2" y="883.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.2" y="894.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="706.2" y="867.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="709.2" y="878.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (5 samples, 0.26%)</title><rect x="706.9" y="867.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.9" y="878.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.05%)</title><rect x="706.9" y="851.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="709.9" y="862.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="707.5" y="851.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="710.5" y="862.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (3 samples, 0.16%)</title><rect x="708.1" y="851.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.1" y="862.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (2 samples, 0.10%)</title><rect x="708.7" y="835.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="711.7" y="846.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (2 samples, 0.10%)</title><rect x="708.7" y="819.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="711.7" y="830.0"></text>
</g>
<g>
<title>ip_output (31 samples, 1.63%)</title><rect x="709.9" y="915.0" width="19.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.9" y="926.0"></text>
</g>
<g>
<title>ip_finish_output (31 samples, 1.63%)</title><rect x="709.9" y="899.0" width="19.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="712.9" y="910.0"></text>
</g>
<g>
<title>__ip_finish_output (29 samples, 1.52%)</title><rect x="710.6" y="883.0" width="17.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="713.6" y="894.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 1.52%)</title><rect x="710.6" y="867.0" width="17.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.6" y="878.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 1.36%)</title><rect x="711.2" y="851.0" width="16.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="714.2" y="862.0"></text>
</g>
<g>
<title>do_softirq.part.20 (26 samples, 1.36%)</title><rect x="711.2" y="835.0" width="16.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="714.2" y="846.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 1.31%)</title><rect x="711.8" y="819.0" width="15.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="714.8" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 1.31%)</title><rect x="711.8" y="803.0" width="15.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="714.8" y="814.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 1.31%)</title><rect x="711.8" y="787.0" width="15.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="714.8" y="798.0"></text>
</g>
<g>
<title>process_backlog (24 samples, 1.26%)</title><rect x="712.4" y="771.0" width="14.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="715.4" y="782.0"></text>
</g>
<g>
<title>__netif_receive_skb (24 samples, 1.26%)</title><rect x="712.4" y="755.0" width="14.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="715.4" y="766.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 1.26%)</title><rect x="712.4" y="739.0" width="14.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.4" y="750.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="712.4" y="723.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="715.4" y="734.0"></text>
</g>
<g>
<title>ip_rcv (23 samples, 1.21%)</title><rect x="713.0" y="723.0" width="14.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.0" y="734.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.05%)</title><rect x="713.0" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.0" y="718.0"></text>
</g>
<g>
<title>ip_rcv_finish (22 samples, 1.15%)</title><rect x="713.7" y="707.0" width="13.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.7" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver (20 samples, 1.05%)</title><rect x="713.7" y="691.0" width="12.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.7" y="702.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 1.05%)</title><rect x="713.7" y="675.0" width="12.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.7" y="686.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 1.05%)</title><rect x="713.7" y="659.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.7" y="670.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 1.05%)</title><rect x="713.7" y="643.0" width="12.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.7" y="654.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.16%)</title><rect x="714.3" y="627.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="717.3" y="638.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="716.1" y="627.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="719.1" y="638.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.10%)</title><rect x="716.1" y="611.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="719.1" y="622.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 0.73%)</title><rect x="717.4" y="627.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.4" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="717.4" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="720.4" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.68%)</title><rect x="718.0" y="611.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="721.0" y="622.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.10%)</title><rect x="718.6" y="595.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.6" y="606.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.10%)</title><rect x="718.6" y="579.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="721.6" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.10%)</title><rect x="718.6" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.6" y="574.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="718.6" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="721.6" y="558.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="719.2" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="722.2" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="719.2" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.2" y="542.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.26%)</title><rect x="719.9" y="595.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.9" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.16%)</title><rect x="721.1" y="579.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.1" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.16%)</title><rect x="721.1" y="563.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.1" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="721.1" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="724.1" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="721.1" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="724.1" y="542.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="721.7" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="724.7" y="558.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="721.7" y="531.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.7" y="542.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="722.3" y="515.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="725.3" y="526.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="722.3" y="499.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.3" y="510.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.26%)</title><rect x="723.0" y="595.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.0" y="606.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.26%)</title><rect x="723.0" y="579.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.0" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.26%)</title><rect x="723.0" y="563.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.0" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.26%)</title><rect x="723.0" y="547.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.0" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.26%)</title><rect x="723.0" y="531.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.0" y="542.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.10%)</title><rect x="726.1" y="691.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="729.1" y="702.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.10%)</title><rect x="727.3" y="851.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="730.3" y="862.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.10%)</title><rect x="727.3" y="835.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.3" y="846.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.05%)</title><rect x="727.9" y="819.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="730.9" y="830.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="728.5" y="883.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="731.5" y="894.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="729.1" y="915.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.1" y="926.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.05%)</title><rect x="729.8" y="947.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="732.8" y="958.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="730.4" y="979.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.4" y="990.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.10%)</title><rect x="731.0" y="979.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.0" y="990.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.05%)</title><rect x="731.6" y="963.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="734.6" y="974.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.16%)</title><rect x="732.2" y="1027.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.2" y="1038.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.16%)</title><rect x="732.2" y="1011.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="735.2" y="1022.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.10%)</title><rect x="732.9" y="995.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="735.9" y="1006.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="734.1" y="1075.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="737.1" y="1086.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="734.1" y="1059.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.1" y="1070.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="734.1" y="1043.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.1" y="1054.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="734.1" y="1027.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="737.1" y="1038.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="734.7" y="1091.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="737.7" y="1102.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="734.7" y="1075.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="737.7" y="1086.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="734.7" y="1059.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="737.7" y="1070.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="734.7" y="1043.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="737.7" y="1054.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="735.3" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="738.3" y="1118.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="736.0" y="1123.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.0" y="1134.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="736.0" y="1107.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.0" y="1118.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="736.6" y="1171.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="739.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.21%)</title><rect x="737.2" y="1251.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="738.4" y="1235.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="738.4" y="1219.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="739.1" y="1235.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.05%)</title><rect x="739.7" y="1251.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="739.7" y="1235.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="742.7" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getKey (4 samples, 0.21%)</title><rect x="740.3" y="1267.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.3" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (4 samples, 0.21%)</title><rect x="740.3" y="1251.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="743.3" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.21%)</title><rect x="740.3" y="1235.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.21%)</title><rect x="740.3" y="1219.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.3" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="740.3" y="1203.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="743.3" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="740.3" y="1187.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="743.3" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="740.3" y="1171.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="743.3" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="740.3" y="1155.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.3" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.16%)</title><rect x="740.9" y="1203.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="743.9" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="741.5" y="1187.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.5" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="741.5" y="1171.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="744.5" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="741.5" y="1155.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.05%)</title><rect x="742.2" y="1155.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer.getResponseIfIdNotNull (246 samples, 12.91%)</title><rect x="742.8" y="1267.0" width="152.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.8" y="1278.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (243 samples, 12.76%)</title><rect x="742.8" y="1251.0" width="150.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.8" y="1262.0">ru/mail/polis/dao/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (4 samples, 0.21%)</title><rect x="743.4" y="1235.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (4 samples, 0.21%)</title><rect x="743.4" y="1219.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.21%)</title><rect x="743.4" y="1203.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="743.4" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.4" y="1198.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="743.4" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.4" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="743.4" y="1155.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="746.4" y="1166.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="743.4" y="1139.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="746.4" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="743.4" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="746.4" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="743.4" y="1107.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="746.4" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="743.4" y="1091.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="746.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.05%)</title><rect x="744.0" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (1 samples, 0.05%)</title><rect x="744.0" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.10%)</title><rect x="744.6" y="1187.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.6" y="1198.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (35 samples, 1.84%)</title><rect x="745.9" y="1235.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.9" y="1246.0">j..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (35 samples, 1.84%)</title><rect x="745.9" y="1219.0" width="21.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.9" y="1230.0">j..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (35 samples, 1.84%)</title><rect x="745.9" y="1203.0" width="21.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="748.9" y="1214.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (35 samples, 1.84%)</title><rect x="745.9" y="1187.0" width="21.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="748.9" y="1198.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (34 samples, 1.78%)</title><rect x="746.5" y="1171.0" width="21.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.5" y="1182.0">j..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (32 samples, 1.68%)</title><rect x="747.7" y="1155.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.7" y="1166.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (3 samples, 0.16%)</title><rect x="748.4" y="1139.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="751.4" y="1150.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (28 samples, 1.47%)</title><rect x="750.2" y="1139.0" width="17.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.2" y="1150.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (28 samples, 1.47%)</title><rect x="750.2" y="1123.0" width="17.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="753.2" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.05%)</title><rect x="750.2" y="1107.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="753.2" y="1118.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (27 samples, 1.42%)</title><rect x="750.8" y="1107.0" width="16.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="753.8" y="1118.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.05%)</title><rect x="750.8" y="1091.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="753.8" y="1102.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (26 samples, 1.36%)</title><rect x="751.4" y="1091.0" width="16.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="754.4" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.10%)</title><rect x="754.5" y="1075.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="757.5" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.10%)</title><rect x="755.8" y="1075.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="758.8" y="1086.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (5 samples, 0.26%)</title><rect x="757.0" y="1075.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="760.0" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.05%)</title><rect x="757.0" y="1059.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="760.0" y="1070.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (4 samples, 0.21%)</title><rect x="757.6" y="1059.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="760.6" y="1070.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="757.6" y="1043.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="760.6" y="1054.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (2 samples, 0.10%)</title><rect x="758.3" y="1043.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="761.3" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="758.3" y="1027.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="761.3" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.10%)</title><rect x="758.3" y="1011.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="761.3" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.05%)</title><rect x="758.9" y="995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="761.9" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="759.5" y="1043.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="762.5" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="759.5" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="762.5" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="759.5" y="1011.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="762.5" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.05%)</title><rect x="759.5" y="995.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="762.5" y="1006.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (1 samples, 0.05%)</title><rect x="760.1" y="1075.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="763.1" y="1086.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.21%)</title><rect x="760.7" y="1075.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="763.7" y="1086.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="762.0" y="1059.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="765.0" y="1070.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="762.6" y="1059.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="765.6" y="1070.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (2 samples, 0.10%)</title><rect x="763.2" y="1075.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="766.2" y="1086.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.05%)</title><rect x="764.5" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="767.5" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.21%)</title><rect x="765.1" y="1075.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="768.1" y="1086.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.05%)</title><rect x="766.3" y="1059.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="769.3" y="1070.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="766.9" y="1059.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="769.9" y="1070.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="766.9" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="769.9" y="1054.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (203 samples, 10.66%)</title><rect x="767.6" y="1235.0" width="125.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="770.6" y="1246.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (203 samples, 10.66%)</title><rect x="767.6" y="1219.0" width="125.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.6" y="1230.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="767.6" y="1203.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.6" y="1214.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (148 samples, 7.77%)</title><rect x="768.2" y="1203.0" width="91.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="771.2" y="1214.0">Java_org_ro..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.05%)</title><rect x="768.2" y="1187.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="771.2" y="1198.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="768.8" y="1187.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="771.8" y="1198.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.05%)</title><rect x="769.4" y="1187.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="772.4" y="1198.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (145 samples, 7.61%)</title><rect x="770.0" y="1187.0" width="89.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="773.0" y="1198.0">rocksdb_ge..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (143 samples, 7.51%)</title><rect x="770.7" y="1171.0" width="88.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="773.7" y="1182.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.05%)</title><rect x="770.7" y="1155.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="773.7" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (142 samples, 7.45%)</title><rect x="771.3" y="1155.0" width="87.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="774.3" y="1166.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (142 samples, 7.45%)</title><rect x="771.3" y="1139.0" width="87.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="774.3" y="1150.0">rocksdb::D..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="771.3" y="1123.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="774.3" y="1134.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (140 samples, 7.35%)</title><rect x="771.9" y="1123.0" width="86.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="774.9" y="1134.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.10%)</title><rect x="771.9" y="1107.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="774.9" y="1118.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.05%)</title><rect x="771.9" y="1091.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="774.9" y="1102.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.05%)</title><rect x="772.5" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="775.5" y="1102.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.05%)</title><rect x="772.5" y="1075.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="775.5" y="1086.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.10%)</title><rect x="773.1" y="1107.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="776.1" y="1118.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.10%)</title><rect x="773.1" y="1091.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="776.1" y="1102.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.05%)</title><rect x="773.1" y="1075.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="776.1" y="1086.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() [clone .plt] (1 samples, 0.05%)</title><rect x="773.7" y="1075.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="776.7" y="1086.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (134 samples, 7.03%)</title><rect x="774.4" y="1107.0" width="83.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="777.4" y="1118.0">rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni7079990043030843790.so (133 samples, 6.98%)</title><rect x="775.0" y="1091.0" width="82.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="778.0" y="1102.0">/tmp/libr..</text>
</g>
<g>
<title>/tmp/librocksdbjni7079990043030843790.so (6 samples, 0.31%)</title><rect x="775.6" y="1075.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="778.6" y="1086.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.31%)</title><rect x="775.6" y="1059.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="778.6" y="1070.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.16%)</title><rect x="775.6" y="1043.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="778.6" y="1054.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.16%)</title><rect x="775.6" y="1027.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="778.6" y="1038.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.16%)</title><rect x="775.6" y="1011.0" width="1.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="778.6" y="1022.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.05%)</title><rect x="775.6" y="995.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="778.6" y="1006.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.10%)</title><rect x="776.2" y="995.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="779.2" y="1006.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.05%)</title><rect x="776.2" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="779.2" y="990.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.05%)</title><rect x="776.8" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="779.8" y="990.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.05%)</title><rect x="776.8" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="779.8" y="974.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.05%)</title><rect x="777.5" y="1043.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="780.5" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="778.1" y="1043.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="781.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="778.1" y="1027.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="781.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="778.1" y="1011.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="781.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="778.1" y="995.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="781.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="778.1" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.1" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="778.1" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.1" y="974.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="778.1" y="947.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="781.1" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="778.1" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="781.1" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="778.1" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.1" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="778.7" y="1043.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="781.7" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="778.7" y="1027.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="781.7" y="1038.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (126 samples, 6.61%)</title><rect x="779.3" y="1075.0" width="78.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="782.3" y="1086.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (124 samples, 6.51%)</title><rect x="780.6" y="1059.0" width="76.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="783.6" y="1070.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.10%)</title><rect x="781.2" y="1043.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="784.2" y="1054.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (120 samples, 6.30%)</title><rect x="782.4" y="1043.0" width="74.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="785.4" y="1054.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (19 samples, 1.00%)</title><rect x="784.9" y="1027.0" width="11.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="787.9" y="1038.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (19 samples, 1.00%)</title><rect x="784.9" y="1011.0" width="11.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="787.9" y="1022.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.05%)</title><rect x="785.5" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="788.5" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="786.1" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="789.1" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="786.8" y="995.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="789.8" y="1006.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (14 samples, 0.73%)</title><rect x="788.0" y="995.0" width="8.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="791.0" y="1006.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.05%)</title><rect x="789.2" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="792.2" y="990.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="789.9" y="979.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="792.9" y="990.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.47%)</title><rect x="790.5" y="979.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="793.5" y="990.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.05%)</title><rect x="790.5" y="963.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="793.5" y="974.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.16%)</title><rect x="791.1" y="963.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.1" y="974.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.26%)</title><rect x="793.0" y="963.0" width="3.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="796.0" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.10%)</title><rect x="794.8" y="947.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="797.8" y="958.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="796.0" y="979.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="799.0" y="990.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (47 samples, 2.47%)</title><rect x="796.7" y="1027.0" width="29.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="799.7" y="1038.0">JN..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="797.9" y="1011.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="800.9" y="1022.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (44 samples, 2.31%)</title><rect x="798.5" y="1011.0" width="27.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="801.5" y="1022.0">j..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (2 samples, 0.10%)</title><rect x="798.5" y="995.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="801.5" y="1006.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="799.8" y="995.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="802.8" y="1006.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="800.4" y="995.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="803.4" y="1006.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (2 samples, 0.10%)</title><rect x="801.0" y="995.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="804.0" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.16%)</title><rect x="802.2" y="995.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="805.2" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="804.1" y="995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="807.1" y="1006.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (33 samples, 1.73%)</title><rect x="804.7" y="995.0" width="20.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="807.7" y="1006.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="809.7" y="979.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="812.7" y="990.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (4 samples, 0.21%)</title><rect x="810.3" y="979.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="813.3" y="990.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.05%)</title><rect x="812.8" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="815.8" y="990.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (14 samples, 0.73%)</title><rect x="813.4" y="979.0" width="8.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="816.4" y="990.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.10%)</title><rect x="815.9" y="963.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="818.9" y="974.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (6 samples, 0.31%)</title><rect x="817.1" y="963.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="820.1" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.10%)</title><rect x="819.0" y="947.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="822.0" y="958.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.05%)</title><rect x="820.2" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="823.2" y="958.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.10%)</title><rect x="820.8" y="963.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="823.8" y="974.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="822.1" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="825.1" y="990.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.10%)</title><rect x="822.7" y="979.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.7" y="990.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.10%)</title><rect x="823.9" y="979.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="826.9" y="990.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="825.2" y="995.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="828.2" y="1006.0"></text>
</g>
<g>
<title>__lll_lock_wait (5 samples, 0.26%)</title><rect x="825.8" y="1027.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="828.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.26%)</title><rect x="825.8" y="1011.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.8" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.26%)</title><rect x="825.8" y="995.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.8" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.21%)</title><rect x="826.4" y="979.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="829.4" y="990.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.21%)</title><rect x="826.4" y="963.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="829.4" y="974.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.16%)</title><rect x="827.0" y="947.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="830.0" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="827.6" y="931.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.6" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="827.6" y="915.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="830.6" y="926.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="827.6" y="899.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="830.6" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="827.6" y="883.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.6" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="828.3" y="931.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="831.3" y="942.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="828.3" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="831.3" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 1.00%)</title><rect x="828.9" y="1027.0" width="11.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="831.9" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.00%)</title><rect x="828.9" y="1011.0" width="11.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="831.9" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.00%)</title><rect x="828.9" y="995.0" width="11.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="831.9" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.94%)</title><rect x="828.9" y="979.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.9" y="990.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.94%)</title><rect x="828.9" y="963.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="831.9" y="974.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.94%)</title><rect x="828.9" y="947.0" width="11.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.9" y="958.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.89%)</title><rect x="829.5" y="931.0" width="10.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.5" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.89%)</title><rect x="829.5" y="915.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.5" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.89%)</title><rect x="829.5" y="899.0" width="10.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.5" y="910.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="840.0" y="979.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="843.0" y="990.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="840.0" y="963.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="843.0" y="974.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="840.0" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="843.0" y="958.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.10%)</title><rect x="840.6" y="1027.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="843.6" y="1038.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.10%)</title><rect x="841.9" y="1027.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="844.9" y="1038.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (11 samples, 0.58%)</title><rect x="843.1" y="1027.0" width="6.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="846.1" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.26%)</title><rect x="844.4" y="1011.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="847.4" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.21%)</title><rect x="847.5" y="1011.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="850.5" y="1022.0"></text>
</g>
<g>
<title>jni_GetEnv (2 samples, 0.10%)</title><rect x="849.9" y="1027.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="852.9" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.05%)</title><rect x="851.2" y="1027.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="854.2" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.31%)</title><rect x="851.8" y="1027.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="854.8" y="1038.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.05%)</title><rect x="855.5" y="1027.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="858.5" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="855.5" y="1011.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="858.5" y="1022.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.05%)</title><rect x="856.1" y="1027.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="859.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.05%)</title><rect x="856.8" y="1043.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="859.8" y="1054.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) [clone .plt] (1 samples, 0.05%)</title><rect x="857.4" y="1107.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="860.4" y="1118.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.05%)</title><rect x="858.0" y="1107.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="861.0" y="1118.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.05%)</title><rect x="858.6" y="1123.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="861.6" y="1134.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.05%)</title><rect x="859.2" y="1171.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="862.2" y="1182.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.05%)</title><rect x="859.8" y="1203.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="862.8" y="1214.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.21%)</title><rect x="860.5" y="1203.0" width="2.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="863.5" y="1214.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (7 samples, 0.37%)</title><rect x="862.9" y="1203.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.9" y="1214.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.05%)</title><rect x="867.3" y="1203.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="870.3" y="1214.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.05%)</title><rect x="867.9" y="1203.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="870.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (40 samples, 2.10%)</title><rect x="868.5" y="1203.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.5" y="1214.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (38 samples, 1.99%)</title><rect x="869.8" y="1187.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.8" y="1198.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (37 samples, 1.94%)</title><rect x="870.4" y="1171.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.4" y="1182.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (3 samples, 0.16%)</title><rect x="870.4" y="1155.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.4" y="1166.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (34 samples, 1.78%)</title><rect x="872.2" y="1155.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.2" y="1166.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (32 samples, 1.68%)</title><rect x="873.5" y="1139.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.5" y="1150.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (30 samples, 1.57%)</title><rect x="874.1" y="1123.0" width="18.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="877.1" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="874.7" y="1107.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="877.7" y="1118.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="875.3" y="1107.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="878.3" y="1118.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.16%)</title><rect x="876.6" y="1107.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="879.6" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.10%)</title><rect x="876.6" y="1091.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="879.6" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="877.8" y="1091.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="880.8" y="1102.0"></text>
</g>
<g>
<title>jni_NewByteArray (19 samples, 1.00%)</title><rect x="878.4" y="1107.0" width="11.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="881.4" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.05%)</title><rect x="879.0" y="1091.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="882.0" y="1102.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.26%)</title><rect x="879.7" y="1091.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="882.7" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="882.8" y="1091.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="885.8" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.52%)</title><rect x="884.0" y="1091.0" width="6.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="887.0" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.42%)</title><rect x="885.2" y="1075.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="888.2" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.31%)</title><rect x="885.2" y="1059.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="888.2" y="1070.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="887.1" y="1043.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="890.1" y="1054.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.10%)</title><rect x="887.7" y="1043.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="890.7" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="889.0" y="1059.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="892.0" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.16%)</title><rect x="890.2" y="1107.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="893.2" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="890.8" y="1091.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="893.8" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="891.4" y="1091.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="894.4" y="1102.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.05%)</title><rect x="892.1" y="1107.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="895.1" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="892.7" y="1123.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="895.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (1 samples, 0.05%)</title><rect x="893.3" y="1251.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.3" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.05%)</title><rect x="893.3" y="1235.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="893.3" y="1219.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.3" y="1230.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.05%)</title><rect x="893.3" y="1203.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.3" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getTimestamp (2 samples, 0.10%)</title><rect x="893.9" y="1251.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="893.9" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.9" y="1246.0"></text>
</g>
<g>
<title>org/javatuples/Pair.&lt;init&gt; (1 samples, 0.05%)</title><rect x="894.5" y="1235.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="897.5" y="1246.0"></text>
</g>
<g>
<title>org/javatuples/Tuple.&lt;init&gt; (1 samples, 0.05%)</title><rect x="894.5" y="1219.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (128 samples, 6.72%)</title><rect x="895.2" y="1363.0" width="79.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.2" y="1374.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (128 samples, 6.72%)</title><rect x="895.2" y="1347.0" width="79.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.2" y="1358.0">java/util..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.05%)</title><rect x="896.4" y="1331.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (67 samples, 3.52%)</title><rect x="897.0" y="1331.0" width="41.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.0" y="1342.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (4 samples, 0.21%)</title><rect x="898.3" y="1315.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (4 samples, 0.21%)</title><rect x="898.3" y="1299.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.05%)</title><rect x="898.9" y="1283.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.9" y="1294.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.10%)</title><rect x="899.5" y="1283.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.5" y="1294.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="899.5" y="1267.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="902.5" y="1278.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="900.1" y="1251.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="903.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.05%)</title><rect x="900.7" y="1315.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.05%)</title><rect x="900.7" y="1299.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (60 samples, 3.15%)</title><rect x="901.3" y="1315.0" width="37.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.3" y="1326.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (60 samples, 3.15%)</title><rect x="901.3" y="1299.0" width="37.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.3" y="1310.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (59 samples, 3.10%)</title><rect x="902.0" y="1283.0" width="36.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.0" y="1294.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (13 samples, 0.68%)</title><rect x="902.0" y="1267.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="902.0" y="1251.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.10%)</title><rect x="902.0" y="1235.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.10%)</title><rect x="902.0" y="1219.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.10%)</title><rect x="902.0" y="1203.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.10%)</title><rect x="902.0" y="1187.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (9 samples, 0.47%)</title><rect x="903.2" y="1251.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.47%)</title><rect x="903.2" y="1235.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$BiRelay.tryFire (1 samples, 0.05%)</title><rect x="903.2" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (8 samples, 0.42%)</title><rect x="903.8" y="1219.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.42%)</title><rect x="903.8" y="1203.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.42%)</title><rect x="903.8" y="1187.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.8" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.42%)</title><rect x="903.8" y="1171.0" width="5.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="906.8" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="905.1" y="1155.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="908.1" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.31%)</title><rect x="905.1" y="1139.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="908.1" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.26%)</title><rect x="905.7" y="1123.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="908.7" y="1134.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.21%)</title><rect x="906.3" y="1107.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.3" y="1118.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.21%)</title><rect x="906.3" y="1091.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.3" y="1102.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="906.3" y="1075.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.3" y="1086.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="906.3" y="1059.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.3" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.16%)</title><rect x="906.9" y="1075.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.9" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.16%)</title><rect x="906.9" y="1059.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="909.9" y="1070.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.16%)</title><rect x="906.9" y="1043.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="909.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$206/1427897007.accept (2 samples, 0.10%)</title><rect x="908.8" y="1251.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.10%)</title><rect x="908.8" y="1235.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.8" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.10%)</title><rect x="908.8" y="1219.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (26 samples, 1.36%)</title><rect x="910.0" y="1267.0" width="16.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.05%)</title><rect x="910.0" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.0" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$204/3562961.apply (1 samples, 0.05%)</title><rect x="910.0" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (18 samples, 0.94%)</title><rect x="910.6" y="1251.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.94%)</title><rect x="910.6" y="1235.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (18 samples, 0.94%)</title><rect x="910.6" y="1219.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.84%)</title><rect x="911.9" y="1203.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.84%)</title><rect x="911.9" y="1187.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="914.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.84%)</title><rect x="911.9" y="1171.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (16 samples, 0.84%)</title><rect x="911.9" y="1155.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.84%)</title><rect x="911.9" y="1139.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.84%)</title><rect x="911.9" y="1123.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.84%)</title><rect x="911.9" y="1107.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.84%)</title><rect x="911.9" y="1091.0" width="9.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="914.9" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.73%)</title><rect x="913.1" y="1075.0" width="8.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="916.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.73%)</title><rect x="913.1" y="1059.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="916.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.68%)</title><rect x="913.1" y="1043.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="916.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.68%)</title><rect x="913.1" y="1027.0" width="8.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="916.1" y="1038.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.68%)</title><rect x="913.1" y="1011.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.1" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.68%)</title><rect x="913.1" y="995.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="916.1" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.63%)</title><rect x="913.7" y="979.0" width="7.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="916.7" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.63%)</title><rect x="913.7" y="963.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="916.7" y="974.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="921.2" y="1043.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="924.2" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="921.2" y="1027.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.2" y="1038.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="921.2" y="1011.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/internal/GetMethodServer$$Lambda$204/3562961.apply (7 samples, 0.37%)</title><rect x="921.8" y="1251.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="924.8" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (7 samples, 0.37%)</title><rect x="921.8" y="1235.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.8" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="921.8" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.8" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="921.8" y="1203.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="924.8" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="921.8" y="1187.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="924.8" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="921.8" y="1171.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="924.8" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="921.8" y="1155.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="924.8" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="921.8" y="1139.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="924.8" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="921.8" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="924.8" y="1134.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.05%)</title><rect x="921.8" y="1107.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="924.8" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.05%)</title><rect x="921.8" y="1091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="924.8" y="1102.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="921.8" y="1075.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="924.8" y="1086.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.05%)</title><rect x="921.8" y="1059.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="924.8" y="1070.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.05%)</title><rect x="921.8" y="1043.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="924.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.16%)</title><rect x="922.4" y="1219.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (3 samples, 0.16%)</title><rect x="922.4" y="1203.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="925.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.10%)</title><rect x="923.0" y="1187.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.0" y="1198.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="923.6" y="1171.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="926.6" y="1182.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1 samples, 0.05%)</title><rect x="924.3" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="927.3" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.05%)</title><rect x="924.3" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.3" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$480/944057688.accept (1 samples, 0.05%)</title><rect x="924.3" y="1187.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.3" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$6 (1 samples, 0.05%)</title><rect x="924.3" y="1171.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="927.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="924.3" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="924.3" y="1139.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/334203599.invoke (1 samples, 0.05%)</title><rect x="924.3" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="927.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="924.3" y="1107.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="927.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.05%)</title><rect x="924.3" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="927.3" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="924.3" y="1075.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.3" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="924.3" y="1059.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="927.3" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="924.3" y="1043.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="927.3" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="924.3" y="1027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="927.3" y="1038.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="924.3" y="1011.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="927.3" y="1022.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.05%)</title><rect x="924.3" y="995.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="927.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="924.9" y="1219.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="927.9" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.10%)</title><rect x="924.9" y="1203.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="927.9" y="1214.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.10%)</title><rect x="924.9" y="1187.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="927.9" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="924.9" y="1171.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="927.9" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.10%)</title><rect x="924.9" y="1155.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="927.9" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="924.9" y="1139.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="927.9" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="924.9" y="1123.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="927.9" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="924.9" y="1107.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.9" y="1118.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.05%)</title><rect x="924.9" y="1091.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="927.9" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_object(HeapWord*, unsigned long, bool) (1 samples, 0.05%)</title><rect x="924.9" y="1075.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="927.9" y="1086.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.05%)</title><rect x="925.5" y="1139.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="928.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 1.05%)</title><rect x="926.1" y="1267.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="929.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (18 samples, 0.94%)</title><rect x="926.7" y="1251.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.94%)</title><rect x="926.7" y="1235.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (18 samples, 0.94%)</title><rect x="926.7" y="1219.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.84%)</title><rect x="928.0" y="1203.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.84%)</title><rect x="928.0" y="1187.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="931.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.84%)</title><rect x="928.0" y="1171.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (16 samples, 0.84%)</title><rect x="928.0" y="1155.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="931.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.84%)</title><rect x="928.0" y="1139.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.84%)</title><rect x="928.0" y="1123.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="931.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.84%)</title><rect x="928.0" y="1107.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="931.0" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="928.0" y="1091.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="931.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.21%)</title><rect x="928.6" y="1091.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="931.6" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="928.6" y="1075.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="931.6" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="929.2" y="1075.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="932.2" y="1086.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="930.5" y="1075.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="933.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.58%)</title><rect x="931.1" y="1091.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="934.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.58%)</title><rect x="931.1" y="1075.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.58%)</title><rect x="931.1" y="1059.0" width="6.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.58%)</title><rect x="931.1" y="1043.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="934.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.58%)</title><rect x="931.1" y="1027.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="934.1" y="1038.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.58%)</title><rect x="931.1" y="1011.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.1" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="931.7" y="995.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="934.7" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="931.7" y="979.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.7" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="931.7" y="963.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="934.7" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="931.7" y="947.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.7" y="958.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.05%)</title><rect x="931.7" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.7" y="942.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="932.3" y="995.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.3" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.42%)</title><rect x="932.9" y="995.0" width="5.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="935.9" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.42%)</title><rect x="932.9" y="979.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.9" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.42%)</title><rect x="932.9" y="963.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="935.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="937.9" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.89%)</title><rect x="938.5" y="1331.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.05%)</title><rect x="938.5" y="1315.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="938.5" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.84%)</title><rect x="939.1" y="1315.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.1" y="1326.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.16%)</title><rect x="939.1" y="1299.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="942.1" y="1310.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="939.8" y="1283.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="942.8" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="939.8" y="1267.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="942.8" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="939.8" y="1251.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.8" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="939.8" y="1235.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.8" y="1246.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="939.8" y="1219.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.8" y="1230.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="939.8" y="1203.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="942.8" y="1214.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="939.8" y="1187.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.8" y="1198.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.05%)</title><rect x="939.8" y="1171.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.8" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="940.4" y="1283.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="943.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.68%)</title><rect x="941.0" y="1299.0" width="8.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="944.0" y="1310.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="941.0" y="1283.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="944.0" y="1294.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="941.6" y="1283.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="944.6" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (11 samples, 0.58%)</title><rect x="942.2" y="1283.0" width="6.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="945.2" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.42%)</title><rect x="944.1" y="1267.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.1" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.42%)</title><rect x="944.1" y="1251.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.1" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.31%)</title><rect x="945.3" y="1235.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="948.3" y="1246.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.31%)</title><rect x="945.3" y="1219.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.3" y="1230.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.31%)</title><rect x="945.3" y="1203.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="948.3" y="1214.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.31%)</title><rect x="945.3" y="1187.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="948.3" y="1198.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.31%)</title><rect x="945.3" y="1171.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="948.3" y="1182.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.26%)</title><rect x="945.9" y="1155.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="948.9" y="1166.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.21%)</title><rect x="946.6" y="1139.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (41 samples, 2.15%)</title><rect x="949.0" y="1331.0" width="25.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.0" y="1342.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 2.15%)</title><rect x="949.0" y="1315.0" width="25.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.0" y="1326.0">j..</text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.84%)</title><rect x="950.3" y="1299.0" width="9.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="953.3" y="1310.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="950.3" y="1283.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.3" y="1294.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="950.9" y="1283.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="953.9" y="1294.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.31%)</title><rect x="951.5" y="1283.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="954.5" y="1294.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="952.8" y="1267.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="955.8" y="1278.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.16%)</title><rect x="953.4" y="1267.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="956.4" y="1278.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="954.0" y="1251.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="957.0" y="1262.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="954.6" y="1251.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="957.6" y="1262.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="954.6" y="1235.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="957.6" y="1246.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.26%)</title><rect x="955.2" y="1283.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="958.2" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="955.9" y="1267.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="958.9" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="955.9" y="1251.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="958.9" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="956.5" y="1235.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.5" y="1246.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="956.5" y="1219.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.5" y="1230.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="957.1" y="1203.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="960.1" y="1214.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="957.7" y="1235.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="960.7" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.05%)</title><rect x="958.3" y="1283.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="961.3" y="1294.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="959.0" y="1283.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="962.0" y="1294.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="959.6" y="1283.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="962.6" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (23 samples, 1.21%)</title><rect x="960.2" y="1299.0" width="14.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="963.2" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.10%)</title><rect x="961.4" y="1283.0" width="13.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="964.4" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.10%)</title><rect x="961.4" y="1267.0" width="13.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="964.4" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.94%)</title><rect x="962.7" y="1251.0" width="11.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="965.7" y="1262.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.84%)</title><rect x="963.9" y="1235.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="966.9" y="1246.0"></text>
</g>
<g>
<title>futex_wait (16 samples, 0.84%)</title><rect x="963.9" y="1219.0" width="9.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="966.9" y="1230.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.68%)</title><rect x="964.5" y="1203.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="967.5" y="1214.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (4 samples, 0.21%)</title><rect x="964.5" y="1187.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.5" y="1198.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.21%)</title><rect x="964.5" y="1171.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="967.5" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.21%)</title><rect x="964.5" y="1155.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="967.5" y="1166.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="967.0" y="1187.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.0" y="1198.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.42%)</title><rect x="967.6" y="1187.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="970.6" y="1198.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.42%)</title><rect x="967.6" y="1171.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="970.6" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.37%)</title><rect x="968.2" y="1155.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.2" y="1166.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.10%)</title><rect x="972.6" y="1203.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="975.6" y="1214.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.10%)</title><rect x="972.6" y="1187.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="975.6" y="1198.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="972.6" y="1171.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="975.6" y="1182.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="973.8" y="1251.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="976.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (170 samples, 8.92%)</title><rect x="974.4" y="1363.0" width="105.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="977.4" y="1374.0">jdk/internal/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="976.3" y="1347.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.3" y="1358.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.05%)</title><rect x="976.3" y="1331.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.3" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="976.9" y="1347.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.9" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="976.9" y="1331.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.9" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="976.9" y="1315.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.9" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="976.9" y="1299.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.9" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.05%)</title><rect x="977.5" y="1347.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.5" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (41 samples, 2.15%)</title><rect x="978.2" y="1347.0" width="25.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.2" y="1358.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/521791657.accept (39 samples, 2.05%)</title><rect x="978.2" y="1331.0" width="24.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.2" y="1342.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (39 samples, 2.05%)</title><rect x="978.2" y="1315.0" width="24.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.2" y="1326.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (39 samples, 2.05%)</title><rect x="978.2" y="1299.0" width="24.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.2" y="1310.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (39 samples, 2.05%)</title><rect x="978.2" y="1283.0" width="24.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.2" y="1294.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (39 samples, 2.05%)</title><rect x="978.2" y="1267.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="981.2" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.10%)</title><rect x="978.8" y="1251.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="979.4" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.05%)</title><rect x="979.4" y="1219.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="982.4" y="1230.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="979.4" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.4" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="979.4" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="979.4" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="982.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (36 samples, 1.89%)</title><rect x="980.0" y="1251.0" width="22.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.0" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 1.89%)</title><rect x="980.0" y="1235.0" width="22.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="983.0" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 1.89%)</title><rect x="980.0" y="1219.0" width="22.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.0" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (36 samples, 1.89%)</title><rect x="980.0" y="1203.0" width="22.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.0" y="1214.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (36 samples, 1.89%)</title><rect x="980.0" y="1187.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.0" y="1198.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$272/1574090351.run (35 samples, 1.84%)</title><rect x="980.6" y="1171.0" width="21.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="983.6" y="1182.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (35 samples, 1.84%)</title><rect x="980.6" y="1155.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.6" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (14 samples, 0.73%)</title><rect x="980.6" y="1139.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (14 samples, 0.73%)</title><rect x="980.6" y="1123.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (14 samples, 0.73%)</title><rect x="980.6" y="1107.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="983.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.73%)</title><rect x="980.6" y="1091.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.73%)</title><rect x="980.6" y="1075.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="983.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.73%)</title><rect x="980.6" y="1059.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="983.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.73%)</title><rect x="980.6" y="1043.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (14 samples, 0.73%)</title><rect x="980.6" y="1027.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (14 samples, 0.73%)</title><rect x="980.6" y="1011.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="983.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (13 samples, 0.68%)</title><rect x="980.6" y="995.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.68%)</title><rect x="980.6" y="979.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.68%)</title><rect x="980.6" y="963.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.6" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="980.6" y="947.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="983.6" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="980.6" y="931.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="983.6" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="981.3" y="931.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="984.3" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.58%)</title><rect x="981.9" y="947.0" width="6.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="984.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.58%)</title><rect x="981.9" y="931.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="984.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.58%)</title><rect x="981.9" y="915.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="984.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.58%)</title><rect x="981.9" y="899.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="984.9" y="910.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.52%)</title><rect x="982.5" y="883.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="985.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.52%)</title><rect x="982.5" y="867.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="985.5" y="878.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.52%)</title><rect x="982.5" y="851.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="985.5" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.52%)</title><rect x="982.5" y="835.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="985.5" y="846.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.52%)</title><rect x="982.5" y="819.0" width="6.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="985.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.05%)</title><rect x="988.7" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.05%)</title><rect x="988.7" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="991.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (20 samples, 1.05%)</title><rect x="989.3" y="1139.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (3 samples, 0.16%)</title><rect x="989.3" y="1123.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (17 samples, 0.89%)</title><rect x="991.2" y="1123.0" width="10.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.2" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.89%)</title><rect x="991.2" y="1107.0" width="10.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.89%)</title><rect x="991.2" y="1091.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="994.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.05%)</title><rect x="991.8" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.68%)</title><rect x="992.4" y="1075.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="995.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (13 samples, 0.68%)</title><rect x="992.4" y="1059.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="995.4" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (13 samples, 0.68%)</title><rect x="992.4" y="1043.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.68%)</title><rect x="992.4" y="1027.0" width="8.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="995.4" y="1038.0"></text>
</g>
<g>
<title>__GI___libc_read (13 samples, 0.68%)</title><rect x="992.4" y="1011.0" width="8.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="995.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.58%)</title><rect x="993.6" y="995.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.58%)</title><rect x="993.6" y="979.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="996.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_read (11 samples, 0.58%)</title><rect x="993.6" y="963.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="996.6" y="974.0"></text>
</g>
<g>
<title>ksys_read (11 samples, 0.58%)</title><rect x="993.6" y="947.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="996.6" y="958.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.58%)</title><rect x="993.6" y="931.0" width="6.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="996.6" y="942.0"></text>
</g>
<g>
<title>__vfs_read (11 samples, 0.58%)</title><rect x="993.6" y="915.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.6" y="926.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.05%)</title><rect x="993.6" y="899.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.6" y="910.0"></text>
</g>
<g>
<title>new_sync_read (9 samples, 0.47%)</title><rect x="994.3" y="899.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="997.3" y="910.0"></text>
</g>
<g>
<title>sock_read_iter (9 samples, 0.47%)</title><rect x="994.3" y="883.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.3" y="894.0"></text>
</g>
<g>
<title>sock_recvmsg (8 samples, 0.42%)</title><rect x="994.9" y="867.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="997.9" y="878.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.26%)</title><rect x="994.9" y="851.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="997.9" y="862.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.21%)</title><rect x="995.5" y="835.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.5" y="846.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="995.5" y="819.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.5" y="830.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="995.5" y="803.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.5" y="814.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="995.5" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="998.5" y="798.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="995.5" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.5" y="782.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="996.1" y="819.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="999.1" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="996.1" y="803.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.1" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.10%)</title><rect x="996.7" y="819.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.7" y="830.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.10%)</title><rect x="996.7" y="803.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="999.7" y="814.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="996.7" y="787.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="999.7" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.05%)</title><rect x="997.4" y="787.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1000.4" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.05%)</title><rect x="997.4" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.4" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="997.4" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1000.4" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.16%)</title><rect x="998.0" y="851.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1001.0" y="862.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.16%)</title><rect x="998.0" y="835.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1001.0" y="846.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.16%)</title><rect x="998.0" y="819.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1001.0" y="830.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.10%)</title><rect x="998.6" y="803.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1001.6" y="814.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="998.6" y="787.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.6" y="798.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.10%)</title><rect x="998.6" y="771.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1001.6" y="782.0"></text>
</g>
<g>
<title>sock_read_iter (1 samples, 0.05%)</title><rect x="999.8" y="899.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1002.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.10%)</title><rect x="1000.5" y="1075.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.10%)</title><rect x="1000.5" y="1059.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.5" y="1070.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1001.1" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1004.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1001.1" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.05%)</title><rect x="1001.1" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.05%)</title><rect x="1001.7" y="1139.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.7" y="1150.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.05%)</title><rect x="1001.7" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.7" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1001.7" y="1107.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$369/1204217064.accept (2 samples, 0.10%)</title><rect x="1002.3" y="1331.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.10%)</title><rect x="1002.3" y="1315.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$360/1595048729.run (2 samples, 0.10%)</title><rect x="1002.3" y="1299.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2 samples, 0.10%)</title><rect x="1002.3" y="1283.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.10%)</title><rect x="1002.3" y="1267.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.3" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.05%)</title><rect x="1002.3" y="1251.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.3" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.05%)</title><rect x="1002.3" y="1235.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.3" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1002.9" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.9" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.05%)</title><rect x="1002.9" y="1235.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.9" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.05%)</title><rect x="1003.6" y="1347.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.6" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1003.6" y="1331.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1003.6" y="1315.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.6" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.16%)</title><rect x="1004.2" y="1347.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.2" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.16%)</title><rect x="1004.2" y="1331.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.2" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.16%)</title><rect x="1004.2" y="1315.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.2" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.16%)</title><rect x="1004.2" y="1299.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.2" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.16%)</title><rect x="1004.2" y="1283.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.2" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.16%)</title><rect x="1004.2" y="1267.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1007.2" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.16%)</title><rect x="1004.2" y="1251.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.2" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.10%)</title><rect x="1004.8" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.8" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.10%)</title><rect x="1004.8" y="1219.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$356/268173736.accept (2 samples, 0.10%)</title><rect x="1004.8" y="1203.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (48 samples, 2.52%)</title><rect x="1006.0" y="1347.0" width="29.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.0" y="1358.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$274/295967340.run (25 samples, 1.31%)</title><rect x="1006.0" y="1331.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (25 samples, 1.31%)</title><rect x="1006.0" y="1315.0" width="15.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 1.31%)</title><rect x="1006.0" y="1299.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 1.31%)</title><rect x="1006.0" y="1283.0" width="15.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (25 samples, 1.31%)</title><rect x="1006.0" y="1267.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (25 samples, 1.31%)</title><rect x="1006.0" y="1251.0" width="15.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$272/1574090351.run (24 samples, 1.26%)</title><rect x="1006.7" y="1235.0" width="14.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (24 samples, 1.26%)</title><rect x="1006.7" y="1219.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (24 samples, 1.26%)</title><rect x="1006.7" y="1203.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.05%)</title><rect x="1009.1" y="1187.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.05%)</title><rect x="1009.1" y="1171.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.05%)</title><rect x="1009.1" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.05%)</title><rect x="1009.7" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1012.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.05%)</title><rect x="1009.7" y="1171.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (18 samples, 0.94%)</title><rect x="1010.4" y="1187.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.16%)</title><rect x="1010.4" y="1171.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.16%)</title><rect x="1010.4" y="1155.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.16%)</title><rect x="1010.4" y="1139.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.10%)</title><rect x="1010.4" y="1123.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.10%)</title><rect x="1010.4" y="1107.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.05%)</title><rect x="1010.4" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="1010.4" y="1075.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="1010.4" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="1011.0" y="1091.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="1011.0" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.0" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="1011.0" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.0" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="1011.0" y="1043.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="1011.0" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1014.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="1011.0" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1014.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.05%)</title><rect x="1011.6" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (15 samples, 0.79%)</title><rect x="1012.2" y="1171.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.79%)</title><rect x="1012.2" y="1155.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.79%)</title><rect x="1012.2" y="1139.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.73%)</title><rect x="1012.2" y="1123.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.73%)</title><rect x="1012.2" y="1107.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="1012.2" y="1091.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="1012.2" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="1012.2" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1015.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.05%)</title><rect x="1012.2" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1015.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.05%)</title><rect x="1012.2" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.05%)</title><rect x="1012.2" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (13 samples, 0.68%)</title><rect x="1012.8" y="1091.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (13 samples, 0.68%)</title><rect x="1012.8" y="1075.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (13 samples, 0.68%)</title><rect x="1012.8" y="1059.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="1012.8" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="1012.8" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.63%)</title><rect x="1013.5" y="1043.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.63%)</title><rect x="1013.5" y="1027.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1016.5" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="1013.5" y="1011.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1016.5" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="1013.5" y="995.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1016.5" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="1014.1" y="995.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1017.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.52%)</title><rect x="1014.7" y="1011.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1017.7" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.37%)</title><rect x="1016.6" y="995.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1019.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.37%)</title><rect x="1016.6" y="979.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.37%)</title><rect x="1016.6" y="963.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1019.6" y="974.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.37%)</title><rect x="1016.6" y="947.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1019.6" y="958.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.37%)</title><rect x="1016.6" y="931.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1019.6" y="942.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.31%)</title><rect x="1017.2" y="915.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1020.2" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.31%)</title><rect x="1017.2" y="899.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1020.2" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.31%)</title><rect x="1017.2" y="883.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="1020.9" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$279/1034643703.run (23 samples, 1.21%)</title><rect x="1021.5" y="1331.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1024.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (23 samples, 1.21%)</title><rect x="1021.5" y="1315.0" width="14.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 1.21%)</title><rect x="1021.5" y="1299.0" width="14.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 1.15%)</title><rect x="1021.5" y="1283.0" width="13.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.16%)</title><rect x="1021.5" y="1267.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.10%)</title><rect x="1021.5" y="1251.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="1021.5" y="1235.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="1021.5" y="1219.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="1021.5" y="1203.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.10%)</title><rect x="1021.5" y="1187.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="1022.8" y="1251.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="1022.8" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1025.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (19 samples, 1.00%)</title><rect x="1023.4" y="1267.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (19 samples, 1.00%)</title><rect x="1023.4" y="1251.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (17 samples, 0.89%)</title><rect x="1023.4" y="1235.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.89%)</title><rect x="1023.4" y="1219.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.89%)</title><rect x="1023.4" y="1203.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1026.4" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.16%)</title><rect x="1023.4" y="1187.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1026.4" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="1023.4" y="1171.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1026.4" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="1024.0" y="1171.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1027.0" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="1024.6" y="1171.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1027.6" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.73%)</title><rect x="1025.2" y="1187.0" width="8.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1028.2" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.63%)</title><rect x="1026.5" y="1171.0" width="7.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.5" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.63%)</title><rect x="1026.5" y="1155.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1029.5" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.58%)</title><rect x="1027.1" y="1139.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1030.1" y="1150.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.58%)</title><rect x="1027.1" y="1123.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1030.1" y="1134.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.58%)</title><rect x="1027.1" y="1107.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1030.1" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.10%)</title><rect x="1027.1" y="1091.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1030.1" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.47%)</title><rect x="1028.3" y="1091.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1031.3" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.47%)</title><rect x="1028.3" y="1075.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1031.3" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.47%)</title><rect x="1028.3" y="1059.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1031.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.10%)</title><rect x="1033.9" y="1235.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$112/403147759.getAsBoolean (1 samples, 0.05%)</title><rect x="1035.1" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (1 samples, 0.05%)</title><rect x="1035.1" y="1267.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.16%)</title><rect x="1035.8" y="1347.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.8" y="1358.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.05%)</title><rect x="1035.8" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1038.8" y="1342.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.05%)</title><rect x="1035.8" y="1315.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="1035.8" y="1299.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1038.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.10%)</title><rect x="1036.4" y="1331.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (4 samples, 0.21%)</title><rect x="1037.6" y="1347.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1040.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.05%)</title><rect x="1038.9" y="1331.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.05%)</title><rect x="1039.5" y="1331.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.05%)</title><rect x="1040.1" y="1347.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.1" y="1358.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="1040.1" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.1" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="1040.1" y="1315.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1043.1" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.05%)</title><rect x="1040.1" y="1299.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.1" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.characteristics (1 samples, 0.05%)</title><rect x="1040.1" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1043.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.05%)</title><rect x="1040.7" y="1347.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.05%)</title><rect x="1040.7" y="1331.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5 samples, 0.26%)</title><rect x="1041.3" y="1347.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.3" y="1358.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1042.0" y="1331.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1045.0" y="1342.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1042.0" y="1315.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1045.0" y="1326.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="1042.0" y="1299.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1045.0" y="1310.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="1042.0" y="1283.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1045.0" y="1294.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.16%)</title><rect x="1042.6" y="1331.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.6" y="1342.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.16%)</title><rect x="1042.6" y="1315.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.6" y="1326.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.10%)</title><rect x="1042.6" y="1299.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.6" y="1310.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (2 samples, 0.10%)</title><rect x="1042.6" y="1283.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (2 samples, 0.10%)</title><rect x="1042.6" y="1267.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="1043.8" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.8" y="1310.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="1043.8" y="1283.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1046.8" y="1294.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="1043.8" y="1267.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.8" y="1278.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1043.8" y="1251.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1046.8" y="1262.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="1043.8" y="1235.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1046.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (51 samples, 2.68%)</title><rect x="1044.4" y="1347.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1047.4" y="1358.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (51 samples, 2.68%)</title><rect x="1044.4" y="1331.0" width="31.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.4" y="1342.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (50 samples, 2.62%)</title><rect x="1044.4" y="1315.0" width="31.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.4" y="1326.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (22 samples, 1.15%)</title><rect x="1044.4" y="1299.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 1.10%)</title><rect x="1045.1" y="1283.0" width="13.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.1" y="1294.0"></text>
</g>
<g>
<title>epoll_wait (21 samples, 1.10%)</title><rect x="1045.1" y="1267.0" width="13.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1048.1" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 1.05%)</title><rect x="1045.7" y="1251.0" width="12.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.7" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 1.05%)</title><rect x="1045.7" y="1235.0" width="12.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.7" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.84%)</title><rect x="1046.9" y="1219.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1049.9" y="1230.0"></text>
</g>
<g>
<title>do_epoll_wait (16 samples, 0.84%)</title><rect x="1046.9" y="1203.0" width="9.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1049.9" y="1214.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.73%)</title><rect x="1048.2" y="1187.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1051.2" y="1198.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (7 samples, 0.37%)</title><rect x="1048.2" y="1171.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1051.2" y="1182.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.05%)</title><rect x="1048.2" y="1155.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1051.2" y="1166.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.26%)</title><rect x="1048.8" y="1155.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1051.8" y="1166.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.21%)</title><rect x="1049.4" y="1139.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1052.4" y="1150.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.05%)</title><rect x="1050.0" y="1123.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1053.0" y="1134.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="1050.6" y="1123.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.6" y="1134.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="1051.2" y="1107.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1054.2" y="1118.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="1051.9" y="1155.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.9" y="1166.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1051.9" y="1139.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1054.9" y="1150.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.05%)</title><rect x="1051.9" y="1123.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.9" y="1134.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.37%)</title><rect x="1052.5" y="1171.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1055.5" y="1182.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.37%)</title><rect x="1052.5" y="1155.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.5" y="1166.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.10%)</title><rect x="1052.5" y="1139.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.5" y="1150.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="1052.5" y="1123.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1055.5" y="1134.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.05%)</title><rect x="1053.7" y="1139.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1056.7" y="1150.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1053.7" y="1123.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.7" y="1134.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.21%)</title><rect x="1054.3" y="1139.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1057.3" y="1150.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.21%)</title><rect x="1054.3" y="1123.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1057.3" y="1134.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="1055.6" y="1107.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1058.6" y="1118.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1056.8" y="1219.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1059.8" y="1230.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1056.8" y="1203.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1059.8" y="1214.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="1057.4" y="1219.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1060.4" y="1230.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="1057.4" y="1203.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.4" y="1214.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="1057.4" y="1187.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1060.4" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (22 samples, 1.15%)</title><rect x="1058.1" y="1299.0" width="13.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.1" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (21 samples, 1.10%)</title><rect x="1058.7" y="1283.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1061.7" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (21 samples, 1.10%)</title><rect x="1058.7" y="1267.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1061.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.05%)</title><rect x="1058.7" y="1251.0" width="12.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1061.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1058.7" y="1235.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1061.7" y="1246.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.05%)</title><rect x="1058.7" y="1219.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1061.7" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1058.7" y="1203.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1061.7" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1058.7" y="1187.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1061.7" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.05%)</title><rect x="1058.7" y="1171.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.7" y="1182.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.05%)</title><rect x="1058.7" y="1155.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1061.7" y="1166.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.05%)</title><rect x="1058.7" y="1139.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1061.7" y="1150.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="1058.7" y="1123.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1061.7" y="1134.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="1058.7" y="1107.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.7" y="1118.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="1058.7" y="1091.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1061.7" y="1102.0"></text>
</g>
<g>
<title>__GI___libc_read (14 samples, 0.73%)</title><rect x="1059.3" y="1235.0" width="8.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1062.3" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.73%)</title><rect x="1059.3" y="1219.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1062.3" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.73%)</title><rect x="1059.3" y="1203.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1062.3" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_read (12 samples, 0.63%)</title><rect x="1059.9" y="1187.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.9" y="1198.0"></text>
</g>
<g>
<title>ksys_read (12 samples, 0.63%)</title><rect x="1059.9" y="1171.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1062.9" y="1182.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="1060.5" y="1155.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1063.5" y="1166.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1060.5" y="1139.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1063.5" y="1150.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1060.5" y="1123.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1063.5" y="1134.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1061.2" y="1155.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1064.2" y="1166.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.47%)</title><rect x="1061.8" y="1155.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1064.8" y="1166.0"></text>
</g>
<g>
<title>__vfs_read (8 samples, 0.42%)</title><rect x="1061.8" y="1139.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1064.8" y="1150.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.42%)</title><rect x="1061.8" y="1123.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1064.8" y="1134.0"></text>
</g>
<g>
<title>pipe_read (8 samples, 0.42%)</title><rect x="1061.8" y="1107.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1064.8" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.10%)</title><rect x="1064.3" y="1091.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.3" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="1064.3" y="1075.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.3" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="1064.3" y="1059.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.3" y="1070.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.05%)</title><rect x="1065.5" y="1091.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1068.5" y="1102.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="1065.5" y="1075.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.5" y="1086.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="1066.1" y="1091.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1069.1" y="1102.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="1066.7" y="1139.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.7" y="1150.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="1066.7" y="1123.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1069.7" y="1134.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="1066.7" y="1107.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.7" y="1118.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="1066.7" y="1091.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.7" y="1102.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1067.4" y="1187.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.4" y="1198.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1067.4" y="1171.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.4" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.26%)</title><rect x="1068.0" y="1235.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1071.0" y="1246.0"></text>
</g>
<g>
<title>__GI___libc_read (5 samples, 0.26%)</title><rect x="1068.0" y="1219.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1071.0" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.26%)</title><rect x="1068.0" y="1203.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1071.0" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.26%)</title><rect x="1068.0" y="1187.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.0" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_read (4 samples, 0.21%)</title><rect x="1068.0" y="1171.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1071.0" y="1182.0"></text>
</g>
<g>
<title>ksys_read (4 samples, 0.21%)</title><rect x="1068.0" y="1155.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.0" y="1166.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1068.0" y="1139.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1071.0" y="1150.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.16%)</title><rect x="1068.6" y="1139.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1071.6" y="1150.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.16%)</title><rect x="1068.6" y="1123.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1071.6" y="1134.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.16%)</title><rect x="1068.6" y="1107.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1071.6" y="1118.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="1068.6" y="1091.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1071.6" y="1102.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.10%)</title><rect x="1069.2" y="1091.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1072.2" y="1102.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.10%)</title><rect x="1069.2" y="1075.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1072.2" y="1086.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="1069.8" y="1059.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.8" y="1070.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1070.5" y="1171.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1073.5" y="1182.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1070.5" y="1155.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1073.5" y="1166.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="1070.5" y="1139.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1073.5" y="1150.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.05%)</title><rect x="1071.1" y="1251.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1074.1" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.21%)</title><rect x="1071.7" y="1299.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.7" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.05%)</title><rect x="1073.5" y="1283.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.5" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.10%)</title><rect x="1074.2" y="1299.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1077.2" y="1310.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.10%)</title><rect x="1074.2" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.2" y="1294.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.10%)</title><rect x="1074.2" y="1267.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1077.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.10%)</title><rect x="1074.2" y="1251.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1077.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.10%)</title><rect x="1074.2" y="1235.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1077.2" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.05%)</title><rect x="1075.4" y="1315.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.05%)</title><rect x="1075.4" y="1299.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.4" y="1310.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.05%)</title><rect x="1075.4" y="1283.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1078.4" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.05%)</title><rect x="1075.4" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1078.4" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1075.4" y="1251.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1078.4" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.26%)</title><rect x="1076.0" y="1347.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.0" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5 samples, 0.26%)</title><rect x="1076.0" y="1331.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.0" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5 samples, 0.26%)</title><rect x="1076.0" y="1315.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (4 samples, 0.21%)</title><rect x="1076.0" y="1299.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.16%)</title><rect x="1076.0" y="1283.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1079.0" y="1294.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.16%)</title><rect x="1076.0" y="1267.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1079.0" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.16%)</title><rect x="1076.0" y="1251.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1079.0" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.16%)</title><rect x="1076.0" y="1235.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1079.0" y="1246.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="1077.3" y="1219.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1080.3" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.05%)</title><rect x="1077.9" y="1283.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1080.9" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.05%)</title><rect x="1078.5" y="1299.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1081.5" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.05%)</title><rect x="1078.5" y="1283.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.5" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.05%)</title><rect x="1078.5" y="1267.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1081.5" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (1 samples, 0.05%)</title><rect x="1078.5" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.05%)</title><rect x="1078.5" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.05%)</title><rect x="1079.1" y="1347.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.1" y="1358.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1079.1" y="1331.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.1" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.05%)</title><rect x="1079.1" y="1315.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.1" y="1326.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (134 samples, 7.03%)</title><rect x="1079.7" y="1363.0" width="83.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1082.7" y="1374.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 1.63%)</title><rect x="1081.0" y="1347.0" width="19.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.0" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.10%)</title><rect x="1081.0" y="1331.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1084.0" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1081.6" y="1315.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1084.6" y="1326.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1081.6" y="1299.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1084.6" y="1310.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1081.6" y="1283.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1084.6" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 1.52%)</title><rect x="1082.2" y="1331.0" width="18.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.2" y="1342.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.05%)</title><rect x="1082.8" y="1315.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1085.8" y="1326.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.05%)</title><rect x="1082.8" y="1299.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1085.8" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1082.8" y="1283.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1085.8" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1082.8" y="1267.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.8" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.05%)</title><rect x="1082.8" y="1251.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1085.8" y="1262.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.05%)</title><rect x="1082.8" y="1235.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.8" y="1246.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.05%)</title><rect x="1082.8" y="1219.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1085.8" y="1230.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.05%)</title><rect x="1082.8" y="1203.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1085.8" y="1214.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.05%)</title><rect x="1082.8" y="1187.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.8" y="1198.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="1082.8" y="1171.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1085.8" y="1182.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="1082.8" y="1155.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1085.8" y="1166.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="1082.8" y="1139.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1085.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.42%)</title><rect x="1083.5" y="1315.0" width="16.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1086.5" y="1326.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.16%)</title><rect x="1083.5" y="1299.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1086.5" y="1310.0"></text>
</g>
<g>
<title>epoll_wait (24 samples, 1.26%)</title><rect x="1085.3" y="1299.0" width="14.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1088.3" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.00%)</title><rect x="1088.4" y="1283.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1091.4" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.00%)</title><rect x="1088.4" y="1267.0" width="11.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1091.4" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.94%)</title><rect x="1088.4" y="1251.0" width="11.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1091.4" y="1262.0"></text>
</g>
<g>
<title>do_epoll_wait (18 samples, 0.94%)</title><rect x="1088.4" y="1235.0" width="11.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1091.4" y="1246.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.89%)</title><rect x="1088.4" y="1219.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1091.4" y="1230.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (8 samples, 0.42%)</title><rect x="1090.3" y="1203.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1093.3" y="1214.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.37%)</title><rect x="1090.9" y="1187.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1093.9" y="1198.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (7 samples, 0.37%)</title><rect x="1090.9" y="1171.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.9" y="1182.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.31%)</title><rect x="1091.5" y="1155.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1094.5" y="1166.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.26%)</title><rect x="1092.1" y="1139.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1095.1" y="1150.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.31%)</title><rect x="1095.2" y="1203.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1098.2" y="1214.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.31%)</title><rect x="1095.2" y="1187.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1098.2" y="1198.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.26%)</title><rect x="1095.8" y="1171.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.8" y="1182.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.16%)</title><rect x="1097.1" y="1155.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.1" y="1166.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.16%)</title><rect x="1097.1" y="1139.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1100.1" y="1150.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="1098.9" y="1219.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1101.9" y="1230.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="1098.9" y="1203.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1101.9" y="1214.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1099.6" y="1251.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1102.6" y="1262.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1099.6" y="1235.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1102.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (101 samples, 5.30%)</title><rect x="1100.2" y="1347.0" width="62.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1103.2" y="1358.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (99 samples, 5.20%)</title><rect x="1101.4" y="1331.0" width="61.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.4" y="1342.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (66 samples, 3.46%)</title><rect x="1101.4" y="1315.0" width="40.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1104.4" y="1326.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (49 samples, 2.57%)</title><rect x="1101.4" y="1299.0" width="30.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1104.4" y="1310.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 2.47%)</title><rect x="1102.7" y="1283.0" width="29.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.7" y="1294.0">on..</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (19 samples, 1.00%)</title><rect x="1102.7" y="1267.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1105.7" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.10%)</title><rect x="1102.7" y="1251.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1102.7" y="1235.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1102.7" y="1219.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1102.7" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.7" y="1214.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="1102.7" y="1187.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1105.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="1103.3" y="1235.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1103.3" y="1219.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1103.3" y="1203.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="1103.3" y="1187.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.3" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (17 samples, 0.89%)</title><rect x="1103.9" y="1251.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="1103.9" y="1235.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="1103.9" y="1219.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.9" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$498/1539433281.get$Lambda (1 samples, 0.05%)</title><rect x="1103.9" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.84%)</title><rect x="1104.5" y="1235.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.84%)</title><rect x="1104.5" y="1219.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1107.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.79%)</title><rect x="1104.5" y="1203.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1107.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.79%)</title><rect x="1104.5" y="1187.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.79%)</title><rect x="1104.5" y="1171.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.79%)</title><rect x="1104.5" y="1155.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.79%)</title><rect x="1104.5" y="1139.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.79%)</title><rect x="1104.5" y="1123.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.5" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="1104.5" y="1107.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1107.5" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="1105.1" y="1107.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1108.1" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="1105.1" y="1091.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1108.1" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.63%)</title><rect x="1106.4" y="1107.0" width="7.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1109.4" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.63%)</title><rect x="1106.4" y="1091.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.4" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.63%)</title><rect x="1106.4" y="1075.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.4" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.63%)</title><rect x="1106.4" y="1059.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1109.4" y="1070.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.63%)</title><rect x="1106.4" y="1043.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1109.4" y="1054.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.58%)</title><rect x="1107.0" y="1027.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1110.0" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.58%)</title><rect x="1107.0" y="1011.0" width="6.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1110.0" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.58%)</title><rect x="1107.0" y="995.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1110.0" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.58%)</title><rect x="1107.0" y="979.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="1113.8" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="1113.8" y="1187.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.05%)</title><rect x="1113.8" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1116.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.05%)</title><rect x="1113.8" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.8" y="1166.0"></text>
</g>
<g>
<title>RequestHandler5_getRep.handleRequest (25 samples, 1.31%)</title><rect x="1114.4" y="1267.0" width="15.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1117.4" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.21%)</title><rect x="1114.4" y="1251.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.10%)</title><rect x="1114.4" y="1235.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1117.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="1115.0" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="1115.0" y="1203.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.10%)</title><rect x="1115.7" y="1235.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.7" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getRep (21 samples, 1.10%)</title><rect x="1116.9" y="1251.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.10%)</title><rect x="1116.9" y="1235.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 1.10%)</title><rect x="1116.9" y="1219.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1117.5" y="1203.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.73%)</title><rect x="1118.1" y="1203.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.73%)</title><rect x="1118.1" y="1187.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.73%)</title><rect x="1118.1" y="1171.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.73%)</title><rect x="1118.1" y="1155.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.73%)</title><rect x="1118.1" y="1139.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.73%)</title><rect x="1118.1" y="1123.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.1" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.16%)</title><rect x="1118.8" y="1107.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1121.8" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="1118.8" y="1091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.8" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="1119.4" y="1091.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1122.4" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="1120.0" y="1091.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1123.0" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.52%)</title><rect x="1120.6" y="1107.0" width="6.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1123.6" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.52%)</title><rect x="1120.6" y="1091.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.52%)</title><rect x="1120.6" y="1075.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1123.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.47%)</title><rect x="1120.6" y="1059.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.6" y="1070.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.47%)</title><rect x="1120.6" y="1043.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.6" y="1054.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.37%)</title><rect x="1121.2" y="1027.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1124.2" y="1038.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1121.2" y="1011.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1124.2" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.31%)</title><rect x="1121.9" y="1011.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1124.9" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.31%)</title><rect x="1121.9" y="995.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.9" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.31%)</title><rect x="1121.9" y="979.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.9" y="990.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1125.6" y="1027.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.6" y="1038.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1126.2" y="1059.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1129.2" y="1070.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1126.2" y="1043.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1129.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.21%)</title><rect x="1126.8" y="1203.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.21%)</title><rect x="1126.8" y="1187.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.21%)</title><rect x="1126.8" y="1171.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (4 samples, 0.21%)</title><rect x="1126.8" y="1155.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.05%)</title><rect x="1126.8" y="1139.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="1126.8" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.05%)</title><rect x="1126.8" y="1107.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (3 samples, 0.16%)</title><rect x="1127.4" y="1139.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1130.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.16%)</title><rect x="1127.4" y="1123.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1130.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.10%)</title><rect x="1128.1" y="1107.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="1129.3" y="1203.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="1129.3" y="1187.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1132.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.16%)</title><rect x="1129.9" y="1267.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.9" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.16%)</title><rect x="1129.9" y="1251.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.9" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.16%)</title><rect x="1129.9" y="1235.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.16%)</title><rect x="1129.9" y="1219.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.9" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (1 samples, 0.05%)</title><rect x="1129.9" y="1203.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1132.9" y="1214.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="1130.5" y="1203.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1133.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.42%)</title><rect x="1131.8" y="1299.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.8" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1131.8" y="1283.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.8" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1131.8" y="1267.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.8" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1131.8" y="1251.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.8" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1131.8" y="1235.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.8" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1131.8" y="1219.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.8" y="1230.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.05%)</title><rect x="1131.8" y="1203.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1134.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="1132.4" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1135.4" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1133.6" y="1283.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="1133.6" y="1267.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="1133.6" y="1251.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1136.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.10%)</title><rect x="1133.6" y="1235.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="1134.9" y="1283.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1137.9" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.16%)</title><rect x="1134.9" y="1267.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.9" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.16%)</title><rect x="1136.7" y="1299.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1139.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="1136.7" y="1283.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="1136.7" y="1267.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1138.0" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1138.0" y="1267.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1138.0" y="1251.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.0" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1138.0" y="1235.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1141.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.31%)</title><rect x="1138.6" y="1299.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.6" y="1310.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.31%)</title><rect x="1138.6" y="1283.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.6" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1141.1" y="1267.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.1" y="1278.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1141.1" y="1251.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.1" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1141.1" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.1" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1141.1" y="1219.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.1" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1141.1" y="1203.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.1" y="1214.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.05%)</title><rect x="1141.1" y="1187.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1141.7" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1141.7" y="1251.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.05%)</title><rect x="1141.7" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.7" y="1246.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.05%)</title><rect x="1141.7" y="1219.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 1.73%)</title><rect x="1142.3" y="1315.0" width="20.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.3" y="1326.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 1.73%)</title><rect x="1142.3" y="1299.0" width="20.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.3" y="1310.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.42%)</title><rect x="1142.9" y="1283.0" width="5.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1145.9" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="1142.9" y="1267.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1145.9" y="1278.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.16%)</title><rect x="1143.5" y="1267.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1146.5" y="1278.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.21%)</title><rect x="1145.4" y="1267.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1148.4" y="1278.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="1146.0" y="1251.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1149.0" y="1262.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.10%)</title><rect x="1146.6" y="1251.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1149.6" y="1262.0"></text>
</g>
<g>
<title>__GI___recv (23 samples, 1.21%)</title><rect x="1147.9" y="1283.0" width="14.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1150.9" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 1.05%)</title><rect x="1149.7" y="1267.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.7" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 1.05%)</title><rect x="1149.7" y="1251.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.7" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 1.00%)</title><rect x="1150.4" y="1235.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1153.4" y="1246.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 1.00%)</title><rect x="1150.4" y="1219.0" width="11.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.4" y="1230.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.94%)</title><rect x="1150.4" y="1203.0" width="11.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.4" y="1214.0"></text>
</g>
<g>
<title>inet6_recvmsg (16 samples, 0.84%)</title><rect x="1150.4" y="1187.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1153.4" y="1198.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.84%)</title><rect x="1150.4" y="1171.0" width="9.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1153.4" y="1182.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.21%)</title><rect x="1152.8" y="1155.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1155.8" y="1166.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1152.8" y="1139.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.8" y="1150.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.16%)</title><rect x="1153.5" y="1139.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.5" y="1150.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.16%)</title><rect x="1153.5" y="1123.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1156.5" y="1134.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.16%)</title><rect x="1153.5" y="1107.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1156.5" y="1118.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.10%)</title><rect x="1155.3" y="1155.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.3" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1155.9" y="1139.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1158.9" y="1150.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.21%)</title><rect x="1156.6" y="1155.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.6" y="1166.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.21%)</title><rect x="1156.6" y="1139.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.6" y="1150.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.16%)</title><rect x="1157.2" y="1123.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.2" y="1134.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="1157.2" y="1107.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.2" y="1118.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.10%)</title><rect x="1157.8" y="1107.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.8" y="1118.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="1157.8" y="1091.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.8" y="1102.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="1158.4" y="1091.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.4" y="1102.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="1159.0" y="1155.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1162.0" y="1166.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="1159.6" y="1155.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.6" y="1166.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.10%)</title><rect x="1160.3" y="1187.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1163.3" y="1198.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="1160.9" y="1171.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.9" y="1182.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="1160.9" y="1155.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1163.9" y="1166.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="1161.5" y="1203.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.5" y="1214.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="1161.5" y="1187.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.5" y="1198.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1161.5" y="1171.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.5" y="1182.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1161.5" y="1155.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1164.5" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="1162.1" y="1283.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1165.1" y="1294.0"></text>
</g>
<g>
<title>start_thread (44 samples, 2.31%)</title><rect x="1162.7" y="1363.0" width="27.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1165.7" y="1374.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (44 samples, 2.31%)</title><rect x="1162.7" y="1347.0" width="27.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1165.7" y="1358.0">t..</text>
</g>
<g>
<title>Thread::call_run() (44 samples, 2.31%)</title><rect x="1162.7" y="1331.0" width="27.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.7" y="1342.0">T..</text>
</g>
<g>
<title>JavaThread::run() (44 samples, 2.31%)</title><rect x="1162.7" y="1315.0" width="27.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.7" y="1326.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (44 samples, 2.31%)</title><rect x="1162.7" y="1299.0" width="27.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.7" y="1310.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (44 samples, 2.31%)</title><rect x="1162.7" y="1283.0" width="27.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.7" y="1294.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (43 samples, 2.26%)</title><rect x="1162.7" y="1267.0" width="26.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.7" y="1278.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (43 samples, 2.26%)</title><rect x="1162.7" y="1251.0" width="26.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.7" y="1262.0">C..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.05%)</title><rect x="1162.7" y="1235.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.7" y="1246.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.05%)</title><rect x="1162.7" y="1219.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.7" y="1230.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1162.7" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.7" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1162.7" y="1187.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.7" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1162.7" y="1171.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.7" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1162.7" y="1155.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.7" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1162.7" y="1139.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.7" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.05%)</title><rect x="1162.7" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.7" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.05%)</title><rect x="1162.7" y="1107.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.7" y="1118.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.05%)</title><rect x="1162.7" y="1091.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.7" y="1102.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1162.7" y="1075.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.7" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1162.7" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.7" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1162.7" y="1043.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.7" y="1054.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.05%)</title><rect x="1162.7" y="1027.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.7" y="1038.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.05%)</title><rect x="1162.7" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.7" y="1022.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.05%)</title><rect x="1162.7" y="995.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.7" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.05%)</title><rect x="1162.7" y="979.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.7" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.05%)</title><rect x="1162.7" y="963.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.7" y="974.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.05%)</title><rect x="1162.7" y="947.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.7" y="958.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (26 samples, 1.36%)</title><rect x="1163.4" y="1235.0" width="16.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.4" y="1246.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.05%)</title><rect x="1163.4" y="1219.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.4" y="1230.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.05%)</title><rect x="1163.4" y="1203.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.4" y="1214.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.05%)</title><rect x="1163.4" y="1187.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.4" y="1198.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.10%)</title><rect x="1164.0" y="1219.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.0" y="1230.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.05%)</title><rect x="1164.0" y="1203.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.0" y="1214.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.05%)</title><rect x="1164.6" y="1203.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.6" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.05%)</title><rect x="1165.2" y="1219.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.2" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.05%)</title><rect x="1165.2" y="1203.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.2" y="1214.0"></text>
</g>
<g>
<title>UniverseOper::clone() const (1 samples, 0.05%)</title><rect x="1165.2" y="1187.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.2" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.16%)</title><rect x="1165.8" y="1219.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.8" y="1230.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.16%)</title><rect x="1165.8" y="1203.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.8" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1165.8" y="1187.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.8" y="1198.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1166.5" y="1187.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.5" y="1198.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.05%)</title><rect x="1166.5" y="1171.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.5" y="1182.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.05%)</title><rect x="1167.1" y="1187.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.1" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (19 samples, 1.00%)</title><rect x="1167.7" y="1219.0" width="11.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.7" y="1230.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.05%)</title><rect x="1167.7" y="1203.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.7" y="1214.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.05%)</title><rect x="1168.3" y="1203.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.3" y="1214.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.05%)</title><rect x="1168.9" y="1203.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.9" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.10%)</title><rect x="1169.6" y="1203.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.6" y="1214.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.10%)</title><rect x="1169.6" y="1187.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.6" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.05%)</title><rect x="1170.8" y="1203.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.8" y="1214.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.05%)</title><rect x="1170.8" y="1187.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.8" y="1198.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1170.8" y="1171.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.8" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.10%)</title><rect x="1171.4" y="1203.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.4" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.16%)</title><rect x="1172.7" y="1203.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.7" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.10%)</title><rect x="1172.7" y="1187.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.7" y="1198.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.05%)</title><rect x="1172.7" y="1171.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.7" y="1182.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.05%)</title><rect x="1173.3" y="1171.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.3" y="1182.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.05%)</title><rect x="1173.9" y="1187.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.9" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.05%)</title><rect x="1174.5" y="1203.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.5" y="1214.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.10%)</title><rect x="1175.1" y="1203.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.1" y="1214.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1175.1" y="1187.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.1" y="1198.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.05%)</title><rect x="1175.8" y="1187.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.8" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (2 samples, 0.10%)</title><rect x="1176.4" y="1203.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.4" y="1214.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.05%)</title><rect x="1176.4" y="1187.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.4" y="1198.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.05%)</title><rect x="1177.0" y="1187.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.0" y="1198.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.10%)</title><rect x="1177.6" y="1203.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.6" y="1214.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.05%)</title><rect x="1178.9" y="1203.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.9" y="1214.0"></text>
</g>
<g>
<title>Compile::Optimize() (10 samples, 0.52%)</title><rect x="1179.5" y="1235.0" width="6.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.5" y="1246.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.05%)</title><rect x="1179.5" y="1219.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.5" y="1230.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.05%)</title><rect x="1179.5" y="1203.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.5" y="1214.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.16%)</title><rect x="1180.1" y="1219.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.1" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.16%)</title><rect x="1180.1" y="1203.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.1" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1180.1" y="1187.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.1" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.05%)</title><rect x="1180.1" y="1171.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.1" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.05%)</title><rect x="1180.7" y="1187.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.7" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.05%)</title><rect x="1180.7" y="1171.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.7" y="1182.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.05%)</title><rect x="1180.7" y="1155.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.7" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.05%)</title><rect x="1180.7" y="1139.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.7" y="1150.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.05%)</title><rect x="1181.3" y="1187.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.3" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.10%)</title><rect x="1181.9" y="1219.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.9" y="1230.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.05%)</title><rect x="1181.9" y="1203.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.9" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.05%)</title><rect x="1182.6" y="1203.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.6" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.05%)</title><rect x="1182.6" y="1187.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.6" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.16%)</title><rect x="1183.2" y="1219.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.2" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.16%)</title><rect x="1183.2" y="1203.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.2" y="1214.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1183.2" y="1187.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1183.2" y="1171.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.2" y="1182.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.05%)</title><rect x="1183.2" y="1155.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.2" y="1166.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.05%)</title><rect x="1183.2" y="1139.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="1150.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.10%)</title><rect x="1183.8" y="1187.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="1198.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.05%)</title><rect x="1183.8" y="1171.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="1182.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.05%)</title><rect x="1184.4" y="1171.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="1182.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.05%)</title><rect x="1184.4" y="1155.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.4" y="1166.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1184.4" y="1139.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="1150.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.05%)</title><rect x="1184.4" y="1123.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.4" y="1134.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.05%)</title><rect x="1185.0" y="1219.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="1230.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.05%)</title><rect x="1185.0" y="1203.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.0" y="1214.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.05%)</title><rect x="1185.0" y="1187.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.0" y="1198.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.05%)</title><rect x="1185.0" y="1171.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="1182.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.05%)</title><rect x="1185.7" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="1246.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.05%)</title><rect x="1185.7" y="1219.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="1230.0"></text>
</g>
<g>
<title>DictI::operator++() (1 samples, 0.05%)</title><rect x="1185.7" y="1203.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="1214.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.26%)</title><rect x="1186.3" y="1235.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.26%)</title><rect x="1186.3" y="1219.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.26%)</title><rect x="1186.3" y="1203.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.3" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.26%)</title><rect x="1186.3" y="1187.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.3" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.26%)</title><rect x="1186.3" y="1171.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.3" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.21%)</title><rect x="1186.3" y="1155.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.21%)</title><rect x="1186.3" y="1139.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.21%)</title><rect x="1186.3" y="1123.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.3" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.21%)</title><rect x="1186.3" y="1107.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.3" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.21%)</title><rect x="1186.3" y="1091.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.21%)</title><rect x="1186.3" y="1075.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.21%)</title><rect x="1186.3" y="1059.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="1070.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.05%)</title><rect x="1186.3" y="1043.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.3" y="1054.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.05%)</title><rect x="1186.3" y="1027.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="1038.0"></text>
</g>
<g>
<title>TypeTuple::xdual() const (1 samples, 0.05%)</title><rect x="1186.3" y="1011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="1022.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.10%)</title><rect x="1186.9" y="1043.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.9" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.10%)</title><rect x="1186.9" y="1027.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.10%)</title><rect x="1186.9" y="1011.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.10%)</title><rect x="1186.9" y="995.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.10%)</title><rect x="1186.9" y="979.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.10%)</title><rect x="1186.9" y="963.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.9" y="974.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.05%)</title><rect x="1186.9" y="947.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.9" y="958.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.05%)</title><rect x="1186.9" y="931.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.9" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.05%)</title><rect x="1186.9" y="915.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.9" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.05%)</title><rect x="1186.9" y="899.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.9" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.05%)</title><rect x="1186.9" y="883.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.9" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1186.9" y="867.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1186.9" y="851.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.9" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1186.9" y="835.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::block_at(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) [clone .constprop.160] (1 samples, 0.05%)</title><rect x="1186.9" y="819.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.9" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::Block(ciTypeFlow*, ciBlock*, ciTypeFlow::JsrSet*) (1 samples, 0.05%)</title><rect x="1186.9" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.5" y="947.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.5" y="931.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.5" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.5" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.5" y="899.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.5" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.5" y="867.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.5" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.5" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.5" y="835.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.5" y="819.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.5" y="803.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.5" y="787.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1187.5" y="771.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.5" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1187.5" y="755.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1187.5" y="739.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1187.5" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1187.5" y="707.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1187.5" y="691.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1187.5" y="675.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.5" y="686.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1187.5" y="659.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.5" y="670.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1187.5" y="643.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.5" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1188.1" y="1043.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1188.1" y="1027.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1188.1" y="1011.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1188.1" y="995.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1188.1" y="979.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1188.1" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1188.1" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.1" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1188.1" y="931.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1188.1" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1188.1" y="899.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1188.1" y="883.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1188.1" y="867.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1188.1" y="851.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1188.1" y="835.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.1" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1188.1" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1188.1" y="803.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1188.1" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1188.1" y="771.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1188.1" y="755.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1188.1" y="739.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1188.1" y="723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1188.1" y="707.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1188.1" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1188.1" y="675.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.05%)</title><rect x="1188.1" y="659.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.1" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.05%)</title><rect x="1188.1" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.05%)</title><rect x="1188.1" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.05%)</title><rect x="1188.1" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.05%)</title><rect x="1188.1" y="595.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.05%)</title><rect x="1188.1" y="579.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="590.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.05%)</title><rect x="1188.1" y="563.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="574.0"></text>
</g>
<g>
<title>MulNode::Value(PhaseGVN*) const (1 samples, 0.05%)</title><rect x="1188.1" y="547.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="558.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.05%)</title><rect x="1188.1" y="531.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="542.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.05%)</title><rect x="1188.1" y="515.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.05%)</title><rect x="1188.8" y="1155.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.8" y="1166.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.05%)</title><rect x="1188.8" y="1139.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.8" y="1150.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.05%)</title><rect x="1188.8" y="1123.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="1134.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.05%)</title><rect x="1188.8" y="1107.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="1118.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.05%)</title><rect x="1189.4" y="1267.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1278.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.05%)</title><rect x="1189.4" y="1251.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="1262.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.05%)</title><rect x="1189.4" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="1246.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.05%)</title><rect x="1189.4" y="1219.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="1230.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.05%)</title><rect x="1189.4" y="1203.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="1214.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.05%)</title><rect x="1189.4" y="1187.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="1198.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.05%)</title><rect x="1189.4" y="1171.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.05%)</title><rect x="1189.4" y="1155.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1189.4" y="1139.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1189.4" y="1123.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.4" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1189.4" y="1107.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1189.4" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1189.4" y="1075.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.4" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1189.4" y="1059.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1189.4" y="1043.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1189.4" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1189.4" y="1011.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1189.4" y="995.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.05%)</title><rect x="1189.4" y="979.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.05%)</title><rect x="1189.4" y="963.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.05%)</title><rect x="1189.4" y="947.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1189.4" y="931.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.05%)</title><rect x="1189.4" y="915.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.05%)</title><rect x="1189.4" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="1189.4" y="883.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.05%)</title><rect x="1189.4" y="867.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.05%)</title><rect x="1189.4" y="851.0" width="0.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
</g>
</svg>
