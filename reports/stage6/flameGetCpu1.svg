<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (1,941 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.31%)</title><rect x="10.0" y="1171.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.31%)</title><rect x="10.0" y="1155.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (6 samples, 0.31%)</title><rect x="10.0" y="1139.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.31%)</title><rect x="10.0" y="1123.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.10%)</title><rect x="10.0" y="1107.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="11.2" y="1107.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="14.2" y="1118.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.05%)</title><rect x="11.8" y="1107.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.8" y="1118.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="11.8" y="1091.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="14.8" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="12.4" y="1107.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="15.4" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="13.0" y="1107.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="16.0" y="1118.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.10%)</title><rect x="13.6" y="1171.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="16.6" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="13.6" y="1155.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.6" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.05%)</title><rect x="13.6" y="1139.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.6" y="1150.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="13.6" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.6" y="1134.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.05%)</title><rect x="13.6" y="1107.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.6" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="14.3" y="1155.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.3" y="1166.0"></text>
</g>
<g>
<title>[unknown_Java] (33 samples, 1.70%)</title><rect x="14.9" y="1171.0" width="20.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="17.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.49%)</title><rect x="14.9" y="1155.0" width="17.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="17.9" y="1166.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.05%)</title><rect x="14.9" y="1139.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="14.9" y="1123.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="17.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="14.9" y="1107.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="17.9" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="14.9" y="1091.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="17.9" y="1102.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="14.9" y="1075.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="17.9" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="14.9" y="1059.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="17.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="15.5" y="1139.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="18.5" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="15.5" y="1123.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="18.5" y="1134.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="15.5" y="1107.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="18.5" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (27 samples, 1.39%)</title><rect x="16.1" y="1139.0" width="16.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.1" y="1150.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="16.7" y="1123.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="19.7" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (25 samples, 1.29%)</title><rect x="17.3" y="1123.0" width="15.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.3" y="1134.0"></text>
</g>
<g>
<title>[vdso] (23 samples, 1.18%)</title><rect x="18.5" y="1107.0" width="14.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="21.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.21%)</title><rect x="32.5" y="1155.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="35.5" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.15%)</title><rect x="33.1" y="1139.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.1" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.15%)</title><rect x="33.1" y="1123.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.1" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.15%)</title><rect x="33.1" y="1107.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="36.1" y="1118.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.15%)</title><rect x="33.1" y="1091.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.1" y="1102.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.15%)</title><rect x="33.1" y="1075.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.1" y="1086.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.15%)</title><rect x="33.1" y="1059.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="36.1" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.15%)</title><rect x="33.1" y="1043.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="36.1" y="1054.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.15%)</title><rect x="33.1" y="1027.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="36.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.10%)</title><rect x="34.9" y="1171.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="37.9" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="34.9" y="1155.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="37.9" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="34.9" y="1139.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.9" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="34.9" y="1123.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.9" y="1134.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="34.9" y="1107.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.9" y="1118.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.10%)</title><rect x="34.9" y="1091.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="37.9" y="1102.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="34.9" y="1075.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.9" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="34.9" y="1059.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="37.9" y="1070.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="34.9" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.9" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="34.9" y="1027.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="37.9" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="34.9" y="1011.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.9" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="34.9" y="995.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.9" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="34.9" y="979.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.9" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="34.9" y="963.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="37.9" y="974.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.05%)</title><rect x="34.9" y="947.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.9" y="958.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.05%)</title><rect x="34.9" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.9" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="34.9" y="915.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="37.9" y="926.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="35.5" y="1075.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.5" y="1086.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="35.5" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="38.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,419 samples, 73.11%)</title><rect x="36.1" y="1171.0" width="862.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.1" y="1182.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,419 samples, 73.11%)</title><rect x="36.1" y="1155.0" width="862.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.1" y="1166.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,419 samples, 73.11%)</title><rect x="36.1" y="1139.0" width="862.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.1" y="1150.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="38.0" y="1123.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="41.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.10%)</title><rect x="38.6" y="1123.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.05%)</title><rect x="39.2" y="1107.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.2" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="39.2" y="1091.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="42.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (154 samples, 7.93%)</title><rect x="39.8" y="1123.0" width="93.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.8" y="1134.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (151 samples, 7.78%)</title><rect x="41.0" y="1107.0" width="91.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.0" y="1118.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (150 samples, 7.73%)</title><rect x="41.6" y="1091.0" width="91.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.6" y="1102.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (149 samples, 7.68%)</title><rect x="42.2" y="1075.0" width="90.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.2" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (148 samples, 7.62%)</title><rect x="42.8" y="1059.0" width="90.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (148 samples, 7.62%)</title><rect x="42.8" y="1043.0" width="90.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.8" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="43.4" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="46.4" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.05%)</title><rect x="43.4" y="1011.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="46.4" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="43.4" y="995.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="46.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="44.0" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (116 samples, 5.98%)</title><rect x="44.7" y="1027.0" width="70.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.7" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (116 samples, 5.98%)</title><rect x="44.7" y="1011.0" width="70.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.7" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkPermissions (1 samples, 0.05%)</title><rect x="44.7" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="47.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (115 samples, 5.92%)</title><rect x="45.3" y="995.0" width="69.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.3" y="1006.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="45.3" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="45.3" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.get$Lambda (1 samples, 0.05%)</title><rect x="45.3" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.&lt;init&gt; (1 samples, 0.05%)</title><rect x="45.3" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (55 samples, 2.83%)</title><rect x="45.9" y="979.0" width="33.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.9" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (55 samples, 2.83%)</title><rect x="45.9" y="963.0" width="33.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.9" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (55 samples, 2.83%)</title><rect x="45.9" y="947.0" width="33.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="958.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (55 samples, 2.83%)</title><rect x="45.9" y="931.0" width="33.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.9" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (55 samples, 2.83%)</title><rect x="45.9" y="915.0" width="33.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.9" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (55 samples, 2.83%)</title><rect x="45.9" y="899.0" width="33.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.9" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (1 samples, 0.05%)</title><rect x="45.9" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.05%)</title><rect x="45.9" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.05%)</title><rect x="45.9" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.05%)</title><rect x="45.9" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.05%)</title><rect x="45.9" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (1 samples, 0.05%)</title><rect x="45.9" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="45.9" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (1 samples, 0.05%)</title><rect x="45.9" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="45.9" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="45.9" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (54 samples, 2.78%)</title><rect x="46.5" y="883.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.5" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (54 samples, 2.78%)</title><rect x="46.5" y="867.0" width="32.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.5" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (54 samples, 2.78%)</title><rect x="46.5" y="851.0" width="32.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.5" y="862.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (51 samples, 2.63%)</title><rect x="46.5" y="835.0" width="31.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.5" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (51 samples, 2.63%)</title><rect x="46.5" y="819.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.5" y="830.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (51 samples, 2.63%)</title><rect x="46.5" y="803.0" width="31.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.5" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (50 samples, 2.58%)</title><rect x="47.1" y="787.0" width="30.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.1" y="798.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.15%)</title><rect x="48.3" y="771.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.15%)</title><rect x="48.3" y="755.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.05%)</title><rect x="48.3" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.05%)</title><rect x="48.3" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.05%)</title><rect x="48.3" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="48.3" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="48.9" y="739.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="48.9" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="48.9" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="51.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="48.9" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="48.9" y="675.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="49.5" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="49.5" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.05%)</title><rect x="49.5" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.05%)</title><rect x="49.5" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.05%)</title><rect x="49.5" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.05%)</title><rect x="49.5" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.05%)</title><rect x="49.5" y="611.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.05%)</title><rect x="49.5" y="595.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.05%)</title><rect x="49.5" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.05%)</title><rect x="49.5" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.05%)</title><rect x="49.5" y="547.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="49.5" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="52.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="49.5" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (1 samples, 0.05%)</title><rect x="49.5" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.&lt;init&gt; (1 samples, 0.05%)</title><rect x="49.5" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.5" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="49.5" y="467.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="52.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (11 samples, 0.57%)</title><rect x="50.1" y="771.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.57%)</title><rect x="50.1" y="755.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.05%)</title><rect x="50.1" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.05%)</title><rect x="50.1" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="50.1" y="707.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.10%)</title><rect x="50.7" y="739.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.05%)</title><rect x="51.3" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="51.3" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="51.3" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="51.3" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.3" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="51.3" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="54.3" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="51.3" y="643.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="54.3" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="51.3" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="54.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 0.41%)</title><rect x="51.9" y="739.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8 samples, 0.41%)</title><rect x="51.9" y="723.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.36%)</title><rect x="51.9" y="707.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.36%)</title><rect x="51.9" y="691.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.36%)</title><rect x="51.9" y="675.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.9" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="51.9" y="659.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="54.9" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.10%)</title><rect x="51.9" y="643.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="54.9" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.10%)</title><rect x="51.9" y="627.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="54.9" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="51.9" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="54.9" y="622.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="52.6" y="611.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="55.6" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="53.2" y="659.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="53.2" y="643.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="53.8" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="53.8" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="53.8" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.15%)</title><rect x="54.4" y="659.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.15%)</title><rect x="54.4" y="643.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.15%)</title><rect x="54.4" y="627.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="57.4" y="638.0"></text>
</g>
<g>
<title>__GI_write (3 samples, 0.15%)</title><rect x="54.4" y="611.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="57.4" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.15%)</title><rect x="54.4" y="595.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="57.4" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.15%)</title><rect x="54.4" y="579.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.4" y="590.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.15%)</title><rect x="54.4" y="563.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="57.4" y="574.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.15%)</title><rect x="54.4" y="547.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.4" y="558.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.15%)</title><rect x="54.4" y="531.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="57.4" y="542.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.15%)</title><rect x="54.4" y="515.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="57.4" y="526.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.15%)</title><rect x="54.4" y="499.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="57.4" y="510.0"></text>
</g>
<g>
<title>pipe_write (3 samples, 0.15%)</title><rect x="54.4" y="483.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="57.4" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.15%)</title><rect x="54.4" y="467.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="57.4" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.15%)</title><rect x="54.4" y="451.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.4" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.15%)</title><rect x="54.4" y="435.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="56.2" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.2" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="56.2" y="691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="59.2" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.05%)</title><rect x="56.2" y="675.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="59.2" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.05%)</title><rect x="56.2" y="659.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="59.2" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="56.2" y="643.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="59.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (34 samples, 1.75%)</title><rect x="56.8" y="771.0" width="20.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="57.4" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="60.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="57.4" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="57.4" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="57.4" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (26 samples, 1.34%)</title><rect x="58.0" y="755.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.0" y="766.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.05%)</title><rect x="58.6" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="58.6" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="58.6" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.6" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.get$Lambda (1 samples, 0.05%)</title><rect x="58.6" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.6" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="58.6" y="675.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="61.6" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="58.6" y="659.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="61.6" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="58.6" y="643.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="61.6" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="58.6" y="627.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="61.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="58.6" y="611.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="61.6" y="622.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="58.6" y="595.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="61.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.10%)</title><rect x="59.2" y="739.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.2" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.10%)</title><rect x="59.2" y="723.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="59.2" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.2" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="59.2" y="691.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="59.2" y="675.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.10%)</title><rect x="59.2" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="59.2" y="643.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="59.9" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="59.9" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="59.9" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="59.9" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.9" y="590.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="59.9" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (15 samples, 0.77%)</title><rect x="60.5" y="739.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.36%)</title><rect x="60.5" y="723.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.26%)</title><rect x="61.7" y="707.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.7" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.21%)</title><rect x="61.7" y="691.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.7" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (4 samples, 0.21%)</title><rect x="61.7" y="675.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.7" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.15%)</title><rect x="62.3" y="659.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="65.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.putCharSB (1 samples, 0.05%)</title><rect x="64.1" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.05%)</title><rect x="64.1" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.05%)</title><rect x="64.1" y="659.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.1" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.21%)</title><rect x="64.7" y="723.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.7" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.21%)</title><rect x="64.7" y="707.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (4 samples, 0.21%)</title><rect x="64.7" y="691.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.7" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="65.3" y="675.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="68.3" y="686.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.05%)</title><rect x="65.3" y="659.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="68.3" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="65.9" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="66.5" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.5" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.05%)</title><rect x="67.1" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.1" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$366/423672942.test (3 samples, 0.15%)</title><rect x="67.8" y="723.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.8" y="734.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (3 samples, 0.15%)</title><rect x="67.8" y="707.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$92/111156771.test (3 samples, 0.15%)</title><rect x="67.8" y="691.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.15%)</title><rect x="67.8" y="675.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.8" y="686.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$81/282821294.test (3 samples, 0.15%)</title><rect x="67.8" y="659.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.8" y="670.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.15%)</title><rect x="67.8" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/494317290.test (3 samples, 0.15%)</title><rect x="67.8" y="627.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.15%)</title><rect x="67.8" y="611.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.15%)</title><rect x="67.8" y="595.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.15%)</title><rect x="67.8" y="579.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.15%)</title><rect x="67.8" y="563.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (7 samples, 0.36%)</title><rect x="69.6" y="739.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.6" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.36%)</title><rect x="69.6" y="723.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.36%)</title><rect x="69.6" y="707.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="69.6" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.6" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="69.6" y="675.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="72.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.31%)</title><rect x="70.2" y="691.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.2" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (5 samples, 0.26%)</title><rect x="70.2" y="675.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.2" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.26%)</title><rect x="70.2" y="659.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.05%)</title><rect x="70.2" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="70.2" y="627.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.21%)</title><rect x="70.8" y="643.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="72.6" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (1 samples, 0.05%)</title><rect x="73.2" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (1 samples, 0.05%)</title><rect x="73.2" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="73.2" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="73.2" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (1 samples, 0.05%)</title><rect x="73.2" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.05%)</title><rect x="73.8" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.05%)</title><rect x="73.8" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.05%)</title><rect x="73.8" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.05%)</title><rect x="74.4" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.05%)</title><rect x="74.4" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="74.4" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="74.4" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (1 samples, 0.05%)</title><rect x="74.4" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="74.4" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.21%)</title><rect x="75.0" y="755.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.0" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="75.0" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.0" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="75.0" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="75.0" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="75.0" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.15%)</title><rect x="75.7" y="739.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="75.7" y="723.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="75.7" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="75.7" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="76.9" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="77.5" y="835.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.10%)</title><rect x="77.5" y="819.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="77.5" y="803.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="77.5" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="80.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.10%)</title><rect x="77.5" y="771.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.10%)</title><rect x="77.5" y="755.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.10%)</title><rect x="77.5" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (2 samples, 0.10%)</title><rect x="77.5" y="723.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.10%)</title><rect x="77.5" y="707.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.10%)</title><rect x="77.5" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="78.1" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="78.1" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.05%)</title><rect x="78.1" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (1 samples, 0.05%)</title><rect x="78.7" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.05%)</title><rect x="78.7" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="79.3" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="79.3" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.3" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="79.3" y="947.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="82.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (58 samples, 2.99%)</title><rect x="79.9" y="979.0" width="35.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.9" y="990.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="79.9" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="79.9" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="79.9" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="79.9" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.10%)</title><rect x="80.5" y="963.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.10%)</title><rect x="80.5" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="80.5" y="931.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="80.5" y="915.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.10%)</title><rect x="80.5" y="899.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.5" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="80.5" y="883.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="83.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$283/953386476.accept (1 samples, 0.05%)</title><rect x="81.1" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (55 samples, 2.83%)</title><rect x="81.7" y="963.0" width="33.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.7" y="974.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (49 samples, 2.52%)</title><rect x="81.7" y="947.0" width="29.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.7" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (49 samples, 2.52%)</title><rect x="81.7" y="931.0" width="29.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.7" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (48 samples, 2.47%)</title><rect x="81.7" y="915.0" width="29.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.7" y="926.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (48 samples, 2.47%)</title><rect x="81.7" y="899.0" width="29.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.7" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (48 samples, 2.47%)</title><rect x="81.7" y="883.0" width="29.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.7" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (48 samples, 2.47%)</title><rect x="81.7" y="867.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.7" y="878.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (24 samples, 1.24%)</title><rect x="83.0" y="851.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (24 samples, 1.24%)</title><rect x="83.0" y="835.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (24 samples, 1.24%)</title><rect x="83.0" y="819.0" width="14.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.05%)</title><rect x="83.0" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="83.0" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.05%)</title><rect x="83.6" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (22 samples, 1.13%)</title><rect x="84.2" y="803.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (22 samples, 1.13%)</title><rect x="84.2" y="787.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (22 samples, 1.13%)</title><rect x="84.2" y="771.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (22 samples, 1.13%)</title><rect x="84.2" y="755.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (18 samples, 0.93%)</title><rect x="84.2" y="739.0" width="10.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (18 samples, 0.93%)</title><rect x="84.2" y="723.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (17 samples, 0.88%)</title><rect x="84.2" y="707.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (17 samples, 0.88%)</title><rect x="84.2" y="691.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.2" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (17 samples, 0.88%)</title><rect x="84.2" y="675.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.2" y="686.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (16 samples, 0.82%)</title><rect x="84.2" y="659.0" width="9.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="87.2" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.05%)</title><rect x="84.2" y="643.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="87.2" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="84.8" y="643.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="87.8" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.05%)</title><rect x="84.8" y="627.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="87.8" y="638.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="85.4" y="643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="88.4" y="654.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.05%)</title><rect x="85.4" y="627.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="88.4" y="638.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="86.0" y="643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="89.0" y="654.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.10%)</title><rect x="86.6" y="643.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="89.6" y="654.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="87.2" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="90.2" y="638.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="87.2" y="611.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="90.2" y="622.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="87.2" y="595.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="90.2" y="606.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.52%)</title><rect x="87.8" y="643.0" width="6.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="90.8" y="654.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="90.2" y="627.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="93.2" y="638.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (3 samples, 0.15%)</title><rect x="90.9" y="627.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="93.9" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.10%)</title><rect x="92.7" y="627.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="95.7" y="638.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.10%)</title><rect x="92.7" y="611.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="95.7" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.10%)</title><rect x="92.7" y="595.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="95.7" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.10%)</title><rect x="92.7" y="579.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="95.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$76/1384010761.run (1 samples, 0.05%)</title><rect x="93.9" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (1 samples, 0.05%)</title><rect x="93.9" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.9" y="654.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (1 samples, 0.05%)</title><rect x="93.9" y="627.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="94.5" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="94.5" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.5" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.05%)</title><rect x="94.5" y="675.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.21%)</title><rect x="95.1" y="739.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.1" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.21%)</title><rect x="95.1" y="723.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="96.3" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="96.3" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="96.3" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="96.9" y="707.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (22 samples, 1.13%)</title><rect x="97.5" y="851.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (22 samples, 1.13%)</title><rect x="97.5" y="835.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.10%)</title><rect x="97.5" y="819.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="98.2" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="98.2" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4 samples, 0.21%)</title><rect x="98.8" y="819.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4 samples, 0.21%)</title><rect x="98.8" y="803.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (4 samples, 0.21%)</title><rect x="98.8" y="787.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.15%)</title><rect x="98.8" y="771.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.15%)</title><rect x="98.8" y="755.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.15%)</title><rect x="98.8" y="739.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.8" y="750.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.05%)</title><rect x="100.0" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.0" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.05%)</title><rect x="100.0" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.0" y="718.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.05%)</title><rect x="100.0" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.05%)</title><rect x="100.6" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="103.6" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.05%)</title><rect x="100.6" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (14 samples, 0.72%)</title><rect x="101.2" y="819.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.2" y="830.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (14 samples, 0.72%)</title><rect x="101.2" y="803.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.2" y="814.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (8 samples, 0.41%)</title><rect x="101.2" y="787.0" width="4.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="104.2" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.10%)</title><rect x="101.8" y="771.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="104.8" y="782.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="103.0" y="771.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="106.0" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.15%)</title><rect x="103.6" y="771.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="106.6" y="782.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.10%)</title><rect x="104.2" y="755.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="107.2" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.10%)</title><rect x="104.2" y="739.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="107.2" y="750.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.05%)</title><rect x="105.4" y="771.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="108.4" y="782.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="105.4" y="755.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="108.4" y="766.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.05%)</title><rect x="105.4" y="739.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="108.4" y="750.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.05%)</title><rect x="106.1" y="787.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="109.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (5 samples, 0.26%)</title><rect x="106.7" y="787.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (5 samples, 0.26%)</title><rect x="106.7" y="771.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.7" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (5 samples, 0.26%)</title><rect x="106.7" y="755.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.7" y="766.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.15%)</title><rect x="106.7" y="739.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.7" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.15%)</title><rect x="106.7" y="723.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.7" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.15%)</title><rect x="106.7" y="707.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="107.9" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="107.9" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.9" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.&lt;init&gt; (2 samples, 0.10%)</title><rect x="108.5" y="739.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.5" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.05%)</title><rect x="109.1" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="109.7" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="109.7" y="803.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.05%)</title><rect x="110.3" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.05%)</title><rect x="110.3" y="803.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.05%)</title><rect x="110.3" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.05%)</title><rect x="110.3" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.3" y="782.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.05%)</title><rect x="110.3" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="110.9" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.05%)</title><rect x="110.9" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="110.9" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (6 samples, 0.31%)</title><rect x="111.5" y="947.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.21%)</title><rect x="111.5" y="931.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.21%)</title><rect x="111.5" y="915.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.05%)</title><rect x="113.3" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.05%)</title><rect x="114.0" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.05%)</title><rect x="114.0" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1520674271.linkToTargetMethod (1 samples, 0.05%)</title><rect x="114.0" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1612745536.invoke (1 samples, 0.05%)</title><rect x="114.0" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/809170349.invoke (1 samples, 0.05%)</title><rect x="114.0" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="114.0" y="851.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="114.0" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.05%)</title><rect x="114.0" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.05%)</title><rect x="114.6" y="931.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="114.6" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="114.6" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="114.6" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="114.6" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (16 samples, 0.82%)</title><rect x="115.2" y="1027.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.2" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (4 samples, 0.21%)</title><rect x="115.2" y="1011.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.2" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.21%)</title><rect x="115.2" y="995.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.2" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.10%)</title><rect x="115.8" y="979.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.05%)</title><rect x="117.0" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (12 samples, 0.62%)</title><rect x="117.6" y="1011.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.6" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (12 samples, 0.62%)</title><rect x="117.6" y="995.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.6" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.21%)</title><rect x="118.2" y="979.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="121.2" y="990.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="118.2" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.2" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.15%)</title><rect x="118.8" y="963.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="121.8" y="974.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.05%)</title><rect x="118.8" y="947.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="121.8" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.10%)</title><rect x="119.4" y="947.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="122.4" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="119.4" y="931.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="122.4" y="942.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="120.0" y="931.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="123.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (7 samples, 0.36%)</title><rect x="120.6" y="979.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.31%)</title><rect x="120.6" y="963.0" width="3.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="123.6" y="974.0"></text>
</g>
<g>
<title>__GI_write (6 samples, 0.31%)</title><rect x="120.6" y="947.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="123.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="120.6" y="931.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="123.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.31%)</title><rect x="120.6" y="915.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.6" y="926.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 0.31%)</title><rect x="120.6" y="899.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.6" y="910.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.31%)</title><rect x="120.6" y="883.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="123.6" y="894.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.31%)</title><rect x="120.6" y="867.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.6" y="878.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.26%)</title><rect x="120.6" y="851.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="123.6" y="862.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.26%)</title><rect x="120.6" y="835.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.6" y="846.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.26%)</title><rect x="120.6" y="819.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="123.6" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.21%)</title><rect x="120.6" y="803.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="123.6" y="814.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.21%)</title><rect x="120.6" y="787.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.6" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.21%)</title><rect x="120.6" y="771.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="123.6" y="782.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.05%)</title><rect x="123.1" y="803.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.1" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="123.7" y="851.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.7" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="123.7" y="835.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="126.7" y="846.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.05%)</title><rect x="124.3" y="963.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="127.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.05%)</title><rect x="124.9" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.9" y="1038.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.05%)</title><rect x="124.9" y="1011.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="127.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.26%)</title><rect x="125.5" y="1027.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.5" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.05%)</title><rect x="125.5" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.5" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.05%)</title><rect x="125.5" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.5" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.05%)</title><rect x="125.5" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="128.5" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="125.5" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.21%)</title><rect x="126.1" y="1011.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (4 samples, 0.21%)</title><rect x="126.1" y="995.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.1" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.15%)</title><rect x="126.7" y="979.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.7" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.05%)</title><rect x="126.7" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.7" y="974.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.05%)</title><rect x="126.7" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.7" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.05%)</title><rect x="126.7" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.7" y="942.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.05%)</title><rect x="126.7" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.05%)</title><rect x="126.7" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.7" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.10%)</title><rect x="127.3" y="963.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.10%)</title><rect x="127.3" y="947.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.3" y="958.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="127.3" y="931.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="130.3" y="942.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="127.9" y="931.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="130.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (7 samples, 0.36%)</title><rect x="128.5" y="1027.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (7 samples, 0.36%)</title><rect x="128.5" y="1011.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.05%)</title><rect x="128.5" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.5" y="1006.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.05%)</title><rect x="128.5" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.5" y="990.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.05%)</title><rect x="128.5" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.5" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.05%)</title><rect x="128.5" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (6 samples, 0.31%)</title><rect x="129.2" y="995.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.2" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.10%)</title><rect x="129.8" y="979.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.8" y="990.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.10%)</title><rect x="129.8" y="963.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="129.8" y="947.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.8" y="958.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="130.4" y="931.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="133.4" y="942.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="130.4" y="915.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="133.4" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="130.4" y="899.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="133.4" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.15%)</title><rect x="131.0" y="979.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="990.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (3 samples, 0.15%)</title><rect x="131.0" y="963.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.0" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.15%)</title><rect x="131.0" y="947.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.0" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.15%)</title><rect x="131.0" y="931.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.0" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.15%)</title><rect x="131.0" y="915.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.0" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.15%)</title><rect x="131.0" y="899.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.0" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.15%)</title><rect x="131.0" y="883.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.05%)</title><rect x="131.0" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.0" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.05%)</title><rect x="131.6" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="132.2" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$165/2018349012.get (1 samples, 0.05%)</title><rect x="132.8" y="1107.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (9 samples, 0.46%)</title><rect x="133.4" y="1123.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.46%)</title><rect x="133.4" y="1107.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (9 samples, 0.46%)</title><rect x="133.4" y="1091.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.4" y="1102.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.15%)</title><rect x="134.0" y="1075.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="137.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.10%)</title><rect x="135.8" y="1075.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.10%)</title><rect x="135.8" y="1059.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.10%)</title><rect x="135.8" y="1043.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.run (1 samples, 0.05%)</title><rect x="137.1" y="1075.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="137.7" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$502/1744977774.run (1 samples, 0.05%)</title><rect x="138.3" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (206 samples, 10.61%)</title><rect x="138.9" y="1123.0" width="125.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.9" y="1134.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (49 samples, 2.52%)</title><rect x="140.1" y="1107.0" width="29.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.1" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (45 samples, 2.32%)</title><rect x="140.1" y="1091.0" width="27.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.1" y="1102.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.10%)</title><rect x="140.7" y="1075.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="141.9" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.05%)</title><rect x="141.9" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.05%)</title><rect x="142.5" y="1075.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="145.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 2.06%)</title><rect x="143.1" y="1075.0" width="24.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.1" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 2.06%)</title><rect x="143.1" y="1059.0" width="24.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.1" y="1070.0">j..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="143.7" y="1043.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="146.7" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="144.4" y="1043.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="147.4" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.67%)</title><rect x="145.0" y="1043.0" width="7.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="148.0" y="1054.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="146.2" y="1027.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="149.2" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.26%)</title><rect x="146.8" y="1027.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="149.8" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.15%)</title><rect x="147.4" y="1011.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="150.4" y="1022.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="149.2" y="1011.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="152.2" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="149.8" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="152.8" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="150.4" y="1027.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="153.4" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="150.4" y="1011.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="153.4" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="150.4" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.4" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="150.4" y="979.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.4" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="150.4" y="963.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.4" y="974.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="151.0" y="1027.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="154.0" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="151.6" y="1027.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="154.6" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="152.3" y="1027.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="155.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 1.24%)</title><rect x="152.9" y="1043.0" width="14.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="155.9" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (24 samples, 1.24%)</title><rect x="152.9" y="1027.0" width="14.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="155.9" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.88%)</title><rect x="157.1" y="1011.0" width="10.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="160.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="157.1" y="995.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="160.1" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.82%)</title><rect x="157.7" y="995.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="160.7" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.57%)</title><rect x="158.3" y="979.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="161.3" y="990.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.57%)</title><rect x="158.3" y="963.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.3" y="974.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.57%)</title><rect x="158.3" y="947.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="161.3" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.41%)</title><rect x="158.9" y="931.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="161.9" y="942.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.36%)</title><rect x="159.6" y="915.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.6" y="926.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.36%)</title><rect x="159.6" y="899.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.6" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.31%)</title><rect x="160.2" y="883.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.2" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.10%)</title><rect x="163.8" y="931.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="166.8" y="942.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="164.4" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.4" y="926.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.10%)</title><rect x="165.0" y="979.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.0" y="990.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.10%)</title><rect x="165.0" y="963.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="168.0" y="974.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.10%)</title><rect x="166.2" y="979.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="169.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.21%)</title><rect x="167.5" y="1091.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.21%)</title><rect x="167.5" y="1075.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.21%)</title><rect x="167.5" y="1059.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.21%)</title><rect x="167.5" y="1043.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.21%)</title><rect x="167.5" y="1027.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (153 samples, 7.88%)</title><rect x="169.9" y="1107.0" width="93.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.9" y="1118.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (153 samples, 7.88%)</title><rect x="169.9" y="1091.0" width="93.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.9" y="1102.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (78 samples, 4.02%)</title><rect x="174.8" y="1075.0" width="47.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.8" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (78 samples, 4.02%)</title><rect x="174.8" y="1059.0" width="47.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.8" y="1070.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (78 samples, 4.02%)</title><rect x="174.8" y="1043.0" width="47.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.8" y="1054.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Park (26 samples, 1.34%)</title><rect x="176.0" y="1027.0" width="15.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="179.0" y="1038.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.10%)</title><rect x="176.6" y="1011.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="179.6" y="1022.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.31%)</title><rect x="177.8" y="1011.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="180.8" y="1022.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.10%)</title><rect x="179.6" y="995.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="182.6" y="1006.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="180.8" y="995.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="183.8" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="181.4" y="1011.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="184.4" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="182.0" y="1011.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="185.0" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.31%)</title><rect x="183.3" y="1011.0" width="3.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="186.3" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.26%)</title><rect x="183.9" y="995.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="186.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.26%)</title><rect x="183.9" y="979.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.9" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="185.7" y="963.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="188.7" y="974.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="185.7" y="947.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.7" y="958.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="185.7" y="931.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="188.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.15%)</title><rect x="186.9" y="1011.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="189.9" y="1022.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="188.7" y="1011.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="191.7" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@plt (1 samples, 0.05%)</title><rect x="189.3" y="1011.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="192.3" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_trylock@plt (1 samples, 0.05%)</title><rect x="189.9" y="1011.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="192.9" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="190.6" y="1011.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="193.6" y="1022.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="191.2" y="1011.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="194.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="191.8" y="1027.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="194.8" y="1038.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="191.8" y="1011.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="194.8" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (46 samples, 2.37%)</title><rect x="192.4" y="1027.0" width="27.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="195.4" y="1038.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 2.11%)</title><rect x="195.4" y="1011.0" width="24.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="198.4" y="1022.0">e..</text>
</g>
<g>
<title>do_syscall_64 (41 samples, 2.11%)</title><rect x="195.4" y="995.0" width="24.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.4" y="1006.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 1.75%)</title><rect x="197.2" y="979.0" width="20.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.2" y="990.0"></text>
</g>
<g>
<title>do_futex (31 samples, 1.60%)</title><rect x="197.9" y="963.0" width="18.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.9" y="974.0"></text>
</g>
<g>
<title>futex_wait (30 samples, 1.55%)</title><rect x="198.5" y="947.0" width="18.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="201.5" y="958.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="201.5" y="931.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.5" y="942.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.88%)</title><rect x="202.1" y="931.0" width="10.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="205.1" y="942.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (11 samples, 0.57%)</title><rect x="203.3" y="915.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="206.3" y="926.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (11 samples, 0.57%)</title><rect x="203.3" y="899.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.3" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.41%)</title><rect x="204.5" y="883.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.5" y="894.0"></text>
</g>
<g>
<title>lock_hrtimer_base (1 samples, 0.05%)</title><rect x="209.4" y="883.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.4" y="894.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.21%)</title><rect x="210.0" y="915.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.0" y="926.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="210.6" y="899.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="213.6" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.15%)</title><rect x="210.6" y="883.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.6" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.10%)</title><rect x="212.4" y="931.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="215.4" y="942.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="213.7" y="931.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="216.7" y="942.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.10%)</title><rect x="214.3" y="931.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="217.3" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.10%)</title><rect x="214.3" y="915.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="217.3" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="214.9" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="217.9" y="910.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.05%)</title><rect x="215.5" y="931.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.5" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.05%)</title><rect x="216.1" y="931.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="219.1" y="942.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.10%)</title><rect x="216.7" y="963.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="219.7" y="974.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="216.7" y="947.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.7" y="958.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="217.3" y="947.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.3" y="958.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.05%)</title><rect x="217.9" y="979.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.9" y="990.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.15%)</title><rect x="218.5" y="979.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="221.5" y="990.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="219.1" y="963.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="222.1" y="974.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="219.7" y="963.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="222.7" y="974.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="220.3" y="1027.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="223.3" y="1038.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.10%)</title><rect x="221.0" y="1027.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="224.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (48 samples, 2.47%)</title><rect x="222.2" y="1075.0" width="29.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.2" y="1086.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.10%)</title><rect x="250.1" y="1059.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="253.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="250.7" y="1043.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (19 samples, 0.98%)</title><rect x="251.3" y="1075.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="256.2" y="1059.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="259.2" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.10%)</title><rect x="256.2" y="1043.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="259.2" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="257.4" y="1059.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="260.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (3 samples, 0.15%)</title><rect x="258.0" y="1059.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.0" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (5 samples, 0.26%)</title><rect x="259.9" y="1059.0" width="3.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="262.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.10%)</title><rect x="262.9" y="1107.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="265.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$372/82047056.run (138 samples, 7.11%)</title><rect x="264.1" y="1123.0" width="83.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.1" y="1134.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (138 samples, 7.11%)</title><rect x="264.1" y="1107.0" width="83.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.1" y="1118.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (138 samples, 7.11%)</title><rect x="264.1" y="1091.0" width="83.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.1" y="1102.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (134 samples, 6.90%)</title><rect x="265.9" y="1075.0" width="81.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.9" y="1086.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.05%)</title><rect x="265.9" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="268.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.05%)</title><rect x="265.9" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.05%)</title><rect x="265.9" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 6.85%)</title><rect x="266.5" y="1059.0" width="80.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.5" y="1070.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (133 samples, 6.85%)</title><rect x="266.5" y="1043.0" width="80.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.5" y="1054.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (133 samples, 6.85%)</title><rect x="266.5" y="1027.0" width="80.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.5" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="266.5" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="266.5" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="266.5" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (132 samples, 6.80%)</title><rect x="267.2" y="1011.0" width="80.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.2" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (132 samples, 6.80%)</title><rect x="267.2" y="995.0" width="80.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.2" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (132 samples, 6.80%)</title><rect x="267.2" y="979.0" width="80.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.2" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (132 samples, 6.80%)</title><rect x="267.2" y="963.0" width="80.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.2" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (20 samples, 1.03%)</title><rect x="268.4" y="947.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.88%)</title><rect x="269.0" y="931.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="269.0" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="269.0" y="899.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="269.0" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="269.0" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="269.0" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.05%)</title><rect x="269.0" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="269.0" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.82%)</title><rect x="269.6" y="915.0" width="9.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="272.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (16 samples, 0.82%)</title><rect x="269.6" y="899.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (14 samples, 0.72%)</title><rect x="270.8" y="883.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (1 samples, 0.05%)</title><rect x="271.4" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="271.4" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="271.4" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.4" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="271.4" y="819.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="274.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="271.4" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="271.4" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="274.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="271.4" y="771.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="274.4" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="271.4" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="274.4" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="271.4" y="739.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="274.4" y="750.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="271.4" y="723.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="274.4" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="271.4" y="707.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="274.4" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="271.4" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="274.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.26%)</title><rect x="272.0" y="867.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.0" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="272.0" y="851.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="275.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.05%)</title><rect x="273.2" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.2" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="273.2" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="273.2" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$389/1395882850.apply (1 samples, 0.05%)</title><rect x="273.8" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.05%)</title><rect x="273.8" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (1 samples, 0.05%)</title><rect x="273.8" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.05%)</title><rect x="273.8" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="273.8" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="273.8" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.get$Lambda (1 samples, 0.05%)</title><rect x="273.8" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.&lt;init&gt; (1 samples, 0.05%)</title><rect x="273.8" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.apply (1 samples, 0.05%)</title><rect x="274.5" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.05%)</title><rect x="274.5" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.05%)</title><rect x="274.5" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.05%)</title><rect x="274.5" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.05%)</title><rect x="274.5" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="274.5" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.run (1 samples, 0.05%)</title><rect x="274.5" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.05%)</title><rect x="274.5" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.05%)</title><rect x="274.5" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.05%)</title><rect x="274.5" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="274.5" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.5" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="274.5" y="675.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="277.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.36%)</title><rect x="275.1" y="867.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.36%)</title><rect x="275.1" y="851.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$346/1234340506.apply (6 samples, 0.31%)</title><rect x="275.7" y="835.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.31%)</title><rect x="275.7" y="819.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.31%)</title><rect x="275.7" y="803.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$171/1046594327.apply (6 samples, 0.31%)</title><rect x="275.7" y="787.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.31%)</title><rect x="275.7" y="771.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="275.7" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="275.7" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.05%)</title><rect x="275.7" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="275.7" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (2 samples, 0.10%)</title><rect x="276.3" y="755.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.10%)</title><rect x="276.3" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.10%)</title><rect x="276.3" y="723.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="276.9" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="276.9" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (3 samples, 0.15%)</title><rect x="277.5" y="755.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (2 samples, 0.10%)</title><rect x="278.1" y="739.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1 samples, 0.05%)</title><rect x="278.1" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.05%)</title><rect x="278.1" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.05%)</title><rect x="278.7" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.05%)</title><rect x="278.7" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.05%)</title><rect x="278.7" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (2 samples, 0.10%)</title><rect x="279.3" y="931.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="279.3" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="282.3" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.05%)</title><rect x="279.3" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (1 samples, 0.05%)</title><rect x="279.9" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (1 samples, 0.05%)</title><rect x="279.9" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (110 samples, 5.67%)</title><rect x="280.5" y="947.0" width="66.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="283.5" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (110 samples, 5.67%)</title><rect x="280.5" y="931.0" width="66.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.5" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (110 samples, 5.67%)</title><rect x="280.5" y="915.0" width="66.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.5" y="926.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (110 samples, 5.67%)</title><rect x="280.5" y="899.0" width="66.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.5" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (108 samples, 5.56%)</title><rect x="281.1" y="883.0" width="65.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.1" y="894.0">jdk/int..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (107 samples, 5.51%)</title><rect x="281.1" y="867.0" width="65.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="284.1" y="878.0">java/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (107 samples, 5.51%)</title><rect x="281.1" y="851.0" width="65.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.1" y="862.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (107 samples, 5.51%)</title><rect x="281.1" y="835.0" width="65.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.1" y="846.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (107 samples, 5.51%)</title><rect x="281.1" y="819.0" width="65.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.1" y="830.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (3 samples, 0.15%)</title><rect x="281.1" y="803.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="284.1" y="814.0"></text>
</g>
<g>
<title>java/lang/ref/Cleaner.register (2 samples, 0.10%)</title><rect x="281.1" y="787.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="284.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/ref/CleanerImpl$PhantomCleanableRef.&lt;init&gt; (2 samples, 0.10%)</title><rect x="281.1" y="771.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.&lt;init&gt; (2 samples, 0.10%)</title><rect x="281.1" y="755.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ref/PhantomReference.&lt;init&gt; (1 samples, 0.05%)</title><rect x="281.1" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.05%)</title><rect x="281.1" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/ref/PhantomCleanable.insert (1 samples, 0.05%)</title><rect x="281.7" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.7" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.&lt;init&gt; (1 samples, 0.05%)</title><rect x="282.4" y="787.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (104 samples, 5.36%)</title><rect x="283.0" y="803.0" width="63.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.0" y="814.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (104 samples, 5.36%)</title><rect x="283.0" y="787.0" width="63.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.0" y="798.0">sun/nio..</text>
</g>
<g>
<title>[unknown] (103 samples, 5.31%)</title><rect x="283.0" y="771.0" width="62.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="286.0" y="782.0">[unkno..</text>
</g>
<g>
<title>[unknown] (103 samples, 5.31%)</title><rect x="283.0" y="755.0" width="62.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="286.0" y="766.0">[unkno..</text>
</g>
<g>
<title>__GI___writev (103 samples, 5.31%)</title><rect x="283.0" y="739.0" width="62.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="286.0" y="750.0">__GI__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (103 samples, 5.31%)</title><rect x="283.0" y="723.0" width="62.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="286.0" y="734.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (103 samples, 5.31%)</title><rect x="283.0" y="707.0" width="62.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="286.0" y="718.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_writev (99 samples, 5.10%)</title><rect x="283.0" y="691.0" width="60.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="286.0" y="702.0">__x64_..</text>
</g>
<g>
<title>do_writev (99 samples, 5.10%)</title><rect x="283.0" y="675.0" width="60.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="286.0" y="686.0">do_wri..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.10%)</title><rect x="283.0" y="659.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.0" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="283.0" y="643.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.0" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="283.0" y="627.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.0" y="638.0"></text>
</g>
<g>
<title>vfs_writev (97 samples, 5.00%)</title><rect x="284.2" y="659.0" width="58.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="287.2" y="670.0">vfs_wr..</text>
</g>
<g>
<title>do_iter_write (96 samples, 4.95%)</title><rect x="284.8" y="643.0" width="58.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="287.8" y="654.0">do_ite..</text>
</g>
<g>
<title>do_iter_readv_writev (92 samples, 4.74%)</title><rect x="285.4" y="627.0" width="55.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="288.4" y="638.0">do_it..</text>
</g>
<g>
<title>sock_write_iter (92 samples, 4.74%)</title><rect x="285.4" y="611.0" width="55.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="288.4" y="622.0">sock_..</text>
</g>
<g>
<title>sock_sendmsg (91 samples, 4.69%)</title><rect x="286.0" y="595.0" width="55.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="289.0" y="606.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (88 samples, 4.53%)</title><rect x="286.0" y="579.0" width="53.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="289.0" y="590.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (87 samples, 4.48%)</title><rect x="286.6" y="563.0" width="52.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="289.6" y="574.0">tcp_s..</text>
</g>
<g>
<title>tcp_sendmsg_locked (87 samples, 4.48%)</title><rect x="286.6" y="547.0" width="52.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="289.6" y="558.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.10%)</title><rect x="287.2" y="531.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.2" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="288.4" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.4" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="288.4" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="291.4" y="526.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="289.0" y="531.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="292.0" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="289.0" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="292.0" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.15%)</title><rect x="289.6" y="531.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="292.6" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.15%)</title><rect x="289.6" y="515.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.6" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.05%)</title><rect x="289.6" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.6" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="289.6" y="483.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="292.6" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="290.3" y="499.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="293.3" y="510.0"></text>
</g>
<g>
<title>tcp_push (78 samples, 4.02%)</title><rect x="291.5" y="531.0" width="47.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.5" y="542.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 4.02%)</title><rect x="291.5" y="515.0" width="47.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="294.5" y="526.0">__tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="291.5" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.5" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="292.1" y="499.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.1" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 3.92%)</title><rect x="292.7" y="499.0" width="46.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.7" y="510.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (71 samples, 3.66%)</title><rect x="293.9" y="483.0" width="43.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.9" y="494.0">__tc..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="295.1" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.1" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (68 samples, 3.50%)</title><rect x="295.7" y="467.0" width="41.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="298.7" y="478.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (67 samples, 3.45%)</title><rect x="295.7" y="451.0" width="40.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.7" y="462.0">__i..</text>
</g>
<g>
<title>ip_local_out (67 samples, 3.45%)</title><rect x="295.7" y="435.0" width="40.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="298.7" y="446.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (8 samples, 0.41%)</title><rect x="296.3" y="419.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.3" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.41%)</title><rect x="296.3" y="403.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.3" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (4 samples, 0.21%)</title><rect x="296.9" y="387.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.9" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (4 samples, 0.21%)</title><rect x="296.9" y="371.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="299.9" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.15%)</title><rect x="299.4" y="387.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="302.4" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.15%)</title><rect x="299.4" y="371.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="302.4" y="382.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct?[nf_conntrack] (1 samples, 0.05%)</title><rect x="299.4" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="302.4" y="366.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.05%)</title><rect x="300.0" y="355.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.0" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.05%)</title><rect x="300.6" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.6" y="366.0"></text>
</g>
<g>
<title>ip_output (58 samples, 2.99%)</title><rect x="301.2" y="419.0" width="35.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="304.2" y="430.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (58 samples, 2.99%)</title><rect x="301.2" y="403.0" width="35.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="304.2" y="414.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (57 samples, 2.94%)</title><rect x="301.2" y="387.0" width="34.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="304.2" y="398.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (55 samples, 2.83%)</title><rect x="302.4" y="371.0" width="33.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.4" y="382.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (49 samples, 2.52%)</title><rect x="303.0" y="355.0" width="29.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.0" y="366.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (49 samples, 2.52%)</title><rect x="303.0" y="339.0" width="29.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.0" y="350.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (49 samples, 2.52%)</title><rect x="303.0" y="323.0" width="29.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.0" y="334.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (48 samples, 2.47%)</title><rect x="303.0" y="307.0" width="29.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.0" y="318.0">__..</text>
</g>
<g>
<title>net_rx_action (46 samples, 2.37%)</title><rect x="304.2" y="291.0" width="28.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="307.2" y="302.0">n..</text>
</g>
<g>
<title>process_backlog (46 samples, 2.37%)</title><rect x="304.2" y="275.0" width="28.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.2" y="286.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (46 samples, 2.37%)</title><rect x="304.2" y="259.0" width="28.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="307.2" y="270.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 2.37%)</title><rect x="304.2" y="243.0" width="28.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="307.2" y="254.0">_..</text>
</g>
<g>
<title>ip_rcv (46 samples, 2.37%)</title><rect x="304.2" y="227.0" width="28.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.2" y="238.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.05%)</title><rect x="304.2" y="211.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="307.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (43 samples, 2.22%)</title><rect x="304.8" y="211.0" width="26.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.8" y="222.0">i..</text>
</g>
<g>
<title>ip_local_deliver (42 samples, 2.16%)</title><rect x="305.5" y="195.0" width="25.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="308.5" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (40 samples, 2.06%)</title><rect x="305.5" y="179.0" width="24.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="308.5" y="190.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (40 samples, 2.06%)</title><rect x="305.5" y="163.0" width="24.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="308.5" y="174.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="305.5" y="147.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="308.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 2.01%)</title><rect x="306.1" y="147.0" width="23.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="309.1" y="158.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="306.1" y="131.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.1" y="142.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="306.7" y="131.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="309.7" y="142.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="307.3" y="131.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="310.3" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="307.9" y="131.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.9" y="142.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="307.9" y="115.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="310.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 1.75%)</title><rect x="308.5" y="131.0" width="20.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="311.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 1.75%)</title><rect x="308.5" y="115.0" width="20.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="311.5" y="126.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="308.5" y="99.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="311.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.31%)</title><rect x="309.1" y="99.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="312.1" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.26%)</title><rect x="309.1" y="83.0" width="3.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.1" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.10%)</title><rect x="309.7" y="67.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.7" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="309.7" y="51.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.7" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="309.7" y="35.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="312.7" y="46.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="310.3" y="51.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.3" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="310.9" y="67.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.9" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="311.5" y="67.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.5" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.05%)</title><rect x="312.1" y="83.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="315.1" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="312.8" y="99.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="315.8" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (24 samples, 1.24%)</title><rect x="313.4" y="99.0" width="14.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (24 samples, 1.24%)</title><rect x="313.4" y="83.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="316.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 1.18%)</title><rect x="314.0" y="67.0" width="13.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="317.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 1.18%)</title><rect x="314.0" y="51.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="317.0" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 1.18%)</title><rect x="314.0" y="35.0" width="13.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.0" y="46.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.05%)</title><rect x="327.9" y="99.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.9" y="110.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="328.6" y="99.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.6" y="110.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="329.2" y="131.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.2" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.10%)</title><rect x="329.8" y="179.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.8" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.10%)</title><rect x="329.8" y="163.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.10%)</title><rect x="329.8" y="147.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="332.8" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.05%)</title><rect x="331.0" y="211.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="334.0" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.05%)</title><rect x="331.6" y="211.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="334.6" y="222.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.05%)</title><rect x="331.6" y="195.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.6" y="206.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="332.2" y="307.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="335.2" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.26%)</title><rect x="332.8" y="355.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="335.8" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.26%)</title><rect x="332.8" y="339.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="335.8" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="333.4" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.4" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="333.4" y="307.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="336.4" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="334.0" y="323.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.0" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.10%)</title><rect x="334.6" y="323.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="337.6" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="335.2" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="338.2" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="335.9" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="338.9" y="398.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="336.5" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.5" y="462.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="337.1" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="340.1" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.10%)</title><rect x="337.7" y="483.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="340.7" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.10%)</title><rect x="337.7" y="467.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="340.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.10%)</title><rect x="337.7" y="451.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="340.7" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.10%)</title><rect x="337.7" y="435.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="340.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="337.7" y="419.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="340.7" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="338.9" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="341.9" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.15%)</title><rect x="339.5" y="579.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.5" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.15%)</title><rect x="339.5" y="563.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="342.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.15%)</title><rect x="339.5" y="547.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.5" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="340.7" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="343.7" y="542.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.05%)</title><rect x="340.7" y="515.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="343.7" y="526.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="341.3" y="627.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="344.3" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="341.9" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.9" y="638.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="341.9" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="344.9" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="341.9" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="344.9" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="341.9" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="344.9" y="590.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.05%)</title><rect x="342.5" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="345.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="343.1" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="346.1" y="702.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.15%)</title><rect x="343.8" y="691.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.8" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.10%)</title><rect x="343.8" y="675.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="346.8" y="686.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.05%)</title><rect x="344.4" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="347.4" y="670.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="345.0" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.0" y="686.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="345.6" y="771.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="348.6" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.05%)</title><rect x="346.2" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.05%)</title><rect x="346.8" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="349.8" y="894.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.05%)</title><rect x="346.8" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.05%)</title><rect x="347.4" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (197 samples, 10.15%)</title><rect x="348.0" y="1123.0" width="119.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.0" y="1134.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (197 samples, 10.15%)</title><rect x="348.0" y="1107.0" width="119.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.0" y="1118.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.05%)</title><rect x="348.0" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (101 samples, 5.20%)</title><rect x="348.6" y="1091.0" width="61.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.6" y="1102.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (101 samples, 5.20%)</title><rect x="348.6" y="1075.0" width="61.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.6" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (101 samples, 5.20%)</title><rect x="348.6" y="1059.0" width="61.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.6" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (25 samples, 1.29%)</title><rect x="349.2" y="1043.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (24 samples, 1.24%)</title><rect x="349.2" y="1027.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (24 samples, 1.24%)</title><rect x="349.2" y="1011.0" width="14.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (24 samples, 1.24%)</title><rect x="349.2" y="995.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.2" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="349.2" y="979.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="352.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (22 samples, 1.13%)</title><rect x="349.8" y="979.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (22 samples, 1.13%)</title><rect x="349.8" y="963.0" width="13.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (21 samples, 1.08%)</title><rect x="349.8" y="947.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (21 samples, 1.08%)</title><rect x="349.8" y="931.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (20 samples, 1.03%)</title><rect x="350.4" y="915.0" width="12.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.4" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="351.1" y="899.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="354.1" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="351.1" y="883.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="354.1" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="351.1" y="867.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="354.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="351.1" y="851.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="354.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (18 samples, 0.93%)</title><rect x="351.7" y="899.0" width="10.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (18 samples, 0.93%)</title><rect x="351.7" y="883.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.88%)</title><rect x="352.3" y="867.0" width="10.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="355.3" y="878.0"></text>
</g>
<g>
<title>__GI_write (16 samples, 0.82%)</title><rect x="352.3" y="851.0" width="9.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="355.3" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.77%)</title><rect x="352.9" y="835.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.77%)</title><rect x="352.9" y="819.0" width="9.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_write (13 samples, 0.67%)</title><rect x="353.5" y="803.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.5" y="814.0"></text>
</g>
<g>
<title>ksys_write (13 samples, 0.67%)</title><rect x="353.5" y="787.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.5" y="798.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.10%)</title><rect x="353.5" y="771.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.5" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="353.5" y="755.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="356.5" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="354.1" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="357.1" y="750.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.57%)</title><rect x="354.7" y="771.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="357.7" y="782.0"></text>
</g>
<g>
<title>__vfs_write (9 samples, 0.46%)</title><rect x="354.7" y="755.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="357.7" y="766.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.46%)</title><rect x="354.7" y="739.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="357.7" y="750.0"></text>
</g>
<g>
<title>pipe_write (9 samples, 0.46%)</title><rect x="354.7" y="723.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="357.7" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.31%)</title><rect x="354.7" y="707.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="357.7" y="718.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.31%)</title><rect x="354.7" y="691.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="357.7" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.31%)</title><rect x="354.7" y="675.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.7" y="686.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.05%)</title><rect x="358.3" y="707.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="361.3" y="718.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="359.0" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="362.0" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="359.6" y="707.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.6" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.10%)</title><rect x="360.2" y="755.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.2" y="766.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.10%)</title><rect x="360.2" y="739.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.2" y="750.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.10%)</title><rect x="360.2" y="723.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="363.2" y="734.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.10%)</title><rect x="360.2" y="707.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="363.2" y="718.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="361.4" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="364.4" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="361.4" y="787.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="364.4" y="798.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.05%)</title><rect x="362.0" y="851.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="365.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="362.6" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="362.6" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="362.6" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.05%)</title><rect x="363.2" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="363.2" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="366.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.05%)</title><rect x="363.8" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.05%)</title><rect x="364.4" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (74 samples, 3.81%)</title><rect x="365.0" y="1043.0" width="45.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.0" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (74 samples, 3.81%)</title><rect x="365.0" y="1027.0" width="45.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.0" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (74 samples, 3.81%)</title><rect x="365.0" y="1011.0" width="45.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.0" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (73 samples, 3.76%)</title><rect x="365.6" y="995.0" width="44.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.6" y="1006.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (36 samples, 1.85%)</title><rect x="365.6" y="979.0" width="21.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.6" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (36 samples, 1.85%)</title><rect x="365.6" y="963.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.6" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (36 samples, 1.85%)</title><rect x="365.6" y="947.0" width="21.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.6" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (36 samples, 1.85%)</title><rect x="365.6" y="931.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.6" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="365.6" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.05%)</title><rect x="365.6" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.05%)</title><rect x="365.6" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 1.80%)</title><rect x="366.2" y="915.0" width="21.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.2" y="926.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="366.2" y="899.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="369.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (34 samples, 1.75%)</title><rect x="366.9" y="899.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (34 samples, 1.75%)</title><rect x="366.9" y="883.0" width="20.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.15%)</title><rect x="366.9" y="867.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="369.9" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="366.9" y="851.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="369.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.apply (1 samples, 0.05%)</title><rect x="368.1" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (29 samples, 1.49%)</title><rect x="368.7" y="867.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="371.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29 samples, 1.49%)</title><rect x="368.7" y="851.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (22 samples, 1.13%)</title><rect x="368.7" y="835.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/265687191.apply (17 samples, 0.88%)</title><rect x="368.7" y="819.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="371.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (17 samples, 0.88%)</title><rect x="368.7" y="803.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.10%)</title><rect x="368.7" y="787.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.10%)</title><rect x="368.7" y="771.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.10%)</title><rect x="368.7" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="371.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (2 samples, 0.10%)</title><rect x="368.7" y="739.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (2 samples, 0.10%)</title><rect x="368.7" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="371.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.10%)</title><rect x="368.7" y="707.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.10%)</title><rect x="368.7" y="691.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="371.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.10%)</title><rect x="368.7" y="675.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="371.7" y="686.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (1 samples, 0.05%)</title><rect x="368.7" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="371.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (1 samples, 0.05%)</title><rect x="369.3" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="369.3" y="643.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (1 samples, 0.05%)</title><rect x="369.3" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="372.3" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.05%)</title><rect x="369.3" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (15 samples, 0.77%)</title><rect x="369.9" y="787.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (14 samples, 0.72%)</title><rect x="370.5" y="771.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (12 samples, 0.62%)</title><rect x="370.5" y="755.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.5" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.26%)</title><rect x="371.1" y="739.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.1" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.15%)</title><rect x="371.1" y="723.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="374.1" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.map (1 samples, 0.05%)</title><rect x="371.1" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.1" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="371.7" y="707.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="371.7" y="691.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="371.7" y="675.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.10%)</title><rect x="371.7" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="372.3" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="372.3" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.10%)</title><rect x="372.9" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.10%)</title><rect x="372.9" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.05%)</title><rect x="372.9" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="375.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="373.5" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.05%)</title><rect x="374.2" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.26%)</title><rect x="374.8" y="739.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/347084483.run (5 samples, 0.26%)</title><rect x="374.8" y="723.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.15%)</title><rect x="376.0" y="707.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="376.0" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="376.0" y="675.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.get$Lambda (1 samples, 0.05%)</title><rect x="376.0" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.0" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="376.0" y="643.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="379.0" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="376.0" y="627.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="379.0" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="376.0" y="611.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="379.0" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="376.0" y="595.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="379.0" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="376.0" y="579.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="379.0" y="590.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="376.0" y="563.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="379.0" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.05%)</title><rect x="376.0" y="547.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="379.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.10%)</title><rect x="376.6" y="691.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.10%)</title><rect x="376.6" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.10%)</title><rect x="376.6" y="659.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740547233.invoke (2 samples, 0.10%)</title><rect x="376.6" y="643.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="379.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="376.6" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/626025582.invoke (1 samples, 0.05%)</title><rect x="377.2" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="377.2" y="611.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.05%)</title><rect x="377.2" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (2 samples, 0.10%)</title><rect x="377.8" y="755.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$348/1406690349.apply (5 samples, 0.26%)</title><rect x="379.0" y="819.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (5 samples, 0.26%)</title><rect x="379.0" y="803.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (5 samples, 0.26%)</title><rect x="379.0" y="787.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (5 samples, 0.26%)</title><rect x="379.0" y="771.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.26%)</title><rect x="379.0" y="755.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.0" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.15%)</title><rect x="380.2" y="739.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.2" y="750.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.15%)</title><rect x="380.2" y="723.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.15%)</title><rect x="380.2" y="707.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.2" y="718.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.15%)</title><rect x="380.2" y="691.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="383.2" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.10%)</title><rect x="380.2" y="675.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.2" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.205] (1 samples, 0.05%)</title><rect x="381.4" y="675.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="384.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.26%)</title><rect x="382.1" y="835.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.21%)</title><rect x="382.7" y="819.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.05%)</title><rect x="382.7" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="385.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.apply (1 samples, 0.05%)</title><rect x="382.7" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$351/1426844984.apply (3 samples, 0.15%)</title><rect x="383.3" y="803.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3 samples, 0.15%)</title><rect x="383.3" y="787.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2 samples, 0.10%)</title><rect x="383.3" y="771.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2 samples, 0.10%)</title><rect x="383.3" y="755.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (2 samples, 0.10%)</title><rect x="383.3" y="739.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (2 samples, 0.10%)</title><rect x="383.3" y="723.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="386.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.05%)</title><rect x="383.3" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="386.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (1 samples, 0.05%)</title><rect x="383.3" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.05%)</title><rect x="383.3" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="383.9" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="386.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExceptionalCF (1 samples, 0.05%)</title><rect x="384.5" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.failedFuture (1 samples, 0.05%)</title><rect x="384.5" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeExceptionally (1 samples, 0.05%)</title><rect x="384.5" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.10%)</title><rect x="385.1" y="835.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.05%)</title><rect x="385.7" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="388.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.05%)</title><rect x="385.7" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="388.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.05%)</title><rect x="385.7" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="388.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$408/224756225.apply (2 samples, 0.10%)</title><rect x="386.3" y="867.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.10%)</title><rect x="386.3" y="851.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="389.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="386.3" y="835.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="386.3" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="389.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="386.3" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="386.9" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="389.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.05%)</title><rect x="386.9" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="389.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (37 samples, 1.91%)</title><rect x="387.5" y="979.0" width="22.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.5" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.05%)</title><rect x="390.0" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.0" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.hasRemaining (1 samples, 0.05%)</title><rect x="390.0" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (1 samples, 0.05%)</title><rect x="390.6" y="963.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="390.6" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.6" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="390.6" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.6" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="390.6" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.10%)</title><rect x="391.2" y="963.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.10%)</title><rect x="391.2" y="947.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.2" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.10%)</title><rect x="391.2" y="931.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.2" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.10%)</title><rect x="391.2" y="915.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.05%)</title><rect x="392.4" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="392.4" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.4" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="392.4" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.4" y="942.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="392.4" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="395.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.15%)</title><rect x="393.0" y="963.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="393.0" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.05%)</title><rect x="393.0" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="393.0" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="393.0" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.0" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="393.0" y="883.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="396.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.10%)</title><rect x="393.6" y="947.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.10%)</title><rect x="393.6" y="931.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.10%)</title><rect x="393.6" y="915.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (9 samples, 0.46%)</title><rect x="394.8" y="963.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.8" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.41%)</title><rect x="394.8" y="947.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.8" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.31%)</title><rect x="394.8" y="931.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.26%)</title><rect x="394.8" y="915.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$135/1611445715.accept (4 samples, 0.21%)</title><rect x="394.8" y="899.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.21%)</title><rect x="394.8" y="883.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.05%)</title><rect x="394.8" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="394.8" y="851.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.8" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.05%)</title><rect x="395.4" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$369/1465070155.accept (1 samples, 0.05%)</title><rect x="395.4" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.4" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.10%)</title><rect x="396.0" y="867.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="396.0" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="399.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="396.0" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="399.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="396.0" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.0" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="396.6" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.05%)</title><rect x="397.3" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.05%)</title><rect x="397.9" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.10%)</title><rect x="398.5" y="931.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.5" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="399.7" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="402.7" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="399.7" y="931.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.7" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="399.7" y="915.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (1 samples, 0.05%)</title><rect x="400.3" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="403.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (15 samples, 0.77%)</title><rect x="400.9" y="963.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (15 samples, 0.77%)</title><rect x="400.9" y="947.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="400.9" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="401.5" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="401.5" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.21%)</title><rect x="402.1" y="931.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="403.9" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.9" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.15%)</title><rect x="404.5" y="931.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.5" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.15%)</title><rect x="404.5" y="915.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.5" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="405.8" y="899.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="408.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (6 samples, 0.31%)</title><rect x="406.4" y="931.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="407.0" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.05%)</title><rect x="407.6" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.6" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.10%)</title><rect x="408.2" y="915.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$418/1114504486.apply (1 samples, 0.05%)</title><rect x="409.4" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.05%)</title><rect x="409.4" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.4" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="409.4" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="409.4" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (95 samples, 4.89%)</title><rect x="410.0" y="1091.0" width="57.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.0" y="1102.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.05%)</title><rect x="410.0" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (94 samples, 4.84%)</title><rect x="410.6" y="1075.0" width="57.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.6" y="1086.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (92 samples, 4.74%)</title><rect x="411.2" y="1059.0" width="56.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.2" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$271/918979519.run (91 samples, 4.69%)</title><rect x="411.8" y="1043.0" width="55.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.8" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (91 samples, 4.69%)</title><rect x="411.8" y="1027.0" width="55.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.8" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (88 samples, 4.53%)</title><rect x="412.5" y="1011.0" width="53.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.5" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (88 samples, 4.53%)</title><rect x="412.5" y="995.0" width="53.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.5" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (88 samples, 4.53%)</title><rect x="412.5" y="979.0" width="53.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.5" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (88 samples, 4.53%)</title><rect x="412.5" y="963.0" width="53.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.5" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (88 samples, 4.53%)</title><rect x="412.5" y="947.0" width="53.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.5" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (88 samples, 4.53%)</title><rect x="412.5" y="931.0" width="53.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.5" y="942.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$444/264340655.run (34 samples, 1.75%)</title><rect x="412.5" y="915.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (34 samples, 1.75%)</title><rect x="412.5" y="899.0" width="20.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (34 samples, 1.75%)</title><rect x="412.5" y="883.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.21%)</title><rect x="412.5" y="867.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.5" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.10%)</title><rect x="412.5" y="851.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="412.5" y="835.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="412.5" y="819.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="412.5" y="803.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.10%)</title><rect x="412.5" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="412.5" y="771.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="412.5" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="412.5" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.10%)</title><rect x="412.5" y="723.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.10%)</title><rect x="412.5" y="707.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.5" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.05%)</title><rect x="412.5" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.5" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="413.1" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.1" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.05%)</title><rect x="413.1" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="413.7" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.7" y="862.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.05%)</title><rect x="413.7" y="835.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.7" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.05%)</title><rect x="414.3" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.05%)</title><rect x="414.3" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="414.3" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.05%)</title><rect x="414.3" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.05%)</title><rect x="414.3" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.3" y="798.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.05%)</title><rect x="414.9" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (29 samples, 1.49%)</title><rect x="415.5" y="867.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.5" y="878.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.15%)</title><rect x="415.5" y="851.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.5" y="862.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.15%)</title><rect x="415.5" y="835.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.15%)</title><rect x="415.5" y="819.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.5" y="830.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.15%)</title><rect x="415.5" y="803.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="418.5" y="814.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="416.1" y="787.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="419.1" y="798.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.05%)</title><rect x="416.7" y="787.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="419.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (26 samples, 1.34%)</title><rect x="417.3" y="851.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (3 samples, 0.15%)</title><rect x="417.3" y="835.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.3" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plus (3 samples, 0.15%)</title><rect x="417.3" y="819.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.3" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (3 samples, 0.15%)</title><rect x="417.3" y="803.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.3" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.05%)</title><rect x="418.5" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.5" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.05%)</title><rect x="418.5" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (2 samples, 0.10%)</title><rect x="419.1" y="835.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="419.1" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="419.1" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.05%)</title><rect x="419.1" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.1" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.05%)</title><rect x="419.1" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.1" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.05%)</title><rect x="419.1" y="755.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.1" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.05%)</title><rect x="419.1" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.1" y="750.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.05%)</title><rect x="419.1" y="723.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.1" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.05%)</title><rect x="419.7" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.7" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.05%)</title><rect x="419.7" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.7" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="419.7" y="787.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="422.7" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="419.7" y="771.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="422.7" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="419.7" y="755.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="422.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="419.7" y="739.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="422.7" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.05%)</title><rect x="419.7" y="723.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (21 samples, 1.08%)</title><rect x="420.4" y="835.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (21 samples, 1.08%)</title><rect x="420.4" y="819.0" width="12.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.15%)</title><rect x="420.4" y="803.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.15%)</title><rect x="420.4" y="787.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.15%)</title><rect x="420.4" y="771.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.15%)</title><rect x="420.4" y="755.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="423.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.15%)</title><rect x="420.4" y="739.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.4" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="420.4" y="723.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="423.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="420.4" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="420.4" y="691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="423.4" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="420.4" y="675.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="423.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="421.0" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="421.0" y="707.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="421.6" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="421.6" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="421.6" y="691.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="424.6" y="702.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.05%)</title><rect x="421.6" y="675.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="424.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="421.6" y="659.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="424.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="421.6" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="424.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.05%)</title><rect x="421.6" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.6" y="638.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.05%)</title><rect x="421.6" y="611.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="424.6" y="622.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.05%)</title><rect x="421.6" y="595.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="424.6" y="606.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.05%)</title><rect x="421.6" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.6" y="590.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.05%)</title><rect x="421.6" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="424.6" y="574.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.05%)</title><rect x="421.6" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="424.6" y="558.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.05%)</title><rect x="421.6" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.6" y="542.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.05%)</title><rect x="421.6" y="515.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="424.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (18 samples, 0.93%)</title><rect x="422.2" y="803.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (18 samples, 0.93%)</title><rect x="422.2" y="787.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.2" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="422.2" y="771.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="425.2" y="782.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="422.2" y="755.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="425.2" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="422.2" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="425.2" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="422.2" y="723.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="425.2" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.05%)</title><rect x="422.2" y="707.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="425.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (16 samples, 0.82%)</title><rect x="422.8" y="771.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (16 samples, 0.82%)</title><rect x="422.8" y="755.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.82%)</title><rect x="422.8" y="739.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.8" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="422.8" y="723.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="425.8" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="422.8" y="707.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="425.8" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="422.8" y="691.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="425.8" y="702.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="422.8" y="675.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="425.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.77%)</title><rect x="423.4" y="723.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (15 samples, 0.77%)</title><rect x="423.4" y="707.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="426.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.72%)</title><rect x="424.0" y="691.0" width="8.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="427.0" y="702.0"></text>
</g>
<g>
<title>__GI_write (14 samples, 0.72%)</title><rect x="424.0" y="675.0" width="8.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="427.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.67%)</title><rect x="424.6" y="659.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.67%)</title><rect x="424.6" y="643.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="427.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.62%)</title><rect x="425.2" y="627.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="428.2" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="425.2" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.2" y="622.0"></text>
</g>
<g>
<title>ksys_write (11 samples, 0.57%)</title><rect x="425.8" y="611.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="428.8" y="622.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.10%)</title><rect x="425.8" y="595.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="428.8" y="606.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.46%)</title><rect x="427.0" y="595.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="430.0" y="606.0"></text>
</g>
<g>
<title>__vfs_write (9 samples, 0.46%)</title><rect x="427.0" y="579.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="430.0" y="590.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.41%)</title><rect x="427.0" y="563.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.0" y="574.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.05%)</title><rect x="427.0" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.0" y="558.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.36%)</title><rect x="427.7" y="547.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.7" y="558.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.36%)</title><rect x="427.7" y="531.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="430.7" y="542.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.36%)</title><rect x="427.7" y="515.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="430.7" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.36%)</title><rect x="427.7" y="499.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="430.7" y="510.0"></text>
</g>
<g>
<title>pipe_write (1 samples, 0.05%)</title><rect x="431.9" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="434.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="432.5" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$448/1059997574.accept (3 samples, 0.15%)</title><rect x="433.1" y="915.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (2 samples, 0.10%)</title><rect x="433.7" y="899.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (2 samples, 0.10%)</title><rect x="433.7" y="883.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.10%)</title><rect x="433.7" y="867.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.10%)</title><rect x="433.7" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="436.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.10%)</title><rect x="433.7" y="835.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="433.7" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="434.3" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="434.3" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="437.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$461/1913827667.accept (1 samples, 0.05%)</title><rect x="434.3" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (48 samples, 2.47%)</title><rect x="434.9" y="915.0" width="29.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="437.9" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (48 samples, 2.47%)</title><rect x="434.9" y="899.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.9" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (47 samples, 2.42%)</title><rect x="435.6" y="883.0" width="28.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.6" y="894.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (47 samples, 2.42%)</title><rect x="435.6" y="867.0" width="28.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.6" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47 samples, 2.42%)</title><rect x="435.6" y="851.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.6" y="862.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (47 samples, 2.42%)</title><rect x="435.6" y="835.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.6" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (46 samples, 2.37%)</title><rect x="436.2" y="819.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.2" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$464/1999221485.accept (46 samples, 2.37%)</title><rect x="436.2" y="803.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.2" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (46 samples, 2.37%)</title><rect x="436.2" y="787.0" width="27.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.2" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (46 samples, 2.37%)</title><rect x="436.2" y="771.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.2" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (46 samples, 2.37%)</title><rect x="436.2" y="755.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.2" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (7 samples, 0.36%)</title><rect x="436.2" y="739.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="439.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.31%)</title><rect x="436.8" y="723.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.31%)</title><rect x="436.8" y="707.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="439.8" y="718.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="436.8" y="691.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="439.8" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="436.8" y="675.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="439.8" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="437.4" y="675.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="440.4" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.21%)</title><rect x="438.0" y="691.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="441.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.15%)</title><rect x="438.6" y="675.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.15%)</title><rect x="438.6" y="659.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.15%)</title><rect x="438.6" y="643.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.6" y="654.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.15%)</title><rect x="438.6" y="627.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.6" y="638.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.15%)</title><rect x="438.6" y="611.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.6" y="622.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="438.6" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.6" y="606.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.05%)</title><rect x="438.6" y="579.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="441.6" y="590.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.10%)</title><rect x="439.2" y="595.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.2" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.10%)</title><rect x="439.2" y="579.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="442.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="439.2" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="442.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.10%)</title><rect x="440.4" y="739.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.05%)</title><rect x="440.4" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="443.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.apply (1 samples, 0.05%)</title><rect x="440.4" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$477/1674739530.apply (1 samples, 0.05%)</title><rect x="441.0" y="723.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="444.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.05%)</title><rect x="441.0" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="441.6" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (36 samples, 1.85%)</title><rect x="442.2" y="739.0" width="21.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.2" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (35 samples, 1.80%)</title><rect x="442.8" y="723.0" width="21.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.8" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (34 samples, 1.75%)</title><rect x="442.8" y="707.0" width="20.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (30 samples, 1.55%)</title><rect x="442.8" y="691.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (30 samples, 1.55%)</title><rect x="442.8" y="675.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="445.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (30 samples, 1.55%)</title><rect x="442.8" y="659.0" width="18.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.05%)</title><rect x="442.8" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (29 samples, 1.49%)</title><rect x="443.5" y="643.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="446.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 1.49%)</title><rect x="443.5" y="627.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 1.49%)</title><rect x="443.5" y="611.0" width="17.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="443.5" y="595.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="446.5" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="444.1" y="595.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="447.1" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.41%)</title><rect x="444.7" y="595.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="447.7" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="444.7" y="579.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="447.7" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="445.9" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="448.9" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="446.5" y="579.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="449.5" y="590.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="447.1" y="579.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="450.1" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.15%)</title><rect x="447.7" y="579.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="450.7" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.93%)</title><rect x="449.5" y="595.0" width="11.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="452.5" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.88%)</title><rect x="450.1" y="579.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="453.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.88%)</title><rect x="450.1" y="563.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.82%)</title><rect x="450.1" y="547.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="453.1" y="558.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.82%)</title><rect x="450.1" y="531.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="453.1" y="542.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.82%)</title><rect x="450.1" y="515.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.1" y="526.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="450.8" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="453.8" y="510.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.72%)</title><rect x="451.4" y="499.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.4" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.72%)</title><rect x="451.4" y="483.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.4" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.72%)</title><rect x="451.4" y="467.0" width="8.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.4" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="459.9" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="462.9" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.05%)</title><rect x="460.5" y="595.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="463.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.21%)</title><rect x="461.1" y="691.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.1" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="461.1" y="675.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="464.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.10%)</title><rect x="461.7" y="675.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.10%)</title><rect x="461.7" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$468/1721151277.accept (1 samples, 0.05%)</title><rect x="462.9" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/539612352.accept (1 samples, 0.05%)</title><rect x="463.5" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.05%)</title><rect x="463.5" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.05%)</title><rect x="463.5" y="675.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.decrementAndGet (1 samples, 0.05%)</title><rect x="463.5" y="659.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1 samples, 0.05%)</title><rect x="464.1" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (1 samples, 0.05%)</title><rect x="464.1" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1 samples, 0.05%)</title><rect x="464.1" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (1 samples, 0.05%)</title><rect x="464.1" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.1" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (1 samples, 0.05%)</title><rect x="464.1" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.1" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.05%)</title><rect x="464.1" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.1" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.05%)</title><rect x="464.1" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (2 samples, 0.10%)</title><rect x="464.7" y="915.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="464.7" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.7" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="464.7" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.7" y="894.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="464.7" y="867.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="467.7" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (1 samples, 0.05%)</title><rect x="465.3" y="899.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.3" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="465.3" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.3" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="465.3" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.3" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="465.3" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.3" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="465.3" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.3" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="465.3" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="465.3" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.3" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="465.3" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.10%)</title><rect x="466.0" y="1011.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.10%)</title><rect x="466.0" y="995.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.10%)</title><rect x="466.0" y="979.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.10%)</title><rect x="466.0" y="963.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.05%)</title><rect x="466.0" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (1 samples, 0.05%)</title><rect x="466.0" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.05%)</title><rect x="466.0" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.05%)</title><rect x="466.0" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.0" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="466.0" y="883.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.0" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="466.0" y="867.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.0" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="466.0" y="851.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.0" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="466.0" y="835.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="469.0" y="846.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="466.0" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/932111771.accept (1 samples, 0.05%)</title><rect x="466.6" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.05%)</title><rect x="466.6" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.05%)</title><rect x="466.6" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.05%)</title><rect x="466.6" y="899.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="467.2" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.05%)</title><rect x="467.2" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$502/1744977774.run (709 samples, 36.53%)</title><rect x="467.8" y="1123.0" width="431.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.8" y="1134.0">ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$1 (709 samples, 36.53%)</title><rect x="467.8" y="1107.0" width="431.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.8" y="1118.0">ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.internalRun (709 samples, 36.53%)</title><rect x="467.8" y="1091.0" width="431.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.8" y="1102.0">ru/mail/polis/service/stasyanoi/server/CustomServer.interna..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (117 samples, 6.03%)</title><rect x="467.8" y="1075.0" width="71.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.8" y="1086.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (113 samples, 5.82%)</title><rect x="468.4" y="1059.0" width="68.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="471.4" y="1070.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.31%)</title><rect x="468.4" y="1043.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.26%)</title><rect x="469.0" y="1027.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.10%)</title><rect x="469.0" y="1011.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="469.6" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.15%)</title><rect x="470.2" y="1011.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.15%)</title><rect x="470.2" y="995.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.15%)</title><rect x="470.2" y="979.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="471.4" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (107 samples, 5.51%)</title><rect x="472.0" y="1043.0" width="65.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.0" y="1054.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (107 samples, 5.51%)</title><rect x="472.0" y="1027.0" width="65.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.0" y="1038.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (107 samples, 5.51%)</title><rect x="472.0" y="1011.0" width="65.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.0" y="1022.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (107 samples, 5.51%)</title><rect x="472.0" y="995.0" width="65.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.0" y="1006.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.15%)</title><rect x="473.2" y="979.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="476.2" y="990.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.10%)</title><rect x="473.9" y="963.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="476.9" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.10%)</title><rect x="473.9" y="947.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="476.9" y="958.0"></text>
</g>
<g>
<title>__libc_send (102 samples, 5.26%)</title><rect x="475.1" y="979.0" width="62.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="478.1" y="990.0">__libc..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 5.20%)</title><rect x="475.7" y="963.0" width="61.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="478.7" y="974.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (101 samples, 5.20%)</title><rect x="475.7" y="947.0" width="61.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="478.7" y="958.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (96 samples, 4.95%)</title><rect x="476.9" y="931.0" width="58.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="479.9" y="942.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (94 samples, 4.84%)</title><rect x="476.9" y="915.0" width="57.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="479.9" y="926.0">__sys_..</text>
</g>
<g>
<title>sock_sendmsg (91 samples, 4.69%)</title><rect x="476.9" y="899.0" width="55.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.9" y="910.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (90 samples, 4.64%)</title><rect x="476.9" y="883.0" width="54.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="479.9" y="894.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (88 samples, 4.53%)</title><rect x="478.1" y="867.0" width="53.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.1" y="878.0">tcp_s..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="478.1" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="481.1" y="862.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.10%)</title><rect x="478.7" y="851.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.10%)</title><rect x="478.7" y="835.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.7" y="846.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="479.9" y="851.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="482.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="479.9" y="835.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.9" y="846.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 4.33%)</title><rect x="480.5" y="851.0" width="51.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="483.5" y="862.0">tcp_s..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="481.8" y="835.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="484.8" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.05%)</title><rect x="481.8" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="484.8" y="830.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.46%)</title><rect x="482.4" y="835.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="485.4" y="846.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.41%)</title><rect x="483.0" y="819.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="486.0" y="830.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="483.0" y="803.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.0" y="814.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (5 samples, 0.26%)</title><rect x="483.6" y="803.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="486.6" y="814.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="483.6" y="787.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="486.6" y="798.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.10%)</title><rect x="484.8" y="787.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="487.8" y="798.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.05%)</title><rect x="486.0" y="787.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.0" y="798.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="486.6" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="489.6" y="814.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="487.2" y="803.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.2" y="814.0"></text>
</g>
<g>
<title>tcp_push (70 samples, 3.61%)</title><rect x="487.8" y="835.0" width="42.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.8" y="846.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (69 samples, 3.55%)</title><rect x="488.4" y="819.0" width="42.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="491.4" y="830.0">__t..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="488.4" y="803.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="491.4" y="814.0"></text>
</g>
<g>
<title>tcp_write_xmit (68 samples, 3.50%)</title><rect x="489.1" y="803.0" width="41.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.1" y="814.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (59 samples, 3.04%)</title><rect x="490.3" y="787.0" width="35.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.3" y="798.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (56 samples, 2.89%)</title><rect x="492.1" y="771.0" width="34.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.1" y="782.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (55 samples, 2.83%)</title><rect x="492.7" y="755.0" width="33.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.7" y="766.0">__..</text>
</g>
<g>
<title>ip_local_out (54 samples, 2.78%)</title><rect x="493.3" y="739.0" width="32.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.3" y="750.0">ip..</text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.46%)</title><rect x="493.3" y="723.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="496.3" y="734.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.05%)</title><rect x="493.3" y="707.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="496.3" y="718.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.05%)</title><rect x="493.9" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.9" y="718.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.36%)</title><rect x="494.5" y="707.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="497.5" y="718.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.15%)</title><rect x="494.5" y="691.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="497.5" y="702.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.15%)</title><rect x="494.5" y="675.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="497.5" y="686.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.21%)</title><rect x="496.3" y="691.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="499.3" y="702.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.15%)</title><rect x="497.0" y="675.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="500.0" y="686.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.10%)</title><rect x="497.0" y="659.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.0" y="670.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.05%)</title><rect x="498.2" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.2" y="670.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="498.8" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.8" y="734.0"></text>
</g>
<g>
<title>ip_output (44 samples, 2.27%)</title><rect x="499.4" y="723.0" width="26.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.4" y="734.0">i..</text>
</g>
<g>
<title>ip_finish_output (44 samples, 2.27%)</title><rect x="499.4" y="707.0" width="26.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="502.4" y="718.0">i..</text>
</g>
<g>
<title>__ip_finish_output (43 samples, 2.22%)</title><rect x="499.4" y="691.0" width="26.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="502.4" y="702.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (43 samples, 2.22%)</title><rect x="499.4" y="675.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.4" y="686.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (35 samples, 1.80%)</title><rect x="500.0" y="659.0" width="21.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.0" y="670.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (35 samples, 1.80%)</title><rect x="500.0" y="643.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="503.0" y="654.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (35 samples, 1.80%)</title><rect x="500.0" y="627.0" width="21.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.0" y="638.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (35 samples, 1.80%)</title><rect x="500.0" y="611.0" width="21.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.0" y="622.0">_..</text>
</g>
<g>
<title>net_rx_action (35 samples, 1.80%)</title><rect x="500.0" y="595.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.0" y="606.0">n..</text>
</g>
<g>
<title>process_backlog (35 samples, 1.80%)</title><rect x="500.0" y="579.0" width="21.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="503.0" y="590.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (34 samples, 1.75%)</title><rect x="500.6" y="563.0" width="20.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="503.6" y="574.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (33 samples, 1.70%)</title><rect x="500.6" y="547.0" width="20.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="503.6" y="558.0"></text>
</g>
<g>
<title>ip_rcv (32 samples, 1.65%)</title><rect x="501.2" y="531.0" width="19.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="504.2" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="501.8" y="515.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.8" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (30 samples, 1.55%)</title><rect x="502.4" y="515.0" width="18.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="505.4" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 1.55%)</title><rect x="502.4" y="499.0" width="18.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.4" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 1.39%)</title><rect x="502.4" y="483.0" width="16.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="505.4" y="494.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 1.39%)</title><rect x="502.4" y="467.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.4" y="478.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="503.6" y="451.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="506.6" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (24 samples, 1.24%)</title><rect x="504.3" y="451.0" width="14.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="507.3" y="462.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="504.9" y="435.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.9" y="446.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="506.1" y="435.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="509.1" y="446.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="506.1" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.1" y="430.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="506.7" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="509.7" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 0.93%)</title><rect x="507.3" y="435.0" width="10.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="510.3" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.93%)</title><rect x="507.3" y="419.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.3" y="430.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.41%)</title><rect x="507.3" y="403.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="510.3" y="414.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.41%)</title><rect x="507.3" y="387.0" width="4.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="510.3" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.26%)</title><rect x="508.5" y="371.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.5" y="382.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.15%)</title><rect x="508.5" y="355.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.5" y="366.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.15%)</title><rect x="508.5" y="339.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="511.5" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="509.7" y="323.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.7" y="334.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="510.3" y="355.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="513.3" y="366.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="510.3" y="339.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="513.3" y="350.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="510.9" y="323.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="513.9" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="510.9" y="307.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="513.9" y="318.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.05%)</title><rect x="511.5" y="371.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="514.5" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="512.2" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="515.2" y="414.0"></text>
</g>
<g>
<title>tcp_data_ready (8 samples, 0.41%)</title><rect x="512.8" y="403.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.8" y="414.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 0.41%)</title><rect x="512.8" y="387.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="515.8" y="398.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.36%)</title><rect x="513.4" y="371.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="516.4" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.36%)</title><rect x="513.4" y="355.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="516.4" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.36%)</title><rect x="513.4" y="339.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.4" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="517.6" y="403.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="520.6" y="414.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="518.2" y="435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="521.2" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.15%)</title><rect x="518.8" y="483.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="521.8" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (3 samples, 0.15%)</title><rect x="518.8" y="467.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.8" y="478.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (3 samples, 0.15%)</title><rect x="518.8" y="451.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="521.8" y="462.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="520.7" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="523.7" y="558.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.36%)</title><rect x="521.3" y="659.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.3" y="670.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.36%)</title><rect x="521.3" y="643.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.3" y="654.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.15%)</title><rect x="523.1" y="627.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="526.1" y="638.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.10%)</title><rect x="523.1" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="526.1" y="622.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="523.1" y="595.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.1" y="606.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.05%)</title><rect x="523.1" y="579.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="526.1" y="590.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="523.7" y="595.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.7" y="606.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="524.3" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="527.3" y="622.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="524.9" y="627.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="527.9" y="638.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.05%)</title><rect x="524.9" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="527.9" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="525.5" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="528.5" y="702.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.26%)</title><rect x="526.1" y="787.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="529.1" y="798.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.05%)</title><rect x="528.0" y="771.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.0" y="782.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="528.6" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="531.6" y="782.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="528.6" y="755.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.6" y="766.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="528.6" y="739.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="531.6" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="528.6" y="723.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.6" y="734.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.05%)</title><rect x="529.2" y="787.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="532.2" y="798.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="529.8" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="532.8" y="798.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="530.4" y="835.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="533.4" y="846.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="530.4" y="819.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="533.4" y="830.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="531.0" y="803.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="534.0" y="814.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.05%)</title><rect x="531.6" y="883.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.6" y="894.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="531.6" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="534.6" y="878.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="531.6" y="851.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="534.6" y="862.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="531.6" y="835.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="534.6" y="846.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.05%)</title><rect x="531.6" y="819.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="534.6" y="830.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="531.6" y="803.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="534.6" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.15%)</title><rect x="532.2" y="899.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.2" y="910.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="532.2" y="883.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="535.2" y="894.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="532.2" y="867.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="535.2" y="878.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="532.8" y="851.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="535.8" y="862.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.10%)</title><rect x="534.0" y="915.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.0" y="926.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="535.3" y="931.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="538.3" y="942.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.10%)</title><rect x="535.9" y="931.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="538.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.15%)</title><rect x="537.1" y="1059.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="540.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="538.3" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="541.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$503/570452016.get (592 samples, 30.50%)</title><rect x="538.9" y="1075.0" width="359.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.9" y="1086.0">ru/mail/polis/service/stasyanoi/server/CustomServ..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.lambda$get$0 (592 samples, 30.50%)</title><rect x="538.9" y="1059.0" width="359.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.9" y="1070.0">ru/mail/polis/service/stasyanoi/server/CustomServ..</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalAndReplicas (592 samples, 30.50%)</title><rect x="538.9" y="1043.0" width="359.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.9" y="1054.0">ru/mail/polis/service/stasyanoi/server/CustomServ..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.15%)</title><rect x="538.9" y="1027.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.15%)</title><rect x="538.9" y="1011.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="538.9" y="995.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.10%)</title><rect x="538.9" y="979.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.9" y="990.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="540.1" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponseFromLocalNode (434 samples, 22.36%)</title><rect x="540.7" y="1027.0" width="263.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.7" y="1038.0">ru/mail/polis/service/stasyanoi/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (427 samples, 22.00%)</title><rect x="540.7" y="1011.0" width="259.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.7" y="1022.0">ru/mail/polis/dao/stasyanoi/DAOImpl..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.10%)</title><rect x="540.7" y="995.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1213216872.invoke (2 samples, 0.10%)</title><rect x="540.7" y="979.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.10%)</title><rect x="540.7" y="963.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.10%)</title><rect x="540.7" y="947.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.10%)</title><rect x="540.7" y="931.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.10%)</title><rect x="540.7" y="915.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.7" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (424 samples, 21.84%)</title><rect x="541.9" y="995.0" width="257.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.9" y="1006.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (424 samples, 21.84%)</title><rect x="541.9" y="979.0" width="257.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.9" y="990.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="541.9" y="963.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.9" y="974.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (291 samples, 14.99%)</title><rect x="542.6" y="963.0" width="176.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="545.6" y="974.0">Java_org_rocksdb_RocksD..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.05%)</title><rect x="542.6" y="947.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="545.6" y="958.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="543.2" y="947.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="546.2" y="958.0"></text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (1 samples, 0.05%)</title><rect x="543.8" y="947.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="546.8" y="958.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.05%)</title><rect x="544.4" y="947.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="547.4" y="958.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.05%)</title><rect x="545.0" y="947.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="548.0" y="958.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.05%)</title><rect x="545.6" y="947.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="548.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.10%)</title><rect x="546.2" y="947.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="549.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.05%)</title><rect x="547.4" y="947.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="550.4" y="958.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (282 samples, 14.53%)</title><rect x="548.0" y="947.0" width="171.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="551.0" y="958.0">rocksdb_get_helper(JNI..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.10%)</title><rect x="548.0" y="931.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="551.0" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="549.2" y="931.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="552.2" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="549.8" y="931.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="552.8" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.21%)</title><rect x="550.5" y="931.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="553.5" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="551.1" y="915.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="554.1" y="926.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.10%)</title><rect x="551.7" y="915.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="554.7" y="926.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.10%)</title><rect x="551.7" y="899.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="554.7" y="910.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.10%)</title><rect x="552.9" y="931.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="555.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (269 samples, 13.86%)</title><rect x="554.1" y="931.0" width="163.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="557.1" y="942.0">rocksdb::DB::Get(rock..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (269 samples, 13.86%)</title><rect x="554.1" y="915.0" width="163.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="557.1" y="926.0">rocksdb::DB::Get(rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (267 samples, 13.76%)</title><rect x="554.7" y="899.0" width="162.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="557.7" y="910.0">rocksdb::DBImpl::Get(..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="555.3" y="883.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="558.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.05%)</title><rect x="555.9" y="883.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="558.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (262 samples, 13.50%)</title><rect x="556.5" y="883.0" width="159.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="559.5" y="894.0">rocksdb::DBImpl::Get..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (2 samples, 0.10%)</title><rect x="558.4" y="867.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="561.4" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="559.6" y="867.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="562.6" y="878.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.05%)</title><rect x="560.8" y="867.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="563.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.15%)</title><rect x="561.4" y="867.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="564.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.15%)</title><rect x="561.4" y="851.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="564.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.10%)</title><rect x="563.2" y="867.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="566.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.05%)</title><rect x="563.2" y="851.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="566.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.05%)</title><rect x="563.8" y="851.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="566.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (248 samples, 12.78%)</title><rect x="564.4" y="867.0" width="150.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="567.4" y="878.0">rocksdb::MemTable::..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (245 samples, 12.62%)</title><rect x="565.0" y="851.0" width="149.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="568.0" y="862.0">/tmp/librocksdbjni2..</text>
</g>
<g>
<title>/tmp/librocksdbjni2833029916165714913.so (2 samples, 0.10%)</title><rect x="565.0" y="835.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="568.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="565.7" y="819.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="568.7" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="565.7" y="803.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="568.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="565.7" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="568.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="565.7" y="771.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="565.7" y="755.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="568.7" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="565.7" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="568.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="565.7" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="568.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (243 samples, 12.52%)</title><rect x="566.3" y="835.0" width="147.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="569.3" y="846.0">rocksdb::InlineSkip..</text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="577.8" y="819.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="580.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.05%)</title><rect x="578.4" y="819.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="581.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (222 samples, 11.44%)</title><rect x="579.0" y="819.0" width="135.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="582.0" y="830.0">rocksdb::MemTable..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.05%)</title><rect x="580.9" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="583.9" y="814.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.05%)</title><rect x="581.5" y="803.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="584.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (215 samples, 11.08%)</title><rect x="582.1" y="803.0" width="130.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="585.1" y="814.0">rocksdb::BaseCom..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (45 samples, 2.32%)</title><rect x="584.5" y="787.0" width="27.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="587.5" y="798.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (45 samples, 2.32%)</title><rect x="584.5" y="771.0" width="27.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="587.5" y="782.0">j..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="586.9" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="589.9" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.26%)</title><rect x="587.5" y="755.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="590.5" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.15%)</title><rect x="590.6" y="755.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="593.6" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (31 samples, 1.60%)</title><rect x="592.4" y="755.0" width="18.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="595.4" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="597.9" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="600.9" y="750.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (2 samples, 0.10%)</title><rect x="598.5" y="739.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="601.5" y="750.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.05%)</title><rect x="599.7" y="739.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="602.7" y="750.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.05%)</title><rect x="600.3" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="603.3" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (14 samples, 0.72%)</title><rect x="600.9" y="739.0" width="8.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="603.9" y="750.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.05%)</title><rect x="603.3" y="723.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="606.3" y="734.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.05%)</title><rect x="604.0" y="723.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="607.0" y="734.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.05%)</title><rect x="604.6" y="723.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="607.6" y="734.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (7 samples, 0.36%)</title><rect x="605.2" y="723.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="608.2" y="734.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.05%)</title><rect x="608.8" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="611.8" y="718.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.05%)</title><rect x="609.4" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="612.4" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.10%)</title><rect x="610.0" y="739.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="613.0" y="750.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.05%)</title><rect x="611.2" y="755.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="614.2" y="766.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (88 samples, 4.53%)</title><rect x="611.9" y="787.0" width="53.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="614.9" y="798.0">JNIEn..</text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.05%)</title><rect x="611.9" y="771.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="614.9" y="782.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (86 samples, 4.43%)</title><rect x="612.5" y="771.0" width="52.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="615.5" y="782.0">jni_C..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.05%)</title><rect x="614.9" y="755.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="617.9" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.21%)</title><rect x="615.5" y="755.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="618.5" y="766.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.05%)</title><rect x="617.9" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="620.9" y="766.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (4 samples, 0.21%)</title><rect x="618.5" y="755.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="621.5" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.15%)</title><rect x="621.0" y="755.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="624.0" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.26%)</title><rect x="622.8" y="755.0" width="3.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="625.8" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (62 samples, 3.19%)</title><rect x="625.8" y="755.0" width="37.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="628.8" y="766.0">jni..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.10%)</title><rect x="633.1" y="739.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="636.1" y="750.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.10%)</title><rect x="634.3" y="739.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="637.3" y="750.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (3 samples, 0.15%)</title><rect x="635.6" y="739.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="638.6" y="750.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (3 samples, 0.15%)</title><rect x="637.4" y="739.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="640.4" y="750.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.05%)</title><rect x="639.2" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="642.2" y="750.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (9 samples, 0.46%)</title><rect x="639.8" y="739.0" width="5.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="642.8" y="750.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.10%)</title><rect x="645.3" y="739.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="648.3" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (23 samples, 1.18%)</title><rect x="646.5" y="739.0" width="14.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="649.5" y="750.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (6 samples, 0.31%)</title><rect x="647.1" y="723.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="650.1" y="734.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (12 samples, 0.62%)</title><rect x="650.8" y="723.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="653.8" y="734.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.05%)</title><rect x="655.6" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="658.6" y="718.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (3 samples, 0.15%)</title><rect x="656.2" y="707.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="659.2" y="718.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (4 samples, 0.21%)</title><rect x="658.1" y="723.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="661.1" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.10%)</title><rect x="660.5" y="739.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="663.5" y="750.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (2 samples, 0.10%)</title><rect x="661.7" y="739.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="664.7" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="662.9" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="665.9" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.10%)</title><rect x="663.5" y="755.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="666.5" y="766.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.05%)</title><rect x="664.7" y="771.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="667.7" y="782.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.05%)</title><rect x="665.4" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="668.4" y="798.0"></text>
</g>
<g>
<title>__lll_lock_wait (12 samples, 0.62%)</title><rect x="666.0" y="787.0" width="7.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="669.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.52%)</title><rect x="667.2" y="771.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="670.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.46%)</title><rect x="667.2" y="755.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="670.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.21%)</title><rect x="668.4" y="739.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.4" y="750.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.21%)</title><rect x="668.4" y="723.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="671.4" y="734.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.21%)</title><rect x="668.4" y="707.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="671.4" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="670.2" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.2" y="702.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="670.2" y="675.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.2" y="686.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.10%)</title><rect x="670.8" y="739.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.8" y="750.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="671.4" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="674.4" y="734.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="672.0" y="739.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="675.0" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="672.0" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="675.0" y="734.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="672.6" y="755.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="675.6" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (35 samples, 1.80%)</title><rect x="673.3" y="787.0" width="21.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="676.3" y="798.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 1.75%)</title><rect x="673.9" y="771.0" width="20.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 1.75%)</title><rect x="673.9" y="755.0" width="20.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="676.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (30 samples, 1.55%)</title><rect x="674.5" y="739.0" width="18.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="677.5" y="750.0"></text>
</g>
<g>
<title>do_futex (30 samples, 1.55%)</title><rect x="674.5" y="723.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="677.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 1.49%)</title><rect x="675.1" y="707.0" width="17.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="678.1" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="675.7" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="678.7" y="702.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.05%)</title><rect x="675.7" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 1.39%)</title><rect x="676.3" y="691.0" width="16.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.3" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 1.39%)</title><rect x="676.3" y="675.0" width="16.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="679.3" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 1.39%)</title><rect x="676.3" y="659.0" width="16.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.3" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.10%)</title><rect x="692.7" y="739.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="695.7" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="692.7" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="695.7" y="734.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="692.7" y="707.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="695.7" y="718.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.05%)</title><rect x="693.3" y="723.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="696.3" y="734.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="693.9" y="739.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="696.9" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="693.9" y="723.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="696.9" y="734.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.10%)</title><rect x="694.5" y="787.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="697.5" y="798.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.10%)</title><rect x="695.7" y="787.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="698.7" y="798.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (13 samples, 0.67%)</title><rect x="697.0" y="787.0" width="7.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="700.0" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.26%)</title><rect x="697.6" y="771.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="700.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (7 samples, 0.36%)</title><rect x="700.6" y="771.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="703.6" y="782.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.05%)</title><rect x="704.9" y="787.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="707.9" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.26%)</title><rect x="705.5" y="787.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="708.5" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="708.5" y="787.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="711.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (6 samples, 0.31%)</title><rect x="709.1" y="787.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="712.1" y="798.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (3 samples, 0.15%)</title><rect x="709.1" y="771.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="712.1" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="710.9" y="771.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="713.9" y="782.0"></text>
</g>
<g>
<title>jni_GetEnv (2 samples, 0.10%)</title><rect x="711.6" y="771.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="714.6" y="782.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.05%)</title><rect x="712.8" y="803.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="715.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.05%)</title><rect x="713.4" y="803.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="716.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.10%)</title><rect x="714.0" y="851.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="717.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.05%)</title><rect x="715.2" y="867.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="718.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.05%)</title><rect x="715.8" y="883.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="718.8" y="894.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() [clone .plt] (1 samples, 0.05%)</title><rect x="716.4" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="719.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (1 samples, 0.05%)</title><rect x="717.0" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="720.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.05%)</title><rect x="717.6" y="931.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="720.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (2 samples, 0.10%)</title><rect x="718.2" y="931.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="721.2" y="942.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.05%)</title><rect x="718.2" y="915.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="721.2" y="926.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="718.2" y="899.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="721.2" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="718.2" y="883.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="721.2" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="718.2" y="867.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="721.2" y="878.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="718.2" y="851.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="721.2" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="718.9" y="915.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="721.9" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="718.9" y="899.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="721.9" y="910.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.10%)</title><rect x="719.5" y="963.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="722.5" y="974.0"></text>
</g>
<g>
<title>call_stub (8 samples, 0.41%)</title><rect x="720.7" y="963.0" width="4.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="723.7" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (12 samples, 0.62%)</title><rect x="725.5" y="963.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.05%)</title><rect x="732.8" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="735.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (108 samples, 5.56%)</title><rect x="733.4" y="963.0" width="65.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.4" y="974.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (108 samples, 5.56%)</title><rect x="733.4" y="947.0" width="65.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.4" y="958.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (2 samples, 0.10%)</title><rect x="734.7" y="931.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (2 samples, 0.10%)</title><rect x="734.7" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.7" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.05%)</title><rect x="735.3" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="738.3" y="910.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (104 samples, 5.36%)</title><rect x="735.9" y="931.0" width="63.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.9" y="942.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (11 samples, 0.57%)</title><rect x="735.9" y="915.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.9" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (93 samples, 4.79%)</title><rect x="742.6" y="915.0" width="56.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="745.6" y="926.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (90 samples, 4.64%)</title><rect x="744.4" y="899.0" width="54.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.4" y="910.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (76 samples, 3.92%)</title><rect x="750.5" y="883.0" width="46.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="753.5" y="894.0">Java..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="751.7" y="867.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="754.7" y="878.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.05%)</title><rect x="752.3" y="867.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="755.3" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.10%)</title><rect x="752.9" y="867.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="755.9" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.15%)</title><rect x="754.1" y="867.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="757.1" y="878.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.21%)</title><rect x="755.9" y="867.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="758.9" y="878.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (14 samples, 0.72%)</title><rect x="758.4" y="867.0" width="8.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="761.4" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.31%)</title><rect x="760.2" y="851.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="763.2" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.26%)</title><rect x="763.8" y="851.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="766.8" y="862.0"></text>
</g>
<g>
<title>jni_NewByteArray (36 samples, 1.85%)</title><rect x="766.9" y="867.0" width="21.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="769.9" y="878.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.05%)</title><rect x="770.5" y="851.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="773.5" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="771.1" y="851.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="774.1" y="862.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.10%)</title><rect x="772.3" y="851.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="775.3" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.10%)</title><rect x="773.6" y="851.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="776.6" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.31%)</title><rect x="774.8" y="851.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="777.8" y="862.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (17 samples, 0.88%)</title><rect x="778.4" y="851.0" width="10.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="781.4" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 0.77%)</title><rect x="779.6" y="835.0" width="9.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="782.6" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (13 samples, 0.67%)</title><rect x="780.9" y="819.0" width="7.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="783.9" y="830.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="783.9" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="786.9" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="784.5" y="803.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="787.5" y="814.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.05%)</title><rect x="784.5" y="787.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="787.5" y="798.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (4 samples, 0.21%)</title><rect x="785.1" y="803.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="788.1" y="814.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.10%)</title><rect x="787.5" y="803.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="790.5" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.62%)</title><rect x="788.8" y="867.0" width="7.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="791.8" y="878.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.05%)</title><rect x="792.4" y="851.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="795.4" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.21%)</title><rect x="793.0" y="851.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="796.0" y="862.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="795.5" y="851.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="798.5" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.05%)</title><rect x="796.1" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="799.1" y="878.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.15%)</title><rect x="796.7" y="883.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="799.7" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="798.5" y="883.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="801.5" y="894.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.05%)</title><rect x="799.1" y="963.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="802.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.toBytes (1 samples, 0.05%)</title><rect x="799.7" y="995.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Mapper.fromBytes (1 samples, 0.05%)</title><rect x="800.3" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="800.3" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.3" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="800.3" y="979.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="803.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getResponseWithTimestamp (6 samples, 0.31%)</title><rect x="800.9" y="1011.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.addTimestampHeaderToResponse (2 samples, 0.10%)</title><rect x="800.9" y="995.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.&lt;init&gt; (2 samples, 0.10%)</title><rect x="802.1" y="995.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.10%)</title><rect x="802.1" y="979.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.1" y="990.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.05%)</title><rect x="802.1" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.05%)</title><rect x="802.1" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.1" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="802.7" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="805.7" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="802.7" y="947.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="805.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/helpers/BodyWithTimestamp.getTimestamp (2 samples, 0.10%)</title><rect x="803.4" y="995.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.4" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="804.0" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.replicateGet (89 samples, 4.59%)</title><rect x="804.6" y="1027.0" width="54.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.6" y="1038.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.05%)</title><rect x="804.6" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetResponses (19 samples, 0.98%)</title><rect x="805.2" y="1011.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="808.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.05%)</title><rect x="805.2" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="805.2" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="805.2" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.mergeGetInternal (18 samples, 0.93%)</title><rect x="805.8" y="995.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.8" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (18 samples, 0.93%)</title><rect x="805.8" y="979.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.8" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (18 samples, 0.93%)</title><rect x="805.8" y="963.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.8" y="974.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (18 samples, 0.93%)</title><rect x="805.8" y="947.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.8" y="958.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (2 samples, 0.10%)</title><rect x="805.8" y="931.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.8" y="942.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$509/466414549.compare (2 samples, 0.10%)</title><rect x="805.8" y="915.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.8" y="926.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (2 samples, 0.10%)</title><rect x="805.8" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger$$Lambda$507/664401844.applyAsLong (2 samples, 0.10%)</title><rect x="805.8" y="883.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.lambda$mergeGetInternal$0 (2 samples, 0.10%)</title><rect x="805.8" y="867.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.8" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.10%)</title><rect x="805.8" y="851.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.10%)</title><rect x="805.8" y="835.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.8" y="846.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (16 samples, 0.82%)</title><rect x="807.0" y="931.0" width="9.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.0" y="942.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$509/466414549.compare (16 samples, 0.82%)</title><rect x="807.0" y="915.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.0" y="926.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (16 samples, 0.82%)</title><rect x="807.0" y="899.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger$$Lambda$507/664401844.applyAsLong (16 samples, 0.82%)</title><rect x="807.0" y="883.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/ResponseMerger.lambda$mergeGetInternal$0 (15 samples, 0.77%)</title><rect x="807.6" y="867.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (10 samples, 0.52%)</title><rect x="807.6" y="851.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (10 samples, 0.52%)</title><rect x="807.6" y="835.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.10%)</title><rect x="811.3" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="811.9" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.9" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.05%)</title><rect x="811.9" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.10%)</title><rect x="812.5" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.10%)</title><rect x="812.5" y="803.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (2 samples, 0.10%)</title><rect x="812.5" y="787.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.26%)</title><rect x="813.7" y="851.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="814.3" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.15%)</title><rect x="814.9" y="835.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="817.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="815.5" y="819.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getReplicaResponses (69 samples, 3.55%)</title><rect x="816.7" y="1011.0" width="42.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.7" y="1022.0">ru/..</text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (4 samples, 0.21%)</title><rect x="816.7" y="995.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.putAll (4 samples, 0.21%)</title><rect x="816.7" y="979.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (4 samples, 0.21%)</title><rect x="816.7" y="963.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="819.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (4 samples, 0.21%)</title><rect x="816.7" y="947.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.buildFromSorted (4 samples, 0.21%)</title><rect x="816.7" y="931.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.05%)</title><rect x="818.6" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.05%)</title><rect x="818.6" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.05%)</title><rect x="819.2" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.2" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="819.2" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="819.2" y="963.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.getResponsesFromReplicas (64 samples, 3.30%)</title><rect x="819.8" y="995.0" width="38.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.8" y="1006.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.allOf (1 samples, 0.05%)</title><rect x="819.8" y="979.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.andTree (1 samples, 0.05%)</title><rect x="819.8" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.05%)</title><rect x="819.8" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="819.8" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.join (8 samples, 0.41%)</title><rect x="820.4" y="979.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (8 samples, 0.41%)</title><rect x="820.4" y="963.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (8 samples, 0.41%)</title><rect x="820.4" y="947.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (8 samples, 0.41%)</title><rect x="820.4" y="931.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.41%)</title><rect x="820.4" y="915.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.05%)</title><rect x="820.4" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.36%)</title><rect x="821.0" y="899.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.36%)</title><rect x="821.0" y="883.0" width="4.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="824.0" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 0.36%)</title><rect x="821.0" y="867.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="824.0" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="822.8" y="851.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="825.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="822.8" y="835.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="825.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.21%)</title><rect x="822.8" y="819.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="825.8" y="830.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.21%)</title><rect x="822.8" y="803.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="825.8" y="814.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.21%)</title><rect x="822.8" y="787.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="825.8" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.15%)</title><rect x="822.8" y="771.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="825.8" y="782.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.15%)</title><rect x="822.8" y="755.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.8" y="766.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="822.8" y="739.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="825.8" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="823.4" y="723.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="826.4" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="824.6" y="771.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAcceptAsync (2 samples, 0.10%)</title><rect x="825.2" y="979.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.10%)</title><rect x="825.2" y="963.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="828.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.&lt;init&gt; (1 samples, 0.05%)</title><rect x="825.2" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="825.2" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="828.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (1 samples, 0.05%)</title><rect x="825.2" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="825.8" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="828.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.05%)</title><rect x="825.8" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="828.8" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.05%)</title><rect x="825.8" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.8" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.05%)</title><rect x="825.8" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.05%)</title><rect x="826.5" y="979.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.05%)</title><rect x="826.5" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.05%)</title><rect x="826.5" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="829.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.05%)</title><rect x="826.5" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="826.5" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (43 samples, 2.22%)</title><rect x="827.1" y="979.0" width="26.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="830.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (43 samples, 2.22%)</title><rect x="827.1" y="963.0" width="26.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.1" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (43 samples, 2.22%)</title><rect x="827.1" y="947.0" width="26.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.1" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (43 samples, 2.22%)</title><rect x="827.1" y="931.0" width="26.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.1" y="942.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="827.1" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="827.1" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$180/539612352.get$Lambda (1 samples, 0.05%)</title><rect x="827.1" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (20 samples, 1.03%)</title><rect x="827.7" y="915.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="828.3" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="828.3" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.05%)</title><rect x="828.9" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="828.9" y="883.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.05%)</title><rect x="828.9" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (15 samples, 0.77%)</title><rect x="829.5" y="899.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.5" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (15 samples, 0.77%)</title><rect x="829.5" y="883.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.5" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.77%)</title><rect x="829.5" y="867.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.5" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (12 samples, 0.62%)</title><rect x="829.5" y="851.0" width="7.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="832.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.15%)</title><rect x="830.7" y="835.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="833.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (3 samples, 0.15%)</title><rect x="830.7" y="819.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="833.7" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="832.5" y="835.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="835.5" y="846.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.05%)</title><rect x="832.5" y="819.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.5" y="830.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.05%)</title><rect x="833.1" y="835.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.1" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="833.8" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="836.8" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="833.8" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.8" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="833.8" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="836.8" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.21%)</title><rect x="834.4" y="835.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="837.4" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="836.2" y="819.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="839.2" y="830.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.05%)</title><rect x="836.2" y="803.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="839.2" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.15%)</title><rect x="836.8" y="851.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.8" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.15%)</title><rect x="836.8" y="835.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="836.8" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="836.8" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.8" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.05%)</title><rect x="836.8" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="839.8" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="836.8" y="771.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="839.8" y="782.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="836.8" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="839.8" y="766.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="836.8" y="739.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="839.8" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="836.8" y="723.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.8" y="734.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="836.8" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="839.8" y="718.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.05%)</title><rect x="836.8" y="691.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="839.8" y="702.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.10%)</title><rect x="837.4" y="819.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.4" y="830.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.05%)</title><rect x="837.4" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.4" y="814.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="837.4" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="840.4" y="798.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="838.0" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="838.0" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="838.0" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.10%)</title><rect x="838.6" y="899.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1 samples, 0.05%)</title><rect x="839.8" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1 samples, 0.05%)</title><rect x="839.8" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.05%)</title><rect x="839.8" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.8" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.05%)</title><rect x="839.8" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.05%)</title><rect x="839.8" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.05%)</title><rect x="839.8" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.8" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="839.8" y="819.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="842.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="839.8" y="803.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="842.8" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="839.8" y="787.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="842.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="839.8" y="771.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="842.8" y="782.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="839.8" y="755.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="842.8" y="766.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.05%)</title><rect x="839.8" y="739.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="842.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (21 samples, 1.08%)</title><rect x="840.4" y="915.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (20 samples, 1.03%)</title><rect x="840.4" y="899.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 1.03%)</title><rect x="840.4" y="883.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="840.4" y="867.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="840.4" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="840.4" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.05%)</title><rect x="840.4" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.05%)</title><rect x="840.4" y="803.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.05%)</title><rect x="840.4" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (19 samples, 0.98%)</title><rect x="841.0" y="867.0" width="11.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (19 samples, 0.98%)</title><rect x="841.0" y="851.0" width="11.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (18 samples, 0.93%)</title><rect x="841.0" y="835.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.93%)</title><rect x="841.0" y="819.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.93%)</title><rect x="841.0" y="803.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.0" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="841.0" y="787.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="844.0" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="841.7" y="771.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="844.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.77%)</title><rect x="842.3" y="787.0" width="9.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="845.3" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.77%)</title><rect x="842.3" y="771.0" width="9.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="845.3" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.77%)</title><rect x="842.3" y="755.0" width="9.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="845.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.62%)</title><rect x="843.5" y="739.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="846.5" y="750.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.57%)</title><rect x="844.1" y="723.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="847.1" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="844.7" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="847.7" y="718.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.46%)</title><rect x="845.3" y="707.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.3" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="845.3" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.41%)</title><rect x="845.9" y="691.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="848.9" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.41%)</title><rect x="845.9" y="675.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.41%)</title><rect x="845.9" y="659.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.9" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="850.8" y="739.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="853.8" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="850.8" y="723.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="853.8" y="734.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.05%)</title><rect x="850.8" y="707.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.8" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="851.4" y="787.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="854.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.05%)</title><rect x="852.0" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (1 samples, 0.05%)</title><rect x="852.6" y="899.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="852.6" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="852.6" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="852.6" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="852.6" y="835.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (9 samples, 0.46%)</title><rect x="853.2" y="979.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="853.2" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740547233.invoke (1 samples, 0.05%)</title><rect x="853.2" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.2" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/626025582.invoke (1 samples, 0.05%)</title><rect x="853.2" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.2" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="853.2" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.2" y="926.0"></text>
</g>
<g>
<title>java/net/URI.create (5 samples, 0.26%)</title><rect x="853.8" y="963.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.8" y="974.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (5 samples, 0.26%)</title><rect x="853.8" y="947.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.8" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (5 samples, 0.26%)</title><rect x="853.8" y="931.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.8" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (3 samples, 0.15%)</title><rect x="853.8" y="915.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="856.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.05%)</title><rect x="854.4" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.4" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="854.4" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.4" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1 samples, 0.05%)</title><rect x="855.0" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.0" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.05%)</title><rect x="855.0" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.0" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.05%)</title><rect x="855.0" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="855.0" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.10%)</title><rect x="855.6" y="915.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="856.2" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="856.2" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="856.2" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="859.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.timeout (1 samples, 0.05%)</title><rect x="856.9" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.9" y="974.0"></text>
</g>
<g>
<title>java/time/Duration.isNegative (1 samples, 0.05%)</title><rect x="856.9" y="947.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.05%)</title><rect x="857.5" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.05%)</title><rect x="857.5" y="947.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.05%)</title><rect x="857.5" y="931.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="857.5" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="857.5" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.5" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (1 samples, 0.05%)</title><rect x="858.1" y="963.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="858.1" y="947.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.routeRequestToRemoteNode (66 samples, 3.40%)</title><rect x="858.7" y="1027.0" width="40.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="1038.0">ru/..</text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.05%)</title><rect x="858.7" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Integer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="858.7" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (1 samples, 0.05%)</title><rect x="858.7" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="858.7" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="974.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="858.7" y="947.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="861.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="859.3" y="1011.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="859.3" y="995.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="859.9" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (1 samples, 0.05%)</title><rect x="859.9" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.send (54 samples, 2.78%)</title><rect x="860.5" y="1011.0" width="32.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.5" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.send (54 samples, 2.78%)</title><rect x="860.5" y="995.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.5" y="1006.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (5 samples, 0.26%)</title><rect x="860.5" y="979.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (5 samples, 0.26%)</title><rect x="860.5" y="963.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.&lt;init&gt; (1 samples, 0.05%)</title><rect x="860.5" y="947.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (4 samples, 0.21%)</title><rect x="861.1" y="947.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (4 samples, 0.21%)</title><rect x="861.1" y="931.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.21%)</title><rect x="861.1" y="915.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="864.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.21%)</title><rect x="861.1" y="899.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.1" y="910.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="861.1" y="883.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="864.1" y="894.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.05%)</title><rect x="861.1" y="867.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="864.1" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="861.1" y="851.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="861.1" y="835.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.1" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="861.1" y="819.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.1" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="861.1" y="803.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="864.1" y="814.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="861.1" y="787.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="864.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.15%)</title><rect x="861.7" y="883.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="864.7" y="894.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="861.7" y="867.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="864.7" y="878.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.10%)</title><rect x="862.3" y="867.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="865.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="862.3" y="851.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="862.3" y="835.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="862.3" y="819.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="865.3" y="830.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="862.3" y="803.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="865.3" y="814.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.10%)</title><rect x="862.3" y="787.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.3" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="862.3" y="771.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.3" y="782.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="862.3" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="865.3" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="862.9" y="771.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (49 samples, 2.52%)</title><rect x="863.5" y="979.0" width="29.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.5" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.05%)</title><rect x="863.5" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.05%)</title><rect x="863.5" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (11 samples, 0.57%)</title><rect x="864.1" y="963.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.1" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.05%)</title><rect x="864.1" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.1" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.05%)</title><rect x="864.1" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="867.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.05%)</title><rect x="864.1" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="867.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="864.1" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.1" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$66/668210649.get (1 samples, 0.05%)</title><rect x="864.1" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.1" y="894.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.&lt;init&gt; (1 samples, 0.05%)</title><rect x="864.1" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (1 samples, 0.05%)</title><rect x="864.1" y="851.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="864.1" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (10 samples, 0.52%)</title><rect x="864.8" y="947.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.8" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (10 samples, 0.52%)</title><rect x="864.8" y="931.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="867.8" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.52%)</title><rect x="864.8" y="915.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.8" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.36%)</title><rect x="865.4" y="899.0" width="4.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="868.4" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="866.0" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.0" y="894.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.05%)</title><rect x="866.0" y="867.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.0" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.15%)</title><rect x="866.6" y="883.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="869.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.15%)</title><rect x="866.6" y="867.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="869.6" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.10%)</title><rect x="867.2" y="851.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="870.2" y="862.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.10%)</title><rect x="868.4" y="883.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="871.4" y="894.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="868.4" y="867.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="871.4" y="878.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.05%)</title><rect x="868.4" y="851.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="871.4" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="869.0" y="867.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="872.0" y="878.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="869.0" y="851.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="872.0" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.10%)</title><rect x="869.6" y="899.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.6" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.10%)</title><rect x="869.6" y="883.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="869.6" y="867.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.6" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="869.6" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.05%)</title><rect x="870.2" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.2" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="870.2" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3 samples, 0.15%)</title><rect x="870.8" y="963.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2 samples, 0.10%)</title><rect x="871.4" y="947.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.10%)</title><rect x="871.4" y="931.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.4" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.10%)</title><rect x="871.4" y="915.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.4" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.10%)</title><rect x="871.4" y="899.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (34 samples, 1.75%)</title><rect x="872.7" y="963.0" width="20.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (34 samples, 1.75%)</title><rect x="872.7" y="947.0" width="20.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 1.75%)</title><rect x="872.7" y="931.0" width="20.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (33 samples, 1.70%)</title><rect x="873.3" y="915.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 1.65%)</title><rect x="873.9" y="899.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (32 samples, 1.65%)</title><rect x="873.9" y="883.0" width="19.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$157/1151622769.apply (31 samples, 1.60%)</title><rect x="874.5" y="867.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="877.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (31 samples, 1.60%)</title><rect x="874.5" y="851.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (31 samples, 1.60%)</title><rect x="874.5" y="835.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="874.5" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (23 samples, 1.18%)</title><rect x="875.1" y="819.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (23 samples, 1.18%)</title><rect x="875.1" y="803.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (23 samples, 1.18%)</title><rect x="875.1" y="787.0" width="14.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7 samples, 0.36%)</title><rect x="875.1" y="771.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7 samples, 0.36%)</title><rect x="875.1" y="755.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.36%)</title><rect x="875.1" y="739.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$289/1830081149.apply (7 samples, 0.36%)</title><rect x="875.1" y="723.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (7 samples, 0.36%)</title><rect x="875.1" y="707.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.36%)</title><rect x="875.1" y="691.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="878.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$175/1058858253.apply (7 samples, 0.36%)</title><rect x="875.1" y="675.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="878.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (7 samples, 0.36%)</title><rect x="875.1" y="659.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (7 samples, 0.36%)</title><rect x="875.1" y="643.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="875.1" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="875.1" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$343/476350523.get$Lambda (1 samples, 0.05%)</title><rect x="875.1" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="875.1" y="579.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="878.1" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="875.1" y="563.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="878.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="875.1" y="547.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="878.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="875.1" y="531.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="878.1" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="875.1" y="515.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="878.1" y="526.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="875.1" y="499.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="878.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.31%)</title><rect x="875.7" y="627.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.31%)</title><rect x="875.7" y="611.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1743297770.apply (6 samples, 0.31%)</title><rect x="875.7" y="595.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (5 samples, 0.26%)</title><rect x="876.3" y="579.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (1 samples, 0.05%)</title><rect x="876.3" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="879.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.05%)</title><rect x="876.3" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="879.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.05%)</title><rect x="876.3" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="879.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.05%)</title><rect x="876.3" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.05%)</title><rect x="876.3" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="879.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="876.3" y="483.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="876.3" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="879.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="876.3" y="451.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="876.3" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="876.3" y="419.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="879.3" y="430.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.05%)</title><rect x="876.3" y="403.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="879.3" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="876.3" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.3" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="876.3" y="371.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.3" y="382.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.05%)</title><rect x="876.3" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="879.3" y="366.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.05%)</title><rect x="876.3" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="879.3" y="350.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.05%)</title><rect x="876.3" y="323.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.3" y="334.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="876.3" y="307.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="879.3" y="318.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="876.3" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (4 samples, 0.21%)</title><rect x="876.9" y="563.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (3 samples, 0.15%)</title><rect x="876.9" y="547.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2 samples, 0.10%)</title><rect x="877.5" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="880.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="877.5" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.5" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="877.5" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.5" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="877.5" y="483.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="880.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="877.5" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.5" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.05%)</title><rect x="878.1" y="515.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.1" y="499.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.05%)</title><rect x="878.1" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.1" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="878.1" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.1" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.05%)</title><rect x="878.1" y="451.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.05%)</title><rect x="878.7" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.05%)</title><rect x="878.7" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (1 samples, 0.05%)</title><rect x="878.7" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="881.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="878.7" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.05%)</title><rect x="878.7" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.05%)</title><rect x="878.7" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.05%)</title><rect x="878.7" y="451.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (16 samples, 0.82%)</title><rect x="879.3" y="771.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="882.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (16 samples, 0.82%)</title><rect x="879.3" y="755.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (15 samples, 0.77%)</title><rect x="879.3" y="739.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (15 samples, 0.77%)</title><rect x="879.3" y="723.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.77%)</title><rect x="879.3" y="707.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$194/751876893.apply (15 samples, 0.77%)</title><rect x="879.3" y="691.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="882.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (15 samples, 0.77%)</title><rect x="879.3" y="675.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (15 samples, 0.77%)</title><rect x="879.3" y="659.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (11 samples, 0.57%)</title><rect x="879.3" y="643.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (11 samples, 0.57%)</title><rect x="879.3" y="627.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (11 samples, 0.57%)</title><rect x="879.3" y="611.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$279/1157553113.apply (11 samples, 0.57%)</title><rect x="879.3" y="595.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="882.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$2 (11 samples, 0.57%)</title><rect x="879.3" y="579.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="882.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (11 samples, 0.57%)</title><rect x="879.3" y="563.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (11 samples, 0.57%)</title><rect x="879.3" y="547.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (8 samples, 0.41%)</title><rect x="879.3" y="531.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="882.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (7 samples, 0.36%)</title><rect x="879.3" y="515.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (7 samples, 0.36%)</title><rect x="879.3" y="499.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="882.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (7 samples, 0.36%)</title><rect x="879.3" y="483.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.3" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (7 samples, 0.36%)</title><rect x="879.3" y="467.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.3" y="478.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.31%)</title><rect x="880.0" y="451.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="883.0" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="880.6" y="435.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="883.6" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.267] (1 samples, 0.05%)</title><rect x="880.6" y="419.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="883.6" y="430.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.10%)</title><rect x="881.2" y="435.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="884.2" y="446.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="881.2" y="419.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="884.2" y="430.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="881.2" y="403.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="884.2" y="414.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="881.2" y="387.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="884.2" y="398.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.05%)</title><rect x="881.8" y="419.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="884.8" y="430.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.10%)</title><rect x="882.4" y="435.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="885.4" y="446.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.05%)</title><rect x="883.0" y="419.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="886.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (1 samples, 0.05%)</title><rect x="883.6" y="515.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (1 samples, 0.05%)</title><rect x="883.6" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.6" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (1 samples, 0.05%)</title><rect x="883.6" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.byteOffset (1 samples, 0.05%)</title><rect x="883.6" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.15%)</title><rect x="884.2" y="531.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.15%)</title><rect x="884.2" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="884.8" y="499.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.8" y="510.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="884.8" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="884.8" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (4 samples, 0.21%)</title><rect x="886.0" y="643.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (4 samples, 0.21%)</title><rect x="886.0" y="627.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (1 samples, 0.05%)</title><rect x="886.0" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.0" y="622.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.05%)</title><rect x="886.0" y="595.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.05%)</title><rect x="886.6" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1 samples, 0.05%)</title><rect x="886.6" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.05%)</title><rect x="886.6" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="886.6" y="563.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="886.6" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.05%)</title><rect x="886.6" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.6" y="542.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.05%)</title><rect x="886.6" y="515.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.05%)</title><rect x="886.6" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (2 samples, 0.10%)</title><rect x="887.2" y="611.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.2" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.10%)</title><rect x="887.2" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.2" y="606.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (1 samples, 0.05%)</title><rect x="887.2" y="579.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="890.2" y="590.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.05%)</title><rect x="887.2" y="563.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="890.2" y="574.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="887.2" y="547.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="890.2" y="558.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.05%)</title><rect x="887.2" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="890.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$208/1617772982.run (1 samples, 0.05%)</title><rect x="887.9" y="579.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (1 samples, 0.05%)</title><rect x="887.9" y="563.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.9" y="574.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (1 samples, 0.05%)</title><rect x="887.9" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.9" y="558.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (1 samples, 0.05%)</title><rect x="887.9" y="531.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.9" y="542.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.05%)</title><rect x="887.9" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.9" y="526.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.05%)</title><rect x="887.9" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="887.9" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (1 samples, 0.05%)</title><rect x="888.5" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="888.5" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="891.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="888.5" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="891.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="888.5" y="691.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (6 samples, 0.31%)</title><rect x="889.1" y="819.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6 samples, 0.31%)</title><rect x="889.1" y="803.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.31%)</title><rect x="889.1" y="787.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.31%)</title><rect x="889.1" y="771.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.26%)</title><rect x="889.7" y="755.0" width="3.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="892.7" y="766.0"></text>
</g>
<g>
<title>__GI_write (5 samples, 0.26%)</title><rect x="889.7" y="739.0" width="3.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="892.7" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.26%)</title><rect x="889.7" y="723.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.26%)</title><rect x="889.7" y="707.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="892.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.26%)</title><rect x="889.7" y="691.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="892.7" y="702.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.26%)</title><rect x="889.7" y="675.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.7" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.10%)</title><rect x="889.7" y="659.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.7" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="889.7" y="643.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="892.7" y="654.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="890.3" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="893.3" y="638.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.15%)</title><rect x="890.9" y="659.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.9" y="670.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.10%)</title><rect x="891.5" y="643.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="894.5" y="654.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.10%)</title><rect x="891.5" y="627.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.5" y="638.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.10%)</title><rect x="891.5" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="894.5" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.10%)</title><rect x="891.5" y="595.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.5" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="891.5" y="579.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="894.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="891.5" y="563.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="894.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (1 samples, 0.05%)</title><rect x="892.7" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="895.7" y="830.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.05%)</title><rect x="892.7" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="895.7" y="814.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.05%)</title><rect x="892.7" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getJavaRequest (9 samples, 0.46%)</title><rect x="893.3" y="1011.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.contains (1 samples, 0.05%)</title><rect x="893.3" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.15%)</title><rect x="893.9" y="995.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740547233.invoke (2 samples, 0.10%)</title><rect x="893.9" y="979.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/626025582.invoke (2 samples, 0.10%)</title><rect x="893.9" y="963.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.9" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="893.9" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.05%)</title><rect x="893.9" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.9" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.05%)</title><rect x="893.9" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (1 samples, 0.05%)</title><rect x="894.5" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="894.5" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="897.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="894.5" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.05%)</title><rect x="894.5" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="897.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/917819120.invoke (1 samples, 0.05%)</title><rect x="895.2" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="898.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="895.2" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="898.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.05%)</title><rect x="895.2" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.checkOverflow (1 samples, 0.05%)</title><rect x="895.2" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.2" y="942.0"></text>
</g>
<g>
<title>java/net/URI.create (3 samples, 0.15%)</title><rect x="895.8" y="995.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="898.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (3 samples, 0.15%)</title><rect x="895.8" y="979.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (3 samples, 0.15%)</title><rect x="895.8" y="963.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.8" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.05%)</title><rect x="895.8" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="895.8" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.05%)</title><rect x="895.8" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.05%)</title><rect x="895.8" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.8" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (2 samples, 0.10%)</title><rect x="896.4" y="947.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.4" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.05%)</title><rect x="896.4" y="931.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="896.4" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="899.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="896.4" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.4" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="896.4" y="883.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="899.4" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (1 samples, 0.05%)</title><rect x="897.0" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (1 samples, 0.05%)</title><rect x="897.0" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="897.0" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="897.0" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.05%)</title><rect x="897.0" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.05%)</title><rect x="897.6" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.05%)</title><rect x="897.6" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.05%)</title><rect x="897.6" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="897.6" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="897.6" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getQueryString (1 samples, 0.05%)</title><rect x="898.2" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="898.2" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="898.2" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="901.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="898.2" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.2" y="958.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="898.2" y="931.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="901.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (147 samples, 7.57%)</title><rect x="898.8" y="1171.0" width="89.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.8" y="1182.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (147 samples, 7.57%)</title><rect x="898.8" y="1155.0" width="89.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="901.8" y="1166.0">java/util/..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (3 samples, 0.15%)</title><rect x="901.2" y="1139.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.weakCompareAndSet (3 samples, 0.15%)</title><rect x="901.2" y="1123.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (80 samples, 4.12%)</title><rect x="903.1" y="1139.0" width="48.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.1" y="1150.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (2 samples, 0.10%)</title><rect x="904.9" y="1123.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (2 samples, 0.10%)</title><rect x="904.9" y="1107.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.9" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.10%)</title><rect x="904.9" y="1091.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="907.9" y="1102.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="905.5" y="1075.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="908.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.05%)</title><rect x="906.1" y="1123.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.05%)</title><rect x="906.1" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="909.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (72 samples, 3.71%)</title><rect x="906.7" y="1123.0" width="43.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.7" y="1134.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (1 samples, 0.05%)</title><rect x="906.7" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="909.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.05%)</title><rect x="906.7" y="1091.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.setOpaque (1 samples, 0.05%)</title><rect x="906.7" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.05%)</title><rect x="907.3" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (70 samples, 3.61%)</title><rect x="907.9" y="1107.0" width="42.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.9" y="1118.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (70 samples, 3.61%)</title><rect x="907.9" y="1091.0" width="42.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.9" y="1102.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (15 samples, 0.77%)</title><rect x="908.5" y="1075.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (13 samples, 0.67%)</title><rect x="909.1" y="1059.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.67%)</title><rect x="909.1" y="1043.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (13 samples, 0.67%)</title><rect x="909.1" y="1027.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.57%)</title><rect x="910.4" y="1011.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.57%)</title><rect x="910.4" y="995.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.4" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="910.4" y="979.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="913.4" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="910.4" y="963.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="913.4" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.46%)</title><rect x="911.0" y="979.0" width="5.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="914.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.41%)</title><rect x="911.6" y="963.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="914.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.41%)</title><rect x="911.6" y="947.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="914.6" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.41%)</title><rect x="911.6" y="931.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="914.6" y="942.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.36%)</title><rect x="911.6" y="915.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="914.6" y="926.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.36%)</title><rect x="911.6" y="899.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.6" y="910.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.36%)</title><rect x="911.6" y="883.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.6" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.36%)</title><rect x="911.6" y="867.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.6" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.36%)</title><rect x="911.6" y="851.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.6" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="915.8" y="915.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="918.8" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="916.4" y="979.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="919.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$188/1091663911.accept (1 samples, 0.05%)</title><rect x="917.0" y="1059.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.05%)</title><rect x="917.0" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (21 samples, 1.08%)</title><rect x="917.6" y="1075.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (16 samples, 0.82%)</title><rect x="917.6" y="1059.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.82%)</title><rect x="917.6" y="1043.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (16 samples, 0.82%)</title><rect x="917.6" y="1027.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (16 samples, 0.82%)</title><rect x="917.6" y="1011.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (16 samples, 0.82%)</title><rect x="917.6" y="995.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (16 samples, 0.82%)</title><rect x="917.6" y="979.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (16 samples, 0.82%)</title><rect x="917.6" y="963.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (16 samples, 0.82%)</title><rect x="917.6" y="947.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.05%)</title><rect x="917.6" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.setRelease (1 samples, 0.05%)</title><rect x="917.6" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.77%)</title><rect x="918.3" y="931.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.77%)</title><rect x="918.3" y="915.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="921.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.77%)</title><rect x="918.3" y="899.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="921.3" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="918.3" y="883.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="921.3" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="918.3" y="867.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="921.3" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.72%)</title><rect x="918.9" y="883.0" width="8.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="921.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.72%)</title><rect x="918.9" y="867.0" width="8.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="921.9" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.72%)</title><rect x="918.9" y="851.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="921.9" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.72%)</title><rect x="918.9" y="835.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.9" y="846.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.72%)</title><rect x="918.9" y="819.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.9" y="830.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.72%)</title><rect x="918.9" y="803.0" width="8.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="921.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="919.5" y="787.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="922.5" y="798.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.10%)</title><rect x="920.1" y="787.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="923.1" y="798.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="920.7" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="923.7" y="782.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.52%)</title><rect x="921.3" y="787.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="924.3" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.52%)</title><rect x="921.3" y="771.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.3" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.52%)</title><rect x="921.3" y="755.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="924.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$184/687509125.apply (5 samples, 0.26%)</title><rect x="927.4" y="1059.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.getOneNioResponse (5 samples, 0.26%)</title><rect x="927.4" y="1043.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.05%)</title><rect x="927.4" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="930.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.05%)</title><rect x="927.4" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.4" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="927.4" y="995.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="930.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="928.0" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="928.0" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="931.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.get$Lambda (1 samples, 0.05%)</title><rect x="928.0" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="931.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="928.0" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="931.0" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="928.0" y="963.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="931.0" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="928.0" y="947.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="931.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="928.0" y="931.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="931.0" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="928.0" y="915.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="931.0" y="926.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="928.0" y="899.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="931.0" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="928.0" y="883.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="931.0" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.15%)</title><rect x="928.6" y="1027.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="931.6" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.15%)</title><rect x="928.6" y="1011.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="931.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util$$Lambda$491/1885951602.accept (3 samples, 0.15%)</title><rect x="928.6" y="995.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/Util.lambda$getOneNioResponse$0 (3 samples, 0.15%)</title><rect x="928.6" y="979.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.15%)</title><rect x="928.6" y="963.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="931.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.15%)</title><rect x="928.6" y="947.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="931.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/149047107.invoke (3 samples, 0.15%)</title><rect x="928.6" y="931.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.10%)</title><rect x="928.6" y="915.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.05%)</title><rect x="929.2" y="899.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="932.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.05%)</title><rect x="929.2" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.2" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="929.2" y="867.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="932.2" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="929.2" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="932.2" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="929.2" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="932.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="929.2" y="819.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="932.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/666988784.invoke (1 samples, 0.05%)</title><rect x="929.8" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.8" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="929.8" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.05%)</title><rect x="929.8" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.05%)</title><rect x="929.8" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.57%)</title><rect x="930.4" y="1075.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.52%)</title><rect x="930.4" y="1059.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="933.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.52%)</title><rect x="930.4" y="1043.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniAccept.tryFire (10 samples, 0.52%)</title><rect x="930.4" y="1027.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.52%)</title><rect x="930.4" y="1011.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.52%)</title><rect x="930.4" y="995.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (10 samples, 0.52%)</title><rect x="930.4" y="979.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.52%)</title><rect x="930.4" y="963.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="933.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (10 samples, 0.52%)</title><rect x="930.4" y="947.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.46%)</title><rect x="931.0" y="931.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.46%)</title><rect x="931.0" y="915.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.0" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="931.0" y="899.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="934.0" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="931.6" y="899.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="934.6" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="931.6" y="883.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="934.6" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.36%)</title><rect x="932.2" y="899.0" width="4.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="935.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.36%)</title><rect x="932.2" y="883.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.36%)</title><rect x="932.2" y="867.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.36%)</title><rect x="932.2" y="851.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="935.2" y="862.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.36%)</title><rect x="932.2" y="835.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.2" y="846.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.36%)</title><rect x="932.2" y="819.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.2" y="830.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.36%)</title><rect x="932.2" y="803.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.2" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.36%)</title><rect x="932.2" y="787.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.2" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.36%)</title><rect x="932.2" y="771.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.05%)</title><rect x="936.5" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (22 samples, 1.13%)</title><rect x="937.1" y="1075.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="940.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (18 samples, 0.93%)</title><rect x="938.3" y="1059.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.93%)</title><rect x="938.3" y="1043.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (18 samples, 0.93%)</title><rect x="938.3" y="1027.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="941.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (18 samples, 0.93%)</title><rect x="938.3" y="1011.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (18 samples, 0.93%)</title><rect x="938.3" y="995.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (18 samples, 0.93%)</title><rect x="938.3" y="979.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (18 samples, 0.93%)</title><rect x="938.3" y="963.0" width="11.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (18 samples, 0.93%)</title><rect x="938.3" y="947.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="941.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.93%)</title><rect x="938.3" y="931.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.93%)</title><rect x="938.3" y="915.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.3" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.05%)</title><rect x="938.3" y="899.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="941.3" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.15%)</title><rect x="938.9" y="899.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="941.9" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="938.9" y="883.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="941.9" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="939.5" y="883.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="942.5" y="894.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.05%)</title><rect x="940.1" y="883.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="943.1" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.72%)</title><rect x="940.7" y="899.0" width="8.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="943.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.72%)</title><rect x="940.7" y="883.0" width="8.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.72%)</title><rect x="940.7" y="867.0" width="8.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.72%)</title><rect x="940.7" y="851.0" width="8.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="943.7" y="862.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.72%)</title><rect x="940.7" y="835.0" width="8.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="943.7" y="846.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.72%)</title><rect x="940.7" y="819.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="943.7" y="830.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.62%)</title><rect x="942.0" y="803.0" width="7.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.0" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.62%)</title><rect x="942.0" y="787.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.0" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.62%)</title><rect x="942.0" y="771.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="945.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="949.3" y="1059.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="952.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="949.9" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="952.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="949.9" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$182/1095779376.accept (1 samples, 0.05%)</title><rect x="949.9" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.10%)</title><rect x="950.5" y="1123.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="950.5" y="1107.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.10%)</title><rect x="950.5" y="1091.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.5" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="950.5" y="1075.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="953.5" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="950.5" y="1059.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="953.5" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="951.1" y="1075.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="954.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 1.80%)</title><rect x="951.7" y="1139.0" width="21.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.7" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.05%)</title><rect x="951.7" y="1123.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="954.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 1.75%)</title><rect x="952.3" y="1123.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.31%)</title><rect x="952.3" y="1107.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="955.3" y="1118.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="952.3" y="1091.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="955.3" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.15%)</title><rect x="952.9" y="1091.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="955.9" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="953.5" y="1075.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="956.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="953.5" y="1059.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="956.5" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="954.1" y="1043.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="954.1" y="1027.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="957.1" y="1038.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="954.1" y="1011.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.1" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="954.7" y="1091.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="957.7" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="955.3" y="1091.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="958.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.44%)</title><rect x="955.9" y="1107.0" width="17.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="958.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="955.9" y="1091.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="958.9" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (27 samples, 1.39%)</title><rect x="956.6" y="1091.0" width="16.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="959.6" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 1.03%)</title><rect x="960.8" y="1075.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.8" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 1.03%)</title><rect x="960.8" y="1059.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.8" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.67%)</title><rect x="962.0" y="1043.0" width="7.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="965.0" y="1054.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.57%)</title><rect x="963.2" y="1027.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.2" y="1038.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.52%)</title><rect x="963.8" y="1011.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="966.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.46%)</title><rect x="964.5" y="995.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.5" y="1006.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.10%)</title><rect x="966.3" y="979.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="969.3" y="990.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.21%)</title><rect x="967.5" y="979.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="970.5" y="990.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="968.1" y="963.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="971.1" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="969.3" y="947.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="972.3" y="958.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (5 samples, 0.26%)</title><rect x="969.9" y="1043.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="972.9" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.15%)</title><rect x="971.1" y="1027.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="974.1" y="1038.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="972.4" y="1011.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (25 samples, 1.29%)</title><rect x="973.0" y="1139.0" width="15.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 1.29%)</title><rect x="973.0" y="1123.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.0" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.21%)</title><rect x="973.0" y="1107.0" width="2.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="976.0" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.21%)</title><rect x="973.0" y="1091.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="976.0" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="974.2" y="1075.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="977.2" y="1086.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="974.8" y="1075.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="977.8" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="974.8" y="1059.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="977.8" y="1070.0"></text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.05%)</title><rect x="975.4" y="1107.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="978.4" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (19 samples, 0.98%)</title><rect x="976.0" y="1107.0" width="11.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="979.0" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.82%)</title><rect x="977.8" y="1091.0" width="9.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="980.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.82%)</title><rect x="977.8" y="1075.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="980.8" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.77%)</title><rect x="978.4" y="1059.0" width="9.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="981.4" y="1070.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="978.4" y="1043.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.4" y="1054.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.62%)</title><rect x="979.0" y="1043.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="982.0" y="1054.0"></text>
</g>
<g>
<title>futex_wait (9 samples, 0.46%)</title><rect x="980.9" y="1027.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.9" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.31%)</title><rect x="982.7" y="1011.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="985.7" y="1022.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (2 samples, 0.10%)</title><rect x="983.3" y="995.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="986.3" y="1006.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.10%)</title><rect x="983.3" y="979.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="986.3" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="983.3" y="963.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="986.3" y="974.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.15%)</title><rect x="984.5" y="995.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.5" y="1006.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="984.5" y="979.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.5" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="985.1" y="963.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.1" y="974.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.10%)</title><rect x="986.3" y="1043.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="989.3" y="1054.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="986.3" y="1027.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="989.3" y="1038.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.05%)</title><rect x="987.0" y="1027.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="990.0" y="1038.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="987.6" y="1107.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="990.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="988.2" y="1171.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.05%)</title><rect x="988.2" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="988.8" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeAccess (1 samples, 0.05%)</title><rect x="988.8" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (213 samples, 10.97%)</title><rect x="989.4" y="1171.0" width="129.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="992.4" y="1182.0">jdk/internal/net..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="994.9" y="1155.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="997.9" y="1166.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="994.9" y="1139.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="997.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.05%)</title><rect x="995.5" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.10%)</title><rect x="996.1" y="1155.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.10%)</title><rect x="996.1" y="1139.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/746362896.accept (1 samples, 0.05%)</title><rect x="996.7" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="999.7" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="997.3" y="1155.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="997.3" y="1139.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.10%)</title><rect x="997.3" y="1123.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.3" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.10%)</title><rect x="997.3" y="1107.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.3" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="997.9" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1000.9" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.10%)</title><rect x="998.5" y="1155.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.5" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (43 samples, 2.22%)</title><rect x="999.7" y="1155.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.7" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$357/746362896.accept (43 samples, 2.22%)</title><rect x="999.7" y="1139.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.7" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (43 samples, 2.22%)</title><rect x="999.7" y="1123.0" width="26.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.7" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (43 samples, 2.22%)</title><rect x="999.7" y="1107.0" width="26.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1002.7" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (43 samples, 2.22%)</title><rect x="999.7" y="1091.0" width="26.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1002.7" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (43 samples, 2.22%)</title><rect x="999.7" y="1075.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.7" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.10%)</title><rect x="999.7" y="1059.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1002.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="1000.3" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.05%)</title><rect x="1000.3" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="1000.3" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1003.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="1000.3" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="1000.3" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (41 samples, 2.11%)</title><rect x="1000.9" y="1059.0" width="25.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.9" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (41 samples, 2.11%)</title><rect x="1000.9" y="1043.0" width="25.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.9" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (41 samples, 2.11%)</title><rect x="1000.9" y="1027.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.9" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="1000.9" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="1000.9" y="995.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="1000.9" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 2.06%)</title><rect x="1001.5" y="1011.0" width="24.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1004.5" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 2.06%)</title><rect x="1001.5" y="995.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1004.5" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (39 samples, 2.01%)</title><rect x="1001.5" y="979.0" width="23.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.5" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 2.01%)</title><rect x="1001.5" y="963.0" width="23.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1004.5" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.62%)</title><rect x="1002.1" y="947.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1005.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.62%)</title><rect x="1002.1" y="931.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (12 samples, 0.62%)</title><rect x="1002.1" y="915.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.62%)</title><rect x="1002.1" y="899.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.62%)</title><rect x="1002.1" y="883.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.62%)</title><rect x="1002.1" y="867.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.62%)</title><rect x="1002.1" y="851.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (12 samples, 0.62%)</title><rect x="1002.1" y="835.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (12 samples, 0.62%)</title><rect x="1002.1" y="819.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (11 samples, 0.57%)</title><rect x="1002.1" y="803.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.57%)</title><rect x="1002.1" y="787.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.57%)</title><rect x="1002.1" y="771.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.1" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="1002.1" y="755.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1005.1" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="1002.1" y="739.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1005.1" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.52%)</title><rect x="1002.8" y="755.0" width="6.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1005.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.52%)</title><rect x="1002.8" y="739.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1005.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.52%)</title><rect x="1002.8" y="723.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1005.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.52%)</title><rect x="1002.8" y="707.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.8" y="718.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.52%)</title><rect x="1002.8" y="691.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.52%)</title><rect x="1002.8" y="675.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.8" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="1003.4" y="659.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1006.4" y="670.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.05%)</title><rect x="1003.4" y="643.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.4" y="654.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="1004.0" y="659.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.36%)</title><rect x="1004.6" y="659.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1007.6" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.36%)</title><rect x="1004.6" y="643.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1007.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.36%)</title><rect x="1004.6" y="627.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1007.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.05%)</title><rect x="1008.8" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1008.8" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (24 samples, 1.24%)</title><rect x="1009.4" y="947.0" width="14.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.05%)</title><rect x="1011.3" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.3" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="1011.3" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.3" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1011.3" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.3" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1011.3" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.3" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1011.3" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.3" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1011.3" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (20 samples, 1.03%)</title><rect x="1011.9" y="931.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.9" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 1.03%)</title><rect x="1011.9" y="915.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (20 samples, 1.03%)</title><rect x="1011.9" y="899.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.9" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.10%)</title><rect x="1011.9" y="883.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.9" y="894.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.10%)</title><rect x="1011.9" y="867.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (1 samples, 0.05%)</title><rect x="1012.5" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (1 samples, 0.05%)</title><rect x="1012.5" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (1 samples, 0.05%)</title><rect x="1012.5" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.05%)</title><rect x="1012.5" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.05%)</title><rect x="1012.5" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.82%)</title><rect x="1013.1" y="883.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1016.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (16 samples, 0.82%)</title><rect x="1013.1" y="867.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1016.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (16 samples, 0.82%)</title><rect x="1013.1" y="851.0" width="9.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1016.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.72%)</title><rect x="1013.7" y="835.0" width="8.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1016.7" y="846.0"></text>
</g>
<g>
<title>__GI___libc_read (12 samples, 0.62%)</title><rect x="1013.7" y="819.0" width="7.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1016.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.57%)</title><rect x="1014.3" y="803.0" width="6.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1017.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.57%)</title><rect x="1014.3" y="787.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1017.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_read (9 samples, 0.46%)</title><rect x="1015.5" y="771.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1018.5" y="782.0"></text>
</g>
<g>
<title>ksys_read (9 samples, 0.46%)</title><rect x="1015.5" y="755.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1018.5" y="766.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.46%)</title><rect x="1015.5" y="739.0" width="5.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1018.5" y="750.0"></text>
</g>
<g>
<title>__vfs_read (5 samples, 0.26%)</title><rect x="1015.5" y="723.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1018.5" y="734.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.26%)</title><rect x="1015.5" y="707.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1018.5" y="718.0"></text>
</g>
<g>
<title>sock_read_iter (5 samples, 0.26%)</title><rect x="1015.5" y="691.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1018.5" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.26%)</title><rect x="1015.5" y="675.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1018.5" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.21%)</title><rect x="1015.5" y="659.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1018.5" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.21%)</title><rect x="1015.5" y="643.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1018.5" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.15%)</title><rect x="1016.1" y="627.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1019.1" y="638.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.15%)</title><rect x="1016.1" y="611.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1019.1" y="622.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.15%)</title><rect x="1016.1" y="595.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1019.1" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.10%)</title><rect x="1016.7" y="579.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1019.7" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="1018.0" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.0" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="1018.0" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.0" y="654.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.05%)</title><rect x="1018.0" y="627.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1021.0" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="1018.0" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1021.0" y="622.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.05%)</title><rect x="1018.0" y="595.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1021.0" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.21%)</title><rect x="1018.6" y="723.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1021.6" y="734.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.15%)</title><rect x="1019.2" y="707.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1022.2" y="718.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="1019.2" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1022.2" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.10%)</title><rect x="1019.8" y="691.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1022.8" y="702.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.10%)</title><rect x="1019.8" y="675.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1022.8" y="686.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="1020.4" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1023.4" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.10%)</title><rect x="1021.0" y="819.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1024.0" y="830.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.05%)</title><rect x="1022.2" y="835.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1025.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.10%)</title><rect x="1022.8" y="883.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1025.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.05%)</title><rect x="1022.8" y="867.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1025.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.05%)</title><rect x="1023.4" y="867.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.4" y="878.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="1023.4" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.4" y="862.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.05%)</title><rect x="1023.4" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.4" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.05%)</title><rect x="1023.4" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.4" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.05%)</title><rect x="1023.4" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.10%)</title><rect x="1024.0" y="947.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1027.0" y="958.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.10%)</title><rect x="1024.0" y="931.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.0" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1024.0" y="915.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.05%)</title><rect x="1025.2" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1028.2" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (4 samples, 0.21%)</title><rect x="1025.9" y="1155.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.9" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.21%)</title><rect x="1025.9" y="1139.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1028.9" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.10%)</title><rect x="1025.9" y="1123.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.9" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1026.5" y="1107.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1029.5" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.05%)</title><rect x="1026.5" y="1091.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1029.5" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.80] (1 samples, 0.05%)</title><rect x="1026.5" y="1075.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.5" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.10%)</title><rect x="1027.1" y="1123.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.10%)</title><rect x="1027.1" y="1107.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.10%)</title><rect x="1027.1" y="1091.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.1" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.10%)</title><rect x="1027.1" y="1075.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.05%)</title><rect x="1027.7" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.7" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.05%)</title><rect x="1027.7" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$354/272296365.test (1 samples, 0.05%)</title><rect x="1027.7" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (66 samples, 3.40%)</title><rect x="1028.3" y="1155.0" width="40.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="1166.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$238/1656106719.run (25 samples, 1.29%)</title><rect x="1028.3" y="1139.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (25 samples, 1.29%)</title><rect x="1028.3" y="1123.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 1.29%)</title><rect x="1028.3" y="1107.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 1.29%)</title><rect x="1028.3" y="1091.0" width="15.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (25 samples, 1.29%)</title><rect x="1028.3" y="1075.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (25 samples, 1.29%)</title><rect x="1028.3" y="1059.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$229/1362406443.run (25 samples, 1.29%)</title><rect x="1028.3" y="1043.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (25 samples, 1.29%)</title><rect x="1028.3" y="1027.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1031.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (24 samples, 1.24%)</title><rect x="1028.3" y="1011.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1031.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (22 samples, 1.13%)</title><rect x="1029.5" y="995.0" width="13.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.05%)</title><rect x="1029.5" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1032.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.05%)</title><rect x="1029.5" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.05%)</title><rect x="1029.5" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.05%)</title><rect x="1029.5" y="931.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1032.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.05%)</title><rect x="1029.5" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.05%)</title><rect x="1029.5" y="899.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="1029.5" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.5" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="1029.5" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (21 samples, 1.08%)</title><rect x="1030.1" y="979.0" width="12.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 1.08%)</title><rect x="1030.1" y="963.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (21 samples, 1.08%)</title><rect x="1030.1" y="947.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 1.08%)</title><rect x="1030.1" y="931.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 1.08%)</title><rect x="1030.1" y="915.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (21 samples, 1.08%)</title><rect x="1030.1" y="899.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (21 samples, 1.08%)</title><rect x="1030.1" y="883.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (20 samples, 1.03%)</title><rect x="1030.1" y="867.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 1.03%)</title><rect x="1030.1" y="851.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 1.03%)</title><rect x="1030.1" y="835.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.1" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.21%)</title><rect x="1030.1" y="819.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1033.1" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="1031.3" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1034.3" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="1031.9" y="803.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1034.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.77%)</title><rect x="1032.5" y="819.0" width="9.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1035.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.77%)</title><rect x="1032.5" y="803.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1035.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.77%)</title><rect x="1032.5" y="787.0" width="9.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.67%)</title><rect x="1033.8" y="771.0" width="7.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1036.8" y="782.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.67%)</title><rect x="1033.8" y="755.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.8" y="766.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.62%)</title><rect x="1033.8" y="739.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1036.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1035.0" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1038.0" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="1035.6" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1038.6" y="734.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.41%)</title><rect x="1036.2" y="723.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1039.2" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.41%)</title><rect x="1036.2" y="707.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1039.2" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.41%)</title><rect x="1036.2" y="691.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1039.2" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="1041.1" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1044.1" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="1041.7" y="819.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1044.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.05%)</title><rect x="1042.3" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1042.3" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (1 samples, 0.05%)</title><rect x="1042.9" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (1 samples, 0.05%)</title><rect x="1042.9" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="1042.9" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.05%)</title><rect x="1042.9" y="963.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.05%)</title><rect x="1042.9" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1005357483.run (41 samples, 2.11%)</title><rect x="1043.5" y="1139.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.5" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (41 samples, 2.11%)</title><rect x="1043.5" y="1123.0" width="24.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.5" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 2.11%)</title><rect x="1043.5" y="1107.0" width="24.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.5" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (41 samples, 2.11%)</title><rect x="1043.5" y="1091.0" width="24.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.5" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.15%)</title><rect x="1043.5" y="1075.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.05%)</title><rect x="1043.5" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.10%)</title><rect x="1044.1" y="1059.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.10%)</title><rect x="1044.1" y="1043.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="1044.7" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1047.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.05%)</title><rect x="1044.7" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.05%)</title><rect x="1044.7" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (38 samples, 1.96%)</title><rect x="1045.3" y="1075.0" width="23.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.3" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (38 samples, 1.96%)</title><rect x="1045.3" y="1059.0" width="23.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.3" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (36 samples, 1.85%)</title><rect x="1045.3" y="1043.0" width="21.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.3" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 1.85%)</title><rect x="1045.3" y="1027.0" width="21.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.3" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 1.85%)</title><rect x="1045.3" y="1011.0" width="21.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.3" y="1022.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.46%)</title><rect x="1045.3" y="995.0" width="5.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1048.3" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="1045.3" y="979.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1048.3" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="1045.9" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1048.9" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.15%)</title><rect x="1046.5" y="979.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1049.5" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.05%)</title><rect x="1048.4" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1051.4" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="1049.0" y="979.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1052.0" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.10%)</title><rect x="1049.6" y="979.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1052.6" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (26 samples, 1.34%)</title><rect x="1050.8" y="995.0" width="15.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1053.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.29%)</title><rect x="1051.4" y="979.0" width="15.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.4" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 1.29%)</title><rect x="1051.4" y="963.0" width="15.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1054.4" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 1.24%)</title><rect x="1051.4" y="947.0" width="14.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1054.4" y="958.0"></text>
</g>
<g>
<title>do_futex (23 samples, 1.18%)</title><rect x="1051.4" y="931.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1054.4" y="942.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 1.13%)</title><rect x="1051.4" y="915.0" width="13.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1054.4" y="926.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 1.13%)</title><rect x="1051.4" y="899.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1054.4" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 1.13%)</title><rect x="1051.4" y="883.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1054.4" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (22 samples, 1.13%)</title><rect x="1051.4" y="867.0" width="13.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.4" y="878.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="1064.8" y="915.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.8" y="926.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="1065.4" y="931.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1068.4" y="942.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="1066.0" y="947.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1069.0" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="1066.0" y="931.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.0" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1066.6" y="995.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1069.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.05%)</title><rect x="1067.2" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1070.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.05%)</title><rect x="1067.2" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.05%)</title><rect x="1067.8" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1070.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (4 samples, 0.21%)</title><rect x="1068.4" y="1155.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1071.4" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.05%)</title><rect x="1069.0" y="1139.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.0" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.05%)</title><rect x="1069.0" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.0" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.05%)</title><rect x="1069.0" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (1 samples, 0.05%)</title><rect x="1069.0" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (2 samples, 0.10%)</title><rect x="1069.6" y="1139.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.6" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1069.6" y="1123.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1072.6" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1069.6" y="1107.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1072.6" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="1069.6" y="1091.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1072.6" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.05%)</title><rect x="1069.6" y="1075.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1072.6" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.05%)</title><rect x="1070.2" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.2" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.toEpochMilli (1 samples, 0.05%)</title><rect x="1070.2" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1070.8" y="1155.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.8" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1070.8" y="1139.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.8" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1070.8" y="1123.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1073.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.05%)</title><rect x="1071.5" y="1155.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.05%)</title><rect x="1071.5" y="1139.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (10 samples, 0.52%)</title><rect x="1072.1" y="1155.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.1" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1072.7" y="1139.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1075.7" y="1150.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1072.7" y="1123.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.7" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.05%)</title><rect x="1072.7" y="1107.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1075.7" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.15%)</title><rect x="1073.3" y="1139.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1076.3" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.15%)</title><rect x="1073.3" y="1123.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.15%)</title><rect x="1073.3" y="1107.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1076.3" y="1118.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="1073.9" y="1091.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1076.9" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="1074.5" y="1075.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1077.5" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="1074.5" y="1059.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1077.5" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="1074.5" y="1043.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1077.5" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.05%)</title><rect x="1075.1" y="1139.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1078.1" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.05%)</title><rect x="1075.1" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1078.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.05%)</title><rect x="1075.7" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1075.7" y="1123.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.7" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.05%)</title><rect x="1075.7" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.7" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1075.7" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.handle (3 samples, 0.15%)</title><rect x="1076.3" y="1139.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.3" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.05%)</title><rect x="1078.1" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.1" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (56 samples, 2.89%)</title><rect x="1078.7" y="1155.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.7" y="1166.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (56 samples, 2.89%)</title><rect x="1078.7" y="1139.0" width="34.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.7" y="1150.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (56 samples, 2.89%)</title><rect x="1078.7" y="1123.0" width="34.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="1134.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (29 samples, 1.49%)</title><rect x="1078.7" y="1107.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.49%)</title><rect x="1078.7" y="1091.0" width="17.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1081.7" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 1.49%)</title><rect x="1078.7" y="1075.0" width="17.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1081.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.39%)</title><rect x="1080.0" y="1059.0" width="16.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1083.0" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 1.39%)</title><rect x="1080.0" y="1043.0" width="16.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.0" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 1.29%)</title><rect x="1080.0" y="1027.0" width="15.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1083.0" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 1.29%)</title><rect x="1080.0" y="1011.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.0" y="1022.0"></text>
</g>
<g>
<title>ep_poll (25 samples, 1.29%)</title><rect x="1080.0" y="995.0" width="15.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1083.0" y="1006.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.05%)</title><rect x="1081.2" y="979.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1084.2" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (9 samples, 0.46%)</title><rect x="1081.8" y="979.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1084.8" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.36%)</title><rect x="1081.8" y="963.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1084.8" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.15%)</title><rect x="1083.6" y="947.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1086.6" y="958.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.05%)</title><rect x="1083.6" y="931.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.6" y="942.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="1084.2" y="931.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1087.2" y="942.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="1084.8" y="915.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1087.8" y="926.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.05%)</title><rect x="1085.4" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1088.4" y="958.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.10%)</title><rect x="1086.0" y="963.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.0" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.62%)</title><rect x="1087.3" y="979.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1090.3" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.62%)</title><rect x="1087.3" y="963.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.3" y="974.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="1087.3" y="947.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1090.3" y="958.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="1087.3" y="931.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1090.3" y="942.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.10%)</title><rect x="1087.9" y="947.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1090.9" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="1087.9" y="931.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.9" y="942.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.15%)</title><rect x="1089.1" y="947.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1092.1" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="1089.1" y="931.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1092.1" y="942.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.05%)</title><rect x="1090.3" y="931.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1093.3" y="942.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.31%)</title><rect x="1090.9" y="947.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1093.9" y="958.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.21%)</title><rect x="1092.1" y="931.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1095.1" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.21%)</title><rect x="1092.1" y="915.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.1" y="926.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.05%)</title><rect x="1094.6" y="979.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1097.6" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.05%)</title><rect x="1094.6" y="963.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1097.6" y="974.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1095.2" y="1027.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1098.2" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1095.2" y="1011.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1098.2" y="1022.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="1095.8" y="1027.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1098.8" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.05%)</title><rect x="1095.8" y="1011.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1098.8" y="1022.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="1095.8" y="995.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (22 samples, 1.13%)</title><rect x="1096.4" y="1107.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.10%)</title><rect x="1097.6" y="1091.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1097.6" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1098.2" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (18 samples, 0.93%)</title><rect x="1098.8" y="1091.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.8" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="1098.8" y="1075.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.8" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="1098.8" y="1059.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1101.8" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="1098.8" y="1043.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1101.8" y="1054.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="1098.8" y="1027.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1101.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (17 samples, 0.88%)</title><rect x="1099.4" y="1075.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.4" y="1086.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (1 samples, 0.05%)</title><rect x="1099.4" y="1059.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1102.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.62%)</title><rect x="1100.0" y="1059.0" width="7.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1103.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.57%)</title><rect x="1100.0" y="1043.0" width="6.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1103.0" y="1054.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.05%)</title><rect x="1100.0" y="1027.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1103.0" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1100.0" y="1011.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1103.0" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1100.0" y="995.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1103.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.05%)</title><rect x="1100.0" y="979.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1103.0" y="990.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.05%)</title><rect x="1100.0" y="963.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.0" y="974.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.05%)</title><rect x="1100.0" y="947.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1103.0" y="958.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="1100.0" y="931.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1103.0" y="942.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.31%)</title><rect x="1100.6" y="1027.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1103.6" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.31%)</title><rect x="1100.6" y="1011.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1103.6" y="1022.0"></text>
</g>
<g>
<title>__GI___libc_read (6 samples, 0.31%)</title><rect x="1100.6" y="995.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1103.6" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.31%)</title><rect x="1100.6" y="979.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.6" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.31%)</title><rect x="1100.6" y="963.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1103.6" y="974.0"></text>
</g>
<g>
<title>__x64_sys_read (5 samples, 0.26%)</title><rect x="1101.2" y="947.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1104.2" y="958.0"></text>
</g>
<g>
<title>ksys_read (5 samples, 0.26%)</title><rect x="1101.2" y="931.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1104.2" y="942.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="1101.8" y="915.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1104.8" y="926.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.15%)</title><rect x="1102.5" y="915.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1105.5" y="926.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.10%)</title><rect x="1102.5" y="899.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1105.5" y="910.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.10%)</title><rect x="1102.5" y="883.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1105.5" y="894.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.05%)</title><rect x="1102.5" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1105.5" y="878.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.05%)</title><rect x="1103.1" y="867.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1106.1" y="878.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="1103.1" y="851.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1106.1" y="862.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="1103.7" y="899.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1106.7" y="910.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.21%)</title><rect x="1104.3" y="1027.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1107.3" y="1038.0"></text>
</g>
<g>
<title>__GI___libc_read (4 samples, 0.21%)</title><rect x="1104.3" y="1011.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1107.3" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.15%)</title><rect x="1104.9" y="995.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1107.9" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.15%)</title><rect x="1104.9" y="979.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1107.9" y="990.0"></text>
</g>
<g>
<title>__x64_sys_read (3 samples, 0.15%)</title><rect x="1104.9" y="963.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1107.9" y="974.0"></text>
</g>
<g>
<title>ksys_read (3 samples, 0.15%)</title><rect x="1104.9" y="947.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1107.9" y="958.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="1104.9" y="931.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.9" y="942.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.10%)</title><rect x="1105.5" y="931.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1108.5" y="942.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.10%)</title><rect x="1105.5" y="915.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1108.5" y="926.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.10%)</title><rect x="1105.5" y="899.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.5" y="910.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.10%)</title><rect x="1105.5" y="883.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.5" y="894.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="1105.5" y="867.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1108.5" y="878.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.05%)</title><rect x="1106.1" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1109.1" y="878.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.05%)</title><rect x="1106.1" y="851.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1109.1" y="862.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.05%)</title><rect x="1106.7" y="1043.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1109.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1106.7" y="1027.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1106.7" y="1011.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.7" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.05%)</title><rect x="1106.7" y="995.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1109.7" y="1006.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.05%)</title><rect x="1106.7" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1109.7" y="990.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.05%)</title><rect x="1106.7" y="963.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1109.7" y="974.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.05%)</title><rect x="1106.7" y="947.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.7" y="958.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.05%)</title><rect x="1106.7" y="931.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.7" y="942.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.05%)</title><rect x="1106.7" y="915.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.7" y="926.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.05%)</title><rect x="1107.3" y="1059.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1110.3" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.15%)</title><rect x="1107.9" y="1059.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1110.9" y="1070.0"></text>
</g>
<g>
<title>__GI___libc_read (3 samples, 0.15%)</title><rect x="1107.9" y="1043.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1110.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="1108.5" y="1027.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1111.5" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="1108.5" y="1011.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1111.5" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.10%)</title><rect x="1108.5" y="995.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1111.5" y="1006.0"></text>
</g>
<g>
<title>ksys_read (2 samples, 0.10%)</title><rect x="1108.5" y="979.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1111.5" y="990.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.10%)</title><rect x="1108.5" y="963.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1111.5" y="974.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.05%)</title><rect x="1108.5" y="947.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.5" y="958.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.05%)</title><rect x="1108.5" y="931.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1111.5" y="942.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.05%)</title><rect x="1108.5" y="915.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1111.5" y="926.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="1109.1" y="947.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1112.1" y="958.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="1109.1" y="931.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1112.1" y="942.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="1109.1" y="915.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.1" y="926.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="1109.1" y="899.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.10%)</title><rect x="1109.8" y="1107.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.10%)</title><rect x="1111.0" y="1107.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.10%)</title><rect x="1111.0" y="1091.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.10%)</title><rect x="1111.0" y="1075.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.10%)</title><rect x="1111.0" y="1059.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.10%)</title><rect x="1111.0" y="1043.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.05%)</title><rect x="1111.6" y="1027.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.05%)</title><rect x="1112.2" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.05%)</title><rect x="1112.2" y="1091.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1112.2" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1112.2" y="1059.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="1112.2" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (8 samples, 0.41%)</title><rect x="1112.8" y="1155.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.8" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8 samples, 0.41%)</title><rect x="1112.8" y="1139.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1115.8" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (8 samples, 0.41%)</title><rect x="1112.8" y="1123.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.8" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (5 samples, 0.26%)</title><rect x="1113.4" y="1107.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1116.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.26%)</title><rect x="1113.4" y="1091.0" width="3.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1116.4" y="1102.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.26%)</title><rect x="1113.4" y="1075.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1116.4" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="1114.0" y="1059.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.0" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="1114.0" y="1043.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1117.0" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.21%)</title><rect x="1114.0" y="1027.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1117.0" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.21%)</title><rect x="1114.0" y="1011.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1117.0" y="1022.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="1114.0" y="995.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.0" y="1006.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="1114.0" y="979.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1117.0" y="990.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1114.6" y="963.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.6" y="974.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.10%)</title><rect x="1115.2" y="995.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.2" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.05%)</title><rect x="1115.8" y="979.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1118.8" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="1115.8" y="963.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.10%)</title><rect x="1116.4" y="1107.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.4" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.10%)</title><rect x="1117.7" y="1155.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.7" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.10%)</title><rect x="1117.7" y="1139.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.05%)</title><rect x="1118.3" y="1123.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.05%)</title><rect x="1118.3" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (117 samples, 6.03%)</title><rect x="1118.9" y="1171.0" width="71.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.9" y="1182.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 1.65%)</title><rect x="1118.9" y="1155.0" width="19.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (32 samples, 1.65%)</title><rect x="1118.9" y="1139.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.9" y="1150.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.21%)</title><rect x="1118.9" y="1123.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1121.9" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.21%)</title><rect x="1118.9" y="1107.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1121.9" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.21%)</title><rect x="1118.9" y="1091.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1121.9" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.21%)</title><rect x="1118.9" y="1075.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.9" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.21%)</title><rect x="1118.9" y="1059.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1121.9" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.21%)</title><rect x="1118.9" y="1043.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.9" y="1054.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="1118.9" y="1027.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.9" y="1038.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1118.9" y="1011.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1121.9" y="1022.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="1118.9" y="995.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1121.9" y="1006.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.15%)</title><rect x="1119.5" y="1027.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1122.5" y="1038.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.05%)</title><rect x="1119.5" y="1011.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1122.5" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="1119.5" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1122.5" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.05%)</title><rect x="1119.5" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1122.5" y="990.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.05%)</title><rect x="1119.5" y="963.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.5" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.10%)</title><rect x="1120.1" y="1011.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1123.1" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.10%)</title><rect x="1120.1" y="995.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1123.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.13%)</title><rect x="1121.3" y="1123.0" width="13.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1124.3" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (22 samples, 1.13%)</title><rect x="1121.3" y="1107.0" width="13.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1124.3" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.82%)</title><rect x="1125.0" y="1091.0" width="9.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1128.0" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.82%)</title><rect x="1125.0" y="1075.0" width="9.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.0" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 0.72%)</title><rect x="1125.6" y="1059.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.6" y="1070.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.72%)</title><rect x="1125.6" y="1043.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1128.6" y="1054.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.72%)</title><rect x="1125.6" y="1027.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1128.6" y="1038.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (7 samples, 0.36%)</title><rect x="1126.8" y="1011.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1129.8" y="1022.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.26%)</title><rect x="1127.4" y="995.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1130.4" y="1006.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.21%)</title><rect x="1128.0" y="979.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1131.0" y="990.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.15%)</title><rect x="1128.6" y="963.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1131.6" y="974.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.10%)</title><rect x="1129.2" y="947.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1132.2" y="958.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="1130.4" y="995.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.4" y="1006.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="1131.0" y="1011.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.0" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 0.21%)</title><rect x="1131.6" y="1011.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.6" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.21%)</title><rect x="1131.6" y="995.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1134.6" y="1006.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.15%)</title><rect x="1132.2" y="979.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1135.2" y="990.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="1132.2" y="963.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1135.2" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="1133.5" y="947.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.5" y="958.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.05%)</title><rect x="1134.1" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.1" y="1070.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.05%)</title><rect x="1134.1" y="1043.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1137.1" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.26%)</title><rect x="1134.7" y="1123.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1137.7" y="1134.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.05%)</title><rect x="1137.7" y="1123.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1140.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 4.38%)</title><rect x="1138.3" y="1155.0" width="51.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.3" y="1166.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 4.33%)</title><rect x="1138.3" y="1139.0" width="51.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.3" y="1150.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 2.63%)</title><rect x="1138.3" y="1123.0" width="31.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.3" y="1134.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 1.70%)</title><rect x="1139.5" y="1107.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 1.65%)</title><rect x="1140.1" y="1091.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.1" y="1102.0"></text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (28 samples, 1.44%)</title><rect x="1140.1" y="1075.0" width="17.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.26%)</title><rect x="1140.1" y="1059.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.15%)</title><rect x="1140.1" y="1043.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.15%)</title><rect x="1140.1" y="1027.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.1" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="1140.1" y="1011.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1143.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="1141.4" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1142.0" y="1043.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1142.0" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.05%)</title><rect x="1142.6" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1142.6" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1142.6" y="1011.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="1142.6" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1145.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer.get (23 samples, 1.18%)</title><rect x="1143.2" y="1059.0" width="14.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1146.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="1143.2" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="1143.2" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1146.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$502/1744977774.get$Lambda (1 samples, 0.05%)</title><rect x="1143.2" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1146.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/server/CustomServer$$Lambda$502/1744977774.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1143.2" y="995.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (22 samples, 1.13%)</title><rect x="1143.8" y="1043.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (22 samples, 1.13%)</title><rect x="1143.8" y="1027.0" width="13.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1146.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.98%)</title><rect x="1145.0" y="1011.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.98%)</title><rect x="1145.0" y="995.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1148.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.98%)</title><rect x="1145.0" y="979.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.98%)</title><rect x="1145.0" y="963.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.98%)</title><rect x="1145.0" y="947.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.98%)</title><rect x="1145.0" y="931.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.0" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="1145.0" y="915.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.0" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="1145.6" y="915.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1148.6" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.88%)</title><rect x="1146.2" y="915.0" width="10.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1149.2" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.88%)</title><rect x="1146.2" y="899.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1149.2" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.88%)</title><rect x="1146.2" y="883.0" width="10.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.2" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.88%)</title><rect x="1146.2" y="867.0" width="10.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1149.2" y="878.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.88%)</title><rect x="1146.2" y="851.0" width="10.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.2" y="862.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.88%)</title><rect x="1146.2" y="835.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1149.2" y="846.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="1146.8" y="819.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.8" y="830.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.77%)</title><rect x="1147.4" y="819.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1150.4" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.77%)</title><rect x="1147.4" y="803.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1150.4" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.77%)</title><rect x="1147.4" y="787.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1150.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="1156.6" y="1011.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="1156.6" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="1156.6" y="979.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.05%)</title><rect x="1156.6" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.05%)</title><rect x="1157.2" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.10%)</title><rect x="1157.8" y="1075.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.8" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.10%)</title><rect x="1157.8" y="1059.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.10%)</title><rect x="1157.8" y="1043.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.10%)</title><rect x="1157.8" y="1027.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="1158.4" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1161.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.05%)</title><rect x="1159.0" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1162.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1159.0" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1162.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1159.0" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1162.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1159.0" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.0" y="1038.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1159.0" y="1011.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1162.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.31%)</title><rect x="1159.6" y="1107.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1160.2" y="1091.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1160.2" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="1160.2" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.15%)</title><rect x="1160.8" y="1091.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.15%)</title><rect x="1160.8" y="1075.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.05%)</title><rect x="1162.6" y="1091.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.10%)</title><rect x="1163.3" y="1107.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.10%)</title><rect x="1163.3" y="1091.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.10%)</title><rect x="1163.3" y="1075.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1166.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.10%)</title><rect x="1163.3" y="1059.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.10%)</title><rect x="1163.3" y="1043.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.05%)</title><rect x="1164.5" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1167.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1164.5" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.15%)</title><rect x="1165.1" y="1107.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1168.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="1165.1" y="1091.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="1165.1" y="1075.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1166.3" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1169.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1166.3" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1166.3" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1169.3" y="1070.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="1166.3" y="1043.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1169.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.21%)</title><rect x="1166.9" y="1107.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1169.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.21%)</title><rect x="1166.9" y="1091.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 1.70%)</title><rect x="1169.3" y="1123.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 1.70%)</title><rect x="1169.3" y="1107.0" width="20.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.3" y="1118.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.36%)</title><rect x="1169.3" y="1091.0" width="4.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1172.3" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.05%)</title><rect x="1171.2" y="1075.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.2" y="1086.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.10%)</title><rect x="1171.8" y="1075.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1174.8" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.10%)</title><rect x="1171.8" y="1059.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.8" y="1070.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.05%)</title><rect x="1173.0" y="1075.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.0" y="1086.0"></text>
</g>
<g>
<title>__GI___recv (25 samples, 1.29%)</title><rect x="1173.6" y="1091.0" width="15.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1176.6" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 1.18%)</title><rect x="1174.8" y="1075.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1177.8" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.18%)</title><rect x="1174.8" y="1059.0" width="14.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.8" y="1070.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.05%)</title><rect x="1175.4" y="1043.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1178.4" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (20 samples, 1.03%)</title><rect x="1176.0" y="1043.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.0" y="1054.0"></text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 1.03%)</title><rect x="1176.0" y="1027.0" width="12.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1179.0" y="1038.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="1176.0" y="1011.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1179.0" y="1022.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="1176.6" y="1011.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1179.6" y="1022.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.88%)</title><rect x="1177.2" y="1011.0" width="10.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.2" y="1022.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="1177.2" y="995.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.2" y="1006.0"></text>
</g>
<g>
<title>inet6_recvmsg (12 samples, 0.62%)</title><rect x="1177.8" y="995.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1180.8" y="1006.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.57%)</title><rect x="1178.4" y="979.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.4" y="990.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.26%)</title><rect x="1179.1" y="963.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1182.1" y="974.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1179.1" y="947.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.1" y="958.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.21%)</title><rect x="1179.7" y="947.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.7" y="958.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1179.7" y="931.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.7" y="942.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="1180.3" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.3" y="942.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.10%)</title><rect x="1180.9" y="931.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1183.9" y="942.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.10%)</title><rect x="1180.9" y="915.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.9" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1182.1" y="963.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.1" y="974.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.21%)</title><rect x="1182.7" y="963.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1185.7" y="974.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.21%)</title><rect x="1182.7" y="947.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.7" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.15%)</title><rect x="1183.3" y="931.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.3" y="942.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.10%)</title><rect x="1183.3" y="915.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1186.3" y="926.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="1184.5" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.5" y="926.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.21%)</title><rect x="1185.1" y="995.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1188.1" y="1006.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.21%)</title><rect x="1185.1" y="979.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.1" y="990.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="1185.1" y="963.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.1" y="974.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.15%)</title><rect x="1185.7" y="963.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1188.7" y="974.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.15%)</title><rect x="1185.7" y="947.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.10%)</title><rect x="1186.4" y="931.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.4" y="942.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.05%)</title><rect x="1187.0" y="915.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="1187.6" y="1011.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.6" y="1022.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="1187.6" y="995.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1190.6" y="1006.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1187.6" y="979.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1190.6" y="990.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.05%)</title><rect x="1188.2" y="1043.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.2" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="1188.8" y="1091.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1191.8" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1189.4" y="1139.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="1150.0"></text>
</g>
</g>
</svg>
