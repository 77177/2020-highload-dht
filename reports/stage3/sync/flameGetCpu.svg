<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (917 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (2 samples, 0.22%)</title><rect x="10.0" y="915.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.22%)</title><rect x="10.0" y="899.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.22%)</title><rect x="10.0" y="883.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.22%)</title><rect x="10.0" y="867.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.22%)</title><rect x="10.0" y="851.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (2 samples, 0.22%)</title><rect x="10.0" y="835.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (2 samples, 0.22%)</title><rect x="10.0" y="819.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11202309319664131237.so (2 samples, 0.22%)</title><rect x="10.0" y="803.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.22%)</title><rect x="10.0" y="787.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.22%)</title><rect x="10.0" y="771.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.22%)</title><rect x="10.0" y="755.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="10.0" y="739.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="10.0" y="723.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="10.0" y="707.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="10.0" y="691.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="11.3" y="739.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.3" y="750.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="11.3" y="723.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.3" y="734.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="11.3" y="707.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="14.3" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="11.3" y="691.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.3" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (915 samples, 99.78%)</title><rect x="12.6" y="915.0" width="1177.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.6" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.98%)</title><rect x="12.6" y="899.0" width="11.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.98%)</title><rect x="12.6" y="883.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.87%)</title><rect x="12.6" y="867.0" width="10.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.6" y="878.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.87%)</title><rect x="12.6" y="851.0" width="10.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.87%)</title><rect x="12.6" y="835.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.87%)</title><rect x="12.6" y="819.0" width="10.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.65%)</title><rect x="12.6" y="803.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.65%)</title><rect x="12.6" y="787.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.65%)</title><rect x="12.6" y="771.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 0.44%)</title><rect x="13.9" y="755.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="16.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.33%)</title><rect x="15.1" y="739.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="18.1" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.22%)</title><rect x="16.4" y="723.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.4" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.22%)</title><rect x="16.4" y="707.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="19.4" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.11%)</title><rect x="16.4" y="691.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.4" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.11%)</title><rect x="17.7" y="691.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="20.7" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.11%)</title><rect x="19.0" y="755.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="22.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.11%)</title><rect x="19.0" y="739.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.0" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.11%)</title><rect x="19.0" y="723.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="22.0" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.11%)</title><rect x="19.0" y="707.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="22.0" y="718.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.11%)</title><rect x="20.3" y="803.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="23.3" y="814.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="21.6" y="803.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="24.6" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.11%)</title><rect x="21.6" y="787.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="24.6" y="798.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.11%)</title><rect x="22.9" y="867.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="25.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (906 samples, 98.80%)</title><rect x="24.2" y="899.0" width="1165.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.2" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (906 samples, 98.80%)</title><rect x="24.2" y="883.0" width="1165.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.2" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (899 samples, 98.04%)</title><rect x="26.7" y="867.0" width="1156.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.7" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (895 samples, 97.60%)</title><rect x="26.7" y="851.0" width="1151.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.7" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (895 samples, 97.60%)</title><rect x="26.7" y="835.0" width="1151.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.7" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (894 samples, 97.49%)</title><rect x="26.7" y="819.0" width="1150.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.7" y="830.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (83 samples, 9.05%)</title><rect x="26.7" y="803.0" width="106.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.7" y="814.0">one/nio/http/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.22%)</title><rect x="26.7" y="787.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.22%)</title><rect x="26.7" y="771.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.22%)</title><rect x="26.7" y="755.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="29.7" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.11%)</title><rect x="26.7" y="739.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="29.7" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.11%)</title><rect x="28.0" y="739.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.0" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.11%)</title><rect x="28.0" y="723.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="31.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 8.51%)</title><rect x="29.3" y="787.0" width="100.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="798.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.11%)</title><rect x="29.3" y="771.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.11%)</title><rect x="29.3" y="755.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="32.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.11%)</title><rect x="29.3" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.11%)</title><rect x="29.3" y="723.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.11%)</title><rect x="29.3" y="707.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (77 samples, 8.40%)</title><rect x="30.6" y="771.0" width="99.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.6" y="782.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (77 samples, 8.40%)</title><rect x="30.6" y="755.0" width="99.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.6" y="766.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (77 samples, 8.40%)</title><rect x="30.6" y="739.0" width="99.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.6" y="750.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (77 samples, 8.40%)</title><rect x="30.6" y="723.0" width="99.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.6" y="734.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.11%)</title><rect x="33.2" y="707.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="36.2" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.11%)</title><rect x="33.2" y="691.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="36.2" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="33.2" y="675.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="36.2" y="686.0"></text>
</g>
<g>
<title>__libc_send (74 samples, 8.07%)</title><rect x="34.4" y="707.0" width="95.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.4" y="718.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 7.96%)</title><rect x="35.7" y="691.0" width="94.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.7" y="702.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.11%)</title><rect x="35.7" y="675.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (72 samples, 7.85%)</title><rect x="37.0" y="675.0" width="92.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="40.0" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (72 samples, 7.85%)</title><rect x="37.0" y="659.0" width="92.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="40.0" y="670.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (72 samples, 7.85%)</title><rect x="37.0" y="643.0" width="92.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="40.0" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (71 samples, 7.74%)</title><rect x="37.0" y="627.0" width="91.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="40.0" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (70 samples, 7.63%)</title><rect x="37.0" y="611.0" width="90.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="40.0" y="622.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (70 samples, 7.63%)</title><rect x="37.0" y="595.0" width="90.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="40.0" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.11%)</title><rect x="38.3" y="579.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="41.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.11%)</title><rect x="39.6" y="579.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.6" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.11%)</title><rect x="40.9" y="579.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="43.9" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.11%)</title><rect x="40.9" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (66 samples, 7.20%)</title><rect x="42.2" y="579.0" width="84.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="45.2" y="590.0">tcp_sendms..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.11%)</title><rect x="43.5" y="563.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.5" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.33%)</title><rect x="44.7" y="563.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.33%)</title><rect x="44.7" y="547.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="47.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.11%)</title><rect x="46.0" y="531.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="49.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.11%)</title><rect x="46.0" y="515.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="49.0" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.11%)</title><rect x="46.0" y="499.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="49.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="47.3" y="531.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="50.3" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.11%)</title><rect x="48.6" y="563.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.6" y="574.0"></text>
</g>
<g>
<title>tcp_push (60 samples, 6.54%)</title><rect x="49.9" y="563.0" width="77.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="52.9" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (60 samples, 6.54%)</title><rect x="49.9" y="547.0" width="77.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="52.9" y="558.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="49.9" y="531.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.9" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (59 samples, 6.43%)</title><rect x="51.2" y="531.0" width="75.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.2" y="542.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (55 samples, 6.00%)</title><rect x="53.8" y="515.0" width="70.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="56.8" y="526.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (54 samples, 5.89%)</title><rect x="55.0" y="499.0" width="69.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="58.0" y="510.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (53 samples, 5.78%)</title><rect x="55.0" y="483.0" width="68.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="58.0" y="494.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (52 samples, 5.67%)</title><rect x="56.3" y="467.0" width="66.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.3" y="478.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.44%)</title><rect x="56.3" y="451.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="59.3" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="56.3" y="435.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="59.3" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.33%)</title><rect x="57.6" y="435.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.6" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.11%)</title><rect x="57.6" y="419.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="60.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.11%)</title><rect x="57.6" y="403.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.6" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.22%)</title><rect x="58.9" y="419.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.9" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.22%)</title><rect x="58.9" y="403.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="61.9" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.11%)</title><rect x="60.2" y="387.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.11%)</title><rect x="61.5" y="451.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="64.5" y="462.0"></text>
</g>
<g>
<title>ip_output (47 samples, 5.13%)</title><rect x="62.8" y="451.0" width="60.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.8" y="462.0">ip_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="64.0" y="435.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (45 samples, 4.91%)</title><rect x="65.3" y="435.0" width="57.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.3" y="446.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="66.6" y="419.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.6" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (43 samples, 4.69%)</title><rect x="67.9" y="419.0" width="55.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.9" y="430.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (43 samples, 4.69%)</title><rect x="67.9" y="403.0" width="55.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.9" y="414.0">ip_fi..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.11%)</title><rect x="70.5" y="387.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="73.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (36 samples, 3.93%)</title><rect x="71.8" y="387.0" width="46.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="74.8" y="398.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.20 (36 samples, 3.93%)</title><rect x="71.8" y="371.0" width="46.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="74.8" y="382.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (36 samples, 3.93%)</title><rect x="71.8" y="355.0" width="46.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="74.8" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (36 samples, 3.93%)</title><rect x="71.8" y="339.0" width="46.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="74.8" y="350.0">__so..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.22%)</title><rect x="73.1" y="323.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="76.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (33 samples, 3.60%)</title><rect x="75.6" y="323.0" width="42.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.6" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (32 samples, 3.49%)</title><rect x="76.9" y="307.0" width="41.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.9" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (32 samples, 3.49%)</title><rect x="76.9" y="291.0" width="41.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.9" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 3.49%)</title><rect x="76.9" y="275.0" width="41.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.9" y="286.0">__n..</text>
</g>
<g>
<title>ip_rcv (32 samples, 3.49%)</title><rect x="76.9" y="259.0" width="41.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.9" y="270.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (30 samples, 3.27%)</title><rect x="76.9" y="243.0" width="38.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.9" y="254.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (30 samples, 3.27%)</title><rect x="76.9" y="227.0" width="38.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.9" y="238.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 3.16%)</title><rect x="78.2" y="211.0" width="37.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.2" y="222.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (29 samples, 3.16%)</title><rect x="78.2" y="195.0" width="37.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="81.2" y="206.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 3.16%)</title><rect x="78.2" y="179.0" width="37.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.2" y="190.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.11%)</title><rect x="80.8" y="163.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (26 samples, 2.84%)</title><rect x="82.1" y="163.0" width="33.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.1" y="174.0">tc..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.11%)</title><rect x="82.1" y="147.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="85.1" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.11%)</title><rect x="83.3" y="147.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="86.3" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (24 samples, 2.62%)</title><rect x="84.6" y="147.0" width="30.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="87.6" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.33%)</title><rect x="85.9" y="131.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.33%)</title><rect x="85.9" y="115.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.33%)</title><rect x="85.9" y="99.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="88.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="85.9" y="83.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.9" y="94.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.22%)</title><rect x="87.2" y="83.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.2" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.22%)</title><rect x="87.2" y="67.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.2" y="78.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.44%)</title><rect x="89.8" y="131.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="92.8" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.33%)</title><rect x="91.1" y="115.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.1" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.22%)</title><rect x="92.4" y="99.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="95.4" y="110.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.22%)</title><rect x="92.4" y="83.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="95.4" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.22%)</title><rect x="92.4" y="67.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.4" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.11%)</title><rect x="93.6" y="51.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.6" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.11%)</title><rect x="93.6" y="35.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="96.6" y="46.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.22%)</title><rect x="94.9" y="131.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="97.9" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (11 samples, 1.20%)</title><rect x="97.5" y="131.0" width="14.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="100.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 1.20%)</title><rect x="97.5" y="115.0" width="14.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 1.20%)</title><rect x="97.5" y="99.0" width="14.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 1.09%)</title><rect x="97.5" y="83.0" width="12.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.5" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 1.09%)</title><rect x="97.5" y="67.0" width="12.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.5" y="78.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.11%)</title><rect x="110.4" y="83.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="113.4" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.11%)</title><rect x="111.7" y="131.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.7" y="142.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="112.9" y="131.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="115.9" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.11%)</title><rect x="114.2" y="131.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="117.2" y="142.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.22%)</title><rect x="115.5" y="243.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.5" y="254.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="115.5" y="227.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.5" y="238.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="115.5" y="211.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="118.5" y="222.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.11%)</title><rect x="116.8" y="227.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.8" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.44%)</title><rect x="118.1" y="387.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.44%)</title><rect x="118.1" y="371.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="121.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.44%)</title><rect x="118.1" y="355.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="121.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.22%)</title><rect x="120.7" y="339.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.11%)</title><rect x="120.7" y="323.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="123.7" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.11%)</title><rect x="120.7" y="307.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="123.7" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.11%)</title><rect x="122.0" y="323.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="125.0" y="334.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.11%)</title><rect x="123.2" y="483.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="126.2" y="494.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.11%)</title><rect x="124.5" y="515.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.5" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.11%)</title><rect x="125.8" y="515.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.8" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.11%)</title><rect x="125.8" y="499.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="128.8" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.11%)</title><rect x="125.8" y="483.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="128.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.11%)</title><rect x="125.8" y="467.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="128.8" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="125.8" y="451.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="128.8" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.11%)</title><rect x="127.1" y="611.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="130.1" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.11%)</title><rect x="127.1" y="595.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="130.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.11%)</title><rect x="127.1" y="579.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="130.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.11%)</title><rect x="128.4" y="627.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.4" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.11%)</title><rect x="128.4" y="611.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="128.4" y="595.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="131.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.33%)</title><rect x="129.7" y="787.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="133.5" y="803.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.11%)</title><rect x="133.5" y="787.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.11%)</title><rect x="133.5" y="771.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (810 samples, 88.33%)</title><rect x="134.8" y="803.0" width="1042.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.8" y="814.0">ru/mail/polis/service/stasyanoi/CustomServer.get</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (809 samples, 88.22%)</title><rect x="134.8" y="787.0" width="1041.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.8" y="798.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (808 samples, 88.11%)</title><rect x="134.8" y="771.0" width="1039.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.8" y="782.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (808 samples, 88.11%)</title><rect x="134.8" y="755.0" width="1039.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.8" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.44%)</title><rect x="136.1" y="739.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.1" y="750.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (667 samples, 72.74%)</title><rect x="141.3" y="739.0" width="858.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="144.3" y="750.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>/tmp/librocksdbjni11202309319664131237.so (2 samples, 0.22%)</title><rect x="142.5" y="723.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="145.5" y="734.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.11%)</title><rect x="145.1" y="723.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="148.1" y="734.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.11%)</title><rect x="146.4" y="723.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="149.4" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="147.7" y="723.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="150.7" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.22%)</title><rect x="149.0" y="723.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="152.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.11%)</title><rect x="151.5" y="723.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="154.5" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (657 samples, 71.65%)</title><rect x="152.8" y="723.0" width="845.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="155.8" y="734.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, in..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="152.8" y="707.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="155.8" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="152.8" y="691.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="155.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (656 samples, 71.54%)</title><rect x="154.1" y="707.0" width="844.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="157.1" y="718.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*)</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (656 samples, 71.54%)</title><rect x="154.1" y="691.0" width="844.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="157.1" y="702.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*)</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (656 samples, 71.54%)</title><rect x="154.1" y="675.0" width="844.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="157.1" y="686.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Pinnab..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (655 samples, 71.43%)</title><rect x="155.4" y="659.0" width="842.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="158.4" y="670.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions)</text>
</g>
<g>
<title>/tmp/librocksdbjni11202309319664131237.so (1 samples, 0.11%)</title><rect x="156.7" y="643.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="159.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.22%)</title><rect x="158.0" y="643.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="161.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) [clone .plt] (1 samples, 0.11%)</title><rect x="160.6" y="643.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="163.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.11%)</title><rect x="161.8" y="643.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="164.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (649 samples, 70.77%)</title><rect x="163.1" y="643.0" width="835.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="166.1" y="654.0">rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned lo..</text>
</g>
<g>
<title>/tmp/librocksdbjni11202309319664131237.so (648 samples, 70.67%)</title><rect x="163.1" y="627.0" width="833.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="166.1" y="638.0">/tmp/librocksdbjni11202309319664131237.so</text>
</g>
<g>
<title>/tmp/librocksdbjni11202309319664131237.so (16 samples, 1.74%)</title><rect x="163.1" y="611.0" width="20.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="166.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 1.53%)</title><rect x="164.4" y="595.0" width="18.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="167.4" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.22%)</title><rect x="164.4" y="579.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="167.4" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.22%)</title><rect x="164.4" y="563.0" width="2.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="167.4" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="164.4" y="547.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="167.4" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.11%)</title><rect x="165.7" y="547.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="168.7" y="558.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.11%)</title><rect x="165.7" y="531.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="168.7" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.33%)</title><rect x="167.0" y="579.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="170.0" y="590.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.11%)</title><rect x="167.0" y="563.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="170.0" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.22%)</title><rect x="168.3" y="563.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="171.3" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.22%)</title><rect x="168.3" y="547.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="171.3" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="168.3" y="531.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="171.3" y="542.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.11%)</title><rect x="168.3" y="515.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="171.3" y="526.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.11%)</title><rect x="169.6" y="531.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="172.6" y="542.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.33%)</title><rect x="170.9" y="579.0" width="3.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="173.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.33%)</title><rect x="170.9" y="563.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="173.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.33%)</title><rect x="170.9" y="547.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.9" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.22%)</title><rect x="172.1" y="531.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="175.1" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.22%)</title><rect x="172.1" y="515.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="175.1" y="526.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.22%)</title><rect x="172.1" y="499.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.1" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.11%)</title><rect x="172.1" y="483.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="175.1" y="494.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.11%)</title><rect x="172.1" y="467.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="175.1" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.11%)</title><rect x="173.4" y="483.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.4" y="494.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.11%)</title><rect x="173.4" y="467.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="176.4" y="478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.33%)</title><rect x="174.7" y="579.0" width="3.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="177.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.33%)</title><rect x="174.7" y="563.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="177.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.33%)</title><rect x="174.7" y="547.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="177.7" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.33%)</title><rect x="174.7" y="531.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="177.7" y="542.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.33%)</title><rect x="174.7" y="515.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="177.7" y="526.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.22%)</title><rect x="176.0" y="499.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.0" y="510.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.11%)</title><rect x="177.3" y="483.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="180.3" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.11%)</title><rect x="177.3" y="467.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="180.3" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.11%)</title><rect x="177.3" y="451.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="180.3" y="462.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="178.6" y="579.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="181.6" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.11%)</title><rect x="179.9" y="579.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="182.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.11%)</title><rect x="181.1" y="579.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="184.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const [clone .plt] (1 samples, 0.11%)</title><rect x="182.4" y="595.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="185.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (629 samples, 68.59%)</title><rect x="183.7" y="611.0" width="809.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="186.7" y="622.0">rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.11%)</title><rect x="200.4" y="595.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="203.4" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.33%)</title><rect x="201.7" y="595.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="204.7" y="606.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.22%)</title><rect x="205.6" y="595.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="208.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (610 samples, 66.52%)</title><rect x="208.2" y="595.0" width="784.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="211.2" y="606.0">rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="214.6" y="579.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="217.6" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.11%)</title><rect x="215.9" y="579.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="218.9" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) [clone .plt] (1 samples, 0.11%)</title><rect x="217.2" y="579.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="220.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.22%)</title><rect x="218.5" y="579.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="221.5" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.44%)</title><rect x="221.0" y="579.0" width="5.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="224.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (591 samples, 64.45%)</title><rect x="226.2" y="579.0" width="760.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="229.2" y="590.0">rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (37 samples, 4.03%)</title><rect x="237.8" y="563.0" width="47.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="240.8" y="574.0">JNIE..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.11%)</title><rect x="239.1" y="547.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="242.1" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (35 samples, 3.82%)</title><rect x="240.3" y="547.0" width="45.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="243.3" y="558.0">jni_..</text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="242.9" y="531.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="245.9" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="244.2" y="531.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="247.2" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="245.5" y="531.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="248.5" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (29 samples, 3.16%)</title><rect x="248.1" y="531.0" width="37.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="251.1" y="542.0">jni..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="258.4" y="515.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="261.4" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.11%)</title><rect x="259.6" y="515.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="262.6" y="526.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.11%)</title><rect x="260.9" y="515.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="263.9" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (15 samples, 1.64%)</title><rect x="262.2" y="515.0" width="19.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="265.2" y="526.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="263.5" y="499.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="266.5" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.11%)</title><rect x="264.8" y="499.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="267.8" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.11%)</title><rect x="266.1" y="499.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="269.1" y="510.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.11%)</title><rect x="267.4" y="499.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="270.4" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (9 samples, 0.98%)</title><rect x="268.6" y="499.0" width="11.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="271.6" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.11%)</title><rect x="276.4" y="483.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="279.4" y="494.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.22%)</title><rect x="277.7" y="483.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="280.7" y="494.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.11%)</title><rect x="280.2" y="499.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="283.2" y="510.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.11%)</title><rect x="281.5" y="515.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="284.5" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.22%)</title><rect x="282.8" y="515.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="285.8" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (114 samples, 12.43%)</title><rect x="285.4" y="563.0" width="146.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="288.4" y="574.0">JNIEnv_::CallVoidM..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="289.2" y="547.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="292.2" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (109 samples, 11.89%)</title><rect x="291.8" y="547.0" width="140.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="294.8" y="558.0">jni_CallVoidMethodV</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (3 samples, 0.33%)</title><rect x="297.0" y="531.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="300.0" y="542.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.11%)</title><rect x="300.8" y="531.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="303.8" y="542.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (2 samples, 0.22%)</title><rect x="302.1" y="531.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="305.1" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.11%)</title><rect x="304.7" y="531.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="307.7" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.11%)</title><rect x="306.0" y="531.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="309.0" y="542.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (4 samples, 0.44%)</title><rect x="307.3" y="531.0" width="5.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="310.3" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.44%)</title><rect x="312.4" y="531.0" width="5.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="315.4" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (9 samples, 0.98%)</title><rect x="317.5" y="531.0" width="11.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="320.5" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (79 samples, 8.62%)</title><rect x="329.1" y="531.0" width="101.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="332.1" y="542.0">jni_invoke_n..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.11%)</title><rect x="344.6" y="515.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="347.6" y="526.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.11%)</title><rect x="345.9" y="515.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="348.9" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (12 samples, 1.31%)</title><rect x="347.1" y="515.0" width="15.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.11%)</title><rect x="362.6" y="515.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="365.6" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (42 samples, 4.58%)</title><rect x="363.9" y="515.0" width="54.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="366.9" y="526.0">JavaC..</text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.11%)</title><rect x="375.5" y="499.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="378.5" y="510.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (3 samples, 0.33%)</title><rect x="376.7" y="499.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="379.7" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.11%)</title><rect x="380.6" y="499.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="383.6" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.11%)</title><rect x="381.9" y="499.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="384.9" y="510.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.33%)</title><rect x="383.2" y="499.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="386.2" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (11 samples, 1.20%)</title><rect x="387.0" y="499.0" width="14.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="390.0" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (4 samples, 0.44%)</title><rect x="394.8" y="483.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="397.8" y="494.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.11%)</title><rect x="399.9" y="483.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="402.9" y="494.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (4 samples, 0.44%)</title><rect x="401.2" y="499.0" width="5.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="404.2" y="510.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.11%)</title><rect x="406.3" y="499.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="409.3" y="510.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.11%)</title><rect x="407.6" y="499.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="410.6" y="510.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (7 samples, 0.76%)</title><rect x="408.9" y="499.0" width="9.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="411.9" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (6 samples, 0.65%)</title><rect x="417.9" y="515.0" width="7.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="420.9" y="526.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.11%)</title><rect x="425.6" y="515.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="428.6" y="526.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.33%)</title><rect x="426.9" y="515.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="429.9" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.11%)</title><rect x="430.8" y="531.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="433.8" y="542.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="432.1" y="563.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="435.1" y="574.0"></text>
</g>
<g>
<title>__lll_lock_wait (132 samples, 14.39%)</title><rect x="433.4" y="563.0" width="169.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="436.4" y="574.0">__lll_lock_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (103 samples, 11.23%)</title><rect x="470.7" y="547.0" width="132.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="473.7" y="558.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (103 samples, 11.23%)</title><rect x="470.7" y="531.0" width="132.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="473.7" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (68 samples, 7.42%)</title><rect x="481.0" y="515.0" width="87.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.0" y="526.0">__x64_sys_..</text>
</g>
<g>
<title>do_futex (59 samples, 6.43%)</title><rect x="491.3" y="499.0" width="75.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.3" y="510.0">do_futex</text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.11%)</title><rect x="502.8" y="483.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="505.8" y="494.0"></text>
</g>
<g>
<title>futex_wait (47 samples, 5.13%)</title><rect x="504.1" y="483.0" width="60.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="507.1" y="494.0">futex_..</text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 1.96%)</title><rect x="515.7" y="467.0" width="23.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.7" y="478.0">f..</text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.11%)</title><rect x="517.0" y="451.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="520.0" y="462.0"></text>
</g>
<g>
<title>plist_add (5 samples, 0.55%)</title><rect x="518.3" y="451.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.3" y="462.0"></text>
</g>
<g>
<title>schedule (11 samples, 1.20%)</title><rect x="524.7" y="451.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.7" y="462.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.76%)</title><rect x="529.9" y="435.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="532.9" y="446.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.22%)</title><rect x="536.3" y="419.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="539.3" y="430.0"></text>
</g>
<g>
<title>futex_wait_setup (17 samples, 1.85%)</title><rect x="538.9" y="467.0" width="21.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.9" y="478.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.44%)</title><rect x="541.5" y="451.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="544.5" y="462.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.65%)</title><rect x="546.6" y="451.0" width="7.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="549.6" y="462.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (4 samples, 0.44%)</title><rect x="549.2" y="435.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="552.2" y="446.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.11%)</title><rect x="554.3" y="451.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="557.3" y="462.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.44%)</title><rect x="555.6" y="451.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="558.6" y="462.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.33%)</title><rect x="560.8" y="467.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.8" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.22%)</title><rect x="564.6" y="483.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.6" y="494.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.11%)</title><rect x="567.2" y="499.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.2" y="510.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.33%)</title><rect x="568.5" y="515.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.5" y="526.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (20 samples, 2.18%)</title><rect x="572.3" y="515.0" width="25.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.3" y="526.0">s..</text>
</g>
<g>
<title>__audit_syscall_exit (11 samples, 1.20%)</title><rect x="583.9" y="499.0" width="14.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.9" y="510.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.22%)</title><rect x="594.2" y="483.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="597.2" y="494.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.11%)</title><rect x="596.8" y="483.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="599.8" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.44%)</title><rect x="598.1" y="515.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="601.1" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.33%)</title><rect x="599.4" y="499.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="602.4" y="510.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="601.9" y="483.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.9" y="494.0"></text>
</g>
<g>
<title>__lll_unlock_wake (234 samples, 25.52%)</title><rect x="603.2" y="563.0" width="301.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="606.2" y="574.0">__lll_unlock_wake</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (226 samples, 24.65%)</title><rect x="613.5" y="547.0" width="290.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="616.5" y="558.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (226 samples, 24.65%)</title><rect x="613.5" y="531.0" width="290.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="616.5" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (211 samples, 23.01%)</title><rect x="618.7" y="515.0" width="271.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="621.7" y="526.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (210 samples, 22.90%)</title><rect x="619.9" y="499.0" width="270.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="622.9" y="510.0">do_futex</text>
</g>
<g>
<title>futex_wake (208 samples, 22.68%)</title><rect x="619.9" y="483.0" width="267.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="622.9" y="494.0">futex_wake</text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.55%)</title><rect x="631.5" y="467.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="634.5" y="478.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.44%)</title><rect x="638.0" y="467.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.0" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.11%)</title><rect x="641.8" y="451.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.8" y="462.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.11%)</title><rect x="643.1" y="467.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.1" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (18 samples, 1.96%)</title><rect x="644.4" y="467.0" width="23.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="647.4" y="478.0">m..</text>
</g>
<g>
<title>__unqueue_futex (8 samples, 0.87%)</title><rect x="656.0" y="451.0" width="10.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.0" y="462.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.11%)</title><rect x="666.3" y="451.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.3" y="462.0"></text>
</g>
<g>
<title>wake_up_q (171 samples, 18.65%)</title><rect x="667.6" y="467.0" width="220.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="670.6" y="478.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (167 samples, 18.21%)</title><rect x="672.7" y="451.0" width="214.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="675.7" y="462.0">try_to_wake_up</text>
</g>
<g>
<title>__lock_text_start (167 samples, 18.21%)</title><rect x="672.7" y="435.0" width="214.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.7" y="446.0">__lock_text_start</text>
</g>
<g>
<title>hash_futex (2 samples, 0.22%)</title><rect x="887.6" y="483.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.6" y="494.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (4 samples, 0.44%)</title><rect x="890.2" y="515.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.2" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.33%)</title><rect x="891.5" y="499.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="894.5" y="510.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.11%)</title><rect x="894.0" y="483.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="897.0" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (7 samples, 0.76%)</title><rect x="895.3" y="515.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="898.3" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.55%)</title><rect x="897.9" y="499.0" width="6.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="900.9" y="510.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.22%)</title><rect x="901.8" y="483.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="904.8" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.11%)</title><rect x="904.3" y="563.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="907.3" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.11%)</title><rect x="905.6" y="563.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="908.6" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (22 samples, 2.40%)</title><rect x="906.9" y="563.0" width="28.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="909.9" y="574.0">jn..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.11%)</title><rect x="909.5" y="547.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="912.5" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 1.09%)</title><rect x="910.8" y="547.0" width="12.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="913.8" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (9 samples, 0.98%)</title><rect x="923.6" y="547.0" width="11.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="926.6" y="558.0"></text>
</g>
<g>
<title>jni_GetEnv (4 samples, 0.44%)</title><rect x="935.2" y="563.0" width="5.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="938.2" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 1.31%)</title><rect x="940.4" y="563.0" width="15.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="943.4" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.11%)</title><rect x="955.8" y="563.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="958.8" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (13 samples, 1.42%)</title><rect x="957.1" y="563.0" width="16.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="960.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (8 samples, 0.87%)</title><rect x="973.8" y="563.0" width="10.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="976.8" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.11%)</title><rect x="975.1" y="547.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="978.1" y="558.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.11%)</title><rect x="976.4" y="547.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.4" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.22%)</title><rect x="977.7" y="547.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="980.7" y="558.0"></text>
</g>
<g>
<title>jni_GetEnv (3 samples, 0.33%)</title><rect x="980.3" y="547.0" width="3.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="983.3" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.11%)</title><rect x="981.5" y="531.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="984.5" y="542.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.11%)</title><rect x="982.8" y="531.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="985.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.22%)</title><rect x="984.1" y="563.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="987.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.11%)</title><rect x="986.7" y="579.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="989.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.22%)</title><rect x="988.0" y="579.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="991.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() [clone .plt] (2 samples, 0.22%)</title><rect x="990.5" y="579.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="993.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.11%)</title><rect x="993.1" y="611.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="996.1" y="622.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.11%)</title><rect x="994.4" y="611.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="997.4" y="622.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) [clone .plt] (1 samples, 0.11%)</title><rect x="995.7" y="611.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="998.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.11%)</title><rect x="997.0" y="627.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1000.0" y="638.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.11%)</title><rect x="998.3" y="723.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1001.3" y="734.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.22%)</title><rect x="999.6" y="739.0" width="2.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1002.6" y="750.0"></text>
</g>
<g>
<title>call_stub (12 samples, 1.31%)</title><rect x="1002.1" y="739.0" width="15.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1005.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (14 samples, 1.53%)</title><rect x="1017.6" y="739.0" width="18.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.6" y="750.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.11%)</title><rect x="1035.6" y="739.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1038.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (106 samples, 11.56%)</title><rect x="1036.9" y="739.0" width="136.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.9" y="750.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (104 samples, 11.34%)</title><rect x="1039.4" y="723.0" width="133.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.4" y="734.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (103 samples, 11.23%)</title><rect x="1040.7" y="707.0" width="132.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.7" y="718.0">org/rocksdb/Abst..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (6 samples, 0.65%)</title><rect x="1040.7" y="691.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.7" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (97 samples, 10.58%)</title><rect x="1048.5" y="691.0" width="124.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1051.5" y="702.0">org/rocksdb/Sli..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (94 samples, 10.25%)</title><rect x="1052.3" y="675.0" width="121.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1055.3" y="686.0">org/rocksdb/Sli..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (80 samples, 8.72%)</title><rect x="1063.9" y="659.0" width="102.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1066.9" y="670.0">Java_org_roc..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.11%)</title><rect x="1074.2" y="643.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1077.2" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.11%)</title><rect x="1075.5" y="643.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1078.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="1076.8" y="643.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.8" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.11%)</title><rect x="1079.3" y="643.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1082.3" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.44%)</title><rect x="1080.6" y="643.0" width="5.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1083.6" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="1085.8" y="643.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1088.8" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.33%)</title><rect x="1087.1" y="643.0" width="3.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1090.1" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.11%)</title><rect x="1087.1" y="627.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1090.1" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.22%)</title><rect x="1088.3" y="627.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1091.3" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (46 samples, 5.02%)</title><rect x="1090.9" y="643.0" width="59.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1093.9" y="654.0">jni_Ne..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.33%)</title><rect x="1098.6" y="627.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1101.6" y="638.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.33%)</title><rect x="1102.5" y="627.0" width="3.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.5" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.55%)</title><rect x="1106.4" y="627.0" width="6.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.4" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.44%)</title><rect x="1112.8" y="627.0" width="5.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1115.8" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (25 samples, 2.73%)</title><rect x="1117.9" y="627.0" width="32.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.9" y="638.0">Ty..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (23 samples, 2.51%)</title><rect x="1119.2" y="611.0" width="29.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.2" y="622.0">Co..</text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.11%)</title><rect x="1120.5" y="595.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.5" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 1.64%)</title><rect x="1121.8" y="595.0" width="19.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.8" y="606.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.11%)</title><rect x="1129.5" y="579.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.11%)</title><rect x="1130.8" y="579.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.8" y="590.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.11%)</title><rect x="1130.8" y="563.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1133.8" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (5 samples, 0.55%)</title><rect x="1132.1" y="579.0" width="6.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.1" y="590.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.22%)</title><rect x="1138.5" y="579.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.5" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.44%)</title><rect x="1141.1" y="595.0" width="5.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1144.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.22%)</title><rect x="1146.2" y="595.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1149.2" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.11%)</title><rect x="1148.8" y="611.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.8" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 1.20%)</title><rect x="1150.1" y="643.0" width="14.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1153.1" y="654.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.11%)</title><rect x="1154.0" y="627.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.0" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.22%)</title><rect x="1155.3" y="627.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.3" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.44%)</title><rect x="1157.8" y="627.0" width="5.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1160.8" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.11%)</title><rect x="1163.0" y="627.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1166.0" y="638.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.11%)</title><rect x="1164.3" y="643.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1167.3" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.11%)</title><rect x="1165.6" y="643.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.6" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.11%)</title><rect x="1166.8" y="659.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1169.8" y="670.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.33%)</title><rect x="1168.1" y="659.0" width="3.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1171.1" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.11%)</title><rect x="1172.0" y="659.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1175.0" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.11%)</title><rect x="1173.3" y="739.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.toBytes (1 samples, 0.11%)</title><rect x="1174.6" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.11%)</title><rect x="1174.6" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="1174.6" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1177.6" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.11%)</title><rect x="1174.6" y="723.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.toBytes (1 samples, 0.11%)</title><rect x="1175.8" y="787.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.11%)</title><rect x="1175.8" y="771.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="1175.8" y="755.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1175.8" y="739.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1178.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.11%)</title><rect x="1177.1" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.11%)</title><rect x="1177.1" y="803.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1180.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.11%)</title><rect x="1177.1" y="787.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.11%)</title><rect x="1177.1" y="771.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.11%)</title><rect x="1177.1" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.33%)</title><rect x="1178.4" y="851.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.22%)</title><rect x="1178.4" y="835.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.11%)</title><rect x="1179.7" y="819.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1182.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1181.0" y="835.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1182.3" y="851.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.11%)</title><rect x="1182.3" y="835.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.55%)</title><rect x="1183.6" y="867.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.55%)</title><rect x="1183.6" y="851.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.11%)</title><rect x="1184.9" y="835.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.33%)</title><rect x="1186.1" y="835.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.1" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.33%)</title><rect x="1186.1" y="819.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1189.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.33%)</title><rect x="1186.1" y="803.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1189.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.33%)</title><rect x="1186.1" y="787.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1189.1" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.33%)</title><rect x="1186.1" y="771.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1189.1" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.33%)</title><rect x="1186.1" y="755.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1189.1" y="766.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.22%)</title><rect x="1186.1" y="739.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.1" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.11%)</title><rect x="1187.4" y="723.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.11%)</title><rect x="1188.7" y="739.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.7" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.11%)</title><rect x="1188.7" y="723.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.11%)</title><rect x="1188.7" y="707.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.11%)</title><rect x="1188.7" y="691.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
</g>
</svg>
