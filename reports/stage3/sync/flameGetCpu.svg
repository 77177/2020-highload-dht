<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (623 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.64%)</title><rect x="10.0" y="883.0" width="7.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (4 samples, 0.64%)</title><rect x="10.0" y="867.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.32%)</title><rect x="10.0" y="851.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.16%)</title><rect x="13.8" y="851.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.8" y="862.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (1 samples, 0.16%)</title><rect x="15.7" y="851.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.7" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (616 samples, 98.88%)</title><rect x="17.6" y="883.0" width="1166.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.6" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (11 samples, 1.77%)</title><rect x="17.6" y="867.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 1.61%)</title><rect x="19.5" y="851.0" width="18.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.44%)</title><rect x="19.5" y="835.0" width="17.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="22.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 1.44%)</title><rect x="19.5" y="819.0" width="17.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="22.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.96%)</title><rect x="25.2" y="803.0" width="11.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="28.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.96%)</title><rect x="25.2" y="787.0" width="11.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.96%)</title><rect x="25.2" y="771.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.2" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.96%)</title><rect x="25.2" y="755.0" width="11.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="28.2" y="766.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.96%)</title><rect x="25.2" y="739.0" width="11.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="28.2" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 0.32%)</title><rect x="28.9" y="723.0" width="3.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.9" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.32%)</title><rect x="28.9" y="707.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.9" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.32%)</title><rect x="28.9" y="691.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.9" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.16%)</title><rect x="30.8" y="675.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="33.8" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.16%)</title><rect x="30.8" y="659.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="33.8" y="670.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.32%)</title><rect x="32.7" y="723.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="35.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.32%)</title><rect x="32.7" y="707.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.7" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.32%)</title><rect x="32.7" y="691.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="35.7" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.32%)</title><rect x="32.7" y="675.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.7" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.32%)</title><rect x="32.7" y="659.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="35.7" y="670.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.16%)</title><rect x="36.5" y="835.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="39.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (605 samples, 97.11%)</title><rect x="38.4" y="867.0" width="1145.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.16%)</title><rect x="46.0" y="851.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (600 samples, 96.31%)</title><rect x="47.9" y="851.0" width="1136.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.9" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (581 samples, 93.26%)</title><rect x="49.8" y="835.0" width="1100.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.8" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>SharedRuntime::OSR_migration_begin(JavaThread*) (1 samples, 0.16%)</title><rect x="63.0" y="819.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="66.0" y="830.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.16%)</title><rect x="63.0" y="803.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="66.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (570 samples, 91.49%)</title><rect x="64.9" y="819.0" width="1079.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.9" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (570 samples, 91.49%)</title><rect x="64.9" y="803.0" width="1079.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.9" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (567 samples, 91.01%)</title><rect x="64.9" y="787.0" width="1074.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.9" y="798.0">RequestHandler0_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 10.75%)</title><rect x="64.9" y="771.0" width="126.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.9" y="782.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (65 samples, 10.43%)</title><rect x="64.9" y="755.0" width="123.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.9" y="766.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.64%)</title><rect x="64.9" y="739.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.16%)</title><rect x="66.8" y="723.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="66.8" y="707.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="69.8" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.16%)</title><rect x="66.8" y="691.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.8" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.32%)</title><rect x="68.7" y="723.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.32%)</title><rect x="68.7" y="707.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 9.79%)</title><rect x="72.5" y="739.0" width="115.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.5" y="750.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (61 samples, 9.79%)</title><rect x="72.5" y="723.0" width="115.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.5" y="734.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (61 samples, 9.79%)</title><rect x="72.5" y="707.0" width="115.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.5" y="718.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (61 samples, 9.79%)</title><rect x="72.5" y="691.0" width="115.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="75.5" y="702.0">one/nio/net/Na..</text>
</g>
<g>
<title>__libc_send (60 samples, 9.63%)</title><rect x="74.4" y="675.0" width="113.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="77.4" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 9.63%)</title><rect x="74.4" y="659.0" width="113.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.4" y="670.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (60 samples, 9.63%)</title><rect x="74.4" y="643.0" width="113.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="77.4" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (58 samples, 9.31%)</title><rect x="74.4" y="627.0" width="109.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="77.4" y="638.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (57 samples, 9.15%)</title><rect x="74.4" y="611.0" width="108.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.4" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (57 samples, 9.15%)</title><rect x="74.4" y="595.0" width="108.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="77.4" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (54 samples, 8.67%)</title><rect x="76.3" y="579.0" width="102.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="79.3" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.16%)</title><rect x="76.3" y="563.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.3" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.16%)</title><rect x="78.2" y="563.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (52 samples, 8.35%)</title><rect x="80.1" y="563.0" width="98.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="83.1" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="80.1" y="547.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.1" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.16%)</title><rect x="82.0" y="547.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="85.0" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.16%)</title><rect x="82.0" y="531.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="85.0" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 8.03%)</title><rect x="83.9" y="547.0" width="94.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.9" y="558.0">tcp_sendmsg..</text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.80%)</title><rect x="83.9" y="531.0" width="9.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.9" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.80%)</title><rect x="83.9" y="515.0" width="9.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.32%)</title><rect x="83.9" y="499.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="86.9" y="510.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.16%)</title><rect x="87.7" y="499.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.32%)</title><rect x="89.6" y="499.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="92.6" y="510.0"></text>
</g>
<g>
<title>tcp_push (45 samples, 7.22%)</title><rect x="93.3" y="531.0" width="85.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.3" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (45 samples, 7.22%)</title><rect x="93.3" y="515.0" width="85.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.3" y="526.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 7.22%)</title><rect x="93.3" y="499.0" width="85.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="96.3" y="510.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (45 samples, 7.22%)</title><rect x="93.3" y="483.0" width="85.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.3" y="494.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (44 samples, 7.06%)</title><rect x="95.2" y="467.0" width="83.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.2" y="478.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 7.06%)</title><rect x="95.2" y="451.0" width="83.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.2" y="462.0">__ip_queu..</text>
</g>
<g>
<title>ip_local_out (44 samples, 7.06%)</title><rect x="95.2" y="435.0" width="83.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.2" y="446.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (7 samples, 1.12%)</title><rect x="95.2" y="419.0" width="13.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.2" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="95.2" y="403.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.2" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.96%)</title><rect x="97.1" y="403.0" width="11.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.1" y="414.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="97.1" y="387.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="100.1" y="398.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.16%)</title><rect x="99.0" y="387.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.0" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.16%)</title><rect x="99.0" y="371.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.0" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (4 samples, 0.64%)</title><rect x="100.9" y="387.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.9" y="398.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.16%)</title><rect x="100.9" y="371.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="103.9" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (3 samples, 0.48%)</title><rect x="102.8" y="371.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.8" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (2 samples, 0.32%)</title><rect x="102.8" y="355.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.8" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.16%)</title><rect x="106.6" y="355.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="109.6" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.16%)</title><rect x="106.6" y="339.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.6" y="350.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.16%)</title><rect x="106.6" y="323.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="109.6" y="334.0"></text>
</g>
<g>
<title>ip_output (37 samples, 5.94%)</title><rect x="108.5" y="419.0" width="70.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="111.5" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (36 samples, 5.78%)</title><rect x="110.4" y="403.0" width="68.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="113.4" y="414.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (36 samples, 5.78%)</title><rect x="110.4" y="387.0" width="68.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.4" y="398.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (36 samples, 5.78%)</title><rect x="110.4" y="371.0" width="68.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.4" y="382.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 4.98%)</title><rect x="110.4" y="355.0" width="58.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.4" y="366.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (31 samples, 4.98%)</title><rect x="110.4" y="339.0" width="58.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="113.4" y="350.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 4.98%)</title><rect x="110.4" y="323.0" width="58.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="113.4" y="334.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 4.82%)</title><rect x="110.4" y="307.0" width="56.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.4" y="318.0">__soft..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.16%)</title><rect x="112.3" y="291.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.3" y="302.0"></text>
</g>
<g>
<title>net_rx_action (28 samples, 4.49%)</title><rect x="114.2" y="291.0" width="53.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="117.2" y="302.0">net_r..</text>
</g>
<g>
<title>process_backlog (27 samples, 4.33%)</title><rect x="116.1" y="275.0" width="51.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.1" y="286.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (26 samples, 4.17%)</title><rect x="118.0" y="259.0" width="49.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="121.0" y="270.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 4.17%)</title><rect x="118.0" y="243.0" width="49.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.0" y="254.0">__net..</text>
</g>
<g>
<title>ip_rcv (24 samples, 3.85%)</title><rect x="119.9" y="227.0" width="45.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="122.9" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.16%)</title><rect x="119.9" y="211.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="122.9" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 3.37%)</title><rect x="121.7" y="211.0" width="39.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="124.7" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (21 samples, 3.37%)</title><rect x="121.7" y="195.0" width="39.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.7" y="206.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 3.21%)</title><rect x="121.7" y="179.0" width="37.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="124.7" y="190.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 3.21%)</title><rect x="121.7" y="163.0" width="37.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="124.7" y="174.0">ip_..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.16%)</title><rect x="121.7" y="147.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 3.05%)</title><rect x="123.6" y="147.0" width="36.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="126.6" y="158.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="125.5" y="131.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="128.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 2.73%)</title><rect x="127.4" y="131.0" width="32.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="130.4" y="142.0">tc..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.16%)</title><rect x="127.4" y="115.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="130.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 2.57%)</title><rect x="129.3" y="115.0" width="30.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="132.3" y="126.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.16%)</title><rect x="129.3" y="99.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="132.3" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.16%)</title><rect x="129.3" y="83.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="132.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.16%)</title><rect x="129.3" y="67.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.3" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.16%)</title><rect x="129.3" y="51.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="132.3" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.16%)</title><rect x="131.2" y="99.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="134.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 1.12%)</title><rect x="133.1" y="99.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.1" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.80%)</title><rect x="136.9" y="83.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.48%)</title><rect x="138.8" y="67.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="141.8" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.32%)</title><rect x="138.8" y="51.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="141.8" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.32%)</title><rect x="138.8" y="35.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.8" y="46.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.16%)</title><rect x="142.6" y="51.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.6" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.16%)</title><rect x="142.6" y="35.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.6" y="46.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.16%)</title><rect x="144.5" y="67.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="147.5" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (7 samples, 1.12%)</title><rect x="146.4" y="99.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 1.12%)</title><rect x="146.4" y="83.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="149.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.96%)</title><rect x="148.3" y="67.0" width="11.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.96%)</title><rect x="148.3" y="51.0" width="11.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.3" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.96%)</title><rect x="148.3" y="35.0" width="11.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="151.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="159.6" y="179.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.6" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.16%)</title><rect x="159.6" y="163.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="162.6" y="174.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.16%)</title><rect x="159.6" y="147.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.6" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.16%)</title><rect x="161.5" y="211.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="164.5" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag?[nf_defrag_ipv4] (1 samples, 0.16%)</title><rect x="163.4" y="211.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="166.4" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.16%)</title><rect x="165.3" y="227.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="168.3" y="238.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.16%)</title><rect x="167.2" y="307.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="170.2" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.80%)</title><rect x="169.1" y="355.0" width="9.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="172.1" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.80%)</title><rect x="169.1" y="339.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="172.1" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.32%)</title><rect x="169.1" y="323.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.1" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.32%)</title><rect x="169.1" y="307.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="172.1" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.16%)</title><rect x="169.1" y="291.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.1" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.16%)</title><rect x="169.1" y="275.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="172.1" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.16%)</title><rect x="169.1" y="259.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="172.1" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.16%)</title><rect x="171.0" y="291.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.0" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.32%)</title><rect x="172.9" y="323.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="175.9" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.16%)</title><rect x="176.7" y="323.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.7" y="334.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.32%)</title><rect x="178.6" y="579.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.6" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.16%)</title><rect x="178.6" y="563.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.6" y="574.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.16%)</title><rect x="180.5" y="563.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="183.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.16%)</title><rect x="180.5" y="547.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="183.5" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.16%)</title><rect x="180.5" y="531.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="183.5" y="542.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.16%)</title><rect x="182.4" y="611.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="185.4" y="622.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="184.3" y="627.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="187.3" y="638.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="186.1" y="627.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.1" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="186.1" y="611.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.1" y="622.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.16%)</title><rect x="186.1" y="595.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.32%)</title><rect x="188.0" y="755.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.32%)</title><rect x="188.0" y="739.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="191.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (500 samples, 80.26%)</title><rect x="191.8" y="771.0" width="947.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.8" y="782.0">ru/mail/polis/service/stasyanoi/CustomServer.get</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (498 samples, 79.94%)</title><rect x="193.7" y="755.0" width="943.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.7" y="766.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (498 samples, 79.94%)</title><rect x="193.7" y="739.0" width="943.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.7" y="750.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (498 samples, 79.94%)</title><rect x="193.7" y="723.0" width="943.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.7" y="734.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.64%)</title><rect x="193.7" y="707.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.7" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (402 samples, 64.53%)</title><rect x="201.3" y="707.0" width="761.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="204.3" y="718.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>__malloc (1 samples, 0.16%)</title><rect x="203.2" y="691.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="206.2" y="702.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.16%)</title><rect x="205.1" y="691.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="208.1" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.16%)</title><rect x="207.0" y="691.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="210.0" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.16%)</title><rect x="208.9" y="691.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="211.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (2 samples, 0.32%)</title><rect x="210.8" y="691.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="213.8" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (395 samples, 63.40%)</title><rect x="214.6" y="691.0" width="748.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="217.6" y="702.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _j..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (395 samples, 63.40%)</title><rect x="214.6" y="675.0" width="748.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="217.6" y="686.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*)</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (395 samples, 63.40%)</title><rect x="214.6" y="659.0" width="748.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="217.6" y="670.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (394 samples, 63.24%)</title><rect x="216.5" y="643.0" width="746.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="219.5" y="654.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, r..</text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.16%)</title><rect x="216.5" y="627.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="219.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (391 samples, 62.76%)</title><rect x="218.3" y="627.0" width="740.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="221.3" y="638.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOp..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.16%)</title><rect x="220.2" y="611.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="223.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.16%)</title><rect x="220.2" y="595.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="223.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.16%)</title><rect x="220.2" y="579.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="223.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.16%)</title><rect x="222.1" y="611.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="225.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.16%)</title><rect x="224.0" y="611.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="227.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.16%)</title><rect x="224.0" y="595.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="227.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (387 samples, 62.12%)</title><rect x="225.9" y="611.0" width="733.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="228.9" y="622.0">rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContex..</text>
</g>
<g>
<title>/tmp/librocksdbjni3634095232965951465.so (386 samples, 61.96%)</title><rect x="225.9" y="595.0" width="731.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="228.9" y="606.0">/tmp/librocksdbjni3634095232965951465.so</text>
</g>
<g>
<title>/tmp/librocksdbjni3634095232965951465.so (14 samples, 2.25%)</title><rect x="227.8" y="579.0" width="26.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="230.8" y="590.0">/..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 2.25%)</title><rect x="227.8" y="563.0" width="26.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="230.8" y="574.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.16%)</title><rect x="227.8" y="547.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="230.8" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.16%)</title><rect x="227.8" y="531.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="230.8" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.16%)</title><rect x="227.8" y="515.0" width="1.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="230.8" y="526.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.16%)</title><rect x="227.8" y="499.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="230.8" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 0.96%)</title><rect x="229.7" y="547.0" width="11.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="232.7" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 0.96%)</title><rect x="229.7" y="531.0" width="11.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="232.7" y="542.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.16%)</title><rect x="229.7" y="515.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="232.7" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 0.80%)</title><rect x="231.6" y="515.0" width="9.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="234.6" y="526.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.16%)</title><rect x="231.6" y="499.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="234.6" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.16%)</title><rect x="233.5" y="499.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="236.5" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.48%)</title><rect x="235.4" y="499.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="238.4" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.16%)</title><rect x="237.3" y="483.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="240.3" y="494.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.16%)</title><rect x="239.2" y="483.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="242.2" y="494.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.48%)</title><rect x="241.1" y="547.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="244.1" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.48%)</title><rect x="241.1" y="531.0" width="5.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.48%)</title><rect x="241.1" y="515.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.32%)</title><rect x="241.1" y="499.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.1" y="510.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.32%)</title><rect x="241.1" y="483.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="244.1" y="494.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.32%)</title><rect x="241.1" y="467.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="244.1" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.16%)</title><rect x="241.1" y="451.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.1" y="462.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.16%)</title><rect x="243.0" y="451.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="246.0" y="462.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="244.9" y="499.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="247.9" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="244.9" y="483.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.9" y="494.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.48%)</title><rect x="246.8" y="547.0" width="5.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="249.8" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.48%)</title><rect x="246.8" y="531.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.48%)</title><rect x="246.8" y="515.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.48%)</title><rect x="246.8" y="499.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="249.8" y="510.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.48%)</title><rect x="246.8" y="483.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="249.8" y="494.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.48%)</title><rect x="246.8" y="467.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="249.8" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.16%)</title><rect x="248.7" y="451.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="251.7" y="462.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.16%)</title><rect x="250.5" y="451.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.5" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.16%)</title><rect x="250.5" y="435.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.5" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.16%)</title><rect x="250.5" y="419.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.5" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.16%)</title><rect x="252.4" y="547.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="255.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (370 samples, 59.39%)</title><rect x="254.3" y="579.0" width="700.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="257.3" y="590.0">rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.32%)</title><rect x="263.8" y="563.0" width="3.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="266.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (363 samples, 58.27%)</title><rect x="267.6" y="563.0" width="687.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="270.6" y="574.0">rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.32%)</title><rect x="271.4" y="547.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="274.4" y="558.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.16%)</title><rect x="275.2" y="547.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="278.2" y="558.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) [clone .plt] (1 samples, 0.16%)</title><rect x="277.1" y="547.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="280.1" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.32%)</title><rect x="279.0" y="547.0" width="3.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="282.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (353 samples, 56.66%)</title><rect x="282.7" y="547.0" width="668.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="285.7" y="558.0">rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (28 samples, 4.49%)</title><rect x="294.1" y="531.0" width="53.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="297.1" y="542.0">JNIEn..</text>
</g>
<g>
<title>jni_CallIntMethodV (28 samples, 4.49%)</title><rect x="294.1" y="515.0" width="53.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="297.1" y="526.0">jni_C..</text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.16%)</title><rect x="296.0" y="499.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="299.0" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.32%)</title><rect x="297.9" y="499.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="300.9" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="301.7" y="499.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="304.7" y="510.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (23 samples, 3.69%)</title><rect x="303.6" y="499.0" width="43.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="306.6" y="510.0">jni_..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.16%)</title><rect x="313.0" y="483.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="316.0" y="494.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (3 samples, 0.48%)</title><rect x="314.9" y="483.0" width="5.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="317.9" y="494.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.16%)</title><rect x="320.6" y="483.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="323.6" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 1.61%)</title><rect x="322.5" y="483.0" width="19.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="325.5" y="494.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.32%)</title><rect x="330.1" y="467.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="333.1" y="478.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.48%)</title><rect x="333.9" y="467.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="336.9" y="478.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.16%)</title><rect x="337.7" y="451.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="340.7" y="462.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.16%)</title><rect x="339.6" y="467.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="342.6" y="478.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.48%)</title><rect x="341.5" y="483.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="344.5" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (59 samples, 9.47%)</title><rect x="347.1" y="531.0" width="111.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="350.1" y="542.0">JNIEnv_::Call..</text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.16%)</title><rect x="347.1" y="515.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="350.1" y="526.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (57 samples, 9.15%)</title><rect x="349.0" y="515.0" width="108.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="352.0" y="526.0">jni_CallVoidM..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="352.8" y="499.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="355.8" y="510.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.32%)</title><rect x="354.7" y="499.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="357.7" y="510.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.16%)</title><rect x="358.5" y="499.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="361.5" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.16%)</title><rect x="360.4" y="499.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="363.4" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.32%)</title><rect x="362.3" y="499.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="365.3" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.48%)</title><rect x="366.1" y="499.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="369.1" y="510.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (43 samples, 6.90%)</title><rect x="371.8" y="499.0" width="81.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="374.8" y="510.0">jni_invok..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="385.0" y="483.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="388.0" y="494.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.16%)</title><rect x="386.9" y="483.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="389.9" y="494.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.32%)</title><rect x="388.8" y="483.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="391.8" y="494.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.16%)</title><rect x="392.6" y="483.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="395.6" y="494.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (26 samples, 4.17%)</title><rect x="394.5" y="483.0" width="49.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="397.5" y="494.0">JavaC..</text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.16%)</title><rect x="398.3" y="467.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="401.3" y="478.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (6 samples, 0.96%)</title><rect x="400.2" y="467.0" width="11.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="403.2" y="478.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (11 samples, 1.77%)</title><rect x="411.5" y="467.0" width="20.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="414.5" y="478.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (3 samples, 0.48%)</title><rect x="424.8" y="451.0" width="5.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="427.8" y="462.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.16%)</title><rect x="430.5" y="451.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="433.5" y="462.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.16%)</title><rect x="432.4" y="467.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="435.4" y="478.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.16%)</title><rect x="434.3" y="467.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="437.3" y="478.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (4 samples, 0.64%)</title><rect x="436.2" y="467.0" width="7.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="439.2" y="478.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.16%)</title><rect x="441.8" y="451.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="444.8" y="462.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.16%)</title><rect x="443.7" y="483.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="446.7" y="494.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.32%)</title><rect x="445.6" y="483.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="448.6" y="494.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (2 samples, 0.32%)</title><rect x="449.4" y="483.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="452.4" y="494.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.16%)</title><rect x="453.2" y="499.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="456.2" y="510.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.16%)</title><rect x="455.1" y="499.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="458.1" y="510.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.16%)</title><rect x="457.0" y="515.0" width="1.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="460.0" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.16%)</title><rect x="458.9" y="531.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="461.9" y="542.0"></text>
</g>
<g>
<title>__lll_lock_wait (91 samples, 14.61%)</title><rect x="460.8" y="531.0" width="172.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="463.8" y="542.0">__lll_lock_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 11.72%)</title><rect x="494.9" y="515.0" width="138.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="497.9" y="526.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (73 samples, 11.72%)</title><rect x="494.9" y="499.0" width="138.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="497.9" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="502.5" y="483.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="505.5" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="504.3" y="483.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="507.3" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (54 samples, 8.67%)</title><rect x="506.2" y="483.0" width="102.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="509.2" y="494.0">__x64_sys_fu..</text>
</g>
<g>
<title>do_futex (46 samples, 7.38%)</title><rect x="519.5" y="467.0" width="87.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.5" y="478.0">do_futex</text>
</g>
<g>
<title>futex_wait (43 samples, 6.90%)</title><rect x="525.2" y="451.0" width="81.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="528.2" y="462.0">futex_wait</text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.16%)</title><rect x="547.9" y="435.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="550.9" y="446.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 2.25%)</title><rect x="549.8" y="435.0" width="26.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="552.8" y="446.0">f..</text>
</g>
<g>
<title>plist_add (2 samples, 0.32%)</title><rect x="561.2" y="419.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="564.2" y="430.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.96%)</title><rect x="565.0" y="419.0" width="11.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.0" y="430.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.80%)</title><rect x="566.9" y="403.0" width="9.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.9" y="414.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.64%)</title><rect x="568.7" y="387.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="571.7" y="398.0"></text>
</g>
<g>
<title>futex_wait_setup (14 samples, 2.25%)</title><rect x="576.3" y="435.0" width="26.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="579.3" y="446.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="583.9" y="419.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.9" y="430.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.16%)</title><rect x="583.9" y="403.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.9" y="414.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.64%)</title><rect x="585.8" y="419.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="588.8" y="430.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (4 samples, 0.64%)</title><rect x="585.8" y="403.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.8" y="414.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.80%)</title><rect x="593.4" y="419.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="596.4" y="430.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.16%)</title><rect x="602.8" y="435.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.8" y="446.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.16%)</title><rect x="604.7" y="435.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.7" y="446.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.16%)</title><rect x="606.6" y="467.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.6" y="478.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (10 samples, 1.61%)</title><rect x="608.5" y="483.0" width="19.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.5" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.80%)</title><rect x="618.0" y="467.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="621.0" y="478.0"></text>
</g>
<g>
<title>dput (1 samples, 0.16%)</title><rect x="623.7" y="451.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="626.7" y="462.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.16%)</title><rect x="625.6" y="451.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.6" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.48%)</title><rect x="627.5" y="483.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="630.5" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.48%)</title><rect x="627.5" y="467.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="630.5" y="478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (139 samples, 22.31%)</title><rect x="633.1" y="531.0" width="263.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="636.1" y="542.0">__lll_unlock_wake</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (138 samples, 22.15%)</title><rect x="635.0" y="515.0" width="261.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="638.0" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (138 samples, 22.15%)</title><rect x="635.0" y="499.0" width="261.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (132 samples, 21.19%)</title><rect x="642.6" y="483.0" width="250.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.6" y="494.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (130 samples, 20.87%)</title><rect x="644.5" y="467.0" width="246.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.5" y="478.0">do_futex</text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.16%)</title><rect x="644.5" y="451.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.5" y="462.0"></text>
</g>
<g>
<title>futex_wake (129 samples, 20.71%)</title><rect x="646.4" y="451.0" width="244.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.4" y="462.0">futex_wake</text>
</g>
<g>
<title>get_futex_key (4 samples, 0.64%)</title><rect x="661.6" y="435.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="664.6" y="446.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (3 samples, 0.48%)</title><rect x="663.5" y="419.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="666.5" y="430.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.16%)</title><rect x="669.1" y="435.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.1" y="446.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.64%)</title><rect x="671.0" y="435.0" width="7.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.0" y="446.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.32%)</title><rect x="674.8" y="419.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="677.8" y="430.0"></text>
</g>
<g>
<title>wake_up_q (112 samples, 17.98%)</title><rect x="678.6" y="435.0" width="212.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.6" y="446.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (110 samples, 17.66%)</title><rect x="682.4" y="419.0" width="208.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="685.4" y="430.0">try_to_wake_up</text>
</g>
<g>
<title>__lock_text_start (108 samples, 17.34%)</title><rect x="686.2" y="403.0" width="204.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="689.2" y="414.0">__lock_text_start</text>
</g>
<g>
<title>futex_wake (1 samples, 0.16%)</title><rect x="890.7" y="467.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="893.7" y="478.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.16%)</title><rect x="892.6" y="483.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.6" y="494.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.16%)</title><rect x="892.6" y="467.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.6" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.16%)</title><rect x="894.5" y="483.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.5" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="894.5" y="467.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.5" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.32%)</title><rect x="896.4" y="531.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="899.4" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (7 samples, 1.12%)</title><rect x="900.2" y="531.0" width="13.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="903.2" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.32%)</title><rect x="902.1" y="515.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="905.1" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.64%)</title><rect x="905.9" y="515.0" width="7.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="908.9" y="526.0"></text>
</g>
<g>
<title>pthread_mutex_lock (8 samples, 1.28%)</title><rect x="913.5" y="531.0" width="15.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="916.5" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 1.28%)</title><rect x="928.6" y="531.0" width="15.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="931.6" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.16%)</title><rect x="943.8" y="531.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="946.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.48%)</title><rect x="945.7" y="531.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="948.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.32%)</title><rect x="951.3" y="547.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="954.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) [clone .plt] (1 samples, 0.16%)</title><rect x="955.1" y="579.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="958.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="957.0" y="595.0" width="1.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="960.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (2 samples, 0.32%)</title><rect x="958.9" y="627.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="961.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="962.7" y="707.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="965.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.16%)</title><rect x="962.7" y="691.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="965.7" y="702.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) [clone .plt] (1 samples, 0.16%)</title><rect x="962.7" y="675.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="965.7" y="686.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.16%)</title><rect x="964.6" y="707.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="967.6" y="718.0"></text>
</g>
<g>
<title>call_stub (9 samples, 1.44%)</title><rect x="966.5" y="707.0" width="17.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="969.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (8 samples, 1.28%)</title><rect x="983.5" y="707.0" width="15.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.16%)</title><rect x="998.7" y="707.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.7" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.16%)</title><rect x="1000.6" y="707.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (71 samples, 11.40%)</title><rect x="1002.5" y="707.0" width="134.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.5" y="718.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (69 samples, 11.08%)</title><rect x="1006.3" y="691.0" width="130.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1009.3" y="702.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.16%)</title><rect x="1008.2" y="675.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.2" y="686.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.16%)</title><rect x="1008.2" y="659.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (67 samples, 10.75%)</title><rect x="1010.1" y="675.0" width="126.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.1" y="686.0">org/rocksdb/Abst..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (3 samples, 0.48%)</title><rect x="1010.1" y="659.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (64 samples, 10.27%)</title><rect x="1015.7" y="659.0" width="121.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.7" y="670.0">org/rocksdb/Sli..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (63 samples, 10.11%)</title><rect x="1017.6" y="643.0" width="119.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1020.6" y="654.0">org/rocksdb/Sli..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (55 samples, 8.83%)</title><rect x="1027.1" y="627.0" width="104.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1030.1" y="638.0">Java_org_roc..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="1030.9" y="611.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1033.9" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.32%)</title><rect x="1032.8" y="611.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1035.8" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="1036.6" y="611.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1039.6" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="1038.5" y="611.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1041.5" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.64%)</title><rect x="1040.4" y="611.0" width="7.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1043.4" y="622.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.16%)</title><rect x="1042.3" y="595.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1045.3" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.32%)</title><rect x="1044.2" y="595.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.2" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (33 samples, 5.30%)</title><rect x="1047.9" y="611.0" width="62.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1050.9" y="622.0">jni_Ne..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.16%)</title><rect x="1053.6" y="595.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1056.6" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.80%)</title><rect x="1055.5" y="595.0" width="9.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1058.5" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="1065.0" y="595.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1068.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 0.80%)</title><rect x="1066.9" y="595.0" width="9.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1069.9" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 2.89%)</title><rect x="1076.4" y="595.0" width="34.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1079.4" y="606.0">Ty..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 2.41%)</title><rect x="1082.0" y="579.0" width="28.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1085.0" y="590.0">Co..</text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.32%)</title><rect x="1082.0" y="563.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1085.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 1.77%)</title><rect x="1085.8" y="563.0" width="20.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1088.8" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (5 samples, 0.80%)</title><rect x="1093.4" y="547.0" width="9.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1096.4" y="558.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.16%)</title><rect x="1102.9" y="547.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1105.9" y="558.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.16%)</title><rect x="1104.8" y="547.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1107.8" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.16%)</title><rect x="1106.7" y="563.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1109.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.16%)</title><rect x="1108.6" y="563.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1111.6" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 1.77%)</title><rect x="1110.4" y="611.0" width="20.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1113.4" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.16%)</title><rect x="1114.2" y="595.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.2" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.16%)</title><rect x="1116.1" y="595.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.1" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="1118.0" y="595.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.64%)</title><rect x="1119.9" y="595.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.9" y="606.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.32%)</title><rect x="1127.5" y="595.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1130.5" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.16%)</title><rect x="1129.4" y="579.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.4" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.32%)</title><rect x="1131.3" y="627.0" width="3.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1134.3" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.16%)</title><rect x="1135.1" y="627.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1138.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.toBytes (1 samples, 0.16%)</title><rect x="1137.0" y="755.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.16%)</title><rect x="1137.0" y="739.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.16%)</title><rect x="1137.0" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1140.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.16%)</title><rect x="1137.0" y="707.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.16%)</title><rect x="1137.0" y="691.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1140.0" y="702.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (1 samples, 0.16%)</title><rect x="1138.9" y="787.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1141.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (1 samples, 0.16%)</title><rect x="1138.9" y="771.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.16%)</title><rect x="1138.9" y="755.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1141.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.16%)</title><rect x="1138.9" y="739.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.16%)</title><rect x="1138.9" y="723.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.16%)</title><rect x="1140.8" y="787.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.16%)</title><rect x="1140.8" y="771.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.16%)</title><rect x="1140.8" y="755.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.16%)</title><rect x="1140.8" y="739.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.16%)</title><rect x="1142.6" y="787.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.16%)</title><rect x="1142.6" y="771.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1145.6" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.16%)</title><rect x="1142.6" y="755.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1142.6" y="739.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1145.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.32%)</title><rect x="1144.5" y="819.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.16%)</title><rect x="1144.5" y="803.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="1144.5" y="787.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.16%)</title><rect x="1144.5" y="771.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.16%)</title><rect x="1144.5" y="755.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="1146.4" y="803.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1149.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.16%)</title><rect x="1146.4" y="787.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1149.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.16%)</title><rect x="1148.3" y="819.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 2.89%)</title><rect x="1150.2" y="835.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.2" y="846.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 2.89%)</title><rect x="1150.2" y="819.0" width="34.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1153.2" y="830.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.64%)</title><rect x="1150.2" y="803.0" width="7.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1153.2" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.16%)</title><rect x="1150.2" y="787.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.2" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.16%)</title><rect x="1152.1" y="787.0" width="1.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1155.1" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.32%)</title><rect x="1154.0" y="787.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1157.0" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.16%)</title><rect x="1154.0" y="771.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.0" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.16%)</title><rect x="1155.9" y="771.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1158.9" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.16%)</title><rect x="1155.9" y="755.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.9" y="766.0"></text>
</g>
<g>
<title>__GI___recv (14 samples, 2.25%)</title><rect x="1157.8" y="803.0" width="26.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1160.8" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 2.25%)</title><rect x="1157.8" y="787.0" width="26.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.8" y="798.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.16%)</title><rect x="1157.8" y="771.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1160.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 2.09%)</title><rect x="1159.7" y="771.0" width="24.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1162.7" y="782.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 1.77%)</title><rect x="1163.5" y="755.0" width="20.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1166.5" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 1.77%)</title><rect x="1163.5" y="739.0" width="20.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.5" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 1.61%)</title><rect x="1163.5" y="723.0" width="18.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1166.5" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 1.12%)</title><rect x="1163.5" y="707.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 1.12%)</title><rect x="1163.5" y="691.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.5" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.32%)</title><rect x="1167.3" y="675.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1170.3" y="686.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.32%)</title><rect x="1167.3" y="659.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.3" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.16%)</title><rect x="1167.3" y="643.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.3" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.16%)</title><rect x="1169.2" y="643.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1172.2" y="654.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.16%)</title><rect x="1169.2" y="627.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.2" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.32%)</title><rect x="1171.1" y="675.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1174.1" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.32%)</title><rect x="1171.1" y="659.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1174.1" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.32%)</title><rect x="1171.1" y="643.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.1" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="1171.1" y="627.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1174.1" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.16%)</title><rect x="1173.0" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.0" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.16%)</title><rect x="1173.0" y="611.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.0" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.16%)</title><rect x="1174.8" y="675.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.32%)</title><rect x="1176.7" y="707.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.7" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.32%)</title><rect x="1176.7" y="691.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.7" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.32%)</title><rect x="1176.7" y="675.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.7" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.16%)</title><rect x="1178.6" y="659.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1181.6" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.16%)</title><rect x="1178.6" y="643.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1181.6" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.16%)</title><rect x="1178.6" y="627.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.6" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.16%)</title><rect x="1180.5" y="707.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.16%)</title><rect x="1182.4" y="723.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.16%)</title><rect x="1182.4" y="707.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.16%)</title><rect x="1182.4" y="691.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.48%)</title><rect x="1184.3" y="883.0" width="5.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.3" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.48%)</title><rect x="1184.3" y="867.0" width="5.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1187.3" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.48%)</title><rect x="1184.3" y="851.0" width="5.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.3" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.48%)</title><rect x="1184.3" y="835.0" width="5.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.48%)</title><rect x="1184.3" y="819.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.48%)</title><rect x="1184.3" y="803.0" width="5.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.48%)</title><rect x="1184.3" y="787.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.3" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.48%)</title><rect x="1184.3" y="771.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.3" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.32%)</title><rect x="1184.3" y="755.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.16%)</title><rect x="1184.3" y="739.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.16%)</title><rect x="1184.3" y="723.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.16%)</title><rect x="1184.3" y="707.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.16%)</title><rect x="1186.2" y="739.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.16%)</title><rect x="1186.2" y="723.0" width="1.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.16%)</title><rect x="1186.2" y="707.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="718.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.16%)</title><rect x="1186.2" y="691.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.16%)</title><rect x="1188.1" y="755.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="766.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.16%)</title><rect x="1188.1" y="739.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.1" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.16%)</title><rect x="1188.1" y="723.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.16%)</title><rect x="1188.1" y="707.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.16%)</title><rect x="1188.1" y="691.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="702.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.16%)</title><rect x="1188.1" y="675.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
</g>
</svg>
