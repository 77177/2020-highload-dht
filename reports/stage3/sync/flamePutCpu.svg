<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (197 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.51%)</title><rect x="10.0" y="883.0" width="6.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.51%)</title><rect x="10.0" y="867.0" width="6.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (196 samples, 99.49%)</title><rect x="16.0" y="883.0" width="1174.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.0" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.51%)</title><rect x="39.9" y="867.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.51%)</title><rect x="45.9" y="867.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 6.60%)</title><rect x="51.9" y="867.0" width="77.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.9" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 6.09%)</title><rect x="57.9" y="851.0" width="71.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.9" y="862.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.51%)</title><rect x="63.9" y="835.0" width="6.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="66.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 4.06%)</title><rect x="69.9" y="835.0" width="47.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="72.9" y="846.0">[unk..</text>
</g>
<g>
<title>epoll_wait (8 samples, 4.06%)</title><rect x="69.9" y="819.0" width="47.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="72.9" y="830.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 4.06%)</title><rect x="69.9" y="803.0" width="47.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="72.9" y="814.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 4.06%)</title><rect x="69.9" y="787.0" width="47.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="72.9" y="798.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 3.55%)</title><rect x="69.9" y="771.0" width="41.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="72.9" y="782.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (7 samples, 3.55%)</title><rect x="69.9" y="755.0" width="41.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.9" y="766.0">do_..</text>
</g>
<g>
<title>ep_poll (6 samples, 3.05%)</title><rect x="69.9" y="739.0" width="35.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.9" y="750.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 2.03%)</title><rect x="69.9" y="723.0" width="24.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="72.9" y="734.0">e..</text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.51%)</title><rect x="81.9" y="707.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="84.9" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.51%)</title><rect x="81.9" y="691.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.9" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.51%)</title><rect x="81.9" y="675.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="84.9" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.51%)</title><rect x="81.9" y="659.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.9" y="670.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.51%)</title><rect x="87.9" y="707.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.9" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.51%)</title><rect x="87.9" y="691.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.9" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 1.02%)</title><rect x="93.9" y="723.0" width="11.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 1.02%)</title><rect x="93.9" y="707.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.9" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 1.02%)</title><rect x="93.9" y="691.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="96.9" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.51%)</title><rect x="99.8" y="675.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.8" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.51%)</title><rect x="99.8" y="659.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.8" y="670.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.51%)</title><rect x="105.8" y="739.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.8" y="750.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.51%)</title><rect x="111.8" y="771.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.8" y="782.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.51%)</title><rect x="111.8" y="755.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.8" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 1.02%)</title><rect x="117.8" y="835.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="120.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 1.02%)</title><rect x="117.8" y="819.0" width="12.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="120.8" y="830.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 1.02%)</title><rect x="117.8" y="803.0" width="12.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="120.8" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.51%)</title><rect x="123.8" y="787.0" width="6.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="126.8" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.51%)</title><rect x="123.8" y="771.0" width="6.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="126.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (177 samples, 89.85%)</title><rect x="129.8" y="867.0" width="1060.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.8" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (177 samples, 89.85%)</title><rect x="129.8" y="851.0" width="1060.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.8" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (169 samples, 85.79%)</title><rect x="129.8" y="835.0" width="1012.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.8" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (166 samples, 84.26%)</title><rect x="129.8" y="819.0" width="994.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.8" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (166 samples, 84.26%)</title><rect x="129.8" y="803.0" width="994.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.8" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (165 samples, 83.76%)</title><rect x="129.8" y="787.0" width="988.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.8" y="798.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (24 samples, 12.18%)</title><rect x="129.8" y="771.0" width="143.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.8" y="782.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.51%)</title><rect x="129.8" y="755.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="132.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.51%)</title><rect x="129.8" y="739.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.51%)</title><rect x="129.8" y="723.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.51%)</title><rect x="129.8" y="707.0" width="6.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="132.8" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.51%)</title><rect x="129.8" y="691.0" width="6.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="132.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 11.17%)</title><rect x="135.8" y="755.0" width="131.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="766.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 11.17%)</title><rect x="135.8" y="739.0" width="131.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.8" y="750.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 11.17%)</title><rect x="135.8" y="723.0" width="131.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.8" y="734.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (22 samples, 11.17%)</title><rect x="135.8" y="707.0" width="131.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.8" y="718.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (22 samples, 11.17%)</title><rect x="135.8" y="691.0" width="131.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.8" y="702.0">one/nio/net/Nati..</text>
</g>
<g>
<title>__libc_send (22 samples, 11.17%)</title><rect x="135.8" y="675.0" width="131.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="138.8" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 11.17%)</title><rect x="135.8" y="659.0" width="131.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.8" y="670.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 11.17%)</title><rect x="135.8" y="643.0" width="131.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.8" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (21 samples, 10.66%)</title><rect x="135.8" y="627.0" width="125.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.8" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (21 samples, 10.66%)</title><rect x="135.8" y="611.0" width="125.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.8" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (21 samples, 10.66%)</title><rect x="135.8" y="595.0" width="125.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="138.8" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (21 samples, 10.66%)</title><rect x="135.8" y="579.0" width="125.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.8" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (21 samples, 10.66%)</title><rect x="135.8" y="563.0" width="125.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.8" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (21 samples, 10.66%)</title><rect x="135.8" y="547.0" width="125.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.8" y="558.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.51%)</title><rect x="135.8" y="531.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="138.8" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.51%)</title><rect x="135.8" y="515.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.8" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.51%)</title><rect x="141.8" y="531.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.8" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.51%)</title><rect x="141.8" y="515.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.8" y="526.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.51%)</title><rect x="141.8" y="499.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.8" y="510.0"></text>
</g>
<g>
<title>tcp_push (19 samples, 9.64%)</title><rect x="147.8" y="531.0" width="113.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.8" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (19 samples, 9.64%)</title><rect x="147.8" y="515.0" width="113.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="150.8" y="526.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (19 samples, 9.64%)</title><rect x="147.8" y="499.0" width="113.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="150.8" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (17 samples, 8.63%)</title><rect x="153.8" y="483.0" width="101.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="156.8" y="494.0">__tcp_transm..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.51%)</title><rect x="153.8" y="467.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="156.8" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (16 samples, 8.12%)</title><rect x="159.7" y="467.0" width="95.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="162.7" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 8.12%)</title><rect x="159.7" y="451.0" width="95.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.7" y="462.0">__ip_queue_..</text>
</g>
<g>
<title>ip_local_out (15 samples, 7.61%)</title><rect x="159.7" y="435.0" width="89.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.7" y="446.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (4 samples, 2.03%)</title><rect x="159.7" y="419.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="162.7" y="430.0">_..</text>
</g>
<g>
<title>nf_hook_slow (4 samples, 2.03%)</title><rect x="159.7" y="403.0" width="24.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="162.7" y="414.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 1.02%)</title><rect x="159.7" y="387.0" width="12.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="162.7" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 1.02%)</title><rect x="159.7" y="371.0" width="12.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="162.7" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 1.02%)</title><rect x="171.7" y="387.0" width="12.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="174.7" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 1.02%)</title><rect x="171.7" y="371.0" width="12.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.7" y="382.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.51%)</title><rect x="171.7" y="355.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="174.7" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.51%)</title><rect x="177.7" y="355.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.7" y="366.0"></text>
</g>
<g>
<title>ip_output (11 samples, 5.58%)</title><rect x="183.7" y="419.0" width="65.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="186.7" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (11 samples, 5.58%)</title><rect x="183.7" y="403.0" width="65.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="186.7" y="414.0">ip_fini..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.51%)</title><rect x="183.7" y="387.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.7" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (10 samples, 5.08%)</title><rect x="189.7" y="387.0" width="59.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.7" y="398.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 5.08%)</title><rect x="189.7" y="371.0" width="59.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.7" y="382.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 3.55%)</title><rect x="195.7" y="355.0" width="41.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="198.7" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (7 samples, 3.55%)</title><rect x="195.7" y="339.0" width="41.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.7" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 3.55%)</title><rect x="195.7" y="323.0" width="41.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.7" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 3.55%)</title><rect x="195.7" y="307.0" width="41.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="198.7" y="318.0">__s..</text>
</g>
<g>
<title>net_rx_action (7 samples, 3.55%)</title><rect x="195.7" y="291.0" width="41.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="198.7" y="302.0">net..</text>
</g>
<g>
<title>process_backlog (6 samples, 3.05%)</title><rect x="201.7" y="275.0" width="35.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="204.7" y="286.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 3.05%)</title><rect x="201.7" y="259.0" width="35.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.7" y="270.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 3.05%)</title><rect x="201.7" y="243.0" width="35.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="204.7" y="254.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.51%)</title><rect x="201.7" y="227.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 2.54%)</title><rect x="207.7" y="227.0" width="29.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.7" y="238.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 2.54%)</title><rect x="207.7" y="211.0" width="29.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.7" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (5 samples, 2.54%)</title><rect x="207.7" y="195.0" width="29.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="210.7" y="206.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 2.54%)</title><rect x="207.7" y="179.0" width="29.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.7" y="190.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 2.54%)</title><rect x="207.7" y="163.0" width="29.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="210.7" y="174.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 2.54%)</title><rect x="207.7" y="147.0" width="29.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.7" y="158.0">tc..</text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 2.03%)</title><rect x="207.7" y="131.0" width="23.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="210.7" y="142.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 2.03%)</title><rect x="207.7" y="115.0" width="23.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.7" y="126.0">t..</text>
</g>
<g>
<title>tcp_data_ready (4 samples, 2.03%)</title><rect x="207.7" y="99.0" width="23.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="210.7" y="110.0">t..</text>
</g>
<g>
<title>sock_def_readable (4 samples, 2.03%)</title><rect x="207.7" y="83.0" width="23.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.7" y="94.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 2.03%)</title><rect x="207.7" y="67.0" width="23.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="210.7" y="78.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 1.52%)</title><rect x="213.7" y="51.0" width="17.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.7" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 1.52%)</title><rect x="213.7" y="35.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="216.7" y="46.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.51%)</title><rect x="231.6" y="131.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.6" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 1.02%)</title><rect x="237.6" y="355.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="240.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 1.02%)</title><rect x="237.6" y="339.0" width="12.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="240.6" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.51%)</title><rect x="243.6" y="323.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="246.6" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.51%)</title><rect x="243.6" y="307.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="246.6" y="318.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.51%)</title><rect x="249.6" y="435.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="252.6" y="446.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.51%)</title><rect x="255.6" y="483.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="258.6" y="494.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.51%)</title><rect x="261.6" y="627.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="264.6" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.51%)</title><rect x="261.6" y="611.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.6" y="622.0"></text>
</g>
<g>
<title>dput (1 samples, 0.51%)</title><rect x="261.6" y="595.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="264.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.51%)</title><rect x="267.6" y="755.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.51%)</title><rect x="267.6" y="739.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.51%)</title><rect x="267.6" y="723.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 1.02%)</title><rect x="273.6" y="771.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.51%)</title><rect x="279.5" y="755.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (139 samples, 70.56%)</title><rect x="285.5" y="771.0" width="832.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.5" y="782.0">ru/mail/polis/service/stasyanoi/CustomServer.put</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.51%)</title><rect x="285.5" y="755.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.51%)</title><rect x="285.5" y="739.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.51%)</title><rect x="285.5" y="723.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.51%)</title><rect x="285.5" y="707.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (136 samples, 69.04%)</title><rect x="291.5" y="755.0" width="814.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.5" y="766.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (136 samples, 69.04%)</title><rect x="291.5" y="739.0" width="814.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.5" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (136 samples, 69.04%)</title><rect x="291.5" y="723.0" width="814.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.5" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (103 samples, 52.28%)</title><rect x="291.5" y="707.0" width="617.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="294.5" y="718.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.51%)</title><rect x="291.5" y="691.0" width="6.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="294.5" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (102 samples, 51.78%)</title><rect x="297.5" y="691.0" width="611.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="300.5" y="702.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::Col..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (102 samples, 51.78%)</title><rect x="297.5" y="675.0" width="611.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="300.5" y="686.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice ..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (102 samples, 51.78%)</title><rect x="297.5" y="659.0" width="611.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="300.5" y="670.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (102 samples, 51.78%)</title><rect x="297.5" y="643.0" width="611.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="300.5" y="654.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb:..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.51%)</title><rect x="297.5" y="627.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="300.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (101 samples, 51.27%)</title><rect x="303.5" y="627.0" width="605.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="306.5" y="638.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*)</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (100 samples, 50.76%)</title><rect x="303.5" y="611.0" width="599.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="306.5" y="622.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.51%)</title><rect x="315.5" y="595.0" width="6.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="318.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 1.52%)</title><rect x="321.5" y="595.0" width="17.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="324.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 1.02%)</title><rect x="321.5" y="579.0" width="12.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="324.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 1.02%)</title><rect x="321.5" y="563.0" width="12.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="324.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.51%)</title><rect x="321.5" y="547.0" width="6.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="324.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.51%)</title><rect x="321.5" y="531.0" width="6.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="324.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.51%)</title><rect x="327.5" y="547.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="330.5" y="558.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.51%)</title><rect x="327.5" y="531.0" width="6.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="330.5" y="542.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.51%)</title><rect x="333.5" y="579.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="336.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.51%)</title><rect x="339.4" y="595.0" width="6.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="342.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (1 samples, 0.51%)</title><rect x="345.4" y="595.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="348.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (12 samples, 6.09%)</title><rect x="351.4" y="595.0" width="71.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="354.4" y="606.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 5.58%)</title><rect x="351.4" y="579.0" width="65.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="354.4" y="590.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (11 samples, 5.58%)</title><rect x="351.4" y="563.0" width="65.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="354.4" y="574.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (11 samples, 5.58%)</title><rect x="351.4" y="547.0" width="65.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="354.4" y="558.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 5.58%)</title><rect x="351.4" y="531.0" width="65.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="354.4" y="542.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 5.58%)</title><rect x="351.4" y="515.0" width="65.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="354.4" y="526.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni7305573520772578035.so (1 samples, 0.51%)</title><rect x="351.4" y="499.0" width="6.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="354.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.51%)</title><rect x="351.4" y="483.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="354.4" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 5.08%)</title><rect x="357.4" y="499.0" width="59.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="360.4" y="510.0">bool r..</text>
</g>
<g>
<title>/tmp/librocksdbjni7305573520772578035.so (8 samples, 4.06%)</title><rect x="357.4" y="483.0" width="47.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="360.4" y="494.0">/tmp..</text>
</g>
<g>
<title>/tmp/librocksdbjni7305573520772578035.so (4 samples, 2.03%)</title><rect x="357.4" y="467.0" width="24.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="360.4" y="478.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 2.03%)</title><rect x="357.4" y="451.0" width="24.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="360.4" y="462.0">r..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.51%)</title><rect x="357.4" y="435.0" width="6.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="360.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 1.52%)</title><rect x="363.4" y="435.0" width="18.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="366.4" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.51%)</title><rect x="363.4" y="419.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="366.4" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.51%)</title><rect x="363.4" y="403.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="366.4" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.51%)</title><rect x="363.4" y="387.0" width="6.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="366.4" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.51%)</title><rect x="363.4" y="371.0" width="6.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="366.4" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.51%)</title><rect x="369.4" y="419.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="372.4" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.51%)</title><rect x="369.4" y="403.0" width="6.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="372.4" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.51%)</title><rect x="369.4" y="387.0" width="6.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="372.4" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.51%)</title><rect x="369.4" y="371.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="372.4" y="382.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.51%)</title><rect x="369.4" y="355.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="372.4" y="366.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.51%)</title><rect x="369.4" y="339.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="372.4" y="350.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.51%)</title><rect x="375.4" y="419.0" width="6.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="378.4" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 2.03%)</title><rect x="381.4" y="467.0" width="23.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="384.4" y="478.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 2.03%)</title><rect x="381.4" y="451.0" width="23.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="384.4" y="462.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.51%)</title><rect x="387.4" y="435.0" width="6.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="390.4" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.51%)</title><rect x="387.4" y="419.0" width="6.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="390.4" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.51%)</title><rect x="387.4" y="403.0" width="6.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="390.4" y="414.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.51%)</title><rect x="387.4" y="387.0" width="6.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="390.4" y="398.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 1.02%)</title><rect x="393.4" y="435.0" width="11.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="396.4" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 1.02%)</title><rect x="393.4" y="419.0" width="11.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="396.4" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.51%)</title><rect x="393.4" y="403.0" width="5.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="396.4" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.51%)</title><rect x="393.4" y="387.0" width="5.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="396.4" y="398.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.51%)</title><rect x="399.3" y="403.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="402.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 1.02%)</title><rect x="405.3" y="483.0" width="12.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="408.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 1.02%)</title><rect x="405.3" y="467.0" width="12.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="408.3" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 1.02%)</title><rect x="405.3" y="451.0" width="12.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="408.3" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.51%)</title><rect x="411.3" y="435.0" width="6.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="414.3" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.51%)</title><rect x="411.3" y="419.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="414.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.51%)</title><rect x="417.3" y="579.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="420.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (44 samples, 22.34%)</title><rect x="423.3" y="595.0" width="263.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="426.3" y="606.0">rocksdb::WriteBatchInternal::Insert..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (44 samples, 22.34%)</title><rect x="423.3" y="579.0" width="263.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="426.3" y="590.0">rocksdb::WriteBatch::Iterate(rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (44 samples, 22.34%)</title><rect x="423.3" y="563.0" width="263.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="426.3" y="574.0">rocksdb::WriteBatchInternal::Iterat..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (44 samples, 22.34%)</title><rect x="423.3" y="547.0" width="263.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="426.3" y="558.0">rocksdb::MemTableInserter::PutCF(un..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (43 samples, 21.83%)</title><rect x="429.3" y="531.0" width="257.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="432.3" y="542.0">rocksdb::MemTableInserter::PutCFIm..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (43 samples, 21.83%)</title><rect x="429.3" y="515.0" width="257.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="432.3" y="526.0">rocksdb::MemTable::Add(unsigned lo..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (43 samples, 21.83%)</title><rect x="429.3" y="499.0" width="257.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="432.3" y="510.0">rocksdb::InlineSkipList&lt;rocksdb::M..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (43 samples, 21.83%)</title><rect x="429.3" y="483.0" width="257.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="432.3" y="494.0">bool rocksdb::InlineSkipList&lt;rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni7305573520772578035.so (41 samples, 20.81%)</title><rect x="429.3" y="467.0" width="245.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="432.3" y="478.0">/tmp/librocksdbjni730557352077257..</text>
</g>
<g>
<title>/tmp/librocksdbjni7305573520772578035.so (41 samples, 20.81%)</title><rect x="429.3" y="451.0" width="245.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="432.3" y="462.0">/tmp/librocksdbjni730557352077257..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (40 samples, 20.30%)</title><rect x="435.3" y="435.0" width="239.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="438.3" y="446.0">rocksdb::MemTable::KeyComparator..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.51%)</title><rect x="435.3" y="419.0" width="6.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="438.3" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (39 samples, 19.80%)</title><rect x="441.3" y="419.0" width="233.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="444.3" y="430.0">rocksdb::BaseComparatorJniCallb..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 2.03%)</title><rect x="447.3" y="403.0" width="23.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="450.3" y="414.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 2.03%)</title><rect x="447.3" y="387.0" width="23.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="450.3" y="398.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.51%)</title><rect x="447.3" y="371.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="450.3" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 1.52%)</title><rect x="453.2" y="371.0" width="18.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="456.2" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.51%)</title><rect x="453.2" y="355.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="456.2" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.51%)</title><rect x="453.2" y="339.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="456.2" y="350.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.51%)</title><rect x="459.2" y="355.0" width="6.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="462.2" y="366.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.51%)</title><rect x="465.2" y="355.0" width="6.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="468.2" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 3.05%)</title><rect x="471.2" y="403.0" width="36.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="474.2" y="414.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 3.05%)</title><rect x="471.2" y="387.0" width="36.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="474.2" y="398.0">jni..</text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.51%)</title><rect x="471.2" y="371.0" width="6.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="474.2" y="382.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.51%)</title><rect x="477.2" y="371.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="480.2" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 1.52%)</title><rect x="483.2" y="371.0" width="18.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="486.2" y="382.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.51%)</title><rect x="483.2" y="355.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="486.2" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 1.02%)</title><rect x="489.2" y="355.0" width="12.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="492.2" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.51%)</title><rect x="495.2" y="339.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="498.2" y="350.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.51%)</title><rect x="501.2" y="371.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="504.2" y="382.0"></text>
</g>
<g>
<title>__lll_lock_wait (7 samples, 3.55%)</title><rect x="507.2" y="403.0" width="41.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="510.2" y="414.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 1.52%)</title><rect x="531.1" y="387.0" width="18.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="534.1" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 1.52%)</title><rect x="531.1" y="371.0" width="18.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.1" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 1.52%)</title><rect x="531.1" y="355.0" width="18.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="534.1" y="366.0"></text>
</g>
<g>
<title>do_futex (2 samples, 1.02%)</title><rect x="537.1" y="339.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="540.1" y="350.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 1.02%)</title><rect x="537.1" y="323.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="540.1" y="334.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.51%)</title><rect x="537.1" y="307.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.1" y="318.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.51%)</title><rect x="537.1" y="291.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="540.1" y="302.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.51%)</title><rect x="537.1" y="275.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="540.1" y="286.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.51%)</title><rect x="543.1" y="307.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="546.1" y="318.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.51%)</title><rect x="543.1" y="291.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="546.1" y="302.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 9.64%)</title><rect x="549.1" y="403.0" width="113.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="552.1" y="414.0">__lll_unlock_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 9.64%)</title><rect x="549.1" y="387.0" width="113.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.1" y="398.0">entry_SYSCALL_..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 9.64%)</title><rect x="549.1" y="371.0" width="113.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.1" y="382.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 8.12%)</title><rect x="555.1" y="355.0" width="95.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.1" y="366.0">__x64_sys_f..</text>
</g>
<g>
<title>do_futex (16 samples, 8.12%)</title><rect x="555.1" y="339.0" width="95.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="558.1" y="350.0">do_futex</text>
</g>
<g>
<title>futex_wake (16 samples, 8.12%)</title><rect x="555.1" y="323.0" width="95.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.1" y="334.0">futex_wake</text>
</g>
<g>
<title>wake_up_q (16 samples, 8.12%)</title><rect x="555.1" y="307.0" width="95.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="558.1" y="318.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (16 samples, 8.12%)</title><rect x="555.1" y="291.0" width="95.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.1" y="302.0">try_to_wake..</text>
</g>
<g>
<title>__lock_text_start (16 samples, 8.12%)</title><rect x="555.1" y="275.0" width="95.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="558.1" y="286.0">__lock_text..</text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.51%)</title><rect x="650.9" y="355.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="653.9" y="366.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.51%)</title><rect x="656.9" y="355.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="659.9" y="366.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.51%)</title><rect x="656.9" y="339.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.9" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.51%)</title><rect x="662.9" y="403.0" width="6.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="665.9" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.51%)</title><rect x="662.9" y="387.0" width="6.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="665.9" y="398.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.51%)</title><rect x="668.9" y="403.0" width="6.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="671.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 1.02%)</title><rect x="674.9" y="467.0" width="12.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="677.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 1.02%)</title><rect x="674.9" y="451.0" width="12.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="677.9" y="462.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 1.02%)</title><rect x="674.9" y="435.0" width="12.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="677.9" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.02%)</title><rect x="674.9" y="419.0" width="12.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.9" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 1.02%)</title><rect x="674.9" y="403.0" width="12.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.9" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 1.02%)</title><rect x="674.9" y="387.0" width="12.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="677.9" y="398.0"></text>
</g>
<g>
<title>do_futex (2 samples, 1.02%)</title><rect x="674.9" y="371.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.9" y="382.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.51%)</title><rect x="680.9" y="355.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="683.9" y="366.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.51%)</title><rect x="680.9" y="339.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.9" y="350.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.51%)</title><rect x="680.9" y="323.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="683.9" y="334.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.51%)</title><rect x="680.9" y="307.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="683.9" y="318.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (15 samples, 7.61%)</title><rect x="686.9" y="595.0" width="89.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="689.9" y="606.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (6 samples, 3.05%)</title><rect x="776.7" y="595.0" width="35.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="779.7" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 2.54%)</title><rect x="776.7" y="579.0" width="29.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="779.7" y="590.0">ro..</text>
</g>
<g>
<title>sched_yield (1 samples, 0.51%)</title><rect x="806.6" y="579.0" width="6.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="809.6" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.51%)</title><rect x="806.6" y="563.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.51%)</title><rect x="806.6" y="547.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="809.6" y="558.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.51%)</title><rect x="806.6" y="531.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.6" y="542.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.51%)</title><rect x="806.6" y="515.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="809.6" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.51%)</title><rect x="806.6" y="499.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="809.6" y="510.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.51%)</title><rect x="806.6" y="483.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="809.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.51%)</title><rect x="812.6" y="595.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="815.6" y="606.0"></text>
</g>
<g>
<title>sched_yield (13 samples, 6.60%)</title><rect x="818.6" y="595.0" width="77.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="821.6" y="606.0">sched_yield</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 5.08%)</title><rect x="836.6" y="579.0" width="59.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.6" y="590.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 5.08%)</title><rect x="836.6" y="563.0" width="59.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.6" y="574.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sched_yield (4 samples, 2.03%)</title><rect x="854.6" y="547.0" width="23.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="857.6" y="558.0">_..</text>
</g>
<g>
<title>do_sched_yield (4 samples, 2.03%)</title><rect x="854.6" y="531.0" width="23.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.6" y="542.0">d..</text>
</g>
<g>
<title>schedule (4 samples, 2.03%)</title><rect x="854.6" y="515.0" width="23.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="857.6" y="526.0">s..</text>
</g>
<g>
<title>__sched_text_start (4 samples, 2.03%)</title><rect x="854.6" y="499.0" width="23.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.6" y="510.0">_..</text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.51%)</title><rect x="878.5" y="547.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.5" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.51%)</title><rect x="878.5" y="531.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="881.5" y="542.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.51%)</title><rect x="878.5" y="515.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="881.5" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 1.02%)</title><rect x="884.5" y="547.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="887.5" y="558.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (1 samples, 0.51%)</title><rect x="896.5" y="595.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="899.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.51%)</title><rect x="902.5" y="611.0" width="6.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="905.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 6.09%)</title><rect x="908.5" y="707.0" width="71.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="911.5" y="718.0">[unknown]</text>
</g>
<g>
<title>__GI_write (7 samples, 3.55%)</title><rect x="908.5" y="691.0" width="41.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="911.5" y="702.0">__G..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 3.05%)</title><rect x="914.5" y="675.0" width="35.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.5" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 3.05%)</title><rect x="914.5" y="659.0" width="35.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.5" y="670.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (6 samples, 3.05%)</title><rect x="914.5" y="643.0" width="35.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="917.5" y="654.0">__x..</text>
</g>
<g>
<title>ksys_write (6 samples, 3.05%)</title><rect x="914.5" y="627.0" width="35.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="917.5" y="638.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 1.02%)</title><rect x="914.5" y="611.0" width="11.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 1.02%)</title><rect x="914.5" y="595.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.5" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 1.02%)</title><rect x="914.5" y="579.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="917.5" y="590.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 2.03%)</title><rect x="926.4" y="611.0" width="24.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.4" y="622.0">v..</text>
</g>
<g>
<title>__vfs_write (4 samples, 2.03%)</title><rect x="926.4" y="595.0" width="24.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.4" y="606.0">_..</text>
</g>
<g>
<title>new_sync_write (4 samples, 2.03%)</title><rect x="926.4" y="579.0" width="24.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.4" y="590.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 2.03%)</title><rect x="926.4" y="563.0" width="24.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.4" y="574.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 2.03%)</title><rect x="926.4" y="547.0" width="24.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="929.4" y="558.0">_..</text>
</g>
<g>
<title>file_update_time (1 samples, 0.51%)</title><rect x="926.4" y="531.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.4" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.51%)</title><rect x="926.4" y="515.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.4" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.51%)</title><rect x="926.4" y="499.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="929.4" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.51%)</title><rect x="926.4" y="483.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="929.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.51%)</title><rect x="926.4" y="467.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="929.4" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.51%)</title><rect x="926.4" y="451.0" width="6.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.4" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.51%)</title><rect x="926.4" y="435.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="929.4" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.51%)</title><rect x="926.4" y="419.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.4" y="430.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.51%)</title><rect x="926.4" y="403.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="929.4" y="414.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.51%)</title><rect x="926.4" y="387.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="929.4" y="398.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 1.52%)</title><rect x="932.4" y="531.0" width="18.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.4" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 1.02%)</title><rect x="932.4" y="515.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="935.4" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.51%)</title><rect x="932.4" y="499.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="935.4" y="510.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.51%)</title><rect x="932.4" y="483.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.4" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.51%)</title><rect x="938.4" y="499.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.4" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.51%)</title><rect x="938.4" y="483.0" width="6.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.4" y="494.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.51%)</title><rect x="944.4" y="515.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="947.4" y="526.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 1.52%)</title><rect x="950.4" y="691.0" width="18.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="953.4" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.51%)</title><rect x="950.4" y="675.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="953.4" y="686.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 1.02%)</title><rect x="956.4" y="675.0" width="12.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="959.4" y="686.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 1.02%)</title><rect x="956.4" y="659.0" width="12.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="959.4" y="670.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.51%)</title><rect x="968.4" y="691.0" width="6.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="971.4" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.51%)</title><rect x="974.4" y="691.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="977.4" y="702.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.51%)</title><rect x="980.4" y="707.0" width="5.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="983.4" y="718.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.51%)</title><rect x="986.3" y="707.0" width="6.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.3" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 1.52%)</title><rect x="992.3" y="707.0" width="18.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (15 samples, 7.61%)</title><rect x="1010.3" y="707.0" width="89.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.3" y="718.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (14 samples, 7.11%)</title><rect x="1016.3" y="691.0" width="83.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.3" y="702.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (13 samples, 6.60%)</title><rect x="1022.3" y="675.0" width="77.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1025.3" y="686.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (13 samples, 6.60%)</title><rect x="1022.3" y="659.0" width="77.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1025.3" y="670.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (13 samples, 6.60%)</title><rect x="1022.3" y="643.0" width="77.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1025.3" y="654.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (12 samples, 6.09%)</title><rect x="1028.3" y="627.0" width="71.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1031.3" y="638.0">Java_org..</text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 1.52%)</title><rect x="1028.3" y="611.0" width="17.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1031.3" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.51%)</title><rect x="1034.3" y="595.0" width="6.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1037.3" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.51%)</title><rect x="1040.3" y="595.0" width="5.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1043.3" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 3.05%)</title><rect x="1046.2" y="611.0" width="36.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1049.2" y="622.0">jni..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 1.02%)</title><rect x="1052.2" y="595.0" width="12.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1055.2" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 1.52%)</title><rect x="1064.2" y="595.0" width="18.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.2" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 1.52%)</title><rect x="1064.2" y="579.0" width="18.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.2" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 1.02%)</title><rect x="1064.2" y="563.0" width="12.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.2" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.51%)</title><rect x="1070.2" y="547.0" width="6.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1073.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.51%)</title><rect x="1076.2" y="563.0" width="6.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1079.2" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 1.52%)</title><rect x="1082.2" y="611.0" width="18.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1085.2" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.51%)</title><rect x="1088.2" y="595.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1091.2" y="606.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.51%)</title><rect x="1094.2" y="595.0" width="6.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1097.2" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.51%)</title><rect x="1094.2" y="579.0" width="6.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.2" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.51%)</title><rect x="1100.2" y="707.0" width="5.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.fromBytes (2 samples, 1.02%)</title><rect x="1106.1" y="755.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1109.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 1.02%)</title><rect x="1106.1" y="739.0" width="12.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 1.02%)</title><rect x="1106.1" y="723.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1109.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 1.02%)</title><rect x="1106.1" y="707.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 1.02%)</title><rect x="1106.1" y="691.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1109.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 1.02%)</title><rect x="1106.1" y="675.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 1.02%)</title><rect x="1106.1" y="659.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1109.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 1.02%)</title><rect x="1106.1" y="643.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.1" y="654.0"></text>
</g>
<g>
<title>page_fault (2 samples, 1.02%)</title><rect x="1106.1" y="627.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.1" y="638.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 1.02%)</title><rect x="1106.1" y="611.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.1" y="622.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 1.02%)</title><rect x="1106.1" y="595.0" width="12.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1109.1" y="606.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.51%)</title><rect x="1112.1" y="579.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1115.1" y="590.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.51%)</title><rect x="1112.1" y="563.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1115.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.51%)</title><rect x="1118.1" y="787.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1121.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.51%)</title><rect x="1118.1" y="771.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1121.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.51%)</title><rect x="1118.1" y="755.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1121.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 1.52%)</title><rect x="1124.1" y="819.0" width="18.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 1.52%)</title><rect x="1124.1" y="803.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 1.02%)</title><rect x="1130.1" y="787.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.1" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.51%)</title><rect x="1136.1" y="771.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1139.1" y="782.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.51%)</title><rect x="1136.1" y="755.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1139.1" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.51%)</title><rect x="1136.1" y="739.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1139.1" y="750.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.51%)</title><rect x="1136.1" y="723.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1139.1" y="734.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.51%)</title><rect x="1136.1" y="707.0" width="6.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1139.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 4.06%)</title><rect x="1142.1" y="835.0" width="47.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.1" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 4.06%)</title><rect x="1142.1" y="819.0" width="47.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.1" y="830.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 1.02%)</title><rect x="1142.1" y="803.0" width="12.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1145.1" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 1.02%)</title><rect x="1142.1" y="787.0" width="12.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1145.1" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.51%)</title><rect x="1142.1" y="771.0" width="6.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.1" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.51%)</title><rect x="1148.1" y="771.0" width="6.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1151.1" y="782.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 2.54%)</title><rect x="1154.1" y="803.0" width="29.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1157.1" y="814.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 2.54%)</title><rect x="1154.1" y="787.0" width="29.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.1" y="798.0">en..</text>
</g>
<g>
<title>do_syscall_64 (5 samples, 2.54%)</title><rect x="1154.1" y="771.0" width="29.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.1" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 2.54%)</title><rect x="1154.1" y="755.0" width="29.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.1" y="766.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 2.54%)</title><rect x="1154.1" y="739.0" width="29.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.1" y="750.0">__..</text>
</g>
<g>
<title>sock_recvmsg (4 samples, 2.03%)</title><rect x="1154.1" y="723.0" width="23.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1157.1" y="734.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 1.02%)</title><rect x="1154.1" y="707.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.1" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 1.02%)</title><rect x="1154.1" y="691.0" width="11.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1157.1" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.51%)</title><rect x="1160.1" y="675.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1163.1" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 1.02%)</title><rect x="1166.0" y="707.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1169.0" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.51%)</title><rect x="1172.0" y="691.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1175.0" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.51%)</title><rect x="1172.0" y="675.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1175.0" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.51%)</title><rect x="1172.0" y="659.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1175.0" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.51%)</title><rect x="1172.0" y="643.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1175.0" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.51%)</title><rect x="1172.0" y="627.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1175.0" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.51%)</title><rect x="1178.0" y="723.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.0" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.51%)</title><rect x="1178.0" y="707.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.51%)</title><rect x="1178.0" y="691.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1181.0" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.51%)</title><rect x="1178.0" y="675.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1181.0" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.51%)</title><rect x="1184.0" y="803.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1187.0" y="814.0"></text>
</g>
</g>
</svg>
