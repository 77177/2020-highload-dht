<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2101"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2101"> </text>
<g id="frames">
<g>
<title>all (318 samples, 100.00%)</title><rect x="10.0" y="2067.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="2078.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.94%)</title><rect x="10.0" y="2051.0" width="11.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="2062.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.31%)</title><rect x="10.0" y="2035.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="2046.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.31%)</title><rect x="10.0" y="2019.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="2030.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="10.0" y="2003.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="2014.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="10.0" y="1987.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1998.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="10.0" y="1971.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1982.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.31%)</title><rect x="10.0" y="1955.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1966.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.31%)</title><rect x="10.0" y="1939.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="1950.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.31%)</title><rect x="10.0" y="1923.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="1934.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.31%)</title><rect x="10.0" y="1907.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1918.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.31%)</title><rect x="10.0" y="1891.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="1902.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="10.0" y="1875.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1886.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.31%)</title><rect x="10.0" y="1859.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="1870.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.31%)</title><rect x="10.0" y="1843.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="1854.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.31%)</title><rect x="10.0" y="1827.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1838.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.31%)</title><rect x="10.0" y="1811.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="1822.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (1 samples, 0.31%)</title><rect x="10.0" y="1795.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="1806.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (1 samples, 0.31%)</title><rect x="10.0" y="1779.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="1790.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.31%)</title><rect x="10.0" y="1763.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="1774.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.31%)</title><rect x="10.0" y="1747.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="1758.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.31%)</title><rect x="10.0" y="1731.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="1742.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.31%)</title><rect x="10.0" y="1715.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="1726.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.31%)</title><rect x="10.0" y="1699.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="1710.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.31%)</title><rect x="10.0" y="1683.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1694.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.31%)</title><rect x="10.0" y="1667.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="1678.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.63%)</title><rect x="13.7" y="2035.0" width="7.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="16.7" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.63%)</title><rect x="21.1" y="2051.0" width="7.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="24.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="2035.0" width="3.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="2019.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="24.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="2003.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1987.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="24.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1971.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="24.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1955.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1939.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="24.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1923.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1907.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1891.0" width="3.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="24.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1875.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1859.0" width="3.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="24.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1843.0" width="3.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="24.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1827.0" width="3.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="24.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1811.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1795.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="24.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1779.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1763.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="24.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1747.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1731.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1715.0" width="3.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="24.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1699.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="24.1" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1683.0" width="3.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="24.1" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1667.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="24.1" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1651.0" width="3.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="24.1" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1635.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="24.1" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1619.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="24.1" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1603.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="24.1" y="1614.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1587.0" width="3.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.1" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1571.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="24.1" y="1582.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1555.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="24.1" y="1566.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1539.0" width="3.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.1" y="1550.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1523.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="24.1" y="1534.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1507.0" width="3.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="24.1" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1491.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1475.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="24.1" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1459.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="24.1" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1443.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="24.1" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1427.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="24.1" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1411.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="24.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1395.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.1" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1379.0" width="3.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="24.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1363.0" width="3.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="24.1" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1347.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="24.1" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1331.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="24.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1315.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="24.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1299.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="24.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1283.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="24.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1267.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1251.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="24.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1235.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="24.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1219.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="24.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1203.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="24.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1187.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="24.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1171.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="24.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1155.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="24.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1139.0" width="3.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="24.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1123.0" width="3.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="24.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1107.0" width="3.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="24.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1091.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="24.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1075.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="24.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1059.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="24.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1043.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="24.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1027.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="24.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="1011.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="24.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="995.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="24.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="979.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="24.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="963.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="947.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="24.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="931.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="24.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="915.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="24.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="899.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="883.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="867.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="24.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="851.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="24.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="835.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="819.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="24.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="803.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="24.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="787.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="24.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="771.0" width="3.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="24.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="755.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="24.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="739.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="723.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="24.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="707.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="24.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="691.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="24.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="675.0" width="3.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="24.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="659.0" width="3.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="24.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="643.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="627.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="24.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="611.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="24.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="595.0" width="3.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="24.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="579.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="563.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="24.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="547.0" width="3.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="24.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="531.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="515.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="24.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="499.0" width="3.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="483.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="24.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="467.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="24.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="451.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="24.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="435.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="24.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="419.0" width="3.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="24.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="403.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="387.0" width="3.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="24.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="371.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="355.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="339.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="21.1" y="323.0" width="3.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="24.1" y="334.0"></text>
</g>
<g>
<title>__GI___libc_read (1 samples, 0.31%)</title><rect x="21.1" y="307.0" width="3.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="24.1" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.31%)</title><rect x="21.1" y="291.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.1" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.31%)</title><rect x="21.1" y="275.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.1" y="286.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.31%)</title><rect x="21.1" y="259.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="24.1" y="270.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.31%)</title><rect x="21.1" y="243.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.1" y="254.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.31%)</title><rect x="21.1" y="227.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="24.1" y="238.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.31%)</title><rect x="21.1" y="211.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="24.1" y="222.0"></text>
</g>
<g>
<title>kernfs_fop_read (1 samples, 0.31%)</title><rect x="21.1" y="195.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="24.1" y="206.0"></text>
</g>
<g>
<title>seq_read (1 samples, 0.31%)</title><rect x="21.1" y="179.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="24.1" y="190.0"></text>
</g>
<g>
<title>kernfs_seq_show (1 samples, 0.31%)</title><rect x="21.1" y="163.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.1" y="174.0"></text>
</g>
<g>
<title>cgroup_seqfile_show (1 samples, 0.31%)</title><rect x="21.1" y="147.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.1" y="158.0"></text>
</g>
<g>
<title>memcg_stat_show (1 samples, 0.31%)</title><rect x="21.1" y="131.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="24.1" y="142.0"></text>
</g>
<g>
<title>seq_printf (1 samples, 0.31%)</title><rect x="21.1" y="115.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.1" y="126.0"></text>
</g>
<g>
<title>seq_vprintf (1 samples, 0.31%)</title><rect x="21.1" y="99.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.1" y="110.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.31%)</title><rect x="21.1" y="83.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.1" y="94.0"></text>
</g>
<g>
<title>number (1 samples, 0.31%)</title><rect x="21.1" y="67.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="24.1" y="78.0"></text>
</g>
<g>
<title>put_dec (1 samples, 0.31%)</title><rect x="21.1" y="51.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="24.1" y="62.0"></text>
</g>
<g>
<title>put_dec_trunc8 (1 samples, 0.31%)</title><rect x="21.1" y="35.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.1" y="46.0"></text>
</g>
<g>
<title>__GI___open (1 samples, 0.31%)</title><rect x="24.8" y="2035.0" width="3.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="27.8" y="2046.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.31%)</title><rect x="24.8" y="2019.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.8" y="2030.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.31%)</title><rect x="24.8" y="2003.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.8" y="2014.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.31%)</title><rect x="24.8" y="1987.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.8" y="1998.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.31%)</title><rect x="24.8" y="1971.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="27.8" y="1982.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.31%)</title><rect x="24.8" y="1955.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.8" y="1966.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.31%)</title><rect x="24.8" y="1939.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.8" y="1950.0"></text>
</g>
<g>
<title>vfs_open (1 samples, 0.31%)</title><rect x="24.8" y="1923.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.8" y="1934.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.31%)</title><rect x="24.8" y="1907.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.8" y="1918.0"></text>
</g>
<g>
<title>security_file_open (1 samples, 0.31%)</title><rect x="24.8" y="1891.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.8" y="1902.0"></text>
</g>
<g>
<title>apparmor_file_open (1 samples, 0.31%)</title><rect x="24.8" y="1875.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.8" y="1886.0"></text>
</g>
<g>
<title>aa_path_perm (1 samples, 0.31%)</title><rect x="24.8" y="1859.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.8" y="1870.0"></text>
</g>
<g>
<title>__aa_path_perm (1 samples, 0.31%)</title><rect x="24.8" y="1843.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.8" y="1854.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 1.26%)</title><rect x="28.6" y="2051.0" width="14.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="31.6" y="2062.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (4 samples, 1.26%)</title><rect x="28.6" y="2035.0" width="14.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="31.6" y="2046.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 1.26%)</title><rect x="28.6" y="2019.0" width="14.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="31.6" y="2030.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 1.26%)</title><rect x="28.6" y="2003.0" width="14.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="31.6" y="2014.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 1.26%)</title><rect x="28.6" y="1987.0" width="14.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.6" y="1998.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 1.26%)</title><rect x="28.6" y="1971.0" width="14.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="31.6" y="1982.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (4 samples, 1.26%)</title><rect x="28.6" y="1955.0" width="14.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.6" y="1966.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (4 samples, 1.26%)</title><rect x="28.6" y="1939.0" width="14.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="31.6" y="1950.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.94%)</title><rect x="28.6" y="1923.0" width="11.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="31.6" y="1934.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.94%)</title><rect x="28.6" y="1907.0" width="11.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="31.6" y="1918.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.94%)</title><rect x="28.6" y="1891.0" width="11.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="31.6" y="1902.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.94%)</title><rect x="28.6" y="1875.0" width="11.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.6" y="1886.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.94%)</title><rect x="28.6" y="1859.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.6" y="1870.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.94%)</title><rect x="28.6" y="1843.0" width="11.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.6" y="1854.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.94%)</title><rect x="28.6" y="1827.0" width="11.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.6" y="1838.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (3 samples, 0.94%)</title><rect x="28.6" y="1811.0" width="11.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="31.6" y="1822.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (2 samples, 0.63%)</title><rect x="28.6" y="1795.0" width="7.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="31.6" y="1806.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.63%)</title><rect x="28.6" y="1779.0" width="7.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.6" y="1790.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.63%)</title><rect x="28.6" y="1763.0" width="7.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.6" y="1774.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.63%)</title><rect x="28.6" y="1747.0" width="7.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="31.6" y="1758.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.63%)</title><rect x="28.6" y="1731.0" width="7.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="31.6" y="1742.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.63%)</title><rect x="28.6" y="1715.0" width="7.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="31.6" y="1726.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.31%)</title><rect x="28.6" y="1699.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="31.6" y="1710.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.31%)</title><rect x="32.3" y="1699.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="35.3" y="1710.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.31%)</title><rect x="32.3" y="1683.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="35.3" y="1694.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.31%)</title><rect x="36.0" y="1795.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="39.0" y="1806.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.31%)</title><rect x="36.0" y="1779.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="39.0" y="1790.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.31%)</title><rect x="36.0" y="1763.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="39.0" y="1774.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.31%)</title><rect x="36.0" y="1747.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="39.0" y="1758.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.31%)</title><rect x="36.0" y="1731.0" width="3.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="39.0" y="1742.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.31%)</title><rect x="36.0" y="1715.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="39.0" y="1726.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.31%)</title><rect x="39.7" y="1923.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="42.7" y="1934.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.31%)</title><rect x="39.7" y="1907.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.7" y="1918.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.31%)</title><rect x="39.7" y="1891.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.7" y="1902.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="39.7" y="1875.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="42.7" y="1886.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.31%)</title><rect x="39.7" y="1859.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="42.7" y="1870.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.31%)</title><rect x="39.7" y="1843.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="42.7" y="1854.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.31%)</title><rect x="39.7" y="1827.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="42.7" y="1838.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.31%)</title><rect x="39.7" y="1811.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="42.7" y="1822.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (1 samples, 0.31%)</title><rect x="39.7" y="1795.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="42.7" y="1806.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (1 samples, 0.31%)</title><rect x="39.7" y="1779.0" width="3.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="42.7" y="1790.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.31%)</title><rect x="39.7" y="1763.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="42.7" y="1774.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.31%)</title><rect x="39.7" y="1747.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="42.7" y="1758.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.31%)</title><rect x="39.7" y="1731.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="42.7" y="1742.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.31%)</title><rect x="39.7" y="1715.0" width="3.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="42.7" y="1726.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.31%)</title><rect x="39.7" y="1699.0" width="3.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="42.7" y="1710.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.31%)</title><rect x="39.7" y="1683.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="42.7" y="1694.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (239 samples, 75.16%)</title><rect x="43.4" y="2051.0" width="886.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.4" y="2062.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.31%)</title><rect x="54.5" y="2035.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.5" y="2046.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 2.52%)</title><rect x="58.2" y="2035.0" width="29.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.2" y="2046.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.31%)</title><rect x="58.2" y="2019.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.2" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 2.20%)</title><rect x="61.9" y="2019.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.9" y="2030.0">o..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.20%)</title><rect x="61.9" y="2003.0" width="26.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="64.9" y="2014.0">[..</text>
</g>
<g>
<title>epoll_wait (7 samples, 2.20%)</title><rect x="61.9" y="1987.0" width="26.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="64.9" y="1998.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.57%)</title><rect x="69.4" y="1971.0" width="18.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="72.4" y="1982.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.31%)</title><rect x="69.4" y="1955.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="72.4" y="1966.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.26%)</title><rect x="73.1" y="1955.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="76.1" y="1966.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.94%)</title><rect x="73.1" y="1939.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.1" y="1950.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.94%)</title><rect x="73.1" y="1923.0" width="11.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="76.1" y="1934.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.94%)</title><rect x="73.1" y="1907.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.1" y="1918.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.31%)</title><rect x="73.1" y="1891.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.1" y="1902.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.63%)</title><rect x="76.8" y="1891.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="79.8" y="1902.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.63%)</title><rect x="76.8" y="1875.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.8" y="1886.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.63%)</title><rect x="76.8" y="1859.0" width="7.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.8" y="1870.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.63%)</title><rect x="76.8" y="1843.0" width="7.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="79.8" y="1854.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.63%)</title><rect x="76.8" y="1827.0" width="7.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="79.8" y="1838.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.31%)</title><rect x="84.2" y="1939.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.2" y="1950.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.31%)</title><rect x="84.2" y="1923.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.2" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (227 samples, 71.38%)</title><rect x="87.9" y="2035.0" width="842.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.9" y="2046.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (227 samples, 71.38%)</title><rect x="87.9" y="2019.0" width="842.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.9" y="2030.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (1 samples, 0.31%)</title><rect x="87.9" y="2003.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.9" y="2014.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (1 samples, 0.31%)</title><rect x="87.9" y="1987.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.9" y="1998.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (1 samples, 0.31%)</title><rect x="87.9" y="1971.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.9" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.close (1 samples, 0.31%)</title><rect x="87.9" y="1955.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.9" y="1966.0"></text>
</g>
<g>
<title>__GI___shutdown (1 samples, 0.31%)</title><rect x="87.9" y="1939.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="90.9" y="1950.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.31%)</title><rect x="87.9" y="1923.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.9" y="1934.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.31%)</title><rect x="87.9" y="1907.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.9" y="1918.0"></text>
</g>
<g>
<title>__x64_sys_shutdown (1 samples, 0.31%)</title><rect x="87.9" y="1891.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.9" y="1902.0"></text>
</g>
<g>
<title>__sys_shutdown (1 samples, 0.31%)</title><rect x="87.9" y="1875.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.9" y="1886.0"></text>
</g>
<g>
<title>inet_shutdown (1 samples, 0.31%)</title><rect x="87.9" y="1859.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="90.9" y="1870.0"></text>
</g>
<g>
<title>tcp_shutdown (1 samples, 0.31%)</title><rect x="87.9" y="1843.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="90.9" y="1854.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.31%)</title><rect x="87.9" y="1827.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.9" y="1838.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (216 samples, 67.92%)</title><rect x="91.6" y="2003.0" width="801.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.6" y="2014.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (205 samples, 64.47%)</title><rect x="99.1" y="1987.0" width="760.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.1" y="1998.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (205 samples, 64.47%)</title><rect x="99.1" y="1971.0" width="760.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.1" y="1982.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (181 samples, 56.92%)</title><rect x="99.1" y="1955.0" width="671.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.1" y="1966.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 8.81%)</title><rect x="99.1" y="1939.0" width="103.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.1" y="1950.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (24 samples, 7.55%)</title><rect x="99.1" y="1923.0" width="89.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.1" y="1934.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.94%)</title><rect x="99.1" y="1907.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.1" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.31%)</title><rect x="99.1" y="1891.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.31%)</title><rect x="99.1" y="1875.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.1" y="1886.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.63%)</title><rect x="102.8" y="1891.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.8" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.63%)</title><rect x="102.8" y="1875.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.8" y="1886.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.63%)</title><rect x="102.8" y="1859.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="105.8" y="1870.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.31%)</title><rect x="106.5" y="1843.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.5" y="1854.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 6.60%)</title><rect x="110.2" y="1907.0" width="77.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.2" y="1918.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (21 samples, 6.60%)</title><rect x="110.2" y="1891.0" width="77.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.2" y="1902.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (21 samples, 6.60%)</title><rect x="110.2" y="1875.0" width="77.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="113.2" y="1886.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (21 samples, 6.60%)</title><rect x="110.2" y="1859.0" width="77.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.2" y="1870.0">one/nio/n..</text>
</g>
<g>
<title>__libc_send (20 samples, 6.29%)</title><rect x="113.9" y="1843.0" width="74.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="116.9" y="1854.0">__libc_s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 6.29%)</title><rect x="113.9" y="1827.0" width="74.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.9" y="1838.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 6.29%)</title><rect x="113.9" y="1811.0" width="74.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="116.9" y="1822.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (20 samples, 6.29%)</title><rect x="113.9" y="1795.0" width="74.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="116.9" y="1806.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (20 samples, 6.29%)</title><rect x="113.9" y="1779.0" width="74.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="116.9" y="1790.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (20 samples, 6.29%)</title><rect x="113.9" y="1763.0" width="74.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.9" y="1774.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (20 samples, 6.29%)</title><rect x="113.9" y="1747.0" width="74.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.9" y="1758.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (20 samples, 6.29%)</title><rect x="113.9" y="1731.0" width="74.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="116.9" y="1742.0">tcp_send..</text>
</g>
<g>
<title>tcp_sendmsg_locked (20 samples, 6.29%)</title><rect x="113.9" y="1715.0" width="74.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.9" y="1726.0">tcp_send..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.31%)</title><rect x="113.9" y="1699.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="116.9" y="1710.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.31%)</title><rect x="113.9" y="1683.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="116.9" y="1694.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.31%)</title><rect x="117.6" y="1699.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.6" y="1710.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.31%)</title><rect x="117.6" y="1683.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.6" y="1694.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.31%)</title><rect x="117.6" y="1667.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.6" y="1678.0"></text>
</g>
<g>
<title>tcp_push (18 samples, 5.66%)</title><rect x="121.3" y="1699.0" width="66.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.3" y="1710.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (18 samples, 5.66%)</title><rect x="121.3" y="1683.0" width="66.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="124.3" y="1694.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (18 samples, 5.66%)</title><rect x="121.3" y="1667.0" width="66.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.3" y="1678.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 5.66%)</title><rect x="121.3" y="1651.0" width="66.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="124.3" y="1662.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (18 samples, 5.66%)</title><rect x="121.3" y="1635.0" width="66.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="124.3" y="1646.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (18 samples, 5.66%)</title><rect x="121.3" y="1619.0" width="66.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="124.3" y="1630.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (15 samples, 4.72%)</title><rect x="125.0" y="1603.0" width="55.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.0" y="1614.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 1.26%)</title><rect x="125.0" y="1587.0" width="14.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="128.0" y="1598.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 1.26%)</title><rect x="125.0" y="1571.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.0" y="1582.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (3 samples, 0.94%)</title><rect x="125.0" y="1555.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="128.0" y="1566.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.63%)</title><rect x="125.0" y="1539.0" width="7.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.0" y="1550.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.31%)</title><rect x="125.0" y="1523.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="128.0" y="1534.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.31%)</title><rect x="128.7" y="1523.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="131.7" y="1534.0"></text>
</g>
<g>
<title>nf_ct_get_tuple?[nf_conntrack] (1 samples, 0.31%)</title><rect x="132.5" y="1539.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.5" y="1550.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.31%)</title><rect x="136.2" y="1555.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.2" y="1566.0"></text>
</g>
<g>
<title>ip_output (10 samples, 3.14%)</title><rect x="139.9" y="1587.0" width="37.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.9" y="1598.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (10 samples, 3.14%)</title><rect x="139.9" y="1571.0" width="37.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="142.9" y="1582.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (10 samples, 3.14%)</title><rect x="139.9" y="1555.0" width="37.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="142.9" y="1566.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 3.14%)</title><rect x="139.9" y="1539.0" width="37.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.9" y="1550.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 2.52%)</title><rect x="139.9" y="1523.0" width="29.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="142.9" y="1534.0">__..</text>
</g>
<g>
<title>do_softirq.part.20 (8 samples, 2.52%)</title><rect x="139.9" y="1507.0" width="29.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.9" y="1518.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (7 samples, 2.20%)</title><rect x="143.6" y="1491.0" width="26.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.6" y="1502.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 2.20%)</title><rect x="143.6" y="1475.0" width="26.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.6" y="1486.0">_..</text>
</g>
<g>
<title>net_rx_action (7 samples, 2.20%)</title><rect x="143.6" y="1459.0" width="26.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="146.6" y="1470.0">n..</text>
</g>
<g>
<title>process_backlog (7 samples, 2.20%)</title><rect x="143.6" y="1443.0" width="26.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.6" y="1454.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (7 samples, 2.20%)</title><rect x="143.6" y="1427.0" width="26.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.6" y="1438.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (7 samples, 2.20%)</title><rect x="143.6" y="1411.0" width="26.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="146.6" y="1422.0">_..</text>
</g>
<g>
<title>ip_rcv (6 samples, 1.89%)</title><rect x="143.6" y="1395.0" width="22.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.6" y="1406.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 1.89%)</title><rect x="143.6" y="1379.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.6" y="1390.0">i..</text>
</g>
<g>
<title>ip_local_deliver (6 samples, 1.89%)</title><rect x="143.6" y="1363.0" width="22.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.6" y="1374.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 1.89%)</title><rect x="143.6" y="1347.0" width="22.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="146.6" y="1358.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 1.89%)</title><rect x="143.6" y="1331.0" width="22.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.6" y="1342.0">i..</text>
</g>
<g>
<title>sock_put (1 samples, 0.31%)</title><rect x="143.6" y="1315.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.6" y="1326.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.57%)</title><rect x="147.3" y="1315.0" width="18.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="150.3" y="1326.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.31%)</title><rect x="147.3" y="1299.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="150.3" y="1310.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.31%)</title><rect x="147.3" y="1283.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="150.3" y="1294.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 1.26%)</title><rect x="151.0" y="1299.0" width="14.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="154.0" y="1310.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 1.26%)</title><rect x="151.0" y="1283.0" width="14.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.0" y="1294.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 1.26%)</title><rect x="151.0" y="1267.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="154.0" y="1278.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 1.26%)</title><rect x="151.0" y="1251.0" width="14.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.0" y="1262.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 1.26%)</title><rect x="151.0" y="1235.0" width="14.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.0" y="1246.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 1.26%)</title><rect x="151.0" y="1219.0" width="14.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="154.0" y="1230.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 1.26%)</title><rect x="151.0" y="1203.0" width="14.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.0" y="1214.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.31%)</title><rect x="165.8" y="1395.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.8" y="1406.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.63%)</title><rect x="169.6" y="1523.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="172.6" y="1534.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.63%)</title><rect x="169.6" y="1507.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.6" y="1518.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.63%)</title><rect x="169.6" y="1491.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="172.6" y="1502.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.31%)</title><rect x="169.6" y="1475.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.6" y="1486.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.31%)</title><rect x="169.6" y="1459.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="172.6" y="1470.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.31%)</title><rect x="173.3" y="1475.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="176.3" y="1486.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.31%)</title><rect x="177.0" y="1587.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.0" y="1598.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.31%)</title><rect x="180.7" y="1603.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.7" y="1614.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.31%)</title><rect x="184.4" y="1603.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="187.4" y="1614.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.94%)</title><rect x="188.1" y="1923.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.1" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.63%)</title><rect x="191.8" y="1907.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.63%)</title><rect x="191.8" y="1891.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.8" y="1902.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.31%)</title><rect x="199.2" y="1923.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.31%)</title><rect x="199.2" y="1907.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.2" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.63%)</title><rect x="203.0" y="1939.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.31%)</title><rect x="203.0" y="1923.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.31%)</title><rect x="203.0" y="1907.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.0" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.31%)</title><rect x="203.0" y="1891.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.0" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.31%)</title><rect x="206.7" y="1923.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.7" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (151 samples, 47.48%)</title><rect x="210.4" y="1939.0" width="560.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.4" y="1950.0">ru/mail/polis/service/stasyanoi/CustomServer.put</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (151 samples, 47.48%)</title><rect x="210.4" y="1923.0" width="560.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.4" y="1934.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (149 samples, 46.86%)</title><rect x="210.4" y="1907.0" width="552.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.4" y="1918.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (149 samples, 46.86%)</title><rect x="210.4" y="1891.0" width="552.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.4" y="1902.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (125 samples, 39.31%)</title><rect x="217.8" y="1875.0" width="463.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="220.8" y="1886.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (125 samples, 39.31%)</title><rect x="217.8" y="1859.0" width="463.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="220.8" y="1870.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (125 samples, 39.31%)</title><rect x="217.8" y="1843.0" width="463.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="220.8" y="1854.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice co..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (125 samples, 39.31%)</title><rect x="217.8" y="1827.0" width="463.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="220.8" y="1838.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::Colu..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (125 samples, 39.31%)</title><rect x="217.8" y="1811.0" width="463.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="220.8" y="1822.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFa..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (124 samples, 38.99%)</title><rect x="217.8" y="1795.0" width="460.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="220.8" y="1806.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::W..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (123 samples, 38.68%)</title><rect x="217.8" y="1779.0" width="456.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="220.8" y="1790.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksd..</text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.31%)</title><rect x="217.8" y="1763.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="220.8" y="1774.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (4 samples, 1.26%)</title><rect x="221.5" y="1763.0" width="14.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="224.5" y="1774.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.94%)</title><rect x="221.5" y="1747.0" width="11.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="224.5" y="1758.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.94%)</title><rect x="221.5" y="1731.0" width="11.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="224.5" y="1742.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.31%)</title><rect x="221.5" y="1715.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="224.5" y="1726.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.31%)</title><rect x="221.5" y="1699.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="224.5" y="1710.0"></text>
</g>
<g>
<title>__GI_write (1 samples, 0.31%)</title><rect x="221.5" y="1683.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="224.5" y="1694.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) [clone .plt] (1 samples, 0.31%)</title><rect x="225.2" y="1715.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="228.2" y="1726.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.31%)</title><rect x="228.9" y="1715.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="231.9" y="1726.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.31%)</title><rect x="228.9" y="1699.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="231.9" y="1710.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.31%)</title><rect x="232.6" y="1747.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="235.6" y="1758.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 2.83%)</title><rect x="236.4" y="1763.0" width="33.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="239.4" y="1774.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 2.83%)</title><rect x="236.4" y="1747.0" width="33.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="239.4" y="1758.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 2.83%)</title><rect x="236.4" y="1731.0" width="33.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="239.4" y="1742.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.83%)</title><rect x="236.4" y="1715.0" width="33.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="239.4" y="1726.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 2.83%)</title><rect x="236.4" y="1699.0" width="33.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="239.4" y="1710.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 2.83%)</title><rect x="236.4" y="1683.0" width="33.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="239.4" y="1694.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 2.83%)</title><rect x="236.4" y="1667.0" width="33.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="239.4" y="1678.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (9 samples, 2.83%)</title><rect x="236.4" y="1651.0" width="33.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="239.4" y="1662.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (7 samples, 2.20%)</title><rect x="236.4" y="1635.0" width="25.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="239.4" y="1646.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 2.20%)</title><rect x="236.4" y="1619.0" width="25.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="239.4" y="1630.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 2.20%)</title><rect x="236.4" y="1603.0" width="25.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="239.4" y="1614.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.63%)</title><rect x="236.4" y="1587.0" width="7.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="239.4" y="1598.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.63%)</title><rect x="236.4" y="1571.0" width="7.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="239.4" y="1582.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.31%)</title><rect x="236.4" y="1555.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="239.4" y="1566.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.31%)</title><rect x="240.1" y="1555.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="243.1" y="1566.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.31%)</title><rect x="240.1" y="1539.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="243.1" y="1550.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.26%)</title><rect x="243.8" y="1587.0" width="14.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="246.8" y="1598.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 1.26%)</title><rect x="243.8" y="1571.0" width="14.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="246.8" y="1582.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.31%)</title><rect x="243.8" y="1555.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="246.8" y="1566.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.31%)</title><rect x="247.5" y="1555.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="250.5" y="1566.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.63%)</title><rect x="251.2" y="1555.0" width="7.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="254.2" y="1566.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.31%)</title><rect x="251.2" y="1539.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="254.2" y="1550.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.31%)</title><rect x="254.9" y="1539.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="257.9" y="1550.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.31%)</title><rect x="258.6" y="1587.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="261.6" y="1598.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.31%)</title><rect x="258.6" y="1571.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="261.6" y="1582.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.63%)</title><rect x="262.3" y="1635.0" width="7.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="265.3" y="1646.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.63%)</title><rect x="262.3" y="1619.0" width="7.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="265.3" y="1630.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.63%)</title><rect x="262.3" y="1603.0" width="7.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="265.3" y="1614.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.63%)</title><rect x="262.3" y="1587.0" width="7.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="265.3" y="1598.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.63%)</title><rect x="262.3" y="1571.0" width="7.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="265.3" y="1582.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.63%)</title><rect x="262.3" y="1555.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="265.3" y="1566.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.31%)</title><rect x="266.0" y="1539.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="269.0" y="1550.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (56 samples, 17.61%)</title><rect x="269.7" y="1763.0" width="207.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="272.7" y="1774.0">rocksdb::WriteBatchInternal..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (56 samples, 17.61%)</title><rect x="269.7" y="1747.0" width="207.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="272.7" y="1758.0">rocksdb::WriteBatch::Iterat..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (56 samples, 17.61%)</title><rect x="269.7" y="1731.0" width="207.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="272.7" y="1742.0">rocksdb::WriteBatchInternal..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (55 samples, 17.30%)</title><rect x="273.5" y="1715.0" width="204.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="276.5" y="1726.0">rocksdb::MemTableInserter::..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (55 samples, 17.30%)</title><rect x="273.5" y="1699.0" width="204.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="276.5" y="1710.0">rocksdb::MemTableInserter::..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (55 samples, 17.30%)</title><rect x="273.5" y="1683.0" width="204.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="276.5" y="1694.0">rocksdb::MemTable::Add(unsi..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (55 samples, 17.30%)</title><rect x="273.5" y="1667.0" width="204.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="276.5" y="1678.0">rocksdb::InlineSkipList&lt;roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (55 samples, 17.30%)</title><rect x="273.5" y="1651.0" width="204.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="276.5" y="1662.0">bool rocksdb::InlineSkipLis..</text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (52 samples, 16.35%)</title><rect x="273.5" y="1635.0" width="192.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="276.5" y="1646.0">/tmp/librocksdbjni1049574..</text>
</g>
<g>
<title>/tmp/librocksdbjni10495743274875908292.so (52 samples, 16.35%)</title><rect x="273.5" y="1619.0" width="192.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="276.5" y="1630.0">/tmp/librocksdbjni1049574..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (52 samples, 16.35%)</title><rect x="273.5" y="1603.0" width="192.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="276.5" y="1614.0">rocksdb::MemTable::KeyCom..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.31%)</title><rect x="273.5" y="1587.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="276.5" y="1598.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (50 samples, 15.72%)</title><rect x="277.2" y="1587.0" width="185.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="280.2" y="1598.0">rocksdb::BaseComparatorJ..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.63%)</title><rect x="277.2" y="1571.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="280.2" y="1582.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.63%)</title><rect x="277.2" y="1555.0" width="7.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="280.2" y="1566.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.31%)</title><rect x="280.9" y="1539.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="283.9" y="1550.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.31%)</title><rect x="280.9" y="1523.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="283.9" y="1534.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (11 samples, 3.46%)</title><rect x="284.6" y="1571.0" width="40.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="287.6" y="1582.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (11 samples, 3.46%)</title><rect x="284.6" y="1555.0" width="40.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="287.6" y="1566.0">jni..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.31%)</title><rect x="288.3" y="1539.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="291.3" y="1550.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.31%)</title><rect x="292.0" y="1539.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="295.0" y="1550.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.31%)</title><rect x="295.7" y="1539.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="298.7" y="1550.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.31%)</title><rect x="299.4" y="1539.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="302.4" y="1550.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (6 samples, 1.89%)</title><rect x="303.1" y="1539.0" width="22.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="306.1" y="1550.0">j..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.31%)</title><rect x="314.3" y="1523.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="317.3" y="1534.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.31%)</title><rect x="318.0" y="1523.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="321.0" y="1534.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.31%)</title><rect x="321.7" y="1523.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="324.7" y="1534.0"></text>
</g>
<g>
<title>__lll_lock_wait (8 samples, 2.52%)</title><rect x="325.4" y="1571.0" width="29.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="328.4" y="1582.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.89%)</title><rect x="332.8" y="1555.0" width="22.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="335.8" y="1566.0">e..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.89%)</title><rect x="332.8" y="1539.0" width="22.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="335.8" y="1550.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.94%)</title><rect x="340.3" y="1523.0" width="11.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="343.3" y="1534.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.94%)</title><rect x="340.3" y="1507.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="343.3" y="1518.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.94%)</title><rect x="340.3" y="1491.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.3" y="1502.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.31%)</title><rect x="340.3" y="1475.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="343.3" y="1486.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.31%)</title><rect x="340.3" y="1459.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="343.3" y="1470.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.31%)</title><rect x="340.3" y="1443.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="343.3" y="1454.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.31%)</title><rect x="340.3" y="1427.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="343.3" y="1438.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.63%)</title><rect x="344.0" y="1475.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.0" y="1486.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.31%)</title><rect x="344.0" y="1459.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="347.0" y="1470.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.31%)</title><rect x="347.7" y="1459.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.7" y="1470.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.31%)</title><rect x="347.7" y="1443.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.7" y="1454.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.31%)</title><rect x="351.4" y="1523.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="354.4" y="1534.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.31%)</title><rect x="351.4" y="1507.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="354.4" y="1518.0"></text>
</g>
<g>
<title>__lll_unlock_wake (23 samples, 7.23%)</title><rect x="355.1" y="1571.0" width="85.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="358.1" y="1582.0">__lll_unlo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 7.23%)</title><rect x="355.1" y="1555.0" width="85.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="358.1" y="1566.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (23 samples, 7.23%)</title><rect x="355.1" y="1539.0" width="85.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.1" y="1550.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 6.60%)</title><rect x="355.1" y="1523.0" width="77.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="358.1" y="1534.0">__x64_sys..</text>
</g>
<g>
<title>do_futex (21 samples, 6.60%)</title><rect x="355.1" y="1507.0" width="77.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="358.1" y="1518.0">do_futex</text>
</g>
<g>
<title>futex_wake (20 samples, 6.29%)</title><rect x="358.8" y="1491.0" width="74.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.8" y="1502.0">futex_wake</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.31%)</title><rect x="362.5" y="1475.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="365.5" y="1486.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.31%)</title><rect x="362.5" y="1459.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.5" y="1470.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.63%)</title><rect x="366.2" y="1475.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.2" y="1486.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 5.03%)</title><rect x="373.6" y="1475.0" width="59.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.6" y="1486.0">wake_u..</text>
</g>
<g>
<title>try_to_wake_up (16 samples, 5.03%)</title><rect x="373.6" y="1459.0" width="59.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.6" y="1470.0">try_to..</text>
</g>
<g>
<title>__lock_text_start (16 samples, 5.03%)</title><rect x="373.6" y="1443.0" width="59.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="376.6" y="1454.0">__lock..</text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.31%)</title><rect x="433.0" y="1523.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.0" y="1534.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.31%)</title><rect x="436.7" y="1523.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="439.7" y="1534.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.31%)</title><rect x="440.4" y="1571.0" width="3.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="443.4" y="1582.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.31%)</title><rect x="444.2" y="1571.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="447.2" y="1582.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.31%)</title><rect x="444.2" y="1555.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="447.2" y="1566.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.63%)</title><rect x="447.9" y="1571.0" width="7.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="450.9" y="1582.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.31%)</title><rect x="455.3" y="1571.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="458.3" y="1582.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.31%)</title><rect x="459.0" y="1571.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="462.0" y="1582.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.31%)</title><rect x="459.0" y="1555.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="462.0" y="1566.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.31%)</title><rect x="462.7" y="1587.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="465.7" y="1598.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.94%)</title><rect x="466.4" y="1635.0" width="11.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="469.4" y="1646.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.63%)</title><rect x="466.4" y="1619.0" width="7.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="469.4" y="1630.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.31%)</title><rect x="466.4" y="1603.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="469.4" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.31%)</title><rect x="466.4" y="1587.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="469.4" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.31%)</title><rect x="466.4" y="1571.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.4" y="1582.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.31%)</title><rect x="466.4" y="1555.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="469.4" y="1566.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.31%)</title><rect x="470.1" y="1603.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="473.1" y="1614.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.31%)</title><rect x="470.1" y="1587.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.1" y="1598.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.31%)</title><rect x="470.1" y="1571.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="473.1" y="1582.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.31%)</title><rect x="470.1" y="1555.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="473.1" y="1566.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.31%)</title><rect x="470.1" y="1539.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.1" y="1550.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.31%)</title><rect x="470.1" y="1523.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="473.1" y="1534.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() [clone .plt] (1 samples, 0.31%)</title><rect x="473.8" y="1619.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="476.8" y="1630.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (12 samples, 3.77%)</title><rect x="477.5" y="1763.0" width="44.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="480.5" y="1774.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (10 samples, 3.14%)</title><rect x="522.1" y="1763.0" width="37.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="525.1" y="1774.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (7 samples, 2.20%)</title><rect x="522.1" y="1747.0" width="26.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="525.1" y="1758.0">r..</text>
</g>
<g>
<title>sched_yield (3 samples, 0.94%)</title><rect x="548.1" y="1747.0" width="11.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="551.1" y="1758.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.94%)</title><rect x="548.1" y="1731.0" width="11.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="551.1" y="1742.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.94%)</title><rect x="548.1" y="1715.0" width="11.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.1" y="1726.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.94%)</title><rect x="548.1" y="1699.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.1" y="1710.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.94%)</title><rect x="548.1" y="1683.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="551.1" y="1694.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.94%)</title><rect x="548.1" y="1667.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="551.1" y="1678.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.94%)</title><rect x="548.1" y="1651.0" width="11.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="551.1" y="1662.0"></text>
</g>
<g>
<title>sched_yield (31 samples, 9.75%)</title><rect x="559.2" y="1763.0" width="115.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="562.2" y="1774.0">sched_yield</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 9.12%)</title><rect x="566.6" y="1747.0" width="107.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="569.6" y="1758.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.31%)</title><rect x="566.6" y="1731.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="569.6" y="1742.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 8.81%)</title><rect x="570.3" y="1731.0" width="103.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="573.3" y="1742.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sched_yield (16 samples, 5.03%)</title><rect x="600.0" y="1715.0" width="59.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.0" y="1726.0">__x64_..</text>
</g>
<g>
<title>do_sched_yield (16 samples, 5.03%)</title><rect x="600.0" y="1699.0" width="59.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.0" y="1710.0">do_sch..</text>
</g>
<g>
<title>schedule (16 samples, 5.03%)</title><rect x="600.0" y="1683.0" width="59.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.0" y="1694.0">schedule</text>
</g>
<g>
<title>__sched_text_start (16 samples, 5.03%)</title><rect x="600.0" y="1667.0" width="59.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="603.0" y="1678.0">__sche..</text>
</g>
<g>
<title>syscall_slow_exit_work (3 samples, 0.94%)</title><rect x="659.4" y="1715.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.4" y="1726.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.63%)</title><rect x="663.1" y="1699.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="666.1" y="1710.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.31%)</title><rect x="663.1" y="1683.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.1" y="1694.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.31%)</title><rect x="666.8" y="1683.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="669.8" y="1694.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.31%)</title><rect x="670.5" y="1715.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.5" y="1726.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.31%)</title><rect x="670.5" y="1699.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="673.5" y="1710.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.31%)</title><rect x="674.2" y="1779.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="677.2" y="1790.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="677.9" y="1795.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="680.9" y="1806.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.31%)</title><rect x="677.9" y="1779.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="680.9" y="1790.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() [clone .plt] (1 samples, 0.31%)</title><rect x="677.9" y="1763.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="680.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 3.14%)</title><rect x="681.6" y="1875.0" width="37.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="684.6" y="1886.0">[un..</text>
</g>
<g>
<title>__GI_write (9 samples, 2.83%)</title><rect x="681.6" y="1859.0" width="33.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="684.6" y="1870.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 2.83%)</title><rect x="681.6" y="1843.0" width="33.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="684.6" y="1854.0">en..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.83%)</title><rect x="681.6" y="1827.0" width="33.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.6" y="1838.0">do..</text>
</g>
<g>
<title>__x64_sys_write (9 samples, 2.83%)</title><rect x="681.6" y="1811.0" width="33.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.6" y="1822.0">__..</text>
</g>
<g>
<title>ksys_write (9 samples, 2.83%)</title><rect x="681.6" y="1795.0" width="33.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.6" y="1806.0">ks..</text>
</g>
<g>
<title>vfs_write (9 samples, 2.83%)</title><rect x="681.6" y="1779.0" width="33.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="684.6" y="1790.0">vf..</text>
</g>
<g>
<title>__vfs_write (8 samples, 2.52%)</title><rect x="681.6" y="1763.0" width="29.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="684.6" y="1774.0">__..</text>
</g>
<g>
<title>new_sync_write (8 samples, 2.52%)</title><rect x="681.6" y="1747.0" width="29.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="684.6" y="1758.0">ne..</text>
</g>
<g>
<title>ext4_file_write_iter (7 samples, 2.20%)</title><rect x="685.3" y="1731.0" width="26.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="688.3" y="1742.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (7 samples, 2.20%)</title><rect x="685.3" y="1715.0" width="26.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="688.3" y="1726.0">_..</text>
</g>
<g>
<title>current_time (1 samples, 0.31%)</title><rect x="685.3" y="1699.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="688.3" y="1710.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.31%)</title><rect x="689.1" y="1699.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="692.1" y="1710.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.31%)</title><rect x="689.1" y="1683.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="692.1" y="1694.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.31%)</title><rect x="689.1" y="1667.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="692.1" y="1678.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.31%)</title><rect x="689.1" y="1651.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="692.1" y="1662.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.31%)</title><rect x="689.1" y="1635.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.1" y="1646.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.31%)</title><rect x="689.1" y="1619.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="692.1" y="1630.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.31%)</title><rect x="689.1" y="1603.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="692.1" y="1614.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 1.57%)</title><rect x="692.8" y="1699.0" width="18.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="695.8" y="1710.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.63%)</title><rect x="692.8" y="1683.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="695.8" y="1694.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.63%)</title><rect x="692.8" y="1667.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="695.8" y="1678.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.31%)</title><rect x="696.5" y="1651.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.5" y="1662.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.31%)</title><rect x="696.5" y="1635.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="699.5" y="1646.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.63%)</title><rect x="700.2" y="1683.0" width="7.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="703.2" y="1694.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.63%)</title><rect x="700.2" y="1667.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.2" y="1678.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.63%)</title><rect x="700.2" y="1651.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.2" y="1662.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.63%)</title><rect x="700.2" y="1635.0" width="7.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="703.2" y="1646.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.63%)</title><rect x="700.2" y="1619.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="703.2" y="1630.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.31%)</title><rect x="700.2" y="1603.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.2" y="1614.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.31%)</title><rect x="700.2" y="1587.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="703.2" y="1598.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.31%)</title><rect x="703.9" y="1603.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.9" y="1614.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.31%)</title><rect x="703.9" y="1587.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="706.9" y="1598.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.31%)</title><rect x="707.6" y="1683.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.6" y="1694.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.31%)</title><rect x="711.3" y="1763.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="714.3" y="1774.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.31%)</title><rect x="715.0" y="1859.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="718.0" y="1870.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.31%)</title><rect x="715.0" y="1843.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="718.0" y="1854.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.31%)</title><rect x="715.0" y="1827.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="718.0" y="1838.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.63%)</title><rect x="718.7" y="1875.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.7" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (10 samples, 3.14%)</title><rect x="726.2" y="1875.0" width="37.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.2" y="1886.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (10 samples, 3.14%)</title><rect x="726.2" y="1859.0" width="37.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.2" y="1870.0">ru/..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (3 samples, 0.94%)</title><rect x="726.2" y="1843.0" width="11.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.2" y="1854.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (3 samples, 0.94%)</title><rect x="726.2" y="1827.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.2" y="1838.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.31%)</title><rect x="733.6" y="1811.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.6" y="1822.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (7 samples, 2.20%)</title><rect x="737.3" y="1843.0" width="26.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.3" y="1854.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 2.20%)</title><rect x="737.3" y="1827.0" width="26.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.3" y="1838.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 2.20%)</title><rect x="737.3" y="1811.0" width="26.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.3" y="1822.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (7 samples, 2.20%)</title><rect x="737.3" y="1795.0" width="26.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="740.3" y="1806.0">J..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.31%)</title><rect x="737.3" y="1779.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="740.3" y="1790.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.31%)</title><rect x="741.0" y="1779.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="744.0" y="1790.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.31%)</title><rect x="741.0" y="1763.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="744.0" y="1774.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 1.57%)</title><rect x="744.7" y="1779.0" width="18.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="747.7" y="1790.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.31%)</title><rect x="744.7" y="1763.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="747.7" y="1774.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 1.26%)</title><rect x="748.4" y="1763.0" width="14.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="751.4" y="1774.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 1.26%)</title><rect x="748.4" y="1747.0" width="14.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="751.4" y="1758.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.94%)</title><rect x="748.4" y="1731.0" width="11.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="751.4" y="1742.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.31%)</title><rect x="752.1" y="1715.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="755.1" y="1726.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.31%)</title><rect x="755.8" y="1715.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="758.8" y="1726.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.31%)</title><rect x="759.6" y="1731.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="762.6" y="1742.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.toBytes (2 samples, 0.63%)</title><rect x="763.3" y="1907.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.3" y="1918.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.63%)</title><rect x="763.3" y="1891.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="766.3" y="1902.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.63%)</title><rect x="763.3" y="1875.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.3" y="1886.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.31%)</title><rect x="767.0" y="1859.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.0" y="1870.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleDefault (21 samples, 6.60%)</title><rect x="770.7" y="1955.0" width="77.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.7" y="1966.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 6.29%)</title><rect x="770.7" y="1939.0" width="74.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.7" y="1950.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 6.29%)</title><rect x="770.7" y="1923.0" width="74.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.7" y="1934.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 6.29%)</title><rect x="770.7" y="1907.0" width="74.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.7" y="1918.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 6.29%)</title><rect x="770.7" y="1891.0" width="74.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.7" y="1902.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (20 samples, 6.29%)</title><rect x="770.7" y="1875.0" width="74.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.7" y="1886.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (20 samples, 6.29%)</title><rect x="770.7" y="1859.0" width="74.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.7" y="1870.0">one/nio/..</text>
</g>
<g>
<title>__libc_send (20 samples, 6.29%)</title><rect x="770.7" y="1843.0" width="74.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="773.7" y="1854.0">__libc_s..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 6.29%)</title><rect x="770.7" y="1827.0" width="74.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.7" y="1838.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (20 samples, 6.29%)</title><rect x="770.7" y="1811.0" width="74.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.7" y="1822.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (18 samples, 5.66%)</title><rect x="774.4" y="1795.0" width="66.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="777.4" y="1806.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (18 samples, 5.66%)</title><rect x="774.4" y="1779.0" width="66.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="777.4" y="1790.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (18 samples, 5.66%)</title><rect x="774.4" y="1763.0" width="66.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.4" y="1774.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (18 samples, 5.66%)</title><rect x="774.4" y="1747.0" width="66.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="777.4" y="1758.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (18 samples, 5.66%)</title><rect x="774.4" y="1731.0" width="66.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="777.4" y="1742.0">tcp_sen..</text>
</g>
<g>
<title>tcp_push (1 samples, 0.31%)</title><rect x="774.4" y="1715.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.4" y="1726.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (17 samples, 5.35%)</title><rect x="778.1" y="1715.0" width="63.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.1" y="1726.0">tcp_sen..</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.31%)</title><rect x="778.1" y="1699.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.1" y="1710.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.31%)</title><rect x="778.1" y="1683.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.1" y="1694.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.31%)</title><rect x="781.8" y="1699.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="784.8" y="1710.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.31%)</title><rect x="781.8" y="1683.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="784.8" y="1694.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.31%)</title><rect x="781.8" y="1667.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.8" y="1678.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.31%)</title><rect x="781.8" y="1651.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.8" y="1662.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.31%)</title><rect x="781.8" y="1635.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.8" y="1646.0"></text>
</g>
<g>
<title>tcp_push (15 samples, 4.72%)</title><rect x="785.5" y="1699.0" width="55.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="788.5" y="1710.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (15 samples, 4.72%)</title><rect x="785.5" y="1683.0" width="55.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.5" y="1694.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (15 samples, 4.72%)</title><rect x="785.5" y="1667.0" width="55.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="788.5" y="1678.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 4.40%)</title><rect x="785.5" y="1651.0" width="52.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="788.5" y="1662.0">__tcp..</text>
</g>
<g>
<title>ip_queue_xmit (14 samples, 4.40%)</title><rect x="785.5" y="1635.0" width="52.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="788.5" y="1646.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 4.09%)</title><rect x="789.2" y="1619.0" width="48.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="792.2" y="1630.0">__ip..</text>
</g>
<g>
<title>ip_local_out (13 samples, 4.09%)</title><rect x="789.2" y="1603.0" width="48.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="792.2" y="1614.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.31%)</title><rect x="789.2" y="1587.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="792.2" y="1598.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.31%)</title><rect x="789.2" y="1571.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="792.2" y="1582.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (1 samples, 0.31%)</title><rect x="789.2" y="1555.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="792.2" y="1566.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.31%)</title><rect x="789.2" y="1539.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="792.2" y="1550.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.31%)</title><rect x="789.2" y="1523.0" width="3.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="792.2" y="1534.0"></text>
</g>
<g>
<title>ip_output (12 samples, 3.77%)</title><rect x="793.0" y="1587.0" width="44.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.0" y="1598.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (12 samples, 3.77%)</title><rect x="793.0" y="1571.0" width="44.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="796.0" y="1582.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (12 samples, 3.77%)</title><rect x="793.0" y="1555.0" width="44.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="796.0" y="1566.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (12 samples, 3.77%)</title><rect x="793.0" y="1539.0" width="44.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="796.0" y="1550.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 3.14%)</title><rect x="796.7" y="1523.0" width="37.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="799.7" y="1534.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (10 samples, 3.14%)</title><rect x="796.7" y="1507.0" width="37.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="799.7" y="1518.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 3.14%)</title><rect x="796.7" y="1491.0" width="37.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="799.7" y="1502.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 3.14%)</title><rect x="796.7" y="1475.0" width="37.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="799.7" y="1486.0">__s..</text>
</g>
<g>
<title>net_rx_action (9 samples, 2.83%)</title><rect x="800.4" y="1459.0" width="33.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="803.4" y="1470.0">ne..</text>
</g>
<g>
<title>process_backlog (9 samples, 2.83%)</title><rect x="800.4" y="1443.0" width="33.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="803.4" y="1454.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (9 samples, 2.83%)</title><rect x="800.4" y="1427.0" width="33.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="803.4" y="1438.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (9 samples, 2.83%)</title><rect x="800.4" y="1411.0" width="33.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="803.4" y="1422.0">__..</text>
</g>
<g>
<title>ip_rcv (9 samples, 2.83%)</title><rect x="800.4" y="1395.0" width="33.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="803.4" y="1406.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (9 samples, 2.83%)</title><rect x="800.4" y="1379.0" width="33.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.4" y="1390.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (9 samples, 2.83%)</title><rect x="800.4" y="1363.0" width="33.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.4" y="1374.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 2.83%)</title><rect x="800.4" y="1347.0" width="33.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="803.4" y="1358.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 2.83%)</title><rect x="800.4" y="1331.0" width="33.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="803.4" y="1342.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 2.83%)</title><rect x="800.4" y="1315.0" width="33.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.4" y="1326.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.31%)</title><rect x="804.1" y="1299.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="807.1" y="1310.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.31%)</title><rect x="807.8" y="1299.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="810.8" y="1310.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.31%)</title><rect x="807.8" y="1283.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.8" y="1294.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 1.89%)</title><rect x="811.5" y="1299.0" width="22.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="814.5" y="1310.0">t..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.31%)</title><rect x="811.5" y="1283.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="814.5" y="1294.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.57%)</title><rect x="815.2" y="1283.0" width="18.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.2" y="1294.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.94%)</title><rect x="815.2" y="1267.0" width="11.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="818.2" y="1278.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.94%)</title><rect x="815.2" y="1251.0" width="11.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="818.2" y="1262.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.63%)</title><rect x="818.9" y="1235.0" width="7.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="821.9" y="1246.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.63%)</title><rect x="826.4" y="1267.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="829.4" y="1278.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.63%)</title><rect x="826.4" y="1251.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="829.4" y="1262.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.63%)</title><rect x="826.4" y="1235.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="829.4" y="1246.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.63%)</title><rect x="826.4" y="1219.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="829.4" y="1230.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.31%)</title><rect x="830.1" y="1203.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.1" y="1214.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.31%)</title><rect x="833.8" y="1523.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.8" y="1534.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.31%)</title><rect x="833.8" y="1507.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="836.8" y="1518.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.31%)</title><rect x="833.8" y="1491.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.8" y="1502.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.31%)</title><rect x="837.5" y="1651.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.5" y="1662.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.31%)</title><rect x="837.5" y="1635.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="840.5" y="1646.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.31%)</title><rect x="841.2" y="1795.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="844.2" y="1806.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.31%)</title><rect x="841.2" y="1779.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="844.2" y="1790.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.31%)</title><rect x="844.9" y="1939.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.31%)</title><rect x="844.9" y="1923.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.9" y="1934.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.31%)</title><rect x="844.9" y="1907.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.9" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.31%)</title><rect x="848.6" y="1955.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.6" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.63%)</title><rect x="852.3" y="1955.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.3" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.63%)</title><rect x="852.3" y="1939.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.3" y="1950.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.63%)</title><rect x="852.3" y="1923.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.3" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 1.89%)</title><rect x="859.7" y="1987.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.7" y="1998.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.94%)</title><rect x="863.5" y="1971.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.94%)</title><rect x="863.5" y="1955.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="866.5" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.94%)</title><rect x="863.5" y="1939.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.5" y="1950.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.31%)</title><rect x="863.5" y="1923.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="866.5" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.63%)</title><rect x="867.2" y="1923.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.2" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.63%)</title><rect x="874.6" y="1971.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.6" y="1982.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.31%)</title><rect x="878.3" y="1955.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.3" y="1966.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.31%)</title><rect x="878.3" y="1939.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.3" y="1950.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.31%)</title><rect x="878.3" y="1923.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="881.3" y="1934.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.31%)</title><rect x="878.3" y="1907.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="881.3" y="1918.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.31%)</title><rect x="878.3" y="1891.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.3" y="1902.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (1 samples, 0.31%)</title><rect x="878.3" y="1875.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="881.3" y="1886.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.31%)</title><rect x="878.3" y="1859.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="881.3" y="1870.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.31%)</title><rect x="878.3" y="1843.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="881.3" y="1854.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.31%)</title><rect x="878.3" y="1827.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="881.3" y="1838.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.63%)</title><rect x="882.0" y="1987.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.63%)</title><rect x="882.0" y="1971.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.0" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.63%)</title><rect x="882.0" y="1955.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.63%)</title><rect x="882.0" y="1939.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.0" y="1950.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.63%)</title><rect x="882.0" y="1923.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.63%)</title><rect x="882.0" y="1907.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.0" y="1918.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.31%)</title><rect x="885.7" y="1891.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="888.7" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.31%)</title><rect x="889.4" y="1987.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.4" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.31%)</title><rect x="889.4" y="1971.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.31%)</title><rect x="889.4" y="1955.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.31%)</title><rect x="889.4" y="1939.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.4" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 3.14%)</title><rect x="893.1" y="2003.0" width="37.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.1" y="2014.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 2.83%)</title><rect x="893.1" y="1987.0" width="33.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.1" y="1998.0">on..</text>
</g>
<g>
<title>__GI___recv (8 samples, 2.52%)</title><rect x="893.1" y="1971.0" width="29.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="896.1" y="1982.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 2.20%)</title><rect x="896.9" y="1955.0" width="25.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="899.9" y="1966.0">e..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 2.20%)</title><rect x="896.9" y="1939.0" width="25.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="899.9" y="1950.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 2.20%)</title><rect x="896.9" y="1923.0" width="25.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="899.9" y="1934.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 2.20%)</title><rect x="896.9" y="1907.0" width="25.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="899.9" y="1918.0">_..</text>
</g>
<g>
<title>fput_many (1 samples, 0.31%)</title><rect x="900.6" y="1891.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="903.6" y="1902.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 1.26%)</title><rect x="904.3" y="1891.0" width="14.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.3" y="1902.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 1.26%)</title><rect x="904.3" y="1875.0" width="14.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.3" y="1886.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.31%)</title><rect x="904.3" y="1859.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.3" y="1870.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.94%)</title><rect x="908.0" y="1859.0" width="11.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.0" y="1870.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.31%)</title><rect x="908.0" y="1843.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="911.0" y="1854.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.31%)</title><rect x="908.0" y="1827.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="911.0" y="1838.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.31%)</title><rect x="908.0" y="1811.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.0" y="1822.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.31%)</title><rect x="908.0" y="1795.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="911.0" y="1806.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.63%)</title><rect x="911.7" y="1843.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.7" y="1854.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.31%)</title><rect x="915.4" y="1827.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="918.4" y="1838.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.31%)</title><rect x="915.4" y="1811.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.4" y="1822.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.31%)</title><rect x="919.1" y="1891.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="922.1" y="1902.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.31%)</title><rect x="919.1" y="1875.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="922.1" y="1886.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.31%)</title><rect x="919.1" y="1859.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="922.1" y="1870.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.31%)</title><rect x="919.1" y="1843.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="922.1" y="1854.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.31%)</title><rect x="922.8" y="1971.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="925.8" y="1982.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.31%)</title><rect x="926.5" y="1987.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.5" y="1998.0"></text>
</g>
<g>
<title>start_thread (70 samples, 22.01%)</title><rect x="930.3" y="2051.0" width="259.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="933.3" y="2062.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (70 samples, 22.01%)</title><rect x="930.3" y="2035.0" width="259.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="933.3" y="2046.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (70 samples, 22.01%)</title><rect x="930.3" y="2019.0" width="259.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="933.3" y="2030.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.31%)</title><rect x="930.3" y="2003.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="933.3" y="2014.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.31%)</title><rect x="930.3" y="1987.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="933.3" y="1998.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.31%)</title><rect x="930.3" y="1971.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="933.3" y="1982.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.31%)</title><rect x="930.3" y="1955.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="933.3" y="1966.0"></text>
</g>
<g>
<title>JavaThread::run() (69 samples, 21.70%)</title><rect x="934.0" y="2003.0" width="256.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="937.0" y="2014.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (69 samples, 21.70%)</title><rect x="934.0" y="1987.0" width="256.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="937.0" y="1998.0">CompileBroker::compiler_thread_loo..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (69 samples, 21.70%)</title><rect x="934.0" y="1971.0" width="256.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="937.0" y="1982.0">CompileBroker::invoke_compiler_on_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (64 samples, 20.13%)</title><rect x="934.0" y="1955.0" width="237.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="937.0" y="1966.0">C2Compiler::compile_method(ciEn..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (64 samples, 20.13%)</title><rect x="934.0" y="1939.0" width="237.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="937.0" y="1950.0">Compile::Compile(ciEnv*, C2Comp..</text>
</g>
<g>
<title>Compile::Code_Gen() (35 samples, 11.01%)</title><rect x="934.0" y="1923.0" width="129.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="937.0" y="1934.0">Compile::Code_Ge..</text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.63%)</title><rect x="934.0" y="1907.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="937.0" y="1918.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.63%)</title><rect x="934.0" y="1891.0" width="7.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="937.0" y="1902.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.63%)</title><rect x="934.0" y="1875.0" width="7.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="937.0" y="1886.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.31%)</title><rect x="937.7" y="1859.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="940.7" y="1870.0"></text>
</g>
<g>
<title>CodeBuffer::~CodeBuffer() (1 samples, 0.31%)</title><rect x="937.7" y="1843.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.7" y="1854.0"></text>
</g>
<g>
<title>CodeBuffer::verify_section_allocation() (1 samples, 0.31%)</title><rect x="937.7" y="1827.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="940.7" y="1838.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.31%)</title><rect x="941.4" y="1907.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="944.4" y="1918.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 1.26%)</title><rect x="945.1" y="1907.0" width="14.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="948.1" y="1918.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.31%)</title><rect x="945.1" y="1891.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="948.1" y="1902.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.31%)</title><rect x="945.1" y="1875.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="948.1" y="1886.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.94%)</title><rect x="948.8" y="1891.0" width="11.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="951.8" y="1902.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.94%)</title><rect x="948.8" y="1875.0" width="11.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="951.8" y="1886.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (2 samples, 0.63%)</title><rect x="952.5" y="1859.0" width="7.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="955.5" y="1870.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.31%)</title><rect x="952.5" y="1843.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="955.5" y="1854.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.31%)</title><rect x="952.5" y="1827.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="955.5" y="1838.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.31%)</title><rect x="952.5" y="1811.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="955.5" y="1822.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.31%)</title><rect x="952.5" y="1795.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="955.5" y="1806.0"></text>
</g>
<g>
<title>TypeNode::bottom_type() const (1 samples, 0.31%)</title><rect x="956.2" y="1843.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="959.2" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.94%)</title><rect x="959.9" y="1907.0" width="11.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="962.9" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.94%)</title><rect x="959.9" y="1891.0" width="11.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="962.9" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples, 0.94%)</title><rect x="959.9" y="1875.0" width="11.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="962.9" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.31%)</title><rect x="963.6" y="1859.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="966.6" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::raise_pressure(Block*, LRG&amp;, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.31%)</title><rect x="963.6" y="1843.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="966.6" y="1854.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.31%)</title><rect x="967.4" y="1859.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="970.4" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (25 samples, 7.86%)</title><rect x="971.1" y="1907.0" width="92.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="974.1" y="1918.0">PhaseChaiti..</text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.31%)</title><rect x="974.8" y="1891.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="977.8" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.31%)</title><rect x="978.5" y="1891.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="981.5" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.31%)</title><rect x="978.5" y="1875.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="981.5" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.31%)</title><rect x="978.5" y="1859.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="981.5" y="1870.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.31%)</title><rect x="978.5" y="1843.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="981.5" y="1854.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.31%)</title><rect x="978.5" y="1827.0" width="3.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="981.5" y="1838.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 2.52%)</title><rect x="982.2" y="1891.0" width="29.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="985.2" y="1902.0">Ph..</text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.31%)</title><rect x="989.6" y="1875.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="992.6" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.31%)</title><rect x="993.3" y="1875.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="996.3" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.63%)</title><rect x="997.0" y="1875.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1000.0" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.31%)</title><rect x="1000.8" y="1859.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1003.8" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.63%)</title><rect x="1004.5" y="1875.0" width="7.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.5" y="1886.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.31%)</title><rect x="1008.2" y="1859.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1011.2" y="1870.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.31%)</title><rect x="1011.9" y="1891.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.9" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.31%)</title><rect x="1011.9" y="1875.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1014.9" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.63%)</title><rect x="1015.6" y="1891.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1018.6" y="1902.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.31%)</title><rect x="1019.3" y="1875.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1022.3" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.31%)</title><rect x="1023.0" y="1891.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1026.0" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 1.57%)</title><rect x="1026.7" y="1891.0" width="18.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1029.7" y="1902.0"></text>
</g>
<g>
<title>Arena::set_size_in_bytes(unsigned long) (1 samples, 0.31%)</title><rect x="1026.7" y="1875.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1029.7" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.94%)</title><rect x="1030.4" y="1875.0" width="11.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.4" y="1886.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.31%)</title><rect x="1041.6" y="1875.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1044.6" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.31%)</title><rect x="1045.3" y="1891.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1048.3" y="1902.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.31%)</title><rect x="1045.3" y="1875.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1048.3" y="1886.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.31%)</title><rect x="1049.0" y="1891.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1052.0" y="1902.0"></text>
</g>
<g>
<title>PhaseIFG::test_edge_sq(unsigned int, unsigned int) const (1 samples, 0.31%)</title><rect x="1049.0" y="1875.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1052.0" y="1886.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.94%)</title><rect x="1052.7" y="1891.0" width="11.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1055.7" y="1902.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.63%)</title><rect x="1056.4" y="1875.0" width="7.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.4" y="1886.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.31%)</title><rect x="1060.1" y="1859.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.1" y="1870.0"></text>
</g>
<g>
<title>Compile::Optimize() (20 samples, 6.29%)</title><rect x="1063.8" y="1923.0" width="74.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1066.8" y="1934.0">Compile:..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (6 samples, 1.89%)</title><rect x="1063.8" y="1907.0" width="22.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1066.8" y="1918.0">C..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (6 samples, 1.89%)</title><rect x="1063.8" y="1891.0" width="22.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1066.8" y="1902.0">P..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.31%)</title><rect x="1063.8" y="1875.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1066.8" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.63%)</title><rect x="1067.5" y="1875.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1070.5" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (2 samples, 0.63%)</title><rect x="1067.5" y="1859.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1070.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.63%)</title><rect x="1067.5" y="1843.0" width="7.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1070.5" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (2 samples, 0.63%)</title><rect x="1067.5" y="1827.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.5" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.31%)</title><rect x="1071.3" y="1811.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.3" y="1822.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.31%)</title><rect x="1075.0" y="1875.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1078.0" y="1886.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.31%)</title><rect x="1075.0" y="1859.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1078.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.31%)</title><rect x="1078.7" y="1875.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1081.7" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.31%)</title><rect x="1082.4" y="1875.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1085.4" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.31%)</title><rect x="1082.4" y="1859.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1085.4" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.31%)</title><rect x="1086.1" y="1907.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.1" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.31%)</title><rect x="1086.1" y="1891.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1089.1" y="1902.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.63%)</title><rect x="1089.8" y="1907.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1092.8" y="1918.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.31%)</title><rect x="1097.2" y="1907.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1100.2" y="1918.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.31%)</title><rect x="1097.2" y="1891.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1100.2" y="1902.0"></text>
</g>
<g>
<title>TypeOopPtr::singleton() const (1 samples, 0.31%)</title><rect x="1097.2" y="1875.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1100.2" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (7 samples, 2.20%)</title><rect x="1100.9" y="1907.0" width="26.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1103.9" y="1918.0">P..</text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.31%)</title><rect x="1100.9" y="1891.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1103.9" y="1902.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.31%)</title><rect x="1100.9" y="1875.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1103.9" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.78] (1 samples, 0.31%)</title><rect x="1100.9" y="1859.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.9" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.31%)</title><rect x="1100.9" y="1843.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1103.9" y="1854.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.31%)</title><rect x="1100.9" y="1827.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.9" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.63%)</title><rect x="1104.7" y="1891.0" width="7.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.31%)</title><rect x="1108.4" y="1875.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1111.4" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.31%)</title><rect x="1112.1" y="1891.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.1" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.94%)</title><rect x="1115.8" y="1891.0" width="11.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.8" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.94%)</title><rect x="1115.8" y="1875.0" width="11.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.8" y="1886.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.31%)</title><rect x="1115.8" y="1859.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.8" y="1870.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.31%)</title><rect x="1119.5" y="1859.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.5" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.31%)</title><rect x="1119.5" y="1843.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.5" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.31%)</title><rect x="1119.5" y="1827.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1122.5" y="1838.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.31%)</title><rect x="1119.5" y="1811.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.5" y="1822.0"></text>
</g>
<g>
<title>TypeInt::singleton() const (1 samples, 0.31%)</title><rect x="1123.2" y="1859.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1126.2" y="1870.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.63%)</title><rect x="1126.9" y="1907.0" width="7.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1129.9" y="1918.0"></text>
</g>
<g>
<title>BoolNode::hash() const (1 samples, 0.31%)</title><rect x="1126.9" y="1891.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.9" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.31%)</title><rect x="1130.6" y="1891.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1133.6" y="1902.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.31%)</title><rect x="1130.6" y="1875.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.6" y="1886.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.31%)</title><rect x="1134.3" y="1907.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.3" y="1918.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.31%)</title><rect x="1134.3" y="1891.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.3" y="1902.0"></text>
</g>
<g>
<title>PhaseMacroExpand::initialize_object(AllocateNode*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.31%)</title><rect x="1134.3" y="1875.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1137.3" y="1886.0"></text>
</g>
<g>
<title>PhaseMacroExpand::make_load(Node*, Node*, Node*, int, Type const*, BasicType) (1 samples, 0.31%)</title><rect x="1134.3" y="1859.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.3" y="1870.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.31%)</title><rect x="1134.3" y="1843.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.3" y="1854.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.31%)</title><rect x="1134.3" y="1827.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.3" y="1838.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.31%)</title><rect x="1134.3" y="1811.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1137.3" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 2.83%)</title><rect x="1138.1" y="1923.0" width="33.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.1" y="1934.0">Pa..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 2.83%)</title><rect x="1138.1" y="1907.0" width="33.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.1" y="1918.0">Pa..</text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 2.52%)</title><rect x="1138.1" y="1891.0" width="29.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.1" y="1902.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 2.52%)</title><rect x="1138.1" y="1875.0" width="29.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.1" y="1886.0">Pa..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 2.52%)</title><rect x="1138.1" y="1859.0" width="29.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.1" y="1870.0">Pa..</text>
</g>
<g>
<title>Parse::can_not_compile_call_site(ciMethod*, ciInstanceKlass*) (1 samples, 0.31%)</title><rect x="1138.1" y="1843.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.1" y="1854.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 2.20%)</title><rect x="1141.8" y="1843.0" width="25.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.8" y="1854.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 2.20%)</title><rect x="1141.8" y="1827.0" width="25.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.8" y="1838.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 2.20%)</title><rect x="1141.8" y="1811.0" width="25.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.8" y="1822.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 2.20%)</title><rect x="1141.8" y="1795.0" width="25.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1144.8" y="1806.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 2.20%)</title><rect x="1141.8" y="1779.0" width="25.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.8" y="1790.0">P..</text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.31%)</title><rect x="1141.8" y="1763.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.8" y="1774.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 1.89%)</title><rect x="1145.5" y="1763.0" width="22.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.5" y="1774.0">P..</text>
</g>
<g>
<title>Parse::do_call() (6 samples, 1.89%)</title><rect x="1145.5" y="1747.0" width="22.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.5" y="1758.0">P..</text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 1.89%)</title><rect x="1145.5" y="1731.0" width="22.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.5" y="1742.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 1.89%)</title><rect x="1145.5" y="1715.0" width="22.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.5" y="1726.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 1.57%)</title><rect x="1145.5" y="1699.0" width="18.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.5" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 1.57%)</title><rect x="1145.5" y="1683.0" width="18.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 1.57%)</title><rect x="1145.5" y="1667.0" width="18.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 1.57%)</title><rect x="1145.5" y="1651.0" width="18.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.5" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 1.57%)</title><rect x="1145.5" y="1635.0" width="18.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.5" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 1.57%)</title><rect x="1145.5" y="1619.0" width="18.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 1.57%)</title><rect x="1145.5" y="1603.0" width="18.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 1.57%)</title><rect x="1145.5" y="1587.0" width="18.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 1.57%)</title><rect x="1145.5" y="1571.0" width="18.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.5" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 1.26%)</title><rect x="1145.5" y="1555.0" width="14.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.5" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 1.26%)</title><rect x="1145.5" y="1539.0" width="14.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.5" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 1.26%)</title><rect x="1145.5" y="1523.0" width="14.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 1.26%)</title><rect x="1145.5" y="1507.0" width="14.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 1.26%)</title><rect x="1145.5" y="1491.0" width="14.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 1.26%)</title><rect x="1145.5" y="1475.0" width="14.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.5" y="1486.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.31%)</title><rect x="1145.5" y="1459.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.5" y="1470.0"></text>
</g>
<g>
<title>CmpPNode::Ideal(PhaseGVN*, bool) (1 samples, 0.31%)</title><rect x="1145.5" y="1443.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.94%)</title><rect x="1149.2" y="1459.0" width="11.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1152.2" y="1470.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.31%)</title><rect x="1149.2" y="1443.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.2" y="1454.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.31%)</title><rect x="1149.2" y="1427.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.2" y="1438.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.31%)</title><rect x="1149.2" y="1411.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.2" y="1422.0"></text>
</g>
<g>
<title>Type::uhash(Type const*) (1 samples, 0.31%)</title><rect x="1149.2" y="1395.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.2" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.63%)</title><rect x="1152.9" y="1443.0" width="7.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.9" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.63%)</title><rect x="1152.9" y="1427.0" width="7.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.9" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.63%)</title><rect x="1152.9" y="1411.0" width="7.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.9" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.63%)</title><rect x="1152.9" y="1395.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.9" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.63%)</title><rect x="1152.9" y="1379.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.9" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.63%)</title><rect x="1152.9" y="1363.0" width="7.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.9" y="1374.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.31%)</title><rect x="1152.9" y="1347.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.9" y="1358.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.31%)</title><rect x="1152.9" y="1331.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.9" y="1342.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.31%)</title><rect x="1152.9" y="1315.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.9" y="1326.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.31%)</title><rect x="1156.6" y="1347.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.6" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.31%)</title><rect x="1156.6" y="1331.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.6" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.31%)</title><rect x="1156.6" y="1315.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.6" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.31%)</title><rect x="1156.6" y="1299.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1159.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.31%)</title><rect x="1156.6" y="1283.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.31%)</title><rect x="1156.6" y="1267.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1159.6" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.31%)</title><rect x="1156.6" y="1251.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.6" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.31%)</title><rect x="1156.6" y="1235.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.6" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.31%)</title><rect x="1156.6" y="1219.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.31%)</title><rect x="1156.6" y="1203.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.31%)</title><rect x="1156.6" y="1187.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.31%)</title><rect x="1156.6" y="1171.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.6" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.31%)</title><rect x="1156.6" y="1155.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.6" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.31%)</title><rect x="1156.6" y="1139.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.6" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.31%)</title><rect x="1156.6" y="1123.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.31%)</title><rect x="1156.6" y="1107.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.31%)</title><rect x="1156.6" y="1091.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1159.6" y="1102.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.31%)</title><rect x="1156.6" y="1075.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.31%)</title><rect x="1160.3" y="1555.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.3" y="1566.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.31%)</title><rect x="1160.3" y="1539.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.3" y="1550.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool, bool) (1 samples, 0.31%)</title><rect x="1160.3" y="1523.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.3" y="1534.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.31%)</title><rect x="1160.3" y="1507.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.3" y="1518.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.31%)</title><rect x="1160.3" y="1491.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.3" y="1502.0"></text>
</g>
<g>
<title>ConstraintCastNode::Ideal(PhaseGVN*, bool) (1 samples, 0.31%)</title><rect x="1160.3" y="1475.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.3" y="1486.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.31%)</title><rect x="1164.0" y="1699.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.0" y="1710.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.31%)</title><rect x="1164.0" y="1683.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.0" y="1694.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.31%)</title><rect x="1164.0" y="1667.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1167.0" y="1678.0"></text>
</g>
<g>
<title>Parse::do_method_entry() (1 samples, 0.31%)</title><rect x="1167.7" y="1891.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.7" y="1902.0"></text>
</g>
<g>
<title>GraphKit::shared_lock(Node*) (1 samples, 0.31%)</title><rect x="1167.7" y="1875.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.7" y="1886.0"></text>
</g>
<g>
<title>TypeTuple::fields(unsigned int) (1 samples, 0.31%)</title><rect x="1167.7" y="1859.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.7" y="1870.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.31%)</title><rect x="1167.7" y="1843.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1170.7" y="1854.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 1.57%)</title><rect x="1171.4" y="1955.0" width="18.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.4" y="1966.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 1.57%)</title><rect x="1171.4" y="1939.0" width="18.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.4" y="1950.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 1.57%)</title><rect x="1171.4" y="1923.0" width="18.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.4" y="1934.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 1.26%)</title><rect x="1171.4" y="1907.0" width="14.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.4" y="1918.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.31%)</title><rect x="1171.4" y="1891.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.4" y="1902.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.31%)</title><rect x="1171.4" y="1875.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.4" y="1886.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.31%)</title><rect x="1171.4" y="1859.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.4" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.31%)</title><rect x="1171.4" y="1843.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.4" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.31%)</title><rect x="1171.4" y="1827.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.4" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.31%)</title><rect x="1171.4" y="1811.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1174.4" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::if_null(ValueType*, Instruction::Condition) (1 samples, 0.31%)</title><rect x="1171.4" y="1795.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.4" y="1806.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.31%)</title><rect x="1171.4" y="1779.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.4" y="1790.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.31%)</title><rect x="1171.4" y="1763.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.4" y="1774.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.31%)</title><rect x="1171.4" y="1747.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1174.4" y="1758.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.63%)</title><rect x="1175.2" y="1891.0" width="7.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.2" y="1902.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_exception_entries(GrowableArray&lt;ExceptionInfo*&gt;*) (1 samples, 0.31%)</title><rect x="1175.2" y="1875.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.2" y="1886.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.31%)</title><rect x="1178.9" y="1875.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.9" y="1886.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.31%)</title><rect x="1178.9" y="1859.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.9" y="1870.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.31%)</title><rect x="1178.9" y="1843.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.9" y="1854.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.31%)</title><rect x="1178.9" y="1827.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.9" y="1838.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.31%)</title><rect x="1178.9" y="1811.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.9" y="1822.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.31%)</title><rect x="1182.6" y="1891.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.6" y="1902.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.31%)</title><rect x="1182.6" y="1875.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.6" y="1886.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.31%)</title><rect x="1182.6" y="1859.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.6" y="1870.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.31%)</title><rect x="1182.6" y="1843.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.6" y="1854.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.31%)</title><rect x="1186.3" y="1907.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.31%)</title><rect x="1186.3" y="1891.0" width="3.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1189.3" y="1902.0"></text>
</g>
</g>
</svg>
