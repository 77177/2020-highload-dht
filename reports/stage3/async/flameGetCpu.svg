<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (333 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (1 samples, 0.30%)</title><rect x="10.0" y="883.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.30%)</title><rect x="10.0" y="867.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.30%)</title><rect x="10.0" y="851.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.30%)</title><rect x="10.0" y="835.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.30%)</title><rect x="10.0" y="819.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (1 samples, 0.30%)</title><rect x="10.0" y="803.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (1 samples, 0.30%)</title><rect x="10.0" y="787.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni18306887646081853057.so (1 samples, 0.30%)</title><rect x="10.0" y="771.0" width="3.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.30%)</title><rect x="10.0" y="755.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.30%)</title><rect x="10.0" y="739.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.30%)</title><rect x="10.0" y="723.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="10.0" y="707.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.30%)</title><rect x="10.0" y="691.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.30%)</title><rect x="10.0" y="675.0" width="3.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="10.0" y="659.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (316 samples, 94.89%)</title><rect x="13.5" y="883.0" width="1119.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.5" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (316 samples, 94.89%)</title><rect x="13.5" y="867.0" width="1119.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="16.5" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (316 samples, 94.89%)</title><rect x="13.5" y="851.0" width="1119.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.5" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 1.20%)</title><rect x="24.2" y="835.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (4 samples, 1.20%)</title><rect x="24.2" y="819.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.90%)</title><rect x="24.2" y="803.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.90%)</title><rect x="24.2" y="787.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.90%)</title><rect x="24.2" y="771.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.2" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.60%)</title><rect x="24.2" y="755.0" width="7.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="27.2" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.30%)</title><rect x="24.2" y="739.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="24.2" y="723.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="24.2" y="707.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.2" y="718.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.30%)</title><rect x="24.2" y="691.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="27.2" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.30%)</title><rect x="27.7" y="739.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="30.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="31.3" y="755.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="34.3" y="766.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="31.3" y="739.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="34.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="31.3" y="723.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="34.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="31.3" y="707.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="31.3" y="691.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="34.3" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="31.3" y="675.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.3" y="686.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="31.3" y="659.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.3" y="670.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.30%)</title><rect x="31.3" y="643.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="34.8" y="803.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="34.8" y="787.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="34.8" y="771.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="34.8" y="755.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="34.8" y="739.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.30%)</title><rect x="34.8" y="723.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="34.8" y="707.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="34.8" y="691.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="34.8" y="675.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="37.8" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="34.8" y="659.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="34.8" y="643.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.8" y="654.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.30%)</title><rect x="34.8" y="627.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.8" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="34.8" y="611.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="37.8" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="34.8" y="595.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="37.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$66/1540108652.run (309 samples, 92.79%)</title><rect x="38.3" y="835.0" width="1095.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.3" y="846.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$66/1540108652.run</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0 (309 samples, 92.79%)</title><rect x="38.3" y="819.0" width="1095.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="41.3" y="830.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getInternal (309 samples, 92.79%)</title><rect x="38.3" y="803.0" width="1095.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.3" y="814.0">ru/mail/polis/service/stasyanoi/CustomServer.getInternal</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 9.01%)</title><rect x="38.3" y="787.0" width="106.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.3" y="798.0">one/nio/http/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.30%)</title><rect x="38.3" y="771.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.30%)</title><rect x="38.3" y="755.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.30%)</title><rect x="38.3" y="739.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (29 samples, 8.71%)</title><rect x="41.9" y="771.0" width="102.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.9" y="782.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.90%)</title><rect x="41.9" y="755.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.60%)</title><rect x="41.9" y="739.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.9" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.30%)</title><rect x="41.9" y="723.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="44.9" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.30%)</title><rect x="45.4" y="723.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="48.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.30%)</title><rect x="49.0" y="739.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 7.81%)</title><rect x="52.5" y="755.0" width="92.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.5" y="766.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 7.81%)</title><rect x="52.5" y="739.0" width="92.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.5" y="750.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 7.81%)</title><rect x="52.5" y="723.0" width="92.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.5" y="734.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (26 samples, 7.81%)</title><rect x="52.5" y="707.0" width="92.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.5" y="718.0">one/nio/net..</text>
</g>
<g>
<title>__libc_send (26 samples, 7.81%)</title><rect x="52.5" y="691.0" width="92.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="55.5" y="702.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 7.51%)</title><rect x="56.1" y="675.0" width="88.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="59.1" y="686.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (25 samples, 7.51%)</title><rect x="56.1" y="659.0" width="88.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="59.1" y="670.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_sendto (25 samples, 7.51%)</title><rect x="56.1" y="643.0" width="88.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="59.1" y="654.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (24 samples, 7.21%)</title><rect x="56.1" y="627.0" width="85.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="59.1" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (21 samples, 6.31%)</title><rect x="59.6" y="611.0" width="74.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.6" y="622.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (21 samples, 6.31%)</title><rect x="59.6" y="595.0" width="74.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.6" y="606.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (21 samples, 6.31%)</title><rect x="59.6" y="579.0" width="74.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="62.6" y="590.0">tcp_send..</text>
</g>
<g>
<title>tcp_sendmsg_locked (21 samples, 6.31%)</title><rect x="59.6" y="563.0" width="74.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.6" y="574.0">tcp_send..</text>
</g>
<g>
<title>check_stack_object (1 samples, 0.30%)</title><rect x="59.6" y="547.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="62.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (20 samples, 6.01%)</title><rect x="63.2" y="547.0" width="70.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.2" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (20 samples, 6.01%)</title><rect x="63.2" y="531.0" width="70.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.2" y="542.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (20 samples, 6.01%)</title><rect x="63.2" y="515.0" width="70.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="66.2" y="526.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (19 samples, 5.71%)</title><rect x="66.7" y="499.0" width="67.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.7" y="510.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (19 samples, 5.71%)</title><rect x="66.7" y="483.0" width="67.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="69.7" y="494.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (19 samples, 5.71%)</title><rect x="66.7" y="467.0" width="67.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.7" y="478.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (19 samples, 5.71%)</title><rect x="66.7" y="451.0" width="67.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.7" y="462.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.60%)</title><rect x="66.7" y="435.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.7" y="446.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.60%)</title><rect x="66.7" y="419.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.7" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 0.60%)</title><rect x="66.7" y="403.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="69.7" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 0.60%)</title><rect x="66.7" y="387.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.7" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.60%)</title><rect x="66.7" y="371.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="69.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.30%)</title><rect x="66.7" y="355.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.7" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.30%)</title><rect x="70.2" y="355.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="73.2" y="366.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.30%)</title><rect x="70.2" y="339.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.2" y="350.0"></text>
</g>
<g>
<title>ip_output (17 samples, 5.11%)</title><rect x="73.8" y="435.0" width="60.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.8" y="446.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (16 samples, 4.80%)</title><rect x="73.8" y="419.0" width="56.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.8" y="430.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.30%)</title><rect x="73.8" y="403.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.8" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (15 samples, 4.50%)</title><rect x="77.3" y="403.0" width="53.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.3" y="414.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (15 samples, 4.50%)</title><rect x="77.3" y="387.0" width="53.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="80.3" y="398.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (14 samples, 4.20%)</title><rect x="77.3" y="371.0" width="49.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="80.3" y="382.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.20 (14 samples, 4.20%)</title><rect x="77.3" y="355.0" width="49.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="80.3" y="366.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 4.20%)</title><rect x="77.3" y="339.0" width="49.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="80.3" y="350.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (14 samples, 4.20%)</title><rect x="77.3" y="323.0" width="49.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="80.3" y="334.0">__sof..</text>
</g>
<g>
<title>net_rx_action (13 samples, 3.90%)</title><rect x="80.9" y="307.0" width="46.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.9" y="318.0">net_..</text>
</g>
<g>
<title>process_backlog (13 samples, 3.90%)</title><rect x="80.9" y="291.0" width="46.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.9" y="302.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 3.60%)</title><rect x="84.4" y="275.0" width="42.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="87.4" y="286.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 3.60%)</title><rect x="84.4" y="259.0" width="42.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.4" y="270.0">__ne..</text>
</g>
<g>
<title>ip_rcv (12 samples, 3.60%)</title><rect x="84.4" y="243.0" width="42.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.4" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 3.60%)</title><rect x="84.4" y="227.0" width="42.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="87.4" y="238.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (11 samples, 3.30%)</title><rect x="88.0" y="211.0" width="38.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.0" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 2.70%)</title><rect x="88.0" y="195.0" width="31.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.0" y="206.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 2.70%)</title><rect x="88.0" y="179.0" width="31.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.0" y="190.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 2.70%)</title><rect x="88.0" y="163.0" width="31.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.0" y="174.0">tc..</text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 2.70%)</title><rect x="88.0" y="147.0" width="31.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.0" y="158.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 2.70%)</title><rect x="88.0" y="131.0" width="31.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.0" y="142.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.90%)</title><rect x="88.0" y="115.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.0" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.90%)</title><rect x="88.0" y="99.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.0" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.90%)</title><rect x="88.0" y="83.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.0" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.90%)</title><rect x="88.0" y="67.0" width="10.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.0" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="88.0" y="51.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.0" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.30%)</title><rect x="95.0" y="51.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="98.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.30%)</title><rect x="95.0" y="35.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="98.0" y="46.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 1.20%)</title><rect x="98.6" y="115.0" width="14.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.6" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.30%)</title><rect x="98.6" y="99.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="101.6" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.90%)</title><rect x="102.1" y="99.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.1" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.60%)</title><rect x="105.7" y="83.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="108.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.60%)</title><rect x="105.7" y="67.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="108.7" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.60%)</title><rect x="105.7" y="51.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="108.7" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.60%)</title><rect x="112.8" y="115.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.8" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.60%)</title><rect x="112.8" y="99.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="115.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.60%)</title><rect x="112.8" y="83.0" width="7.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="115.8" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.60%)</title><rect x="112.8" y="67.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="115.8" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="112.8" y="51.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.8" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.60%)</title><rect x="119.8" y="195.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.8" y="206.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 0.60%)</title><rect x="119.8" y="179.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (2 samples, 0.60%)</title><rect x="119.8" y="163.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.8" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.30%)</title><rect x="126.9" y="371.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.9" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.30%)</title><rect x="126.9" y="355.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.9" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.30%)</title><rect x="126.9" y="339.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="129.9" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.30%)</title><rect x="130.5" y="419.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.5" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.60%)</title><rect x="134.0" y="611.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="137.0" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.60%)</title><rect x="134.0" y="595.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.60%)</title><rect x="134.0" y="579.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.0" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.30%)</title><rect x="137.6" y="563.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="140.6" y="574.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.30%)</title><rect x="141.1" y="627.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="144.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.30%)</title><rect x="144.7" y="787.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.30%)</title><rect x="144.7" y="771.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.7" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.30%)</title><rect x="144.7" y="755.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="147.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (278 samples, 83.48%)</title><rect x="148.2" y="787.0" width="985.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.2" y="798.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (278 samples, 83.48%)</title><rect x="148.2" y="771.0" width="985.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.2" y="782.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (278 samples, 83.48%)</title><rect x="148.2" y="755.0" width="985.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.2" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="148.2" y="739.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.2" y="750.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (240 samples, 72.07%)</title><rect x="151.7" y="739.0" width="850.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="154.7" y="750.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.30%)</title><rect x="151.7" y="723.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="154.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (239 samples, 71.77%)</title><rect x="155.3" y="723.0" width="846.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="158.3" y="734.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, in..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (238 samples, 71.47%)</title><rect x="155.3" y="707.0" width="843.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="158.3" y="718.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*)</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (238 samples, 71.47%)</title><rect x="155.3" y="691.0" width="843.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="158.3" y="702.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*)</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (238 samples, 71.47%)</title><rect x="155.3" y="675.0" width="843.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="158.3" y="686.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Pinnab..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="155.3" y="659.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="158.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (235 samples, 70.57%)</title><rect x="158.8" y="659.0" width="832.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="161.8" y="670.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions)</text>
</g>
<g>
<title>/tmp/librocksdbjni18306887646081853057.so (1 samples, 0.30%)</title><rect x="158.8" y="643.0" width="3.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="161.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.60%)</title><rect x="162.4" y="643.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="165.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.30%)</title><rect x="162.4" y="627.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="165.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.30%)</title><rect x="162.4" y="611.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="165.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.30%)</title><rect x="162.4" y="595.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="165.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.30%)</title><rect x="165.9" y="627.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="168.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (231 samples, 69.37%)</title><rect x="169.5" y="643.0" width="818.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="172.5" y="654.0">rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned..</text>
</g>
<g>
<title>/tmp/librocksdbjni18306887646081853057.so (230 samples, 69.07%)</title><rect x="169.5" y="627.0" width="815.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="172.5" y="638.0">/tmp/librocksdbjni18306887646081853057.so</text>
</g>
<g>
<title>/tmp/librocksdbjni18306887646081853057.so (5 samples, 1.50%)</title><rect x="169.5" y="611.0" width="17.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="172.5" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="169.5" y="595.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="172.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 1.20%)</title><rect x="173.0" y="595.0" width="14.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="176.0" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="173.0" y="579.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="176.0" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.30%)</title><rect x="173.0" y="563.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="176.0" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.30%)</title><rect x="173.0" y="547.0" width="3.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="176.0" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="173.0" y="531.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="176.0" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.30%)</title><rect x="173.0" y="515.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="176.0" y="526.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.60%)</title><rect x="176.5" y="579.0" width="7.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="179.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="176.5" y="563.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="179.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="176.5" y="547.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="179.5" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="176.5" y="531.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="179.5" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="176.5" y="515.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.5" y="526.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.60%)</title><rect x="176.5" y="499.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="179.5" y="510.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.60%)</title><rect x="176.5" y="483.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.5" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.60%)</title><rect x="176.5" y="467.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.5" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="176.5" y="451.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="179.5" y="462.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="183.6" y="579.0" width="3.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="186.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (225 samples, 67.57%)</title><rect x="187.2" y="611.0" width="797.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="190.2" y="622.0">rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.30%)</title><rect x="197.8" y="595.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="200.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.60%)</title><rect x="201.4" y="595.0" width="7.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="204.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (219 samples, 65.77%)</title><rect x="208.4" y="595.0" width="776.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="211.4" y="606.0">rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.60%)</title><rect x="212.0" y="579.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="215.0" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="219.1" y="579.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="222.1" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.60%)</title><rect x="222.6" y="579.0" width="7.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="225.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (211 samples, 63.36%)</title><rect x="229.7" y="579.0" width="747.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="232.7" y="590.0">rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (8 samples, 2.40%)</title><rect x="240.3" y="563.0" width="28.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="243.3" y="574.0">JN..</text>
</g>
<g>
<title>jni_CallIntMethodV (8 samples, 2.40%)</title><rect x="240.3" y="547.0" width="28.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="243.3" y="558.0">jn..</text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 2.10%)</title><rect x="240.3" y="531.0" width="24.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="243.3" y="542.0">j..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.60%)</title><rect x="251.0" y="515.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="254.0" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="258.0" y="515.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="261.0" y="526.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.30%)</title><rect x="258.0" y="499.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="261.0" y="510.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="261.6" y="515.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="264.6" y="526.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="265.1" y="531.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="268.1" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (33 samples, 9.91%)</title><rect x="268.7" y="563.0" width="116.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="271.7" y="574.0">JNIEnv_::CallV..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="268.7" y="547.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="271.7" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (32 samples, 9.61%)</title><rect x="272.2" y="547.0" width="113.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="275.2" y="558.0">jni_CallVoidMe..</text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.30%)</title><rect x="275.8" y="531.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="278.8" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.60%)</title><rect x="279.3" y="531.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="282.3" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.60%)</title><rect x="286.4" y="531.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="289.4" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (24 samples, 7.21%)</title><rect x="293.5" y="531.0" width="85.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="296.5" y="542.0">jni_invoke..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.30%)</title><rect x="311.2" y="515.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="314.2" y="526.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.30%)</title><rect x="314.7" y="515.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="317.7" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (4 samples, 1.20%)</title><rect x="318.3" y="515.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="321.3" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (12 samples, 3.60%)</title><rect x="332.5" y="515.0" width="42.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="335.5" y="526.0">Java..</text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.30%)</title><rect x="339.5" y="499.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="342.5" y="510.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (4 samples, 1.20%)</title><rect x="343.1" y="499.0" width="14.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="346.1" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 1.20%)</title><rect x="357.3" y="499.0" width="14.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="360.3" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.30%)</title><rect x="367.9" y="483.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="370.9" y="494.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.30%)</title><rect x="371.4" y="499.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="374.4" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="375.0" y="515.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="378.0" y="526.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.30%)</title><rect x="378.5" y="531.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="381.5" y="542.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="382.1" y="531.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="385.1" y="542.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.30%)</title><rect x="385.6" y="563.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="388.6" y="574.0"></text>
</g>
<g>
<title>__lll_lock_wait (58 samples, 17.42%)</title><rect x="389.2" y="563.0" width="205.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="392.2" y="574.0">__lll_lock_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 14.41%)</title><rect x="424.6" y="547.0" width="170.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.6" y="558.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>do_syscall_64 (47 samples, 14.11%)</title><rect x="424.6" y="531.0" width="166.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.6" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (31 samples, 9.31%)</title><rect x="445.9" y="515.0" width="109.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.9" y="526.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (28 samples, 8.41%)</title><rect x="452.9" y="499.0" width="99.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="455.9" y="510.0">do_futex</text>
</g>
<g>
<title>futex_wait (28 samples, 8.41%)</title><rect x="452.9" y="483.0" width="99.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.9" y="494.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 5.41%)</title><rect x="460.0" y="467.0" width="63.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.0" y="478.0">futex_w..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.30%)</title><rect x="481.3" y="451.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="484.3" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.30%)</title><rect x="481.3" y="435.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.3" y="446.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.90%)</title><rect x="484.8" y="451.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.8" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.30%)</title><rect x="495.5" y="451.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.5" y="462.0"></text>
</g>
<g>
<title>schedule (7 samples, 2.10%)</title><rect x="499.0" y="451.0" width="24.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="502.0" y="462.0">s..</text>
</g>
<g>
<title>__sched_text_start (6 samples, 1.80%)</title><rect x="502.6" y="435.0" width="21.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="505.6" y="446.0">_..</text>
</g>
<g>
<title>finish_task_switch (6 samples, 1.80%)</title><rect x="502.6" y="419.0" width="21.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="505.6" y="430.0">f..</text>
</g>
<g>
<title>futex_wait_setup (7 samples, 2.10%)</title><rect x="523.8" y="467.0" width="24.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.8" y="478.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.30%)</title><rect x="527.4" y="451.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.4" y="462.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.30%)</title><rect x="527.4" y="435.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.4" y="446.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.30%)</title><rect x="530.9" y="451.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="533.9" y="462.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.30%)</title><rect x="530.9" y="435.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="533.9" y="446.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 1.20%)</title><rect x="534.4" y="451.0" width="14.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="537.4" y="462.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.30%)</title><rect x="548.6" y="467.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="551.6" y="478.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="552.2" y="499.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="555.2" y="510.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (10 samples, 3.00%)</title><rect x="555.7" y="515.0" width="35.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="558.7" y="526.0">sys..</text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 1.50%)</title><rect x="573.4" y="499.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.4" y="510.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.30%)</title><rect x="584.1" y="483.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.1" y="494.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.30%)</title><rect x="587.6" y="483.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="590.6" y="494.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.30%)</title><rect x="591.1" y="531.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="594.1" y="542.0"></text>
</g>
<g>
<title>__lll_unlock_wake (84 samples, 25.23%)</title><rect x="594.7" y="563.0" width="297.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="597.7" y="574.0">__lll_unlock_wake</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 24.62%)</title><rect x="601.8" y="547.0" width="290.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.8" y="558.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (82 samples, 24.62%)</title><rect x="601.8" y="531.0" width="290.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.8" y="542.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (80 samples, 24.02%)</title><rect x="608.9" y="515.0" width="283.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="611.9" y="526.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (80 samples, 24.02%)</title><rect x="608.9" y="499.0" width="283.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.9" y="510.0">do_futex</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.30%)</title><rect x="612.4" y="483.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="615.4" y="494.0"></text>
</g>
<g>
<title>futex_wake (76 samples, 22.82%)</title><rect x="615.9" y="483.0" width="269.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="618.9" y="494.0">futex_wake</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.30%)</title><rect x="623.0" y="467.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="626.0" y="478.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.60%)</title><rect x="626.6" y="467.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="629.6" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.30%)</title><rect x="633.7" y="467.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.7" y="478.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.30%)</title><rect x="633.7" y="451.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.7" y="462.0"></text>
</g>
<g>
<title>wake_up_q (70 samples, 21.02%)</title><rect x="637.2" y="467.0" width="248.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.2" y="478.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (69 samples, 20.72%)</title><rect x="640.8" y="451.0" width="244.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.8" y="462.0">try_to_wake_up</text>
</g>
<g>
<title>__lock_text_start (69 samples, 20.72%)</title><rect x="640.8" y="435.0" width="244.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="643.8" y="446.0">__lock_text_start</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.30%)</title><rect x="885.3" y="483.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.3" y="494.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.30%)</title><rect x="888.8" y="483.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="891.8" y="494.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (11 samples, 3.30%)</title><rect x="892.3" y="563.0" width="39.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="895.3" y="574.0">jni..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.60%)</title><rect x="903.0" y="547.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="906.0" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 1.80%)</title><rect x="910.1" y="547.0" width="21.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.1" y="558.0">T..</text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.30%)</title><rect x="931.3" y="563.0" width="3.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="934.3" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 1.50%)</title><rect x="934.9" y="563.0" width="17.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="937.9" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 1.20%)</title><rect x="952.6" y="563.0" width="14.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="955.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.60%)</title><rect x="966.8" y="563.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="969.8" y="574.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.30%)</title><rect x="970.3" y="547.0" width="3.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="973.3" y="558.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.30%)</title><rect x="970.3" y="531.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="973.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.30%)</title><rect x="973.8" y="563.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="976.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (1 samples, 0.30%)</title><rect x="977.4" y="579.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="980.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.30%)</title><rect x="980.9" y="579.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="983.9" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.30%)</title><rect x="984.5" y="627.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="987.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.30%)</title><rect x="988.0" y="643.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="991.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.30%)</title><rect x="991.6" y="659.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="994.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.30%)</title><rect x="995.1" y="659.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="998.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.30%)</title><rect x="998.6" y="707.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1001.6" y="718.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.30%)</title><rect x="998.6" y="691.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1001.6" y="702.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.30%)</title><rect x="998.6" y="675.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1001.6" y="686.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.90%)</title><rect x="1002.2" y="739.0" width="10.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1005.2" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.90%)</title><rect x="1012.8" y="739.0" width="10.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="1023.5" y="739.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (29 samples, 8.71%)</title><rect x="1027.0" y="739.0" width="102.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.0" y="750.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (29 samples, 8.71%)</title><rect x="1027.0" y="723.0" width="102.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.0" y="734.0">ru/mail/poli..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.30%)</title><rect x="1030.5" y="707.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.5" y="718.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.30%)</title><rect x="1030.5" y="691.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (27 samples, 8.11%)</title><rect x="1034.1" y="707.0" width="95.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.1" y="718.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (2 samples, 0.60%)</title><rect x="1034.1" y="691.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.1" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (25 samples, 7.51%)</title><rect x="1041.2" y="691.0" width="88.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.2" y="702.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (24 samples, 7.21%)</title><rect x="1044.7" y="675.0" width="85.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.7" y="686.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (18 samples, 5.41%)</title><rect x="1051.8" y="659.0" width="63.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1054.8" y="670.0">Java_or..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="1058.9" y="643.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1061.9" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.30%)</title><rect x="1062.4" y="643.0" width="3.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1065.4" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="1066.0" y="643.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1069.0" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="1069.5" y="643.0" width="3.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1072.5" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="1069.5" y="627.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1072.5" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 2.70%)</title><rect x="1073.1" y="643.0" width="31.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1076.1" y="654.0">jn..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.30%)</title><rect x="1073.1" y="627.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1076.1" y="638.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.30%)</title><rect x="1076.6" y="627.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.6" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1080.2" y="627.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1083.2" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 1.80%)</title><rect x="1083.7" y="627.0" width="21.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1086.7" y="638.0">T..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 1.80%)</title><rect x="1083.7" y="611.0" width="21.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1086.7" y="622.0">C..</text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.90%)</title><rect x="1083.7" y="595.0" width="10.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.7" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.60%)</title><rect x="1087.2" y="579.0" width="7.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1090.2" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.60%)</title><rect x="1094.3" y="595.0" width="7.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1097.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.30%)</title><rect x="1101.4" y="595.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1104.4" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.60%)</title><rect x="1105.0" y="643.0" width="7.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1108.0" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1108.5" y="627.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1111.5" y="638.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.30%)</title><rect x="1112.0" y="643.0" width="3.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1115.0" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.90%)</title><rect x="1115.6" y="659.0" width="10.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1118.6" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="1126.2" y="659.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1129.2" y="670.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.30%)</title><rect x="1129.8" y="739.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16 samples, 4.80%)</title><rect x="1133.3" y="883.0" width="56.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1136.3" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 2.10%)</title><rect x="1133.3" y="867.0" width="24.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1136.3" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (7 samples, 2.10%)</title><rect x="1133.3" y="851.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.3" y="862.0">o..</text>
</g>
<g>
<title>[unknown] (6 samples, 1.80%)</title><rect x="1133.3" y="835.0" width="21.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1136.3" y="846.0">[..</text>
</g>
<g>
<title>epoll_wait (6 samples, 1.80%)</title><rect x="1133.3" y="819.0" width="21.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1136.3" y="830.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.80%)</title><rect x="1133.3" y="803.0" width="21.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1136.3" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.80%)</title><rect x="1133.3" y="787.0" width="21.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1136.3" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 1.50%)</title><rect x="1133.3" y="771.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1136.3" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 1.50%)</title><rect x="1133.3" y="755.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1136.3" y="766.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.50%)</title><rect x="1133.3" y="739.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1136.3" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 0.60%)</title><rect x="1136.8" y="723.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1139.8" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.30%)</title><rect x="1136.8" y="707.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1139.8" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.30%)</title><rect x="1136.8" y="691.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.30%)</title><rect x="1136.8" y="675.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1139.8" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.30%)</title><rect x="1136.8" y="659.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1139.8" y="670.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.30%)</title><rect x="1140.4" y="707.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1143.4" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.30%)</title><rect x="1143.9" y="723.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.30%)</title><rect x="1147.5" y="723.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1150.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.30%)</title><rect x="1147.5" y="707.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1150.5" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="1147.5" y="691.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1150.5" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="1147.5" y="675.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.5" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="1147.5" y="659.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1150.5" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.30%)</title><rect x="1151.0" y="771.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1154.0" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.30%)</title><rect x="1151.0" y="755.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.0" y="766.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.30%)</title><rect x="1154.6" y="835.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1157.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 2.70%)</title><rect x="1158.1" y="867.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.1" y="878.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 2.70%)</title><rect x="1158.1" y="851.0" width="31.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1161.1" y="862.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 1.20%)</title><rect x="1158.1" y="835.0" width="14.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1161.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.60%)</title><rect x="1158.1" y="819.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.60%)</title><rect x="1158.1" y="803.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.1" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (2 samples, 0.60%)</title><rect x="1158.1" y="787.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (2 samples, 0.60%)</title><rect x="1158.1" y="771.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1161.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.60%)</title><rect x="1158.1" y="755.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1161.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.60%)</title><rect x="1158.1" y="739.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.30%)</title><rect x="1158.1" y="723.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="1158.1" y="707.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="1158.1" y="691.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="1158.1" y="675.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="1158.1" y="659.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1161.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="1158.1" y="643.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.1" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.30%)</title><rect x="1158.1" y="627.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1161.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="1158.1" y="611.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1161.1" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="1158.1" y="595.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.1" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="1158.1" y="579.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1161.1" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="1158.1" y="563.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1161.1" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="1158.1" y="547.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1161.1" y="558.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.30%)</title><rect x="1158.1" y="531.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1161.1" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="1158.1" y="515.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.1" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="1158.1" y="499.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="1161.7" y="723.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="1161.7" y="707.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="1161.7" y="691.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="1161.7" y="675.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.60%)</title><rect x="1165.2" y="819.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1168.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.30%)</title><rect x="1168.7" y="803.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.30%)</title><rect x="1168.7" y="787.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 1.50%)</title><rect x="1172.3" y="835.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 1.50%)</title><rect x="1172.3" y="819.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 1.50%)</title><rect x="1172.3" y="803.0" width="17.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="1175.8" y="787.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="1175.8" y="771.0" width="14.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1178.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 1.20%)</title><rect x="1175.8" y="755.0" width="14.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1178.8" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 1.20%)</title><rect x="1175.8" y="739.0" width="14.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 1.20%)</title><rect x="1175.8" y="723.0" width="14.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1178.8" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 1.20%)</title><rect x="1175.8" y="707.0" width="14.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.20%)</title><rect x="1175.8" y="691.0" width="14.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1178.8" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.30%)</title><rect x="1179.4" y="675.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1182.4" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.30%)</title><rect x="1179.4" y="659.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.4" y="670.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.30%)</title><rect x="1179.4" y="643.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.4" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.60%)</title><rect x="1182.9" y="675.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1185.9" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.30%)</title><rect x="1182.9" y="659.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1185.9" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.30%)</title><rect x="1186.5" y="659.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1189.5" y="670.0"></text>
</g>
</g>
</svg>
