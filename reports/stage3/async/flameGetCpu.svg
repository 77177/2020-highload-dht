<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (767 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.13%)</title><rect x="10.0" y="867.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (1 samples, 0.13%)</title><rect x="10.0" y="851.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.13%)</title><rect x="10.0" y="835.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (711 samples, 92.70%)</title><rect x="11.5" y="867.0" width="1093.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.5" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (711 samples, 92.70%)</title><rect x="11.5" y="851.0" width="1093.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.5" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (711 samples, 92.70%)</title><rect x="11.5" y="835.0" width="1093.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.13%)</title><rect x="11.5" y="819.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.26%)</title><rect x="13.1" y="819.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.26%)</title><rect x="13.1" y="803.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.1" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.13%)</title><rect x="13.1" y="787.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="16.1" y="798.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.13%)</title><rect x="14.6" y="787.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.13%)</title><rect x="16.2" y="819.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 3.13%)</title><rect x="17.7" y="819.0" width="36.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.7" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24 samples, 3.13%)</title><rect x="17.7" y="803.0" width="36.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.7" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 2.48%)</title><rect x="17.7" y="787.0" width="29.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.7" y="798.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.26%)</title><rect x="17.7" y="771.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.13%)</title><rect x="19.2" y="755.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 2.22%)</title><rect x="20.8" y="771.0" width="26.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.8" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 2.22%)</title><rect x="20.8" y="755.0" width="26.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.8" y="766.0">j..</text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.91%)</title><rect x="22.3" y="739.0" width="10.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="25.3" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.39%)</title><rect x="22.3" y="723.0" width="4.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.3" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="23.8" y="707.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="26.8" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.13%)</title><rect x="25.4" y="707.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="28.4" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.13%)</title><rect x="26.9" y="723.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="29.9" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="28.5" y="723.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="31.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.13%)</title><rect x="30.0" y="723.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="33.0" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.13%)</title><rect x="31.5" y="723.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="34.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.17%)</title><rect x="33.1" y="739.0" width="13.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="36.1" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.13%)</title><rect x="33.1" y="723.0" width="1.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="36.1" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.13%)</title><rect x="34.6" y="723.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="37.6" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 0.91%)</title><rect x="36.2" y="723.0" width="10.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.65%)</title><rect x="39.2" y="707.0" width="7.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.65%)</title><rect x="39.2" y="691.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="42.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.39%)</title><rect x="40.8" y="675.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.8" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.39%)</title><rect x="40.8" y="659.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.8" y="670.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.39%)</title><rect x="40.8" y="643.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.39%)</title><rect x="40.8" y="627.0" width="4.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.8" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.13%)</title><rect x="43.8" y="611.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.8" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.13%)</title><rect x="43.8" y="595.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="46.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.13%)</title><rect x="43.8" y="579.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.8" y="590.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="45.4" y="675.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.4" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="45.4" y="659.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.65%)</title><rect x="46.9" y="787.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.65%)</title><rect x="46.9" y="771.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.65%)</title><rect x="46.9" y="755.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.65%)</title><rect x="46.9" y="739.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.65%)</title><rect x="46.9" y="723.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.9" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.26%)</title><rect x="46.9" y="707.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="49.9" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.13%)</title><rect x="46.9" y="691.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="49.9" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.13%)</title><rect x="48.5" y="691.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="51.5" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.39%)</title><rect x="50.0" y="707.0" width="4.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="53.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.39%)</title><rect x="50.0" y="691.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="53.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.39%)</title><rect x="50.0" y="675.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="53.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.39%)</title><rect x="50.0" y="659.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.0" y="670.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.39%)</title><rect x="50.0" y="643.0" width="4.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="53.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.39%)</title><rect x="50.0" y="627.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="53.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.39%)</title><rect x="50.0" y="611.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="53.0" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.39%)</title><rect x="50.0" y="595.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="53.0" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.39%)</title><rect x="50.0" y="579.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$68/1902470220.run (683 samples, 89.05%)</title><rect x="54.6" y="819.0" width="1050.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.6" y="830.0">ru/mail/polis/service/stasyanoi/CustomServer$$Lambda$68/1902470220.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.13%)</title><rect x="56.2" y="803.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="59.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0 (681 samples, 88.79%)</title><rect x="57.7" y="803.0" width="1047.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.7" y="814.0">ru/mail/polis/service/stasyanoi/CustomServer.lambda$get$0</text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.getInternal (681 samples, 88.79%)</title><rect x="57.7" y="787.0" width="1047.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.7" y="798.0">ru/mail/polis/service/stasyanoi/CustomServer.getInternal</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (73 samples, 9.52%)</title><rect x="57.7" y="771.0" width="112.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.7" y="782.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (73 samples, 9.52%)</title><rect x="57.7" y="755.0" width="112.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.7" y="766.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.13%)</title><rect x="57.7" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.13%)</title><rect x="57.7" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.13%)</title><rect x="57.7" y="707.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 9.39%)</title><rect x="59.2" y="739.0" width="110.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.2" y="750.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session.write (72 samples, 9.39%)</title><rect x="59.2" y="723.0" width="110.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.2" y="734.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (72 samples, 9.39%)</title><rect x="59.2" y="707.0" width="110.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.2" y="718.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (72 samples, 9.39%)</title><rect x="59.2" y="691.0" width="110.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.2" y="702.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.26%)</title><rect x="59.2" y="675.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="62.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.26%)</title><rect x="59.2" y="659.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="62.2" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="59.2" y="643.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="62.2" y="654.0"></text>
</g>
<g>
<title>__libc_send (70 samples, 9.13%)</title><rect x="62.3" y="675.0" width="107.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="65.3" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 8.87%)</title><rect x="65.4" y="659.0" width="104.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="68.4" y="670.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (67 samples, 8.74%)</title><rect x="65.4" y="643.0" width="103.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.4" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (64 samples, 8.34%)</title><rect x="70.0" y="627.0" width="98.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="73.0" y="638.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (63 samples, 8.21%)</title><rect x="70.0" y="611.0" width="96.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="73.0" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (61 samples, 7.95%)</title><rect x="71.5" y="595.0" width="93.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="74.5" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (59 samples, 7.69%)</title><rect x="71.5" y="579.0" width="90.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="74.5" y="590.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (59 samples, 7.69%)</title><rect x="71.5" y="563.0" width="90.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.5" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.13%)</title><rect x="73.1" y="547.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.1" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (57 samples, 7.43%)</title><rect x="74.6" y="547.0" width="87.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="77.6" y="558.0">tcp_sendms..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.13%)</title><rect x="77.7" y="531.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="80.7" y="542.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.13%)</title><rect x="77.7" y="515.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="80.7" y="526.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.13%)</title><rect x="79.2" y="531.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="82.2" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.39%)</title><rect x="80.8" y="531.0" width="4.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.8" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.26%)</title><rect x="80.8" y="515.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="83.8" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.13%)</title><rect x="80.8" y="499.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.8" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.13%)</title><rect x="80.8" y="483.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.8" y="494.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.13%)</title><rect x="82.3" y="499.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="85.3" y="510.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.13%)</title><rect x="83.8" y="515.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.8" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.26%)</title><rect x="85.4" y="531.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.4" y="542.0"></text>
</g>
<g>
<title>tcp_push (47 samples, 6.13%)</title><rect x="88.5" y="531.0" width="72.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.5" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (47 samples, 6.13%)</title><rect x="88.5" y="515.0" width="72.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.5" y="526.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (47 samples, 6.13%)</title><rect x="88.5" y="499.0" width="72.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.5" y="510.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.13%)</title><rect x="90.0" y="483.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="93.0" y="494.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (42 samples, 5.48%)</title><rect x="91.5" y="483.0" width="64.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.5" y="494.0">__tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (42 samples, 5.48%)</title><rect x="91.5" y="467.0" width="64.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="94.5" y="478.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (42 samples, 5.48%)</title><rect x="91.5" y="451.0" width="64.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.5" y="462.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (41 samples, 5.35%)</title><rect x="93.1" y="435.0" width="63.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="96.1" y="446.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (8 samples, 1.04%)</title><rect x="93.1" y="419.0" width="12.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.1" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 1.04%)</title><rect x="93.1" y="403.0" width="12.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="96.1" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.13%)</title><rect x="93.1" y="387.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.1" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.13%)</title><rect x="93.1" y="371.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.1" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (7 samples, 0.91%)</title><rect x="94.6" y="387.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.6" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (7 samples, 0.91%)</title><rect x="94.6" y="371.0" width="10.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.6" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.13%)</title><rect x="99.2" y="355.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="102.2" y="366.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.13%)</title><rect x="100.8" y="355.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="103.8" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (2 samples, 0.26%)</title><rect x="102.3" y="355.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.3" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.13%)</title><rect x="103.8" y="339.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.8" y="350.0"></text>
</g>
<g>
<title>ip_output (33 samples, 4.30%)</title><rect x="105.4" y="419.0" width="50.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="108.4" y="430.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (32 samples, 4.17%)</title><rect x="105.4" y="403.0" width="49.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="108.4" y="414.0">ip_fi..</text>
</g>
<g>
<title>__ip_finish_output (31 samples, 4.04%)</title><rect x="106.9" y="387.0" width="47.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.9" y="398.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 3.91%)</title><rect x="108.5" y="371.0" width="46.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="111.5" y="382.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 3.13%)</title><rect x="111.5" y="355.0" width="37.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.5" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (24 samples, 3.13%)</title><rect x="111.5" y="339.0" width="37.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.5" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 3.13%)</title><rect x="111.5" y="323.0" width="37.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.5" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 3.13%)</title><rect x="111.5" y="307.0" width="37.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="114.5" y="318.0">__s..</text>
</g>
<g>
<title>net_rx_action (23 samples, 3.00%)</title><rect x="113.1" y="291.0" width="35.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.1" y="302.0">net..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.13%)</title><rect x="113.1" y="275.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.1" y="286.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 2.87%)</title><rect x="114.6" y="275.0" width="33.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.6" y="286.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (22 samples, 2.87%)</title><rect x="114.6" y="259.0" width="33.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.6" y="270.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (22 samples, 2.87%)</title><rect x="114.6" y="243.0" width="33.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="117.6" y="254.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.13%)</title><rect x="114.6" y="227.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="117.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 2.74%)</title><rect x="116.2" y="227.0" width="32.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="119.2" y="238.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.13%)</title><rect x="116.2" y="211.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="119.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (19 samples, 2.48%)</title><rect x="117.7" y="211.0" width="29.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.7" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (18 samples, 2.35%)</title><rect x="117.7" y="195.0" width="27.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.7" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 2.22%)</title><rect x="117.7" y="179.0" width="26.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="120.7" y="190.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (17 samples, 2.22%)</title><rect x="117.7" y="163.0" width="26.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="120.7" y="174.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.13%)</title><rect x="119.2" y="147.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 1.96%)</title><rect x="120.8" y="147.0" width="23.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="123.8" y="158.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.13%)</title><rect x="120.8" y="131.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 1.83%)</title><rect x="122.3" y="131.0" width="21.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="125.3" y="142.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 1.69%)</title><rect x="123.8" y="115.0" width="20.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.8" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.26%)</title><rect x="123.8" y="99.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="126.8" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.26%)</title><rect x="123.8" y="83.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.8" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="125.4" y="67.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="128.4" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="125.4" y="51.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="128.4" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="125.4" y="35.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="128.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.52%)</title><rect x="126.9" y="99.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.9" y="110.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.13%)</title><rect x="126.9" y="83.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="129.9" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.39%)</title><rect x="128.5" y="83.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="131.5" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.13%)</title><rect x="131.5" y="67.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="134.5" y="78.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.13%)</title><rect x="131.5" y="51.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.5" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 0.78%)</title><rect x="133.1" y="99.0" width="9.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="136.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.78%)</title><rect x="133.1" y="83.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.65%)</title><rect x="134.6" y="67.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="137.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.65%)</title><rect x="134.6" y="51.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="137.6" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.65%)</title><rect x="134.6" y="35.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="137.6" y="46.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.13%)</title><rect x="142.3" y="99.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="145.3" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="143.8" y="179.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="146.8" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.13%)</title><rect x="143.8" y="163.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.13%)</title><rect x="143.8" y="147.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.8" y="158.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.13%)</title><rect x="145.4" y="195.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="148.4" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="146.9" y="211.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.9" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_in?[nf_conntrack] (1 samples, 0.13%)</title><rect x="146.9" y="195.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.9" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 0.13%)</title><rect x="146.9" y="179.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="149.9" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.52%)</title><rect x="148.5" y="355.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.5" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.52%)</title><rect x="148.5" y="339.0" width="6.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="151.5" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.13%)</title><rect x="148.5" y="323.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="151.5" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.13%)</title><rect x="148.5" y="307.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="151.5" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.13%)</title><rect x="148.5" y="291.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="151.5" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.26%)</title><rect x="150.0" y="323.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.0" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.13%)</title><rect x="153.1" y="323.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.1" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.13%)</title><rect x="154.6" y="403.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="157.6" y="414.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.13%)</title><rect x="154.6" y="387.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="157.6" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.26%)</title><rect x="156.2" y="483.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.2" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.13%)</title><rect x="157.7" y="467.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.13%)</title><rect x="157.7" y="451.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="160.7" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.13%)</title><rect x="157.7" y="435.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="160.7" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.13%)</title><rect x="157.7" y="419.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.7" y="430.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.13%)</title><rect x="159.2" y="483.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="162.2" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.13%)</title><rect x="160.8" y="531.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="163.8" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.13%)</title><rect x="160.8" y="515.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.8" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.26%)</title><rect x="162.3" y="579.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.3" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.26%)</title><rect x="162.3" y="563.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="165.3" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.26%)</title><rect x="162.3" y="547.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="165.3" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.26%)</title><rect x="162.3" y="531.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="165.3" y="542.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.13%)</title><rect x="163.8" y="515.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="166.8" y="526.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.13%)</title><rect x="163.8" y="499.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="166.8" y="510.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.13%)</title><rect x="163.8" y="483.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="166.8" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.13%)</title><rect x="165.4" y="595.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.4" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.13%)</title><rect x="165.4" y="579.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.13%)</title><rect x="165.4" y="563.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.4" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.13%)</title><rect x="165.4" y="547.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="168.4" y="558.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.13%)</title><rect x="166.9" y="611.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="169.9" y="622.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="168.5" y="643.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="171.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (1 samples, 0.13%)</title><rect x="170.0" y="771.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.13%)</title><rect x="170.0" y="755.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.get (606 samples, 79.01%)</title><rect x="171.5" y="771.0" width="932.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.5" y="782.0">ru/mail/polis/dao/stasyanoi/DAOImpl.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (606 samples, 79.01%)</title><rect x="171.5" y="755.0" width="932.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.5" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (606 samples, 79.01%)</title><rect x="171.5" y="739.0" width="932.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.5" y="750.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.26%)</title><rect x="171.5" y="723.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.5" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (498 samples, 64.93%)</title><rect x="174.6" y="723.0" width="766.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="177.6" y="734.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>__libc_free (1 samples, 0.13%)</title><rect x="174.6" y="707.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="177.6" y="718.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.13%)</title><rect x="176.2" y="707.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="179.2" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.13%)</title><rect x="177.7" y="707.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="180.7" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.13%)</title><rect x="179.2" y="707.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="182.2" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (492 samples, 64.15%)</title><rect x="180.8" y="707.0" width="756.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="183.8" y="718.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jby..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.13%)</title><rect x="180.8" y="691.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="183.8" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.13%)</title><rect x="182.3" y="691.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="185.3" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.13%)</title><rect x="183.8" y="691.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="186.8" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.13%)</title><rect x="183.8" y="675.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="186.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (489 samples, 63.75%)</title><rect x="185.4" y="691.0" width="752.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="188.4" y="702.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*)</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.13%)</title><rect x="185.4" y="675.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="188.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() [clone .plt] (1 samples, 0.13%)</title><rect x="186.9" y="675.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="189.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (486 samples, 63.36%)</title><rect x="188.5" y="675.0" width="747.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="191.5" y="686.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (484 samples, 63.10%)</title><rect x="190.0" y="659.0" width="744.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="193.0" y="670.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.13%)</title><rect x="190.0" y="643.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="193.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.13%)</title><rect x="191.5" y="643.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="194.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (480 samples, 62.58%)</title><rect x="193.1" y="643.0" width="738.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="196.1" y="654.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOp..</text>
</g>
<g>
<title>/tmp/librocksdbjni5113685698900493557.so (1 samples, 0.13%)</title><rect x="194.6" y="627.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="197.6" y="638.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.13%)</title><rect x="196.2" y="627.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="199.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.13%)</title><rect x="197.7" y="627.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="200.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.13%)</title><rect x="197.7" y="611.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="200.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.39%)</title><rect x="199.2" y="627.0" width="4.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="202.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.26%)</title><rect x="199.2" y="611.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="202.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.13%)</title><rect x="202.3" y="611.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="205.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (473 samples, 61.67%)</title><rect x="203.8" y="627.0" width="727.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="206.8" y="638.0">rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeConte..</text>
</g>
<g>
<title>/tmp/librocksdbjni5113685698900493557.so (473 samples, 61.67%)</title><rect x="203.8" y="611.0" width="727.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="206.8" y="622.0">/tmp/librocksdbjni5113685698900493557.so</text>
</g>
<g>
<title>/tmp/librocksdbjni5113685698900493557.so (11 samples, 1.43%)</title><rect x="205.4" y="595.0" width="16.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="208.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 1.30%)</title><rect x="205.4" y="579.0" width="15.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="208.4" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.13%)</title><rect x="205.4" y="563.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="208.4" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.13%)</title><rect x="205.4" y="547.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="208.4" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.13%)</title><rect x="205.4" y="531.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="208.4" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.13%)</title><rect x="206.9" y="563.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="209.9" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.13%)</title><rect x="206.9" y="547.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="209.9" y="558.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.13%)</title><rect x="206.9" y="531.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="209.9" y="542.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.39%)</title><rect x="208.5" y="563.0" width="4.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="211.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.26%)</title><rect x="210.0" y="547.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="213.0" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.26%)</title><rect x="210.0" y="531.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="213.0" y="542.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.26%)</title><rect x="210.0" y="515.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="213.0" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.26%)</title><rect x="210.0" y="499.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="213.0" y="510.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.65%)</title><rect x="213.1" y="563.0" width="7.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="216.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.65%)</title><rect x="213.1" y="547.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.65%)</title><rect x="213.1" y="531.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.1" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.65%)</title><rect x="213.1" y="515.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.1" y="526.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.65%)</title><rect x="213.1" y="499.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.1" y="510.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.65%)</title><rect x="213.1" y="483.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.1" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.52%)</title><rect x="214.6" y="467.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="217.6" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.52%)</title><rect x="214.6" y="451.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.6" y="462.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.52%)</title><rect x="214.6" y="435.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="217.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.13%)</title><rect x="220.8" y="579.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="223.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (459 samples, 59.84%)</title><rect x="222.3" y="595.0" width="706.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="225.3" y="606.0">rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="233.1" y="579.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="236.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (451 samples, 58.80%)</title><rect x="234.6" y="579.0" width="693.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="237.6" y="590.0">rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.13%)</title><rect x="243.8" y="563.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="246.8" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.39%)</title><rect x="245.4" y="563.0" width="4.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="248.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.13%)</title><rect x="250.0" y="563.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="253.0" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.26%)</title><rect x="251.5" y="563.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="254.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (429 samples, 55.93%)</title><rect x="254.6" y="563.0" width="660.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="257.6" y="574.0">rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) co..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (30 samples, 3.91%)</title><rect x="257.7" y="547.0" width="46.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="260.7" y="558.0">JNIE..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="257.7" y="531.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="260.7" y="542.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (29 samples, 3.78%)</title><rect x="259.2" y="531.0" width="44.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="262.2" y="542.0">jni_..</text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (2 samples, 0.26%)</title><rect x="266.9" y="515.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="269.9" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="270.0" y="515.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="273.0" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="273.1" y="515.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="276.1" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (18 samples, 2.35%)</title><rect x="276.2" y="515.0" width="27.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="279.2" y="526.0">j..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (5 samples, 0.65%)</title><rect x="282.3" y="499.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="285.3" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 1.17%)</title><rect x="290.0" y="499.0" width="13.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="293.0" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.13%)</title><rect x="294.6" y="483.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="297.6" y="494.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.65%)</title><rect x="296.2" y="483.0" width="7.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="299.2" y="494.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.13%)</title><rect x="302.3" y="467.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="305.3" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (92 samples, 11.99%)</title><rect x="303.8" y="547.0" width="141.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="306.8" y="558.0">JNIEnv_::CallVoidM..</text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.13%)</title><rect x="308.5" y="531.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="311.5" y="542.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (88 samples, 11.47%)</title><rect x="310.0" y="531.0" width="135.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="313.0" y="542.0">jni_CallVoidMethodV</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.26%)</title><rect x="316.2" y="515.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="319.2" y="526.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (3 samples, 0.39%)</title><rect x="319.2" y="515.0" width="4.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="322.2" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.26%)</title><rect x="323.8" y="515.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="326.8" y="526.0"></text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.13%)</title><rect x="326.9" y="515.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="329.9" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.26%)</title><rect x="328.5" y="515.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="331.5" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.13%)</title><rect x="331.5" y="515.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="334.5" y="526.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (2 samples, 0.26%)</title><rect x="333.1" y="515.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="336.1" y="526.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.39%)</title><rect x="336.2" y="515.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="339.2" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="340.8" y="515.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="343.8" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (6 samples, 0.78%)</title><rect x="343.8" y="515.0" width="9.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="346.8" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (57 samples, 7.43%)</title><rect x="353.1" y="515.0" width="87.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="356.1" y="526.0">jni_invoke..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.13%)</title><rect x="373.1" y="499.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="376.1" y="510.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.13%)</title><rect x="374.6" y="499.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="377.6" y="510.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (4 samples, 0.52%)</title><rect x="376.2" y="499.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="379.2" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (30 samples, 3.91%)</title><rect x="382.3" y="499.0" width="46.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="385.3" y="510.0">Java..</text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.13%)</title><rect x="396.2" y="483.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="399.2" y="494.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.13%)</title><rect x="397.7" y="483.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="400.7" y="494.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.39%)</title><rect x="399.2" y="483.0" width="4.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="402.2" y="494.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (11 samples, 1.43%)</title><rect x="403.8" y="483.0" width="17.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="406.8" y="494.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.26%)</title><rect x="417.7" y="467.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="420.7" y="478.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.13%)</title><rect x="420.8" y="483.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="423.8" y="494.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.26%)</title><rect x="422.3" y="483.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="425.3" y="494.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.26%)</title><rect x="425.4" y="483.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="428.4" y="494.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (2 samples, 0.26%)</title><rect x="428.5" y="499.0" width="3.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="431.5" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (3 samples, 0.39%)</title><rect x="431.5" y="499.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="434.5" y="510.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.13%)</title><rect x="436.2" y="499.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="439.2" y="510.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.13%)</title><rect x="437.7" y="499.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="440.7" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.13%)</title><rect x="439.2" y="499.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="442.2" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.13%)</title><rect x="439.2" y="483.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.2" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.13%)</title><rect x="439.2" y="467.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="442.2" y="478.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.13%)</title><rect x="440.8" y="515.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="443.8" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.13%)</title><rect x="442.3" y="515.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="445.3" y="526.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.13%)</title><rect x="443.8" y="515.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="446.8" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.13%)</title><rect x="445.4" y="547.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="448.4" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="446.9" y="547.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="449.9" y="558.0"></text>
</g>
<g>
<title>__lll_lock_wait (123 samples, 16.04%)</title><rect x="448.5" y="547.0" width="189.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="451.5" y="558.0">__lll_lock_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 12.52%)</title><rect x="490.0" y="531.0" width="147.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.0" y="542.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.13%)</title><rect x="490.0" y="515.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (95 samples, 12.39%)</title><rect x="491.5" y="515.0" width="146.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.5" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (71 samples, 9.26%)</title><rect x="506.9" y="499.0" width="109.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="509.9" y="510.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (68 samples, 8.87%)</title><rect x="511.5" y="483.0" width="104.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.5" y="494.0">do_futex</text>
</g>
<g>
<title>drop_futex_key_refs.isra.12 (1 samples, 0.13%)</title><rect x="520.8" y="467.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.8" y="478.0"></text>
</g>
<g>
<title>futex_wait (60 samples, 7.82%)</title><rect x="522.3" y="467.0" width="92.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.3" y="478.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (34 samples, 4.43%)</title><rect x="539.2" y="451.0" width="52.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.2" y="462.0">futex..</text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.26%)</title><rect x="553.1" y="435.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.1" y="446.0"></text>
</g>
<g>
<title>schedule (23 samples, 3.00%)</title><rect x="556.2" y="435.0" width="35.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.2" y="446.0">sch..</text>
</g>
<g>
<title>__sched_text_start (20 samples, 2.61%)</title><rect x="560.8" y="419.0" width="30.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="563.8" y="430.0">__..</text>
</g>
<g>
<title>finish_task_switch (15 samples, 1.96%)</title><rect x="568.5" y="403.0" width="23.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="571.5" y="414.0">f..</text>
</g>
<g>
<title>futex_wait_setup (14 samples, 1.83%)</title><rect x="591.5" y="451.0" width="21.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="594.5" y="462.0">f..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.13%)</title><rect x="597.7" y="435.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="600.7" y="446.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.13%)</title><rect x="597.7" y="419.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.7" y="430.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.52%)</title><rect x="599.2" y="435.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.2" y="446.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (3 samples, 0.39%)</title><rect x="600.8" y="419.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="603.8" y="430.0"></text>
</g>
<g>
<title>get_futex_value_locked (5 samples, 0.65%)</title><rect x="605.4" y="435.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="608.4" y="446.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.13%)</title><rect x="613.1" y="451.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="616.1" y="462.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.13%)</title><rect x="614.6" y="467.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="617.6" y="478.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (12 samples, 1.56%)</title><rect x="616.2" y="499.0" width="18.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="619.2" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (8 samples, 1.04%)</title><rect x="620.8" y="483.0" width="12.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.8" y="494.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.13%)</title><rect x="628.5" y="467.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.5" y="478.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.26%)</title><rect x="630.0" y="467.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="633.0" y="478.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.13%)</title><rect x="633.1" y="483.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="636.1" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.26%)</title><rect x="634.6" y="499.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="637.6" y="510.0"></text>
</g>
<g>
<title>__lll_unlock_wake (146 samples, 19.04%)</title><rect x="637.7" y="547.0" width="224.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="640.7" y="558.0">__lll_unlock_wake</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 18.51%)</title><rect x="643.8" y="531.0" width="218.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="646.8" y="542.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 18.51%)</title><rect x="643.8" y="515.0" width="218.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="646.8" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (131 samples, 17.08%)</title><rect x="653.1" y="499.0" width="201.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="656.1" y="510.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (128 samples, 16.69%)</title><rect x="657.7" y="483.0" width="196.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.7" y="494.0">do_futex</text>
</g>
<g>
<title>futex_wake (126 samples, 16.43%)</title><rect x="659.2" y="467.0" width="193.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="662.2" y="478.0">futex_wake</text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.65%)</title><rect x="673.1" y="451.0" width="7.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="676.1" y="462.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.26%)</title><rect x="680.8" y="451.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="683.8" y="462.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (2 samples, 0.26%)</title><rect x="680.8" y="435.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="683.8" y="446.0"></text>
</g>
<g>
<title>mark_wake_futex (7 samples, 0.91%)</title><rect x="683.8" y="451.0" width="10.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.8" y="462.0"></text>
</g>
<g>
<title>__unqueue_futex (3 samples, 0.39%)</title><rect x="685.4" y="435.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.4" y="446.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.13%)</title><rect x="690.0" y="435.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.0" y="446.0"></text>
</g>
<g>
<title>wake_q_add_safe (2 samples, 0.26%)</title><rect x="691.5" y="435.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.5" y="446.0"></text>
</g>
<g>
<title>wake_up_q (103 samples, 13.43%)</title><rect x="694.6" y="451.0" width="158.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="697.6" y="462.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (100 samples, 13.04%)</title><rect x="699.2" y="435.0" width="153.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.2" y="446.0">try_to_wake_up</text>
</g>
<g>
<title>__lock_text_start (99 samples, 12.91%)</title><rect x="700.8" y="419.0" width="152.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.8" y="430.0">__lock_text_start</text>
</g>
<g>
<title>hash_futex (1 samples, 0.13%)</title><rect x="853.1" y="467.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="856.1" y="478.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.13%)</title><rect x="854.6" y="499.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.6" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.13%)</title><rect x="856.2" y="499.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="859.2" y="510.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (2 samples, 0.26%)</title><rect x="857.7" y="499.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="860.7" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.26%)</title><rect x="857.7" y="483.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.7" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="860.8" y="499.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="863.8" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.13%)</title><rect x="860.8" y="483.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="863.8" y="494.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.13%)</title><rect x="862.3" y="547.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="865.3" y="558.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.65%)</title><rect x="863.8" y="547.0" width="7.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="866.8" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.39%)</title><rect x="863.8" y="531.0" width="4.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="866.8" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="868.5" y="531.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="871.5" y="542.0"></text>
</g>
<g>
<title>jni_GetEnv (2 samples, 0.26%)</title><rect x="871.5" y="547.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="874.5" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (13 samples, 1.69%)</title><rect x="874.6" y="547.0" width="20.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="877.6" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.13%)</title><rect x="894.6" y="547.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="897.6" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (7 samples, 0.91%)</title><rect x="896.2" y="547.0" width="10.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="899.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (3 samples, 0.39%)</title><rect x="906.9" y="547.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="909.9" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.13%)</title><rect x="908.5" y="531.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="911.5" y="542.0"></text>
</g>
<g>
<title>Threads::is_supported_jni_version_including_1_1(int) (1 samples, 0.13%)</title><rect x="910.0" y="531.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="913.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.26%)</title><rect x="911.5" y="547.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="914.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.13%)</title><rect x="914.6" y="563.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="917.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (2 samples, 0.26%)</title><rect x="916.2" y="563.0" width="3.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="919.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (4 samples, 0.52%)</title><rect x="919.2" y="563.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="922.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (2 samples, 0.26%)</title><rect x="925.4" y="563.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="928.4" y="574.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.13%)</title><rect x="928.5" y="595.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="931.5" y="606.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.13%)</title><rect x="930.0" y="595.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="933.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.13%)</title><rect x="931.5" y="643.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="934.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.13%)</title><rect x="933.1" y="643.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="936.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (1 samples, 0.13%)</title><rect x="934.6" y="659.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="937.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.13%)</title><rect x="936.2" y="675.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="939.2" y="686.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.13%)</title><rect x="937.7" y="707.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="940.7" y="718.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) [clone .plt] (1 samples, 0.13%)</title><rect x="939.2" y="707.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="942.2" y="718.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.13%)</title><rect x="940.8" y="723.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="943.8" y="734.0"></text>
</g>
<g>
<title>call_stub (10 samples, 1.30%)</title><rect x="942.3" y="723.0" width="15.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="945.3" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (14 samples, 1.83%)</title><rect x="957.7" y="723.0" width="21.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.7" y="734.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.26%)</title><rect x="979.2" y="723.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.13%)</title><rect x="982.3" y="723.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="985.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (76 samples, 9.91%)</title><rect x="983.8" y="723.0" width="117.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.8" y="734.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (74 samples, 9.65%)</title><rect x="986.9" y="707.0" width="113.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.9" y="718.0">ru/mail/polis/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (74 samples, 9.65%)</title><rect x="986.9" y="691.0" width="113.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.9" y="702.0">org/rocksdb/Ab..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (4 samples, 0.52%)</title><rect x="986.9" y="675.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="989.9" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (70 samples, 9.13%)</title><rect x="993.1" y="675.0" width="107.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.1" y="686.0">org/rocksdb/S..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (70 samples, 9.13%)</title><rect x="993.1" y="659.0" width="107.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.1" y="670.0">org/rocksdb/S..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (62 samples, 8.08%)</title><rect x="1003.8" y="643.0" width="95.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1006.8" y="654.0">Java_org_ro..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.13%)</title><rect x="1005.4" y="627.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1008.4" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.13%)</title><rect x="1006.9" y="627.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1009.9" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.26%)</title><rect x="1008.5" y="627.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1011.5" y="638.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.39%)</title><rect x="1011.5" y="627.0" width="4.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1014.5" y="638.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (6 samples, 0.78%)</title><rect x="1016.2" y="627.0" width="9.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1019.2" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="1017.7" y="611.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1020.7" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.39%)</title><rect x="1020.8" y="611.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.8" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (38 samples, 4.95%)</title><rect x="1025.4" y="627.0" width="58.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1028.4" y="638.0">jni_Ne..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.39%)</title><rect x="1033.1" y="611.0" width="4.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1036.1" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.13%)</title><rect x="1037.7" y="611.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1040.7" y="622.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.13%)</title><rect x="1039.2" y="611.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1042.2" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.65%)</title><rect x="1040.8" y="611.0" width="7.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1043.8" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (3 samples, 0.39%)</title><rect x="1048.5" y="611.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1051.5" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (20 samples, 2.61%)</title><rect x="1053.1" y="611.0" width="30.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1056.1" y="622.0">Ty..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 2.22%)</title><rect x="1056.2" y="595.0" width="26.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1059.2" y="606.0">C..</text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 1.30%)</title><rect x="1057.7" y="579.0" width="15.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1060.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.13%)</title><rect x="1062.3" y="563.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1065.3" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.39%)</title><rect x="1063.8" y="563.0" width="4.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.8" y="574.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.13%)</title><rect x="1068.5" y="563.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.5" y="574.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.13%)</title><rect x="1070.0" y="563.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1073.0" y="574.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.13%)</title><rect x="1071.5" y="563.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1074.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.65%)</title><rect x="1073.1" y="579.0" width="7.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1076.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.13%)</title><rect x="1080.8" y="579.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1083.8" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.13%)</title><rect x="1082.3" y="595.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.3" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 1.30%)</title><rect x="1083.8" y="627.0" width="15.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1086.8" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.13%)</title><rect x="1086.9" y="611.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1089.9" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.26%)</title><rect x="1088.5" y="611.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1091.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="1091.5" y="611.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.5" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.39%)</title><rect x="1094.6" y="611.0" width="4.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1097.6" y="622.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.39%)</title><rect x="1094.6" y="595.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1097.6" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.13%)</title><rect x="1099.2" y="643.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1102.2" y="654.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.13%)</title><rect x="1100.8" y="723.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1103.8" y="734.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.13%)</title><rect x="1102.3" y="723.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.toBytes (1 samples, 0.13%)</title><rect x="1103.8" y="771.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.13%)</title><rect x="1103.8" y="755.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.13%)</title><rect x="1103.8" y="739.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.13%)</title><rect x="1103.8" y="723.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1106.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.13%)</title><rect x="1103.8" y="707.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1106.8" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (55 samples, 7.17%)</title><rect x="1105.4" y="867.0" width="84.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.4" y="878.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 2.09%)</title><rect x="1105.4" y="851.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1108.4" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.13%)</title><rect x="1105.4" y="835.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.13%)</title><rect x="1105.4" y="819.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1108.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 1.96%)</title><rect x="1106.9" y="835.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.9" y="846.0">o..</text>
</g>
<g>
<title>[unknown] (15 samples, 1.96%)</title><rect x="1106.9" y="819.0" width="23.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1109.9" y="830.0">[..</text>
</g>
<g>
<title>epoll_wait (15 samples, 1.96%)</title><rect x="1106.9" y="803.0" width="23.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1109.9" y="814.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 1.83%)</title><rect x="1108.5" y="787.0" width="21.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1111.5" y="798.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.13%)</title><rect x="1108.5" y="771.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 1.69%)</title><rect x="1110.0" y="771.0" width="20.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1113.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 1.56%)</title><rect x="1110.0" y="755.0" width="18.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1113.0" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (12 samples, 1.56%)</title><rect x="1110.0" y="739.0" width="18.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.0" y="750.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 1.56%)</title><rect x="1110.0" y="723.0" width="18.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1113.0" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (4 samples, 0.52%)</title><rect x="1111.5" y="707.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1114.5" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.26%)</title><rect x="1113.1" y="691.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1116.1" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.26%)</title><rect x="1113.1" y="675.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1116.1" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.13%)</title><rect x="1114.6" y="659.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.6" y="670.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.13%)</title><rect x="1116.2" y="691.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1119.2" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.91%)</title><rect x="1117.7" y="707.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1120.7" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.91%)</title><rect x="1117.7" y="691.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1120.7" y="702.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.78%)</title><rect x="1119.2" y="675.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.2" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.65%)</title><rect x="1120.8" y="659.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.8" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.52%)</title><rect x="1122.3" y="643.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1125.3" y="654.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.13%)</title><rect x="1128.5" y="755.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1131.5" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.13%)</title><rect x="1128.5" y="739.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1131.5" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 5.08%)</title><rect x="1130.0" y="851.0" width="60.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="862.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 5.08%)</title><rect x="1130.0" y="835.0" width="60.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.0" y="846.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 3.00%)</title><rect x="1130.0" y="819.0" width="35.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1133.0" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 1.96%)</title><rect x="1139.2" y="803.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.2" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 1.96%)</title><rect x="1139.2" y="787.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.2" y="798.0">o..</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (14 samples, 1.83%)</title><rect x="1139.2" y="771.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1142.2" y="782.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.26%)</title><rect x="1139.2" y="755.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.13%)</title><rect x="1139.2" y="739.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1142.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.13%)</title><rect x="1139.2" y="723.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1142.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.13%)</title><rect x="1139.2" y="707.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.13%)</title><rect x="1140.8" y="739.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.13%)</title><rect x="1140.8" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.13%)</title><rect x="1140.8" y="707.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1143.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (12 samples, 1.56%)</title><rect x="1142.3" y="755.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 1.56%)</title><rect x="1142.3" y="739.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 1.56%)</title><rect x="1142.3" y="723.0" width="18.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.3" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.13%)</title><rect x="1143.8" y="707.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.8" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.13%)</title><rect x="1143.8" y="691.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.8" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.13%)</title><rect x="1143.8" y="675.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.13%)</title><rect x="1143.8" y="659.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.8" y="670.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.13%)</title><rect x="1143.8" y="643.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 1.30%)</title><rect x="1145.4" y="707.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 1.30%)</title><rect x="1145.4" y="691.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 1.30%)</title><rect x="1145.4" y="675.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 1.30%)</title><rect x="1145.4" y="659.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 1.30%)</title><rect x="1145.4" y="643.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 1.30%)</title><rect x="1145.4" y="627.0" width="15.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.4" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 1.30%)</title><rect x="1145.4" y="611.0" width="15.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1148.4" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.17%)</title><rect x="1146.9" y="595.0" width="13.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.17%)</title><rect x="1146.9" y="579.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 1.17%)</title><rect x="1146.9" y="563.0" width="13.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1149.9" y="574.0"></text>
</g>
<g>
<title>do_futex (9 samples, 1.17%)</title><rect x="1146.9" y="547.0" width="13.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 1.17%)</title><rect x="1146.9" y="531.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1149.9" y="542.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.91%)</title><rect x="1150.0" y="515.0" width="10.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1153.0" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.91%)</title><rect x="1150.0" y="499.0" width="10.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.0" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.91%)</title><rect x="1150.0" y="483.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1153.0" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.13%)</title><rect x="1160.8" y="771.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1163.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.13%)</title><rect x="1160.8" y="755.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.13%)</title><rect x="1160.8" y="739.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.26%)</title><rect x="1162.3" y="803.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1165.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 2.09%)</title><rect x="1165.4" y="819.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1168.4" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 2.09%)</title><rect x="1165.4" y="803.0" width="24.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.4" y="814.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.39%)</title><rect x="1165.4" y="787.0" width="4.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1168.4" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.13%)</title><rect x="1165.4" y="771.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.26%)</title><rect x="1166.9" y="771.0" width="3.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1169.9" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.26%)</title><rect x="1166.9" y="755.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.9" y="766.0"></text>
</g>
<g>
<title>__GI___recv (11 samples, 1.43%)</title><rect x="1170.0" y="787.0" width="16.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1173.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.43%)</title><rect x="1170.0" y="771.0" width="16.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.43%)</title><rect x="1170.0" y="755.0" width="16.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1173.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 1.30%)</title><rect x="1170.0" y="739.0" width="15.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.0" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 1.30%)</title><rect x="1170.0" y="723.0" width="15.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.0" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 1.30%)</title><rect x="1170.0" y="707.0" width="15.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1173.0" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 0.91%)</title><rect x="1170.0" y="691.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.0" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.91%)</title><rect x="1170.0" y="675.0" width="10.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.0" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.52%)</title><rect x="1170.0" y="659.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.0" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.52%)</title><rect x="1170.0" y="643.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1173.0" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.26%)</title><rect x="1173.1" y="627.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.1" y="638.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.13%)</title><rect x="1173.1" y="611.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1176.1" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.13%)</title><rect x="1174.6" y="611.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.6" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.13%)</title><rect x="1176.2" y="659.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1179.2" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.26%)</title><rect x="1177.7" y="659.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1180.7" y="670.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.13%)</title><rect x="1179.2" y="643.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.2" y="654.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.13%)</title><rect x="1179.2" y="627.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.2" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.39%)</title><rect x="1180.8" y="691.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1183.8" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.39%)</title><rect x="1180.8" y="675.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.8" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.39%)</title><rect x="1180.8" y="659.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1183.8" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.39%)</title><rect x="1180.8" y="643.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1183.8" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.13%)</title><rect x="1183.8" y="627.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1186.8" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.13%)</title><rect x="1183.8" y="611.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.8" y="622.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.13%)</title><rect x="1185.4" y="739.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.13%)</title><rect x="1186.9" y="787.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1189.9" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.13%)</title><rect x="1188.5" y="787.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
</g>
</svg>
