<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (130 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.77%)</title><rect x="10.0" y="883.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (110 samples, 84.62%)</title><rect x="19.1" y="883.0" width="998.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.1" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.77%)</title><rect x="19.1" y="867.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 7.69%)</title><rect x="28.2" y="867.0" width="90.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.2" y="878.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.77%)</title><rect x="28.2" y="851.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 6.92%)</title><rect x="37.2" y="851.0" width="81.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.2" y="862.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.77%)</title><rect x="37.2" y="835.0" width="9.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="40.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 5.38%)</title><rect x="46.3" y="835.0" width="63.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="49.3" y="846.0">[unknown]</text>
</g>
<g>
<title>epoll_wait (7 samples, 5.38%)</title><rect x="46.3" y="819.0" width="63.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="49.3" y="830.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 5.38%)</title><rect x="46.3" y="803.0" width="63.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="49.3" y="814.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 5.38%)</title><rect x="46.3" y="787.0" width="63.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.3" y="798.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 5.38%)</title><rect x="46.3" y="771.0" width="63.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="49.3" y="782.0">__x64_s..</text>
</g>
<g>
<title>do_epoll_wait (7 samples, 5.38%)</title><rect x="46.3" y="755.0" width="63.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="49.3" y="766.0">do_epol..</text>
</g>
<g>
<title>ep_poll (6 samples, 4.62%)</title><rect x="55.4" y="739.0" width="54.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.4" y="750.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 1.54%)</title><rect x="73.5" y="723.0" width="18.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.5" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.77%)</title><rect x="82.6" y="707.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="85.6" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.77%)</title><rect x="82.6" y="691.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.6" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.77%)</title><rect x="82.6" y="675.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="85.6" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 1.54%)</title><rect x="91.7" y="723.0" width="18.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 1.54%)</title><rect x="91.7" y="707.0" width="18.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.7" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.77%)</title><rect x="100.8" y="691.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.8" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.77%)</title><rect x="100.8" y="675.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="103.8" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.77%)</title><rect x="100.8" y="659.0" width="9.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.8" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.77%)</title><rect x="109.8" y="835.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="112.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.77%)</title><rect x="109.8" y="819.0" width="9.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="112.8" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.77%)</title><rect x="109.8" y="803.0" width="9.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="112.8" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.77%)</title><rect x="109.8" y="787.0" width="9.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="112.8" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.77%)</title><rect x="109.8" y="771.0" width="9.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="112.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (99 samples, 76.15%)</title><rect x="118.9" y="867.0" width="898.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.9" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (98 samples, 75.38%)</title><rect x="128.0" y="851.0" width="889.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.0" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (93 samples, 71.54%)</title><rect x="128.0" y="835.0" width="844.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.0" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (86 samples, 66.15%)</title><rect x="146.2" y="819.0" width="780.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.2" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (86 samples, 66.15%)</title><rect x="146.2" y="803.0" width="780.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.2" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (9 samples, 6.92%)</title><rect x="146.2" y="787.0" width="81.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.2" y="798.0">RequestHa..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.77%)</title><rect x="146.2" y="771.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1 samples, 0.77%)</title><rect x="146.2" y="755.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.77%)</title><rect x="146.2" y="739.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.77%)</title><rect x="146.2" y="723.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1 samples, 0.77%)</title><rect x="146.2" y="707.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.77%)</title><rect x="146.2" y="691.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="149.2" y="702.0"></text>
</g>
<g>
<title>__libc_send (1 samples, 0.77%)</title><rect x="146.2" y="675.0" width="9.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="149.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.77%)</title><rect x="146.2" y="659.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="149.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.77%)</title><rect x="146.2" y="643.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.77%)</title><rect x="146.2" y="627.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.2" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.77%)</title><rect x="146.2" y="611.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.77%)</title><rect x="146.2" y="595.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.2" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.77%)</title><rect x="146.2" y="579.0" width="9.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="149.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.77%)</title><rect x="146.2" y="563.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.77%)</title><rect x="146.2" y="547.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="149.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.77%)</title><rect x="146.2" y="531.0" width="9.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="149.2" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.77%)</title><rect x="146.2" y="515.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="149.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.77%)</title><rect x="146.2" y="499.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="149.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.77%)</title><rect x="146.2" y="483.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.77%)</title><rect x="146.2" y="467.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.2" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.77%)</title><rect x="146.2" y="451.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.77%)</title><rect x="146.2" y="435.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.2" y="446.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.77%)</title><rect x="146.2" y="419.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.77%)</title><rect x="146.2" y="403.0" width="9.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="149.2" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.77%)</title><rect x="146.2" y="387.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.2" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.77%)</title><rect x="146.2" y="371.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="149.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.get (8 samples, 6.15%)</title><rect x="155.2" y="771.0" width="72.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.2" y="782.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (8 samples, 6.15%)</title><rect x="155.2" y="755.0" width="72.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.2" y="766.0">ru/mail/..</text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 1.54%)</title><rect x="155.2" y="739.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.2" y="750.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 1.54%)</title><rect x="155.2" y="723.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 1.54%)</title><rect x="155.2" y="707.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 1.54%)</title><rect x="155.2" y="691.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 1.54%)</title><rect x="155.2" y="675.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 1.54%)</title><rect x="155.2" y="659.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.2" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 1.54%)</title><rect x="155.2" y="643.0" width="18.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="158.2" y="654.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 1.54%)</title><rect x="155.2" y="627.0" width="18.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="158.2" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.77%)</title><rect x="164.3" y="611.0" width="9.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="167.3" y="622.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (1 samples, 0.77%)</title><rect x="164.3" y="595.0" width="9.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="167.3" y="606.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.77%)</title><rect x="164.3" y="579.0" width="9.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="167.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.iterator (6 samples, 4.62%)</title><rect x="173.4" y="739.0" width="54.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.4" y="750.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.getIterator (6 samples, 4.62%)</title><rect x="173.4" y="723.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.4" y="734.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (1 samples, 0.77%)</title><rect x="173.4" y="707.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.4" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (1 samples, 0.77%)</title><rect x="173.4" y="691.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.4" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (1 samples, 0.77%)</title><rect x="173.4" y="675.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.4" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (1 samples, 0.77%)</title><rect x="173.4" y="659.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.4" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (1 samples, 0.77%)</title><rect x="173.4" y="643.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.4" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (1 samples, 0.77%)</title><rect x="173.4" y="627.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.77%)</title><rect x="173.4" y="611.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.4" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::register_finalizer(JavaThread*, oopDesc*) (1 samples, 0.77%)</title><rect x="173.4" y="595.0" width="9.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="176.4" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.77%)</title><rect x="173.4" y="579.0" width="9.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="176.4" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.77%)</title><rect x="173.4" y="563.0" width="9.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="176.4" y="574.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.77%)</title><rect x="173.4" y="547.0" width="9.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="176.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/IteratorImpl.&lt;init&gt; (5 samples, 3.85%)</title><rect x="182.5" y="707.0" width="45.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.5" y="718.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (5 samples, 3.85%)</title><rect x="182.5" y="691.0" width="45.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.5" y="702.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (5 samples, 3.85%)</title><rect x="182.5" y="675.0" width="45.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="185.5" y="686.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (3 samples, 2.31%)</title><rect x="182.5" y="659.0" width="27.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="185.5" y="670.0">J..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (3 samples, 2.31%)</title><rect x="182.5" y="643.0" width="27.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="185.5" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (3 samples, 2.31%)</title><rect x="182.5" y="627.0" width="27.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="185.5" y="638.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni6164464695482110027.so (3 samples, 2.31%)</title><rect x="182.5" y="611.0" width="27.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="185.5" y="622.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 2.31%)</title><rect x="182.5" y="595.0" width="27.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="185.5" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 2.31%)</title><rect x="182.5" y="579.0" width="27.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="185.5" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 2.31%)</title><rect x="182.5" y="563.0" width="27.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="185.5" y="574.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 1.54%)</title><rect x="182.5" y="547.0" width="18.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="185.5" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 1.54%)</title><rect x="182.5" y="531.0" width="18.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="185.5" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 1.54%)</title><rect x="182.5" y="515.0" width="18.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="185.5" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.77%)</title><rect x="182.5" y="499.0" width="9.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="185.5" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.77%)</title><rect x="191.5" y="499.0" width="9.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="194.5" y="510.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.77%)</title><rect x="200.6" y="547.0" width="9.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="203.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.77%)</title><rect x="200.6" y="531.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.77%)</title><rect x="200.6" y="515.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.77%)</title><rect x="200.6" y="499.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.6" y="510.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.77%)</title><rect x="200.6" y="483.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="203.6" y="494.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.77%)</title><rect x="200.6" y="467.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="203.6" y="478.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.77%)</title><rect x="200.6" y="451.0" width="9.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="203.6" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.77%)</title><rect x="200.6" y="435.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.6" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.77%)</title><rect x="200.6" y="419.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2 samples, 1.54%)</title><rect x="209.7" y="659.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (2 samples, 1.54%)</title><rect x="209.7" y="643.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="212.7" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 1.54%)</title><rect x="209.7" y="627.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.7" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 1.54%)</title><rect x="209.7" y="611.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.7" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 1.54%)</title><rect x="209.7" y="595.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.7" y="606.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 1.54%)</title><rect x="209.7" y="579.0" width="18.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="212.7" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.77%)</title><rect x="209.7" y="563.0" width="9.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="212.7" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.77%)</title><rect x="209.7" y="547.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="212.7" y="558.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.77%)</title><rect x="218.8" y="563.0" width="9.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="221.8" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.77%)</title><rect x="218.8" y="547.0" width="9.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="221.8" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.77%)</title><rect x="218.8" y="531.0" width="9.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="221.8" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.77%)</title><rect x="218.8" y="515.0" width="9.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="221.8" y="526.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.77%)</title><rect x="218.8" y="499.0" width="9.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="221.8" y="510.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.77%)</title><rect x="218.8" y="483.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="221.8" y="494.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.77%)</title><rect x="218.8" y="467.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.8" y="478.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.77%)</title><rect x="218.8" y="451.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.8" y="462.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.77%)</title><rect x="218.8" y="435.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.8" y="446.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.77%)</title><rect x="218.8" y="419.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="221.8" y="430.0"></text>
</g>
<g>
<title>lru_cache_add_active_or_unevictable (1 samples, 0.77%)</title><rect x="218.8" y="403.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.8" y="414.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.77%)</title><rect x="218.8" y="387.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="221.8" y="398.0"></text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (76 samples, 58.46%)</title><rect x="227.8" y="787.0" width="689.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.8" y="798.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (34 samples, 26.15%)</title><rect x="227.8" y="771.0" width="308.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.8" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (32 samples, 24.62%)</title><rect x="227.8" y="755.0" width="290.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.8" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 24.62%)</title><rect x="227.8" y="739.0" width="290.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.8" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 24.62%)</title><rect x="227.8" y="723.0" width="290.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.8" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (32 samples, 24.62%)</title><rect x="227.8" y="707.0" width="290.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.8" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (32 samples, 24.62%)</title><rect x="227.8" y="691.0" width="290.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.8" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__libc_send (32 samples, 24.62%)</title><rect x="227.8" y="675.0" width="290.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="230.8" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 24.62%)</title><rect x="227.8" y="659.0" width="290.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="230.8" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (32 samples, 24.62%)</title><rect x="227.8" y="643.0" width="290.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="230.8" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (31 samples, 23.85%)</title><rect x="227.8" y="627.0" width="281.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="230.8" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (31 samples, 23.85%)</title><rect x="227.8" y="611.0" width="281.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.8" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (31 samples, 23.85%)</title><rect x="227.8" y="595.0" width="281.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="230.8" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (31 samples, 23.85%)</title><rect x="227.8" y="579.0" width="281.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="230.8" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (31 samples, 23.85%)</title><rect x="227.8" y="563.0" width="281.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="230.8" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (31 samples, 23.85%)</title><rect x="227.8" y="547.0" width="281.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="230.8" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>copyin (1 samples, 0.77%)</title><rect x="227.8" y="531.0" width="9.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="230.8" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 1.54%)</title><rect x="236.9" y="531.0" width="18.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="239.9" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 1.54%)</title><rect x="236.9" y="515.0" width="18.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.77%)</title><rect x="236.9" y="499.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.9" y="510.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.77%)</title><rect x="236.9" y="483.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.9" y="494.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.77%)</title><rect x="246.0" y="499.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="249.0" y="510.0"></text>
</g>
<g>
<title>tcp_push (28 samples, 21.54%)</title><rect x="255.1" y="531.0" width="254.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="258.1" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (27 samples, 20.77%)</title><rect x="255.1" y="515.0" width="245.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="258.1" y="526.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (27 samples, 20.77%)</title><rect x="255.1" y="499.0" width="245.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="258.1" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (25 samples, 19.23%)</title><rect x="264.2" y="483.0" width="226.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="267.2" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (24 samples, 18.46%)</title><rect x="273.2" y="467.0" width="217.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.2" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (24 samples, 18.46%)</title><rect x="273.2" y="451.0" width="217.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.2" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (24 samples, 18.46%)</title><rect x="273.2" y="435.0" width="217.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="276.2" y="446.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 1.54%)</title><rect x="273.2" y="419.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.2" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 1.54%)</title><rect x="273.2" y="403.0" width="18.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.2" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 1.54%)</title><rect x="273.2" y="387.0" width="18.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.2" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 1.54%)</title><rect x="273.2" y="371.0" width="18.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.2" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.77%)</title><rect x="273.2" y="355.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.2" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet?[nf_conntrack] (1 samples, 0.77%)</title><rect x="282.3" y="355.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="285.3" y="366.0"></text>
</g>
<g>
<title>tcp_in_window?[nf_conntrack] (1 samples, 0.77%)</title><rect x="282.3" y="339.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="285.3" y="350.0"></text>
</g>
<g>
<title>nf_ct_seq_offset?[nf_conntrack] (1 samples, 0.77%)</title><rect x="282.3" y="323.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="285.3" y="334.0"></text>
</g>
<g>
<title>ip_output (22 samples, 16.92%)</title><rect x="291.4" y="419.0" width="199.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.4" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (21 samples, 16.15%)</title><rect x="300.5" y="403.0" width="190.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="303.5" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (21 samples, 16.15%)</title><rect x="300.5" y="387.0" width="190.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="303.5" y="398.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (21 samples, 16.15%)</title><rect x="300.5" y="371.0" width="190.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.5" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (19 samples, 14.62%)</title><rect x="300.5" y="355.0" width="172.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.5" y="366.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (19 samples, 14.62%)</title><rect x="300.5" y="339.0" width="172.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="303.5" y="350.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (19 samples, 14.62%)</title><rect x="300.5" y="323.0" width="172.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="303.5" y="334.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (18 samples, 13.85%)</title><rect x="300.5" y="307.0" width="163.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="303.5" y="318.0">__softirqentry_text_s..</text>
</g>
<g>
<title>net_rx_action (16 samples, 12.31%)</title><rect x="309.5" y="291.0" width="145.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="312.5" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (16 samples, 12.31%)</title><rect x="309.5" y="275.0" width="145.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="312.5" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (16 samples, 12.31%)</title><rect x="309.5" y="259.0" width="145.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="312.5" y="270.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 12.31%)</title><rect x="309.5" y="243.0" width="145.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="312.5" y="254.0">__netif_receive_sk..</text>
</g>
<g>
<title>ip_rcv (16 samples, 12.31%)</title><rect x="309.5" y="227.0" width="145.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.5" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (16 samples, 12.31%)</title><rect x="309.5" y="211.0" width="145.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="312.5" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (15 samples, 11.54%)</title><rect x="318.6" y="195.0" width="136.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.6" y="206.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (15 samples, 11.54%)</title><rect x="318.6" y="179.0" width="136.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.6" y="190.0">ip_local_deliver_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (15 samples, 11.54%)</title><rect x="318.6" y="163.0" width="136.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.6" y="174.0">ip_protocol_deliv..</text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 11.54%)</title><rect x="318.6" y="147.0" width="136.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="321.6" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.77%)</title><rect x="318.6" y="131.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="321.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 10.77%)</title><rect x="327.7" y="131.0" width="127.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="330.7" y="142.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 10.77%)</title><rect x="327.7" y="115.0" width="127.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.7" y="126.0">tcp_rcv_establis..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.77%)</title><rect x="327.7" y="99.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.7" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.77%)</title><rect x="327.7" y="83.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="330.7" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.77%)</title><rect x="327.7" y="67.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.7" y="78.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 2.31%)</title><rect x="336.8" y="99.0" width="27.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.8" y="110.0">t..</text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 1.54%)</title><rect x="345.8" y="83.0" width="18.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.77%)</title><rect x="345.8" y="67.0" width="9.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="348.8" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.77%)</title><rect x="345.8" y="51.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.8" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.77%)</title><rect x="345.8" y="35.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.8" y="46.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.77%)</title><rect x="354.9" y="67.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="357.9" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.77%)</title><rect x="364.0" y="99.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="367.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (9 samples, 6.92%)</title><rect x="373.1" y="99.0" width="81.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.1" y="110.0">tcp_data_..</text>
</g>
<g>
<title>sock_def_readable (9 samples, 6.92%)</title><rect x="373.1" y="83.0" width="81.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="376.1" y="94.0">sock_def_..</text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 6.92%)</title><rect x="373.1" y="67.0" width="81.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.1" y="78.0">__wake_up..</text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 6.92%)</title><rect x="373.1" y="51.0" width="81.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.1" y="62.0">__wake_up..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 6.92%)</title><rect x="373.1" y="35.0" width="81.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="376.1" y="46.0">__lock_te..</text>
</g>
<g>
<title>process_backlog (1 samples, 0.77%)</title><rect x="454.8" y="291.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="457.8" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.77%)</title><rect x="463.8" y="307.0" width="9.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="466.8" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 1.54%)</title><rect x="472.9" y="355.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.9" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 1.54%)</title><rect x="472.9" y="339.0" width="18.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.77%)</title><rect x="472.9" y="323.0" width="9.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.9" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.77%)</title><rect x="472.9" y="307.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.9" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.77%)</title><rect x="482.0" y="323.0" width="9.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.0" y="334.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.77%)</title><rect x="491.1" y="483.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.1" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.77%)</title><rect x="500.2" y="515.0" width="9.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.2" y="526.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.77%)</title><rect x="509.2" y="627.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="512.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 1.54%)</title><rect x="518.3" y="755.0" width="18.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.77%)</title><rect x="527.4" y="739.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.77%)</title><rect x="527.4" y="723.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.77%)</title><rect x="527.4" y="707.0" width="9.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="530.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.77%)</title><rect x="536.5" y="771.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.77%)</title><rect x="536.5" y="755.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.77%)</title><rect x="536.5" y="739.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.5" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.77%)</title><rect x="536.5" y="723.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (41 samples, 31.54%)</title><rect x="545.5" y="771.0" width="372.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.5" y="782.0">ru/mail/polis/service/stasyanoi/CustomServer.put</text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.77%)</title><rect x="545.5" y="755.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (40 samples, 30.77%)</title><rect x="554.6" y="755.0" width="363.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.6" y="766.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (40 samples, 30.77%)</title><rect x="554.6" y="739.0" width="363.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="557.6" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (40 samples, 30.77%)</title><rect x="554.6" y="723.0" width="363.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="557.6" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (27 samples, 20.77%)</title><rect x="554.6" y="707.0" width="245.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="557.6" y="718.0">Java_org_rocksdb_RocksDB_put__J_3..</text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.77%)</title><rect x="554.6" y="691.0" width="9.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="557.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.77%)</title><rect x="563.7" y="691.0" width="9.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="566.7" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (25 samples, 19.23%)</title><rect x="572.8" y="691.0" width="226.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="575.8" y="702.0">rocksdb_put_helper(JNIEnv_*, r..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.77%)</title><rect x="572.8" y="675.0" width="9.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="575.8" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.77%)</title><rect x="572.8" y="659.0" width="9.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="575.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 17.69%)</title><rect x="581.8" y="675.0" width="208.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.8" y="686.0">rocksdb::DB::Put(rocksdb::W..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 17.69%)</title><rect x="581.8" y="659.0" width="208.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="584.8" y="670.0">rocksdb::DBImpl::Put(rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 17.69%)</title><rect x="581.8" y="643.0" width="208.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="584.8" y="654.0">rocksdb::DB::Put(rocksdb::W..</text>
</g>
<g>
<title>operator delete(void*) [clone .plt] (1 samples, 0.77%)</title><rect x="590.9" y="627.0" width="9.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="593.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (19 samples, 14.62%)</title><rect x="600.0" y="627.0" width="172.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="603.0" y="638.0">rocksdb::DBImpl::Write..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.77%)</title><rect x="600.0" y="611.0" width="9.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="603.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (16 samples, 12.31%)</title><rect x="609.1" y="611.0" width="145.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="612.1" y="622.0">rocksdb::DBImpl::W..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.77%)</title><rect x="609.1" y="595.0" width="9.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="612.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.77%)</title><rect x="609.1" y="579.0" width="9.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="612.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.77%)</title><rect x="609.1" y="563.0" width="9.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="612.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.77%)</title><rect x="609.1" y="547.0" width="9.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="612.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.77%)</title><rect x="609.1" y="531.0" width="9.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="612.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.77%)</title><rect x="618.2" y="595.0" width="9.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="621.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 10.77%)</title><rect x="627.2" y="595.0" width="127.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="630.2" y="606.0">rocksdb::WriteBa..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 10.77%)</title><rect x="627.2" y="579.0" width="127.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="630.2" y="590.0">rocksdb::WriteBa..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 10.77%)</title><rect x="627.2" y="563.0" width="127.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="630.2" y="574.0">rocksdb::WriteBa..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 10.77%)</title><rect x="627.2" y="547.0" width="127.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="630.2" y="558.0">rocksdb::MemTabl..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 10.77%)</title><rect x="627.2" y="531.0" width="127.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="630.2" y="542.0">rocksdb::MemTabl..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 9.23%)</title><rect x="636.3" y="515.0" width="108.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="639.3" y="526.0">rocksdb::MemT..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 9.23%)</title><rect x="636.3" y="499.0" width="108.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="639.3" y="510.0">bool rocksdb:..</text>
</g>
<g>
<title>/tmp/librocksdbjni6164464695482110027.so (11 samples, 8.46%)</title><rect x="636.3" y="483.0" width="99.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="639.3" y="494.0">/tmp/librock..</text>
</g>
<g>
<title>/tmp/librocksdbjni6164464695482110027.so (3 samples, 2.31%)</title><rect x="636.3" y="467.0" width="27.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="639.3" y="478.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 2.31%)</title><rect x="636.3" y="451.0" width="27.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="639.3" y="462.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 2.31%)</title><rect x="636.3" y="435.0" width="27.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="639.3" y="446.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.77%)</title><rect x="636.3" y="419.0" width="9.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="639.3" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.77%)</title><rect x="636.3" y="403.0" width="9.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="639.3" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.77%)</title><rect x="636.3" y="387.0" width="9.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="639.3" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.77%)</title><rect x="636.3" y="371.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="639.3" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.77%)</title><rect x="636.3" y="355.0" width="9.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="639.3" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.77%)</title><rect x="645.4" y="419.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="648.4" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.77%)</title><rect x="645.4" y="403.0" width="9.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="648.4" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.77%)</title><rect x="645.4" y="387.0" width="9.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="648.4" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.77%)</title><rect x="645.4" y="371.0" width="9.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="648.4" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.77%)</title><rect x="645.4" y="355.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="648.4" y="366.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.77%)</title><rect x="654.5" y="419.0" width="9.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="657.5" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 6.15%)</title><rect x="663.5" y="467.0" width="72.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="666.5" y="478.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 6.15%)</title><rect x="663.5" y="451.0" width="72.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="666.5" y="462.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 3.85%)</title><rect x="663.5" y="435.0" width="45.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="666.5" y="446.0">JNIE..</text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 3.08%)</title><rect x="672.6" y="419.0" width="36.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="675.6" y="430.0">jni..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.77%)</title><rect x="672.6" y="403.0" width="9.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="675.6" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.77%)</title><rect x="681.7" y="403.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="684.7" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 1.54%)</title><rect x="690.8" y="403.0" width="18.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="693.8" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 1.54%)</title><rect x="690.8" y="387.0" width="18.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="693.8" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.77%)</title><rect x="699.8" y="371.0" width="9.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="702.8" y="382.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.77%)</title><rect x="708.9" y="435.0" width="9.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="711.9" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.77%)</title><rect x="718.0" y="435.0" width="9.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="721.0" y="446.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.77%)</title><rect x="727.1" y="435.0" width="9.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="730.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.77%)</title><rect x="736.2" y="483.0" width="9.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="739.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.77%)</title><rect x="736.2" y="467.0" width="9.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="739.2" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.77%)</title><rect x="736.2" y="451.0" width="9.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="739.2" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.77%)</title><rect x="736.2" y="435.0" width="9.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="739.2" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.77%)</title><rect x="736.2" y="419.0" width="9.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="739.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.77%)</title><rect x="745.2" y="515.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="748.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.77%)</title><rect x="754.3" y="611.0" width="9.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="757.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.77%)</title><rect x="763.4" y="611.0" width="9.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="766.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.77%)</title><rect x="772.5" y="627.0" width="9.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="775.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.77%)</title><rect x="781.5" y="627.0" width="9.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="784.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.77%)</title><rect x="790.6" y="675.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="793.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 4.62%)</title><rect x="799.7" y="707.0" width="54.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="802.7" y="718.0">[unkn..</text>
</g>
<g>
<title>__GI_write (6 samples, 4.62%)</title><rect x="799.7" y="691.0" width="54.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="802.7" y="702.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 4.62%)</title><rect x="799.7" y="675.0" width="54.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="802.7" y="686.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 4.62%)</title><rect x="799.7" y="659.0" width="54.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.7" y="670.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_write (5 samples, 3.85%)</title><rect x="808.8" y="643.0" width="45.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="811.8" y="654.0">__x6..</text>
</g>
<g>
<title>ksys_write (5 samples, 3.85%)</title><rect x="808.8" y="627.0" width="45.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.8" y="638.0">ksys..</text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.77%)</title><rect x="808.8" y="611.0" width="9.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="811.8" y="622.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 3.08%)</title><rect x="817.8" y="611.0" width="36.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="820.8" y="622.0">vfs..</text>
</g>
<g>
<title>__vfs_write (4 samples, 3.08%)</title><rect x="817.8" y="595.0" width="36.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.8" y="606.0">__v..</text>
</g>
<g>
<title>new_sync_write (4 samples, 3.08%)</title><rect x="817.8" y="579.0" width="36.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="820.8" y="590.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 3.08%)</title><rect x="817.8" y="563.0" width="36.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="820.8" y="574.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 3.08%)</title><rect x="817.8" y="547.0" width="36.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="820.8" y="558.0">__g..</text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.77%)</title><rect x="817.8" y="531.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="820.8" y="542.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.77%)</title><rect x="826.9" y="531.0" width="9.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="829.9" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.77%)</title><rect x="826.9" y="515.0" width="9.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.9" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.77%)</title><rect x="826.9" y="499.0" width="9.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="829.9" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.77%)</title><rect x="826.9" y="483.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.9" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.77%)</title><rect x="826.9" y="467.0" width="9.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.9" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.77%)</title><rect x="826.9" y="451.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="829.9" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 1.54%)</title><rect x="836.0" y="531.0" width="18.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.0" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 1.54%)</title><rect x="836.0" y="515.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="839.0" y="526.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 1.54%)</title><rect x="836.0" y="499.0" width="18.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="839.0" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 1.54%)</title><rect x="836.0" y="483.0" width="18.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="839.0" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 1.54%)</title><rect x="836.0" y="467.0" width="18.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="839.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 1.54%)</title><rect x="836.0" y="451.0" width="18.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="839.0" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 1.54%)</title><rect x="836.0" y="435.0" width="18.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.0" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 1.54%)</title><rect x="836.0" y="419.0" width="18.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="839.0" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.77%)</title><rect x="836.0" y="403.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.0" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.77%)</title><rect x="845.1" y="403.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.1" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.77%)</title><rect x="845.1" y="387.0" width="9.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.1" y="398.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.77%)</title><rect x="854.2" y="707.0" width="9.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="857.2" y="718.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.77%)</title><rect x="863.2" y="707.0" width="9.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="866.2" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.77%)</title><rect x="872.3" y="707.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (4 samples, 3.08%)</title><rect x="881.4" y="707.0" width="36.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.4" y="718.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (4 samples, 3.08%)</title><rect x="881.4" y="691.0" width="36.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.4" y="702.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (4 samples, 3.08%)</title><rect x="881.4" y="675.0" width="36.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.4" y="686.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 3.08%)</title><rect x="881.4" y="659.0" width="36.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.4" y="670.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (4 samples, 3.08%)</title><rect x="881.4" y="643.0" width="36.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.4" y="654.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (3 samples, 2.31%)</title><rect x="890.5" y="627.0" width="27.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="893.5" y="638.0">J..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.77%)</title><rect x="890.5" y="611.0" width="9.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="893.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.77%)</title><rect x="890.5" y="595.0" width="9.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="893.5" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 1.54%)</title><rect x="899.5" y="611.0" width="18.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="902.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.77%)</title><rect x="899.5" y="595.0" width="9.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="902.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.77%)</title><rect x="908.6" y="595.0" width="9.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="911.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.77%)</title><rect x="917.7" y="787.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.7" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.77%)</title><rect x="917.7" y="771.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.77%)</title><rect x="917.7" y="755.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.77%)</title><rect x="917.7" y="739.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.77%)</title><rect x="917.7" y="723.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 3.08%)</title><rect x="926.8" y="819.0" width="36.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="929.8" y="830.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 2.31%)</title><rect x="935.8" y="803.0" width="27.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.8" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.77%)</title><rect x="963.1" y="819.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="966.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.77%)</title><rect x="963.1" y="803.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.77%)</title><rect x="963.1" y="787.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 3.85%)</title><rect x="972.2" y="835.0" width="45.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.2" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 3.85%)</title><rect x="972.2" y="819.0" width="45.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.2" y="830.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.77%)</title><rect x="981.2" y="803.0" width="9.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="984.2" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.77%)</title><rect x="981.2" y="787.0" width="9.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="984.2" y="798.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 2.31%)</title><rect x="990.3" y="803.0" width="27.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="993.3" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 2.31%)</title><rect x="990.3" y="787.0" width="27.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="993.3" y="798.0">e..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 2.31%)</title><rect x="990.3" y="771.0" width="27.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.3" y="782.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 2.31%)</title><rect x="990.3" y="755.0" width="27.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="993.3" y="766.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 2.31%)</title><rect x="990.3" y="739.0" width="27.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="993.3" y="750.0">_..</text>
</g>
<g>
<title>sock_recvmsg (3 samples, 2.31%)</title><rect x="990.3" y="723.0" width="27.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="993.3" y="734.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 2.31%)</title><rect x="990.3" y="707.0" width="27.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="993.3" y="718.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 2.31%)</title><rect x="990.3" y="691.0" width="27.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.3" y="702.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.77%)</title><rect x="999.4" y="675.0" width="9.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1002.4" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.77%)</title><rect x="999.4" y="659.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1002.4" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.77%)</title><rect x="999.4" y="643.0" width="9.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1002.4" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.77%)</title><rect x="999.4" y="627.0" width="9.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1002.4" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.77%)</title><rect x="1008.5" y="675.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1011.5" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.77%)</title><rect x="1008.5" y="659.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1011.5" y="670.0"></text>
</g>
<g>
<title>start_thread (19 samples, 14.62%)</title><rect x="1017.5" y="883.0" width="172.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1020.5" y="894.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (19 samples, 14.62%)</title><rect x="1017.5" y="867.0" width="172.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1020.5" y="878.0">thread_native_entry(Th..</text>
</g>
<g>
<title>Thread::call_run() (19 samples, 14.62%)</title><rect x="1017.5" y="851.0" width="172.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1020.5" y="862.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (19 samples, 14.62%)</title><rect x="1017.5" y="835.0" width="172.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1020.5" y="846.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (19 samples, 14.62%)</title><rect x="1017.5" y="819.0" width="172.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1020.5" y="830.0">CompileBroker::compile..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (19 samples, 14.62%)</title><rect x="1017.5" y="803.0" width="172.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1020.5" y="814.0">CompileBroker::invoke_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (18 samples, 13.85%)</title><rect x="1017.5" y="787.0" width="163.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1020.5" y="798.0">C2Compiler::compile_m..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (18 samples, 13.85%)</title><rect x="1017.5" y="771.0" width="163.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.5" y="782.0">Compile::Compile(ciEn..</text>
</g>
<g>
<title>Compile::Code_Gen() (11 samples, 8.46%)</title><rect x="1017.5" y="755.0" width="99.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1020.5" y="766.0">Compile::Cod..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.77%)</title><rect x="1017.5" y="739.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.5" y="750.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.77%)</title><rect x="1017.5" y="723.0" width="9.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1020.5" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 1.54%)</title><rect x="1026.6" y="739.0" width="18.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1029.6" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.77%)</title><rect x="1026.6" y="723.0" width="9.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1029.6" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.77%)</title><rect x="1035.7" y="723.0" width="9.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1038.7" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.77%)</title><rect x="1035.7" y="707.0" width="9.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1038.7" y="718.0"></text>
</g>
<g>
<title>loadPLockedNode::out_RegMask() const (1 samples, 0.77%)</title><rect x="1035.7" y="691.0" width="9.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1038.7" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (8 samples, 6.15%)</title><rect x="1044.8" y="739.0" width="72.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1047.8" y="750.0">PhaseCha..</text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.77%)</title><rect x="1044.8" y="723.0" width="9.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1047.8" y="734.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.77%)</title><rect x="1044.8" y="707.0" width="9.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.77%)</title><rect x="1053.8" y="723.0" width="9.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.8" y="734.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (1 samples, 0.77%)</title><rect x="1053.8" y="707.0" width="9.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1056.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.77%)</title><rect x="1062.9" y="723.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1065.9" y="734.0"></text>
</g>
<g>
<title>indPosIndexScaleOffsetNarrowOper::in_RegMask(int) const (1 samples, 0.77%)</title><rect x="1062.9" y="707.0" width="9.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1065.9" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 1.54%)</title><rect x="1072.0" y="723.0" width="18.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1075.0" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 1.54%)</title><rect x="1072.0" y="707.0" width="18.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1075.0" y="718.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.77%)</title><rect x="1090.2" y="723.0" width="9.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1093.2" y="734.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.77%)</title><rect x="1090.2" y="707.0" width="9.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1093.2" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.77%)</title><rect x="1099.2" y="723.0" width="9.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1102.2" y="734.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.77%)</title><rect x="1108.3" y="723.0" width="9.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1111.3" y="734.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.77%)</title><rect x="1108.3" y="707.0" width="9.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1111.3" y="718.0"></text>
</g>
<g>
<title>Compile::Optimize() (4 samples, 3.08%)</title><rect x="1117.4" y="755.0" width="36.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.4" y="766.0">Com..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 2.31%)</title><rect x="1117.4" y="739.0" width="27.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1120.4" y="750.0">C..</text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 2.31%)</title><rect x="1117.4" y="723.0" width="27.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.4" y="734.0">P..</text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 2.31%)</title><rect x="1117.4" y="707.0" width="27.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1120.4" y="718.0">P..</text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 2.31%)</title><rect x="1117.4" y="691.0" width="27.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1120.4" y="702.0">P..</text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 1.54%)</title><rect x="1126.5" y="675.0" width="18.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1129.5" y="686.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.77%)</title><rect x="1126.5" y="659.0" width="9.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.5" y="670.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.77%)</title><rect x="1126.5" y="643.0" width="9.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1129.5" y="654.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.77%)</title><rect x="1126.5" y="627.0" width="9.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.5" y="638.0"></text>
</g>
<g>
<title>TypeAryPtr::xmeet_helper(Type const*) const (1 samples, 0.77%)</title><rect x="1126.5" y="611.0" width="9.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.5" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.77%)</title><rect x="1126.5" y="595.0" width="9.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1129.5" y="606.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (1 samples, 0.77%)</title><rect x="1135.5" y="659.0" width="9.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1138.5" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.77%)</title><rect x="1144.6" y="739.0" width="9.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.6" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.77%)</title><rect x="1144.6" y="723.0" width="9.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.6" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="707.0" width="9.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.6" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="691.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1147.6" y="702.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="675.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.6" y="686.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="659.0" width="9.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.6" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="643.0" width="9.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.6" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="627.0" width="9.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.6" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="611.0" width="9.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.6" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.77%)</title><rect x="1144.6" y="595.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1147.6" y="606.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.77%)</title><rect x="1153.7" y="755.0" width="9.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.7" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.54%)</title><rect x="1162.8" y="755.0" width="18.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.8" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.54%)</title><rect x="1162.8" y="739.0" width="18.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 1.54%)</title><rect x="1162.8" y="723.0" width="18.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 1.54%)</title><rect x="1162.8" y="707.0" width="18.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 1.54%)</title><rect x="1162.8" y="691.0" width="18.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 1.54%)</title><rect x="1162.8" y="675.0" width="18.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.8" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.54%)</title><rect x="1162.8" y="659.0" width="18.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.8" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.54%)</title><rect x="1162.8" y="643.0" width="18.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 1.54%)</title><rect x="1162.8" y="627.0" width="18.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 1.54%)</title><rect x="1162.8" y="611.0" width="18.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 1.54%)</title><rect x="1162.8" y="595.0" width="18.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 1.54%)</title><rect x="1162.8" y="579.0" width="18.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.8" y="590.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.77%)</title><rect x="1162.8" y="563.0" width="9.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.8" y="574.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.77%)</title><rect x="1162.8" y="547.0" width="9.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.8" y="558.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.77%)</title><rect x="1162.8" y="531.0" width="9.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.8" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.77%)</title><rect x="1162.8" y="515.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.8" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.77%)</title><rect x="1162.8" y="499.0" width="9.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.8" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.77%)</title><rect x="1162.8" y="483.0" width="9.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.8" y="494.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.77%)</title><rect x="1162.8" y="467.0" width="9.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.8" y="478.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.77%)</title><rect x="1162.8" y="451.0" width="9.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.8" y="462.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.77%)</title><rect x="1162.8" y="435.0" width="9.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.8" y="446.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.77%)</title><rect x="1162.8" y="419.0" width="9.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1165.8" y="430.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.77%)</title><rect x="1162.8" y="403.0" width="9.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.8" y="414.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.77%)</title><rect x="1162.8" y="387.0" width="9.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.8" y="398.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.77%)</title><rect x="1162.8" y="371.0" width="9.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.8" y="382.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.77%)</title><rect x="1162.8" y="355.0" width="9.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.8" y="366.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.77%)</title><rect x="1162.8" y="339.0" width="9.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.8" y="350.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.77%)</title><rect x="1162.8" y="323.0" width="9.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1165.8" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.77%)</title><rect x="1162.8" y="307.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1165.8" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.77%)</title><rect x="1162.8" y="291.0" width="9.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1165.8" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.77%)</title><rect x="1171.8" y="563.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.8" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.77%)</title><rect x="1171.8" y="547.0" width="9.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.8" y="558.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.77%)</title><rect x="1171.8" y="531.0" width="9.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.8" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.77%)</title><rect x="1180.9" y="787.0" width="9.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.9" y="798.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.77%)</title><rect x="1180.9" y="771.0" width="9.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.9" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.77%)</title><rect x="1180.9" y="755.0" width="9.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.9" y="766.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.77%)</title><rect x="1180.9" y="739.0" width="9.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.9" y="750.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.77%)</title><rect x="1180.9" y="723.0" width="9.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.9" y="734.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.77%)</title><rect x="1180.9" y="707.0" width="9.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.9" y="718.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.77%)</title><rect x="1180.9" y="691.0" width="9.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.9" y="702.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.77%)</title><rect x="1180.9" y="675.0" width="9.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1183.9" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.77%)</title><rect x="1180.9" y="659.0" width="9.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.77%)</title><rect x="1180.9" y="643.0" width="9.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.9" y="654.0"></text>
</g>
</g>
</svg>
