<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (178 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.56%)</title><rect x="10.0" y="883.0" width="6.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.56%)</title><rect x="10.0" y="867.0" width="6.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.56%)</title><rect x="10.0" y="851.0" width="6.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="10.0" y="835.0" width="6.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="10.0" y="819.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="10.0" y="803.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.56%)</title><rect x="10.0" y="787.0" width="6.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.56%)</title><rect x="10.0" y="771.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.56%)</title><rect x="10.0" y="755.0" width="6.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.56%)</title><rect x="10.0" y="739.0" width="6.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.56%)</title><rect x="10.0" y="723.0" width="6.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="10.0" y="707.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.56%)</title><rect x="10.0" y="691.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.56%)</title><rect x="10.0" y="675.0" width="6.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.56%)</title><rect x="10.0" y="659.0" width="6.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (1 samples, 0.56%)</title><rect x="10.0" y="643.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.56%)</title><rect x="10.0" y="627.0" width="6.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.56%)</title><rect x="10.0" y="611.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.56%)</title><rect x="10.0" y="595.0" width="6.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.56%)</title><rect x="10.0" y="579.0" width="6.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.56%)</title><rect x="10.0" y="563.0" width="6.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.56%)</title><rect x="10.0" y="547.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.56%)</title><rect x="10.0" y="531.0" width="6.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (175 samples, 98.31%)</title><rect x="16.6" y="883.0" width="1160.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.6" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.56%)</title><rect x="49.8" y="867.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 3.37%)</title><rect x="56.4" y="867.0" width="39.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.4" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 3.37%)</title><rect x="56.4" y="851.0" width="39.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.4" y="862.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.56%)</title><rect x="63.0" y="835.0" width="6.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="66.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 2.25%)</title><rect x="69.7" y="835.0" width="26.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="72.7" y="846.0">[..</text>
</g>
<g>
<title>epoll_wait (4 samples, 2.25%)</title><rect x="69.7" y="819.0" width="26.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="72.7" y="830.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 2.25%)</title><rect x="69.7" y="803.0" width="26.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="72.7" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (4 samples, 2.25%)</title><rect x="69.7" y="787.0" width="26.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="72.7" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 1.69%)</title><rect x="69.7" y="771.0" width="19.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="72.7" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 1.69%)</title><rect x="69.7" y="755.0" width="19.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="72.7" y="766.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 1.69%)</title><rect x="69.7" y="739.0" width="19.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="72.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 1.69%)</title><rect x="69.7" y="723.0" width="19.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 1.69%)</title><rect x="69.7" y="707.0" width="19.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.7" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 1.12%)</title><rect x="76.3" y="691.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.3" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.56%)</title><rect x="82.9" y="675.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="85.9" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.56%)</title><rect x="82.9" y="659.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.9" y="670.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.56%)</title><rect x="89.6" y="771.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.6" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.56%)</title><rect x="89.6" y="755.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="92.6" y="766.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.56%)</title><rect x="89.6" y="739.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (163 samples, 91.57%)</title><rect x="96.2" y="867.0" width="1080.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.2" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (163 samples, 91.57%)</title><rect x="96.2" y="851.0" width="1080.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.2" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (157 samples, 88.20%)</title><rect x="96.2" y="835.0" width="1040.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.2" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (151 samples, 84.83%)</title><rect x="96.2" y="819.0" width="1001.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="99.2" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (151 samples, 84.83%)</title><rect x="96.2" y="803.0" width="1001.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.2" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (151 samples, 84.83%)</title><rect x="96.2" y="787.0" width="1001.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.2" y="798.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 20.22%)</title><rect x="96.2" y="771.0" width="238.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.2" y="782.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 19.66%)</title><rect x="102.8" y="755.0" width="232.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.8" y="766.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 1.12%)</title><rect x="102.8" y="739.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 1.12%)</title><rect x="102.8" y="723.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.56%)</title><rect x="109.4" y="707.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 18.54%)</title><rect x="116.1" y="739.0" width="218.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.1" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 18.54%)</title><rect x="116.1" y="723.0" width="218.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.1" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (33 samples, 18.54%)</title><rect x="116.1" y="707.0" width="218.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.1" y="718.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (33 samples, 18.54%)</title><rect x="116.1" y="691.0" width="218.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.1" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.56%)</title><rect x="122.7" y="675.0" width="6.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="125.7" y="686.0"></text>
</g>
<g>
<title>__libc_send (31 samples, 17.42%)</title><rect x="129.3" y="675.0" width="205.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="132.3" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 17.42%)</title><rect x="129.3" y="659.0" width="205.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.3" y="670.0">entry_SYSCALL_64_after_hwfr..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 17.42%)</title><rect x="129.3" y="643.0" width="205.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="132.3" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (29 samples, 16.29%)</title><rect x="136.0" y="627.0" width="192.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="139.0" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (29 samples, 16.29%)</title><rect x="136.0" y="611.0" width="192.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.0" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (28 samples, 15.73%)</title><rect x="136.0" y="595.0" width="185.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="139.0" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (28 samples, 15.73%)</title><rect x="136.0" y="579.0" width="185.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.0" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (28 samples, 15.73%)</title><rect x="136.0" y="563.0" width="185.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.0" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (28 samples, 15.73%)</title><rect x="136.0" y="547.0" width="185.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.0" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 1.12%)</title><rect x="136.0" y="531.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="139.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 1.12%)</title><rect x="136.0" y="515.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="139.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.56%)</title><rect x="136.0" y="499.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="139.0" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.56%)</title><rect x="136.0" y="483.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="139.0" y="494.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.56%)</title><rect x="136.0" y="467.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="139.0" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.56%)</title><rect x="142.6" y="499.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="145.6" y="510.0"></text>
</g>
<g>
<title>tcp_push (26 samples, 14.61%)</title><rect x="149.2" y="531.0" width="172.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.2" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (26 samples, 14.61%)</title><rect x="149.2" y="515.0" width="172.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.2" y="526.0">__tcp_push_pending_fra..</text>
</g>
<g>
<title>tcp_write_xmit (26 samples, 14.61%)</title><rect x="149.2" y="499.0" width="172.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="152.2" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (25 samples, 14.04%)</title><rect x="149.2" y="483.0" width="165.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.2" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.56%)</title><rect x="155.8" y="467.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="158.8" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (22 samples, 12.36%)</title><rect x="162.5" y="467.0" width="145.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="165.5" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (22 samples, 12.36%)</title><rect x="162.5" y="451.0" width="145.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="165.5" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (21 samples, 11.80%)</title><rect x="162.5" y="435.0" width="139.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="165.5" y="446.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (3 samples, 1.69%)</title><rect x="162.5" y="419.0" width="19.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="165.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 1.69%)</title><rect x="162.5" y="403.0" width="19.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.5" y="414.0"></text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 0.56%)</title><rect x="162.5" y="387.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="165.5" y="398.0"></text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 0.56%)</title><rect x="162.5" y="371.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.5" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 1.12%)</title><rect x="169.1" y="387.0" width="13.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="172.1" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 1.12%)</title><rect x="169.1" y="371.0" width="13.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.1" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.56%)</title><rect x="169.1" y="355.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.1" y="366.0"></text>
</g>
<g>
<title>hash_conntrack_raw?[nf_conntrack] (1 samples, 0.56%)</title><rect x="175.7" y="355.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="178.7" y="366.0"></text>
</g>
<g>
<title>ip_output (17 samples, 9.55%)</title><rect x="182.4" y="419.0" width="112.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="185.4" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (17 samples, 9.55%)</title><rect x="182.4" y="403.0" width="112.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="185.4" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (17 samples, 9.55%)</title><rect x="182.4" y="387.0" width="112.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.4" y="398.0">__ip_finish_ou..</text>
</g>
<g>
<title>ip_finish_output2 (17 samples, 9.55%)</title><rect x="182.4" y="371.0" width="112.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.4" y="382.0">ip_finish_outp..</text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 8.43%)</title><rect x="189.0" y="355.0" width="99.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.0" y="366.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.20 (15 samples, 8.43%)</title><rect x="189.0" y="339.0" width="99.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="192.0" y="350.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (15 samples, 8.43%)</title><rect x="189.0" y="323.0" width="99.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.0" y="334.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (15 samples, 8.43%)</title><rect x="189.0" y="307.0" width="99.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.0" y="318.0">__softirqent..</text>
</g>
<g>
<title>net_rx_action (15 samples, 8.43%)</title><rect x="189.0" y="291.0" width="99.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.0" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (15 samples, 8.43%)</title><rect x="189.0" y="275.0" width="99.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.0" y="286.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (14 samples, 7.87%)</title><rect x="195.6" y="259.0" width="92.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="198.6" y="270.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (14 samples, 7.87%)</title><rect x="195.6" y="243.0" width="92.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.6" y="254.0">__netif_rec..</text>
</g>
<g>
<title>ip_rcv (14 samples, 7.87%)</title><rect x="195.6" y="227.0" width="92.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.6" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (14 samples, 7.87%)</title><rect x="195.6" y="211.0" width="92.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="198.6" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (14 samples, 7.87%)</title><rect x="195.6" y="195.0" width="92.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.6" y="206.0">ip_local_de..</text>
</g>
<g>
<title>ip_local_deliver_finish (13 samples, 7.30%)</title><rect x="195.6" y="179.0" width="86.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="198.6" y="190.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 6.74%)</title><rect x="195.6" y="163.0" width="79.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="198.6" y="174.0">ip_protoc..</text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 6.74%)</title><rect x="195.6" y="147.0" width="79.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="198.6" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 5.62%)</title><rect x="208.9" y="131.0" width="66.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.9" y="142.0">tcp_v4_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.56%)</title><rect x="208.9" y="115.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="211.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 5.06%)</title><rect x="215.5" y="115.0" width="59.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="218.5" y="126.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.56%)</title><rect x="222.1" y="99.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="225.1" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.56%)</title><rect x="222.1" y="83.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.1" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.56%)</title><rect x="222.1" y="67.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="225.1" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (7 samples, 3.93%)</title><rect x="228.8" y="99.0" width="46.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.8" y="110.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (7 samples, 3.93%)</title><rect x="228.8" y="83.0" width="46.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="231.8" y="94.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 3.93%)</title><rect x="228.8" y="67.0" width="46.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="231.8" y="78.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 3.93%)</title><rect x="228.8" y="51.0" width="46.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="231.8" y="62.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (6 samples, 3.37%)</title><rect x="235.4" y="35.0" width="39.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.4" y="46.0">__l..</text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.56%)</title><rect x="275.2" y="163.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.56%)</title><rect x="281.8" y="179.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="284.8" y="190.0"></text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (1 samples, 0.56%)</title><rect x="281.8" y="163.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.8" y="174.0"></text>
</g>
<g>
<title>nf_confirm?[nf_conntrack] (1 samples, 0.56%)</title><rect x="281.8" y="147.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="284.8" y="158.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.56%)</title><rect x="288.4" y="355.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="291.4" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.56%)</title><rect x="288.4" y="339.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.56%)</title><rect x="288.4" y="323.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.4" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.56%)</title><rect x="288.4" y="307.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.4" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.56%)</title><rect x="295.1" y="419.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.1" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.56%)</title><rect x="301.7" y="435.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="304.7" y="446.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.56%)</title><rect x="308.3" y="467.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="311.3" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.56%)</title><rect x="314.9" y="483.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="317.9" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.56%)</title><rect x="314.9" y="467.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.9" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.56%)</title><rect x="314.9" y="451.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.9" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.56%)</title><rect x="314.9" y="435.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="317.9" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.56%)</title><rect x="314.9" y="419.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.9" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.56%)</title><rect x="321.6" y="595.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="324.6" y="606.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.56%)</title><rect x="321.6" y="579.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="324.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.56%)</title><rect x="321.6" y="563.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.6" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.56%)</title><rect x="321.6" y="547.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.6" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.56%)</title><rect x="328.2" y="627.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (115 samples, 64.61%)</title><rect x="334.8" y="771.0" width="762.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.8" y="782.0">ru/mail/polis/service/stasyanoi/CustomServer.put</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (113 samples, 63.48%)</title><rect x="334.8" y="755.0" width="749.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.8" y="766.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (113 samples, 63.48%)</title><rect x="334.8" y="739.0" width="749.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.8" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (113 samples, 63.48%)</title><rect x="334.8" y="723.0" width="749.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.8" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (85 samples, 47.75%)</title><rect x="334.8" y="707.0" width="563.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="337.8" y="718.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (84 samples, 47.19%)</title><rect x="341.5" y="691.0" width="556.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="344.5" y="702.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rock..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.56%)</title><rect x="348.1" y="675.0" width="6.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="351.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (82 samples, 46.07%)</title><rect x="354.7" y="675.0" width="543.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="357.7" y="686.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (82 samples, 46.07%)</title><rect x="354.7" y="659.0" width="543.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="357.7" y="670.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHan..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (81 samples, 45.51%)</title><rect x="354.7" y="643.0" width="537.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="357.7" y="654.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (80 samples, 44.94%)</title><rect x="354.7" y="627.0" width="530.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="357.7" y="638.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*)</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (79 samples, 44.38%)</title><rect x="354.7" y="611.0" width="523.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="357.7" y="622.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteB..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 1.12%)</title><rect x="361.3" y="595.0" width="13.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="364.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.56%)</title><rect x="361.3" y="579.0" width="6.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="364.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="361.3" y="563.0" width="6.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="364.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (1 samples, 0.56%)</title><rect x="361.3" y="547.0" width="6.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="364.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.56%)</title><rect x="368.0" y="579.0" width="6.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="371.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (8 samples, 4.49%)</title><rect x="374.6" y="595.0" width="53.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="377.6" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 4.49%)</title><rect x="374.6" y="579.0" width="53.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="377.6" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (8 samples, 4.49%)</title><rect x="374.6" y="563.0" width="53.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="377.6" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 4.49%)</title><rect x="374.6" y="547.0" width="53.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="377.6" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 4.49%)</title><rect x="374.6" y="531.0" width="53.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="377.6" y="542.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 4.49%)</title><rect x="374.6" y="515.0" width="53.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="377.6" y="526.0">rocks..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 3.93%)</title><rect x="374.6" y="499.0" width="46.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="377.6" y="510.0">bool..</text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (6 samples, 3.37%)</title><rect x="374.6" y="483.0" width="39.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="377.6" y="494.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (2 samples, 1.12%)</title><rect x="374.6" y="467.0" width="13.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="377.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 1.12%)</title><rect x="374.6" y="451.0" width="13.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="377.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 1.12%)</title><rect x="374.6" y="435.0" width="13.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="377.6" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.56%)</title><rect x="374.6" y="419.0" width="6.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="377.6" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.56%)</title><rect x="374.6" y="403.0" width="6.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="377.6" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.56%)</title><rect x="374.6" y="387.0" width="6.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="377.6" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.56%)</title><rect x="374.6" y="371.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="377.6" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.56%)</title><rect x="374.6" y="355.0" width="6.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="377.6" y="366.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.56%)</title><rect x="381.2" y="419.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="384.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 2.25%)</title><rect x="387.9" y="467.0" width="26.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="390.9" y="478.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.56%)</title><rect x="387.9" y="451.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="390.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 1.69%)</title><rect x="394.5" y="451.0" width="19.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="397.5" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 1.12%)</title><rect x="394.5" y="435.0" width="13.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="397.5" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 1.12%)</title><rect x="394.5" y="419.0" width="13.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="397.5" y="430.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.56%)</title><rect x="394.5" y="403.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="397.5" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.56%)</title><rect x="401.1" y="403.0" width="6.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="404.1" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.56%)</title><rect x="401.1" y="387.0" width="6.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="404.1" y="398.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.56%)</title><rect x="407.8" y="435.0" width="6.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="410.8" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.56%)</title><rect x="407.8" y="419.0" width="6.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="410.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.56%)</title><rect x="414.4" y="483.0" width="6.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="417.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.56%)</title><rect x="414.4" y="467.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="417.4" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.56%)</title><rect x="414.4" y="451.0" width="6.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="417.4" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.56%)</title><rect x="414.4" y="435.0" width="6.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="417.4" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.56%)</title><rect x="414.4" y="419.0" width="6.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="417.4" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.56%)</title><rect x="414.4" y="403.0" width="6.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="417.4" y="414.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.56%)</title><rect x="414.4" y="387.0" width="6.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="417.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.56%)</title><rect x="421.0" y="499.0" width="6.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="424.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (43 samples, 24.16%)</title><rect x="427.6" y="595.0" width="285.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="430.6" y="606.0">rocksdb::WriteBatchInternal::InsertInt..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.56%)</title><rect x="427.6" y="579.0" width="6.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="430.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (42 samples, 23.60%)</title><rect x="434.3" y="579.0" width="278.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="437.3" y="590.0">rocksdb::WriteBatch::Iterate(rocksdb:..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (42 samples, 23.60%)</title><rect x="434.3" y="563.0" width="278.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="437.3" y="574.0">rocksdb::WriteBatchInternal::Iterate(..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 23.60%)</title><rect x="434.3" y="547.0" width="278.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="437.3" y="558.0">rocksdb::MemTableInserter::PutCF(unsi..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.56%)</title><rect x="434.3" y="531.0" width="6.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="437.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (41 samples, 23.03%)</title><rect x="440.9" y="531.0" width="271.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="443.9" y="542.0">rocksdb::MemTableInserter::PutCFImpl..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (41 samples, 23.03%)</title><rect x="440.9" y="515.0" width="271.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="443.9" y="526.0">rocksdb::MemTable::Add(unsigned long..</text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (1 samples, 0.56%)</title><rect x="440.9" y="499.0" width="6.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="443.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.56%)</title><rect x="440.9" y="483.0" width="6.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="443.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (40 samples, 22.47%)</title><rect x="447.5" y="499.0" width="265.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="450.5" y="510.0">rocksdb::InlineSkipList&lt;rocksdb::Me..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (40 samples, 22.47%)</title><rect x="447.5" y="483.0" width="265.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="450.5" y="494.0">bool rocksdb::InlineSkipList&lt;rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (38 samples, 21.35%)</title><rect x="447.5" y="467.0" width="251.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="450.5" y="478.0">/tmp/librocksdbjni748457988080168..</text>
</g>
<g>
<title>/tmp/librocksdbjni7484579880801685782.so (37 samples, 20.79%)</title><rect x="454.2" y="451.0" width="245.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="457.2" y="462.0">/tmp/librocksdbjni748457988080168..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (37 samples, 20.79%)</title><rect x="454.2" y="435.0" width="245.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="457.2" y="446.0">rocksdb::MemTable::KeyComparator:..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) [clone .plt] (1 samples, 0.56%)</title><rect x="454.2" y="419.0" width="6.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="457.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (36 samples, 20.22%)</title><rect x="460.8" y="419.0" width="238.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="463.8" y="430.0">rocksdb::BaseComparatorJniCallba..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 2.25%)</title><rect x="460.8" y="403.0" width="26.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="463.8" y="414.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 2.25%)</title><rect x="460.8" y="387.0" width="26.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="463.8" y="398.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="467.4" y="371.0" width="6.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="470.4" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 1.12%)</title><rect x="474.0" y="371.0" width="13.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="477.0" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.56%)</title><rect x="480.7" y="355.0" width="6.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="483.7" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.56%)</title><rect x="480.7" y="339.0" width="6.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="483.7" y="350.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (12 samples, 6.74%)</title><rect x="487.3" y="403.0" width="79.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="490.3" y="414.0">JNIEnv_::..</text>
</g>
<g>
<title>jni_CallVoidMethodV (12 samples, 6.74%)</title><rect x="487.3" y="387.0" width="79.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="490.3" y="398.0">jni_CallV..</text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.56%)</title><rect x="487.3" y="371.0" width="6.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="490.3" y="382.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.56%)</title><rect x="493.9" y="371.0" width="6.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="496.9" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (10 samples, 5.62%)</title><rect x="500.6" y="371.0" width="66.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="503.6" y="382.0">jni_inv..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.56%)</title><rect x="513.8" y="355.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.8" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 2.81%)</title><rect x="520.4" y="355.0" width="33.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="523.4" y="366.0">Ja..</text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 1.12%)</title><rect x="527.1" y="339.0" width="13.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="530.1" y="350.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.56%)</title><rect x="540.3" y="339.0" width="6.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="543.3" y="350.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.56%)</title><rect x="547.0" y="339.0" width="6.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="550.0" y="350.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (2 samples, 1.12%)</title><rect x="553.6" y="355.0" width="13.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="556.6" y="366.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 1.69%)</title><rect x="566.9" y="403.0" width="19.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="569.9" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 1.69%)</title><rect x="566.9" y="387.0" width="19.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="569.9" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 1.69%)</title><rect x="566.9" y="371.0" width="19.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="569.9" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 1.69%)</title><rect x="566.9" y="355.0" width="19.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="569.9" y="366.0"></text>
</g>
<g>
<title>do_futex (3 samples, 1.69%)</title><rect x="566.9" y="339.0" width="19.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="569.9" y="350.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 1.69%)</title><rect x="566.9" y="323.0" width="19.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="569.9" y="334.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.56%)</title><rect x="573.5" y="307.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="576.5" y="318.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.56%)</title><rect x="573.5" y="291.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.5" y="302.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.8 (1 samples, 0.56%)</title><rect x="573.5" y="275.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="576.5" y="286.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.56%)</title><rect x="580.1" y="307.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.1" y="318.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 5.62%)</title><rect x="586.7" y="403.0" width="66.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="589.7" y="414.0">__lll_u..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 5.62%)</title><rect x="586.7" y="387.0" width="66.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="589.7" y="398.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 5.62%)</title><rect x="586.7" y="371.0" width="66.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="589.7" y="382.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 4.49%)</title><rect x="600.0" y="355.0" width="53.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="603.0" y="366.0">__x64..</text>
</g>
<g>
<title>do_futex (7 samples, 3.93%)</title><rect x="600.0" y="339.0" width="46.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.0" y="350.0">do_f..</text>
</g>
<g>
<title>futex_wake (7 samples, 3.93%)</title><rect x="600.0" y="323.0" width="46.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.0" y="334.0">fute..</text>
</g>
<g>
<title>wake_up_q (7 samples, 3.93%)</title><rect x="600.0" y="307.0" width="46.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="603.0" y="318.0">wake..</text>
</g>
<g>
<title>try_to_wake_up (7 samples, 3.93%)</title><rect x="600.0" y="291.0" width="46.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.0" y="302.0">try_..</text>
</g>
<g>
<title>__lock_text_start (7 samples, 3.93%)</title><rect x="600.0" y="275.0" width="46.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.0" y="286.0">__lo..</text>
</g>
<g>
<title>futex_wake (1 samples, 0.56%)</title><rect x="646.4" y="339.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.4" y="350.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 2.25%)</title><rect x="653.0" y="403.0" width="26.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="656.0" y="414.0">j..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.56%)</title><rect x="653.0" y="387.0" width="6.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="656.0" y="398.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 1.12%)</title><rect x="659.7" y="387.0" width="13.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="662.7" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="672.9" y="387.0" width="6.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="675.9" y="398.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.56%)</title><rect x="679.6" y="403.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="682.6" y="414.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.56%)</title><rect x="686.2" y="403.0" width="6.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="689.2" y="414.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.56%)</title><rect x="692.8" y="403.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="695.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 1.12%)</title><rect x="699.4" y="467.0" width="13.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="702.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 1.12%)</title><rect x="699.4" y="451.0" width="13.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="702.4" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.56%)</title><rect x="699.4" y="435.0" width="6.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="702.4" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.56%)</title><rect x="699.4" y="419.0" width="6.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="702.4" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="699.4" y="403.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="702.4" y="414.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.56%)</title><rect x="706.1" y="435.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="709.1" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="706.1" y="419.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="706.1" y="403.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.1" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.56%)</title><rect x="706.1" y="387.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="709.1" y="398.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.56%)</title><rect x="706.1" y="371.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.1" y="382.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.56%)</title><rect x="706.1" y="355.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="709.1" y="366.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.56%)</title><rect x="706.1" y="339.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.1" y="350.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.56%)</title><rect x="706.1" y="323.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.1" y="334.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (13 samples, 7.30%)</title><rect x="712.7" y="595.0" width="86.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="715.7" y="606.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (11 samples, 6.18%)</title><rect x="798.9" y="595.0" width="72.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="801.9" y="606.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 1.12%)</title><rect x="798.9" y="579.0" width="13.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="801.9" y="590.0"></text>
</g>
<g>
<title>sched_yield (8 samples, 4.49%)</title><rect x="812.1" y="579.0" width="53.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="815.1" y="590.0">sched..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 3.93%)</title><rect x="818.8" y="563.0" width="46.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="821.8" y="574.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 3.93%)</title><rect x="818.8" y="547.0" width="46.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.8" y="558.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sched_yield (5 samples, 2.81%)</title><rect x="818.8" y="531.0" width="33.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.8" y="542.0">__..</text>
</g>
<g>
<title>do_sched_yield (5 samples, 2.81%)</title><rect x="818.8" y="515.0" width="33.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.8" y="526.0">do..</text>
</g>
<g>
<title>schedule (5 samples, 2.81%)</title><rect x="818.8" y="499.0" width="33.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.8" y="510.0">sc..</text>
</g>
<g>
<title>__sched_text_start (5 samples, 2.81%)</title><rect x="818.8" y="483.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="821.8" y="494.0">__..</text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 1.12%)</title><rect x="851.9" y="531.0" width="13.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="854.9" y="542.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (1 samples, 0.56%)</title><rect x="865.2" y="579.0" width="6.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="868.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.56%)</title><rect x="871.8" y="595.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.56%)</title><rect x="878.4" y="611.0" width="6.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="881.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="885.1" y="627.0" width="6.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="888.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.56%)</title><rect x="885.1" y="611.0" width="6.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="888.1" y="622.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.56%)</title><rect x="885.1" y="595.0" width="6.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="888.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.56%)</title><rect x="891.7" y="643.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="894.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 2.81%)</title><rect x="898.3" y="707.0" width="33.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="901.3" y="718.0">[u..</text>
</g>
<g>
<title>__GI_write (3 samples, 1.69%)</title><rect x="898.3" y="691.0" width="19.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="901.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 1.69%)</title><rect x="898.3" y="675.0" width="19.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="901.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 1.69%)</title><rect x="898.3" y="659.0" width="19.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="901.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 1.69%)</title><rect x="898.3" y="643.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="901.3" y="654.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 1.69%)</title><rect x="898.3" y="627.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="901.3" y="638.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 1.69%)</title><rect x="898.3" y="611.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="901.3" y="622.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 1.69%)</title><rect x="898.3" y="595.0" width="19.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="901.3" y="606.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 1.69%)</title><rect x="898.3" y="579.0" width="19.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.3" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 1.12%)</title><rect x="904.9" y="563.0" width="13.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="907.9" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 1.12%)</title><rect x="904.9" y="547.0" width="13.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.9" y="558.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.56%)</title><rect x="904.9" y="531.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="907.9" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.56%)</title><rect x="904.9" y="515.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="907.9" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.56%)</title><rect x="904.9" y="499.0" width="6.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.9" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.56%)</title><rect x="904.9" y="483.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.9" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.56%)</title><rect x="904.9" y="467.0" width="6.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="907.9" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.56%)</title><rect x="904.9" y="451.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.9" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.56%)</title><rect x="904.9" y="435.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.9" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.56%)</title><rect x="911.6" y="531.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="914.6" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.56%)</title><rect x="911.6" y="515.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.6" y="526.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.56%)</title><rect x="911.6" y="499.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.6" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.56%)</title><rect x="911.6" y="483.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.6" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.56%)</title><rect x="911.6" y="467.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.6" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.56%)</title><rect x="911.6" y="451.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.6" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.56%)</title><rect x="911.6" y="435.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.6" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.56%)</title><rect x="911.6" y="419.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.6" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.56%)</title><rect x="911.6" y="403.0" width="6.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.6" y="414.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.56%)</title><rect x="918.2" y="691.0" width="6.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.2" y="702.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.56%)</title><rect x="918.2" y="675.0" width="6.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="921.2" y="686.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.56%)</title><rect x="918.2" y="659.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="921.2" y="670.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.56%)</title><rect x="924.8" y="691.0" width="6.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="927.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.56%)</title><rect x="924.8" y="675.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.56%)</title><rect x="924.8" y="659.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="927.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.56%)</title><rect x="924.8" y="643.0" width="6.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="927.8" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.56%)</title><rect x="924.8" y="627.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="927.8" y="638.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.56%)</title><rect x="931.5" y="707.0" width="6.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="934.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 1.12%)</title><rect x="938.1" y="707.0" width="13.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="941.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 1.12%)</title><rect x="938.1" y="691.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="941.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 1.12%)</title><rect x="938.1" y="675.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="941.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.56%)</title><rect x="944.7" y="659.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="947.7" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.56%)</title><rect x="944.7" y="643.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="947.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.56%)</title><rect x="944.7" y="627.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.56%)</title><rect x="944.7" y="611.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.56%)</title><rect x="944.7" y="595.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.7" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.56%)</title><rect x="944.7" y="579.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.7" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (4 samples, 2.25%)</title><rect x="951.3" y="707.0" width="26.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.3" y="718.0">o..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 8.99%)</title><rect x="977.9" y="707.0" width="106.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.9" y="718.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (16 samples, 8.99%)</title><rect x="977.9" y="691.0" width="106.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="980.9" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.56%)</title><rect x="977.9" y="675.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.56%)</title><rect x="977.9" y="659.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="980.9" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (15 samples, 8.43%)</title><rect x="984.5" y="675.0" width="99.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="987.5" y="686.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.56%)</title><rect x="984.5" y="659.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 7.87%)</title><rect x="991.1" y="659.0" width="92.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.1" y="670.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 7.87%)</title><rect x="991.1" y="643.0" width="92.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.1" y="654.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (13 samples, 7.30%)</title><rect x="991.1" y="627.0" width="86.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="994.1" y="638.0">Java_org_r..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 1.69%)</title><rect x="991.1" y="611.0" width="19.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="994.1" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.56%)</title><rect x="1011.0" y="611.0" width="6.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1014.0" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="1011.0" y="595.0" width="6.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1014.0" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 3.93%)</title><rect x="1017.6" y="611.0" width="46.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1020.6" y="622.0">jni_..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="1030.9" y="595.0" width="6.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1033.9" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 2.25%)</title><rect x="1037.5" y="595.0" width="26.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1040.5" y="606.0">T..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 1.69%)</title><rect x="1044.2" y="579.0" width="19.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.2" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 1.12%)</title><rect x="1044.2" y="563.0" width="13.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1047.2" y="574.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.56%)</title><rect x="1044.2" y="547.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.2" y="558.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.56%)</title><rect x="1050.8" y="547.0" width="6.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1053.8" y="558.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.56%)</title><rect x="1050.8" y="531.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1053.8" y="542.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.56%)</title><rect x="1050.8" y="515.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1053.8" y="526.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.56%)</title><rect x="1050.8" y="499.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1053.8" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="1050.8" y="483.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1053.8" y="494.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.56%)</title><rect x="1050.8" y="467.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1053.8" y="478.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.56%)</title><rect x="1050.8" y="451.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1053.8" y="462.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.56%)</title><rect x="1050.8" y="435.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1053.8" y="446.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.56%)</title><rect x="1050.8" y="419.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1053.8" y="430.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.56%)</title><rect x="1050.8" y="403.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1053.8" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.56%)</title><rect x="1057.4" y="563.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1060.4" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 1.12%)</title><rect x="1064.0" y="611.0" width="13.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1067.0" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.56%)</title><rect x="1064.0" y="595.0" width="6.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1067.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="1070.7" y="595.0" width="6.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1073.7" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.56%)</title><rect x="1077.3" y="627.0" width="6.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1080.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.fromBytes (2 samples, 1.12%)</title><rect x="1083.9" y="755.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 1.12%)</title><rect x="1083.9" y="739.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 1.12%)</title><rect x="1083.9" y="723.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 1.12%)</title><rect x="1083.9" y="707.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 1.12%)</title><rect x="1083.9" y="691.0" width="13.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 1.12%)</title><rect x="1083.9" y="675.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.9" y="686.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.56%)</title><rect x="1090.6" y="659.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1093.6" y="670.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.56%)</title><rect x="1090.6" y="643.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1093.6" y="654.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.56%)</title><rect x="1090.6" y="627.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1093.6" y="638.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="1090.6" y="611.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.6" y="622.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.56%)</title><rect x="1090.6" y="595.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.6" y="606.0"></text>
</g>
<g>
<title>__get_vma_policy (1 samples, 0.56%)</title><rect x="1090.6" y="579.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 1.12%)</title><rect x="1097.2" y="819.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 1.12%)</title><rect x="1097.2" y="803.0" width="13.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 1.12%)</title><rect x="1097.2" y="787.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 1.12%)</title><rect x="1097.2" y="771.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1100.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 1.12%)</title><rect x="1097.2" y="755.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 1.69%)</title><rect x="1110.4" y="819.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.4" y="830.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.56%)</title><rect x="1130.3" y="819.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1133.3" y="830.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.56%)</title><rect x="1130.3" y="803.0" width="6.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1133.3" y="814.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.56%)</title><rect x="1130.3" y="787.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.3" y="798.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.56%)</title><rect x="1130.3" y="771.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1133.3" y="782.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.56%)</title><rect x="1130.3" y="755.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.3" y="766.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.56%)</title><rect x="1130.3" y="739.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.3" y="750.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.56%)</title><rect x="1130.3" y="723.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.3" y="734.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.56%)</title><rect x="1130.3" y="707.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1133.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 3.37%)</title><rect x="1137.0" y="835.0" width="39.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.0" y="846.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 3.37%)</title><rect x="1137.0" y="819.0" width="39.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1140.0" y="830.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.56%)</title><rect x="1137.0" y="803.0" width="6.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1140.0" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.56%)</title><rect x="1137.0" y="787.0" width="6.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1140.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.56%)</title><rect x="1137.0" y="771.0" width="6.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1140.0" y="782.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 2.81%)</title><rect x="1143.6" y="803.0" width="33.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1146.6" y="814.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 2.81%)</title><rect x="1143.6" y="787.0" width="33.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1146.6" y="798.0">en..</text>
</g>
<g>
<title>do_syscall_64 (5 samples, 2.81%)</title><rect x="1143.6" y="771.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.6" y="782.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 2.81%)</title><rect x="1143.6" y="755.0" width="33.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.6" y="766.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 2.81%)</title><rect x="1143.6" y="739.0" width="33.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1146.6" y="750.0">__..</text>
</g>
<g>
<title>sock_recvmsg (5 samples, 2.81%)</title><rect x="1143.6" y="723.0" width="33.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.6" y="734.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 1.69%)</title><rect x="1143.6" y="707.0" width="19.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1146.6" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 1.69%)</title><rect x="1143.6" y="691.0" width="19.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1146.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 1.12%)</title><rect x="1150.2" y="675.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.2" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 1.12%)</title><rect x="1150.2" y="659.0" width="13.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.2" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.56%)</title><rect x="1156.9" y="643.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.9" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.56%)</title><rect x="1156.9" y="627.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.9" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.56%)</title><rect x="1156.9" y="611.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.9" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 1.12%)</title><rect x="1163.5" y="707.0" width="13.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1166.5" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 1.12%)</title><rect x="1163.5" y="691.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.5" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 1.12%)</title><rect x="1163.5" y="675.0" width="13.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.5" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 1.12%)</title><rect x="1163.5" y="659.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1166.5" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 1.12%)</title><rect x="1163.5" y="643.0" width="13.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.5" y="654.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.56%)</title><rect x="1163.5" y="627.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1166.5" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.56%)</title><rect x="1170.1" y="627.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1173.1" y="638.0"></text>
</g>
<g>
<title>start_thread (2 samples, 1.12%)</title><rect x="1176.7" y="883.0" width="13.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1179.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 1.12%)</title><rect x="1176.7" y="867.0" width="13.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1179.7" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 1.12%)</title><rect x="1176.7" y="851.0" width="13.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.7" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 1.12%)</title><rect x="1176.7" y="835.0" width="13.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.7" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 1.12%)</title><rect x="1176.7" y="819.0" width="13.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.7" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 1.12%)</title><rect x="1176.7" y="803.0" width="13.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.7" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 1.12%)</title><rect x="1176.7" y="787.0" width="13.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.7" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 1.12%)</title><rect x="1176.7" y="771.0" width="13.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.7" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.56%)</title><rect x="1176.7" y="755.0" width="6.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.7" y="766.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 0.56%)</title><rect x="1176.7" y="739.0" width="6.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.7" y="750.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.56%)</title><rect x="1176.7" y="723.0" width="6.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.7" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.56%)</title><rect x="1176.7" y="707.0" width="6.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.7" y="718.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.56%)</title><rect x="1183.4" y="755.0" width="6.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.4" y="766.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.56%)</title><rect x="1183.4" y="739.0" width="6.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.4" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.56%)</title><rect x="1183.4" y="723.0" width="6.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.4" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.56%)</title><rect x="1183.4" y="707.0" width="6.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.4" y="718.0"></text>
</g>
</g>
</svg>
