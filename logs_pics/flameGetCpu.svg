<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (51 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (51 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 11.76%)</title><rect x="10.0" y="867.0" width="138.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="878.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 11.76%)</title><rect x="10.0" y="851.0" width="138.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="862.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>[unknown] (3 samples, 5.88%)</title><rect x="56.3" y="835.0" width="69.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="59.3" y="846.0">[unknown]</text>
</g>
<g>
<title>epoll_wait (3 samples, 5.88%)</title><rect x="56.3" y="819.0" width="69.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="59.3" y="830.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 5.88%)</title><rect x="56.3" y="803.0" width="69.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.3" y="814.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 5.88%)</title><rect x="56.3" y="787.0" width="69.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="59.3" y="798.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 5.88%)</title><rect x="56.3" y="771.0" width="69.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.3" y="782.0">__x64_s..</text>
</g>
<g>
<title>do_epoll_wait (3 samples, 5.88%)</title><rect x="56.3" y="755.0" width="69.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="59.3" y="766.0">do_epol..</text>
</g>
<g>
<title>ep_poll (3 samples, 5.88%)</title><rect x="56.3" y="739.0" width="69.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.3" y="750.0">ep_poll</text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 5.88%)</title><rect x="56.3" y="723.0" width="69.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="59.3" y="734.0">schedul..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 5.88%)</title><rect x="56.3" y="707.0" width="69.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.3" y="718.0">schedul..</text>
</g>
<g>
<title>schedule (2 samples, 3.92%)</title><rect x="79.4" y="691.0" width="46.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.4" y="702.0">sche..</text>
</g>
<g>
<title>__sched_text_start (2 samples, 3.92%)</title><rect x="79.4" y="675.0" width="46.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.4" y="686.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (2 samples, 3.92%)</title><rect x="79.4" y="659.0" width="46.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="82.4" y="670.0">fini..</text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 1.96%)</title><rect x="125.7" y="835.0" width="23.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="128.7" y="846.0">e..</text>
</g>
<g>
<title>one/nio/net/Session.process (45 samples, 88.24%)</title><rect x="148.8" y="867.0" width="1041.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.8" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (45 samples, 88.24%)</title><rect x="148.8" y="851.0" width="1041.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.8" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 82.35%)</title><rect x="148.8" y="835.0" width="971.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.8" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 76.47%)</title><rect x="148.8" y="819.0" width="902.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.8" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 74.51%)</title><rect x="172.0" y="803.0" width="879.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.0" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_status.handleRequest (36 samples, 70.59%)</title><rect x="195.1" y="787.0" width="832.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="198.1" y="798.0">RequestHandler2_status.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 70.59%)</title><rect x="195.1" y="771.0" width="832.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.1" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (36 samples, 70.59%)</title><rect x="195.1" y="755.0" width="832.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.1" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 3.92%)</title><rect x="195.1" y="739.0" width="46.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.1" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 1.96%)</title><rect x="218.2" y="723.0" width="23.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.2" y="734.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 1.96%)</title><rect x="218.2" y="707.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.2" y="718.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 1.96%)</title><rect x="218.2" y="691.0" width="23.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.2" y="702.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 1.96%)</title><rect x="218.2" y="675.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.2" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 1.96%)</title><rect x="218.2" y="659.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.2" y="670.0">j..</text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 1.96%)</title><rect x="218.2" y="643.0" width="23.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.2" y="654.0">j..</text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 66.67%)</title><rect x="241.4" y="739.0" width="786.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.4" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 66.67%)</title><rect x="241.4" y="723.0" width="786.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="244.4" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 66.67%)</title><rect x="241.4" y="707.0" width="786.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.4" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (34 samples, 66.67%)</title><rect x="241.4" y="691.0" width="786.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.4" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__libc_send (34 samples, 66.67%)</title><rect x="241.4" y="675.0" width="786.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="244.4" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 64.71%)</title><rect x="264.5" y="659.0" width="763.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.5" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 64.71%)</title><rect x="264.5" y="643.0" width="763.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.5" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 1.96%)</title><rect x="264.5" y="627.0" width="23.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.5" y="638.0">_..</text>
</g>
<g>
<title>__x64_sys_sendto (32 samples, 62.75%)</title><rect x="287.6" y="627.0" width="740.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="290.6" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (32 samples, 62.75%)</title><rect x="287.6" y="611.0" width="740.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="290.6" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (32 samples, 62.75%)</title><rect x="287.6" y="595.0" width="740.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.6" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (32 samples, 62.75%)</title><rect x="287.6" y="579.0" width="740.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.6" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (32 samples, 62.75%)</title><rect x="287.6" y="563.0" width="740.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.6" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 1.96%)</title><rect x="287.6" y="547.0" width="23.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="290.6" y="558.0">r..</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 1.96%)</title><rect x="310.8" y="547.0" width="23.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.8" y="558.0">s..</text>
</g>
<g>
<title>tcp_sendmsg_locked (30 samples, 58.82%)</title><rect x="333.9" y="547.0" width="694.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="336.9" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 1.96%)</title><rect x="357.1" y="531.0" width="23.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="360.1" y="542.0">_..</text>
</g>
<g>
<title>iov_iter_advance (1 samples, 1.96%)</title><rect x="357.1" y="515.0" width="23.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.1" y="526.0">i..</text>
</g>
<g>
<title>tcp_push (28 samples, 54.90%)</title><rect x="380.2" y="531.0" width="647.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.2" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (28 samples, 54.90%)</title><rect x="380.2" y="515.0" width="647.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="383.2" y="526.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (28 samples, 54.90%)</title><rect x="380.2" y="499.0" width="647.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="383.2" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (27 samples, 52.94%)</title><rect x="380.2" y="483.0" width="624.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.2" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 1.96%)</title><rect x="380.2" y="467.0" width="23.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.2" y="478.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (24 samples, 47.06%)</title><rect x="403.3" y="467.0" width="555.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="406.3" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (24 samples, 47.06%)</title><rect x="403.3" y="451.0" width="555.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.3" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (23 samples, 45.10%)</title><rect x="426.5" y="435.0" width="532.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="429.5" y="446.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (3 samples, 5.88%)</title><rect x="426.5" y="419.0" width="69.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="429.5" y="430.0">__ip_lo..</text>
</g>
<g>
<title>nf_hook_slow (3 samples, 5.88%)</title><rect x="426.5" y="403.0" width="69.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="429.5" y="414.0">nf_hook..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (2 samples, 3.92%)</title><rect x="426.5" y="387.0" width="46.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="429.5" y="398.0">ipta..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 1.96%)</title><rect x="449.6" y="371.0" width="23.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="452.6" y="382.0">i..</text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (1 samples, 1.96%)</title><rect x="472.7" y="387.0" width="23.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="475.7" y="398.0">n..</text>
</g>
<g>
<title>ip_output (19 samples, 37.25%)</title><rect x="495.9" y="419.0" width="439.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.9" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (17 samples, 33.33%)</title><rect x="495.9" y="403.0" width="393.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="498.9" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (17 samples, 33.33%)</title><rect x="495.9" y="387.0" width="393.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.9" y="398.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (17 samples, 33.33%)</title><rect x="495.9" y="371.0" width="393.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.9" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 29.41%)</title><rect x="495.9" y="355.0" width="347.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.9" y="366.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (15 samples, 29.41%)</title><rect x="495.9" y="339.0" width="347.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="498.9" y="350.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (15 samples, 29.41%)</title><rect x="495.9" y="323.0" width="347.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="498.9" y="334.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (14 samples, 27.45%)</title><rect x="495.9" y="307.0" width="323.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="498.9" y="318.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (13 samples, 25.49%)</title><rect x="519.0" y="291.0" width="300.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.0" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (13 samples, 25.49%)</title><rect x="519.0" y="275.0" width="300.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.0" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (13 samples, 25.49%)</title><rect x="519.0" y="259.0" width="300.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="522.0" y="270.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (13 samples, 25.49%)</title><rect x="519.0" y="243.0" width="300.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.0" y="254.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 1.96%)</title><rect x="519.0" y="227.0" width="23.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.0" y="238.0">_..</text>
</g>
<g>
<title>ip_rcv (12 samples, 23.53%)</title><rect x="542.2" y="227.0" width="277.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="545.2" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (11 samples, 21.57%)</title><rect x="565.3" y="211.0" width="254.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="568.3" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (11 samples, 21.57%)</title><rect x="565.3" y="195.0" width="254.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="568.3" y="206.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (10 samples, 19.61%)</title><rect x="565.3" y="179.0" width="231.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.3" y="190.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 17.65%)</title><rect x="588.4" y="163.0" width="208.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.4" y="174.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (9 samples, 17.65%)</title><rect x="588.4" y="147.0" width="208.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.4" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 17.65%)</title><rect x="588.4" y="131.0" width="208.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.4" y="142.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 17.65%)</title><rect x="588.4" y="115.0" width="208.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.4" y="126.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (1 samples, 1.96%)</title><rect x="611.6" y="99.0" width="23.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.6" y="110.0">t..</text>
</g>
<g>
<title>tcp_data_ready (6 samples, 11.76%)</title><rect x="634.7" y="99.0" width="138.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="637.7" y="110.0">tcp_data_ready</text>
</g>
<g>
<title>sock_def_readable (6 samples, 11.76%)</title><rect x="634.7" y="83.0" width="138.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="637.7" y="94.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 11.76%)</title><rect x="634.7" y="67.0" width="138.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.7" y="78.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 11.76%)</title><rect x="634.7" y="51.0" width="138.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="637.7" y="62.0">__wake_up_common_..</text>
</g>
<g>
<title>__lock_text_start (6 samples, 11.76%)</title><rect x="634.7" y="35.0" width="138.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="637.7" y="46.0">__lock_text_start</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 1.96%)</title><rect x="773.5" y="99.0" width="23.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="776.5" y="110.0">t..</text>
</g>
<g>
<title>nf_hook_slow (1 samples, 1.96%)</title><rect x="796.7" y="179.0" width="23.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="799.7" y="190.0">n..</text>
</g>
<g>
<title>iptable_filter_hook?[iptable_filter] (1 samples, 1.96%)</title><rect x="796.7" y="163.0" width="23.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="799.7" y="174.0">i..</text>
</g>
<g>
<title>ipt_do_table?[ip_tables] (1 samples, 1.96%)</title><rect x="796.7" y="147.0" width="23.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.7" y="158.0">i..</text>
</g>
<g>
<title>net_rx_action (1 samples, 1.96%)</title><rect x="819.8" y="307.0" width="23.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.8" y="318.0">n..</text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 3.92%)</title><rect x="842.9" y="355.0" width="46.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="845.9" y="366.0">dev_..</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 3.92%)</title><rect x="842.9" y="339.0" width="46.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="845.9" y="350.0">__de..</text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 3.92%)</title><rect x="842.9" y="323.0" width="46.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="845.9" y="334.0">vali..</text>
</g>
<g>
<title>netif_skb_features (2 samples, 3.92%)</title><rect x="842.9" y="307.0" width="46.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="845.9" y="318.0">neti..</text>
</g>
<g>
<title>nf_hook_slow (2 samples, 3.92%)</title><rect x="889.2" y="403.0" width="46.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.2" y="414.0">nf_h..</text>
</g>
<g>
<title>ipv4_confirm?[nf_conntrack] (2 samples, 3.92%)</title><rect x="889.2" y="387.0" width="46.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="892.2" y="398.0">ipv4..</text>
</g>
<g>
<title>nf_ct_deliver_cached_events?[nf_conntrack] (2 samples, 3.92%)</title><rect x="889.2" y="371.0" width="46.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.2" y="382.0">nf_c..</text>
</g>
<g>
<title>nf_hook_slow (1 samples, 1.96%)</title><rect x="935.5" y="419.0" width="23.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="938.5" y="430.0">n..</text>
</g>
<g>
<title>skb_clone (1 samples, 1.96%)</title><rect x="958.6" y="467.0" width="23.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="961.6" y="478.0">s..</text>
</g>
<g>
<title>__copy_skb_header (1 samples, 1.96%)</title><rect x="958.6" y="451.0" width="23.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="961.6" y="462.0">_..</text>
</g>
<g>
<title>tcp_established_options (1 samples, 1.96%)</title><rect x="981.8" y="467.0" width="23.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.8" y="478.0">t..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 1.96%)</title><rect x="1004.9" y="483.0" width="23.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1007.9" y="494.0">b..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 1.96%)</title><rect x="1028.0" y="787.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.0" y="798.0">o..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 1.96%)</title><rect x="1028.0" y="771.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.0" y="782.0">j..</text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 1.96%)</title><rect x="1028.0" y="755.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.0" y="766.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 3.92%)</title><rect x="1051.2" y="819.0" width="46.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1054.2" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 3.92%)</title><rect x="1051.2" y="803.0" width="46.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.2" y="814.0">one/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 1.96%)</title><rect x="1097.5" y="819.0" width="23.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.5" y="830.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 5.88%)</title><rect x="1120.6" y="835.0" width="69.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.6" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 5.88%)</title><rect x="1120.6" y="819.0" width="69.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.6" y="830.0">one/nio..</text>
</g>
<g>
<title>__GI___recv (3 samples, 5.88%)</title><rect x="1120.6" y="803.0" width="69.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1123.6" y="814.0">__GI___..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 5.88%)</title><rect x="1120.6" y="787.0" width="69.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.6" y="798.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (3 samples, 5.88%)</title><rect x="1120.6" y="771.0" width="69.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.6" y="782.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 5.88%)</title><rect x="1120.6" y="755.0" width="69.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1123.6" y="766.0">__x64_s..</text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 5.88%)</title><rect x="1120.6" y="739.0" width="69.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.6" y="750.0">__sys_r..</text>
</g>
<g>
<title>__fdget (1 samples, 1.96%)</title><rect x="1120.6" y="723.0" width="23.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1123.6" y="734.0">_..</text>
</g>
<g>
<title>sock_recvmsg (1 samples, 1.96%)</title><rect x="1143.7" y="723.0" width="23.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1146.7" y="734.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 1.96%)</title><rect x="1143.7" y="707.0" width="23.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1146.7" y="718.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 1.96%)</title><rect x="1143.7" y="691.0" width="23.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1146.7" y="702.0">t..</text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 1.96%)</title><rect x="1143.7" y="675.0" width="23.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1146.7" y="686.0">s..</text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 1.96%)</title><rect x="1143.7" y="659.0" width="23.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1146.7" y="670.0">_..</text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 1.96%)</title><rect x="1143.7" y="643.0" width="23.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.7" y="654.0">s..</text>
</g>
<g>
<title>__check_object_size (1 samples, 1.96%)</title><rect x="1143.7" y="627.0" width="23.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.7" y="638.0">_..</text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 1.96%)</title><rect x="1166.9" y="723.0" width="23.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.9" y="734.0">s..</text>
</g>
<g>
<title>__fdget (1 samples, 1.96%)</title><rect x="1166.9" y="707.0" width="23.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.9" y="718.0">_..</text>
</g>
<g>
<title>__fget_light (1 samples, 1.96%)</title><rect x="1166.9" y="691.0" width="23.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1169.9" y="702.0">_..</text>
</g>
</g>
</svg>
