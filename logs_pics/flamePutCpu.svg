<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (117 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 1.71%)</title><rect x="10.0" y="883.0" width="20.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.85%)</title><rect x="10.0" y="867.0" width="10.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.85%)</title><rect x="10.0" y="851.0" width="10.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.85%)</title><rect x="10.0" y="835.0" width="10.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.85%)</title><rect x="10.0" y="819.0" width="10.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.85%)</title><rect x="10.0" y="803.0" width="10.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.85%)</title><rect x="10.0" y="787.0" width="10.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.85%)</title><rect x="10.0" y="771.0" width="10.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.85%)</title><rect x="10.0" y="755.0" width="10.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.85%)</title><rect x="10.0" y="739.0" width="10.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.85%)</title><rect x="10.0" y="723.0" width="10.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.85%)</title><rect x="10.0" y="707.0" width="10.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.85%)</title><rect x="10.0" y="691.0" width="10.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.85%)</title><rect x="10.0" y="675.0" width="10.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.85%)</title><rect x="10.0" y="659.0" width="10.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13360094960688722059.so (1 samples, 0.85%)</title><rect x="10.0" y="643.0" width="10.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.85%)</title><rect x="10.0" y="627.0" width="10.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.85%)</title><rect x="10.0" y="611.0" width="10.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.85%)</title><rect x="10.0" y="595.0" width="10.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.85%)</title><rect x="10.0" y="579.0" width="10.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.85%)</title><rect x="10.0" y="563.0" width="10.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.85%)</title><rect x="10.0" y="547.0" width="10.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.85%)</title><rect x="10.0" y="531.0" width="10.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.85%)</title><rect x="20.1" y="867.0" width="10.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="23.1" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (115 samples, 98.29%)</title><rect x="30.2" y="883.0" width="1159.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.2" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 8.55%)</title><rect x="30.2" y="867.0" width="100.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.2" y="878.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.85%)</title><rect x="30.2" y="851.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="33.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 7.69%)</title><rect x="40.3" y="851.0" width="90.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="862.0">one/nio/ne..</text>
</g>
<g>
<title>[unknown] (8 samples, 6.84%)</title><rect x="50.3" y="835.0" width="80.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="53.3" y="846.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.85%)</title><rect x="50.3" y="819.0" width="10.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="53.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 5.98%)</title><rect x="60.4" y="819.0" width="70.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="63.4" y="830.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 5.98%)</title><rect x="60.4" y="803.0" width="70.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.4" y="814.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 5.98%)</title><rect x="60.4" y="787.0" width="70.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="63.4" y="798.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 5.13%)</title><rect x="60.4" y="771.0" width="60.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="63.4" y="782.0">__x64_..</text>
</g>
<g>
<title>do_epoll_wait (6 samples, 5.13%)</title><rect x="60.4" y="755.0" width="60.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="63.4" y="766.0">do_epo..</text>
</g>
<g>
<title>ep_poll (5 samples, 4.27%)</title><rect x="60.4" y="739.0" width="50.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.4" y="750.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 1.71%)</title><rect x="60.4" y="723.0" width="20.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="63.4" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.85%)</title><rect x="60.4" y="707.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.4" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.85%)</title><rect x="60.4" y="691.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="63.4" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.85%)</title><rect x="60.4" y="675.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="63.4" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.85%)</title><rect x="70.5" y="707.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="73.5" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 2.56%)</title><rect x="80.6" y="723.0" width="30.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="83.6" y="734.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 2.56%)</title><rect x="80.6" y="707.0" width="30.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="83.6" y="718.0">sc..</text>
</g>
<g>
<title>schedule (3 samples, 2.56%)</title><rect x="80.6" y="691.0" width="30.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="83.6" y="702.0">sc..</text>
</g>
<g>
<title>__sched_text_start (3 samples, 2.56%)</title><rect x="80.6" y="675.0" width="30.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="83.6" y="686.0">__..</text>
</g>
<g>
<title>finish_task_switch (3 samples, 2.56%)</title><rect x="80.6" y="659.0" width="30.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="83.6" y="670.0">fi..</text>
</g>
<g>
<title>fput (1 samples, 0.85%)</title><rect x="110.9" y="739.0" width="10.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.9" y="750.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.85%)</title><rect x="110.9" y="723.0" width="10.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.9" y="734.0"></text>
</g>
<g>
<title>syscall_slow_exit_work (1 samples, 0.85%)</title><rect x="120.9" y="771.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="123.9" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.85%)</title><rect x="120.9" y="755.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (105 samples, 89.74%)</title><rect x="131.0" y="867.0" width="1059.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (105 samples, 89.74%)</title><rect x="131.0" y="851.0" width="1059.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.0" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (97 samples, 82.91%)</title><rect x="131.0" y="835.0" width="978.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.0" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 81.20%)</title><rect x="131.0" y="819.0" width="958.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.0" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (94 samples, 80.34%)</title><rect x="141.1" y="803.0" width="948.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.1" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (93 samples, 79.49%)</title><rect x="141.1" y="787.0" width="938.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="144.1" y="798.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (27 samples, 23.08%)</title><rect x="141.1" y="771.0" width="272.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.1" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.85%)</title><rect x="141.1" y="755.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.85%)</title><rect x="141.1" y="739.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.85%)</title><rect x="141.1" y="723.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.85%)</title><rect x="141.1" y="707.0" width="10.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.85%)</title><rect x="141.1" y="691.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.1" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.85%)</title><rect x="141.1" y="675.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 22.22%)</title><rect x="151.2" y="755.0" width="262.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.2" y="766.0">one/nio/http/HttpSession.writeRespo..</text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 22.22%)</title><rect x="151.2" y="739.0" width="262.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.2" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 22.22%)</title><rect x="151.2" y="723.0" width="262.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.2" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (26 samples, 22.22%)</title><rect x="151.2" y="707.0" width="262.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.2" y="718.0">one/nio/net/Session$ArrayQueueItem...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (26 samples, 22.22%)</title><rect x="151.2" y="691.0" width="262.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.2" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__libc_send (26 samples, 22.22%)</title><rect x="151.2" y="675.0" width="262.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="154.2" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 22.22%)</title><rect x="151.2" y="659.0" width="262.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.2" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (26 samples, 22.22%)</title><rect x="151.2" y="643.0" width="262.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.2" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (26 samples, 22.22%)</title><rect x="151.2" y="627.0" width="262.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.2" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (25 samples, 21.37%)</title><rect x="151.2" y="611.0" width="252.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.2" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (25 samples, 21.37%)</title><rect x="151.2" y="595.0" width="252.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.2" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (24 samples, 20.51%)</title><rect x="151.2" y="579.0" width="242.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.2" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (24 samples, 20.51%)</title><rect x="151.2" y="563.0" width="242.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.2" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (24 samples, 20.51%)</title><rect x="151.2" y="547.0" width="242.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.2" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.85%)</title><rect x="151.2" y="531.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.2" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.85%)</title><rect x="151.2" y="515.0" width="10.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.2" y="526.0"></text>
</g>
<g>
<title>tcp_push (21 samples, 17.95%)</title><rect x="161.3" y="531.0" width="211.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.3" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (21 samples, 17.95%)</title><rect x="161.3" y="515.0" width="211.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="164.3" y="526.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (21 samples, 17.95%)</title><rect x="161.3" y="499.0" width="211.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="164.3" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (21 samples, 17.95%)</title><rect x="161.3" y="483.0" width="211.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="164.3" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 1.71%)</title><rect x="161.3" y="467.0" width="20.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="164.3" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (19 samples, 16.24%)</title><rect x="181.5" y="467.0" width="191.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.5" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (19 samples, 16.24%)</title><rect x="181.5" y="451.0" width="191.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.5" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (18 samples, 15.38%)</title><rect x="181.5" y="435.0" width="181.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="184.5" y="446.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 1.71%)</title><rect x="181.5" y="419.0" width="20.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="184.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 1.71%)</title><rect x="181.5" y="403.0" width="20.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.5" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local?[nf_conntrack] (2 samples, 1.71%)</title><rect x="181.5" y="387.0" width="20.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="184.5" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in?[nf_conntrack] (2 samples, 1.71%)</title><rect x="181.5" y="371.0" width="20.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="184.5" y="382.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get?[nf_conntrack] (1 samples, 0.85%)</title><rect x="181.5" y="355.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="184.5" y="366.0"></text>
</g>
<g>
<title>get_l4proto?[nf_conntrack] (1 samples, 0.85%)</title><rect x="191.5" y="355.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="194.5" y="366.0"></text>
</g>
<g>
<title>ip_output (16 samples, 13.68%)</title><rect x="201.6" y="419.0" width="161.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="204.6" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (16 samples, 13.68%)</title><rect x="201.6" y="403.0" width="161.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.6" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (16 samples, 13.68%)</title><rect x="201.6" y="387.0" width="161.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="204.6" y="398.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (16 samples, 13.68%)</title><rect x="201.6" y="371.0" width="161.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.6" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (14 samples, 11.97%)</title><rect x="211.7" y="355.0" width="141.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.7" y="366.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (14 samples, 11.97%)</title><rect x="211.7" y="339.0" width="141.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.7" y="350.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (13 samples, 11.11%)</title><rect x="221.8" y="323.0" width="131.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="224.8" y="334.0">do_softirq_own_s..</text>
</g>
<g>
<title>__softirqentry_text_start (13 samples, 11.11%)</title><rect x="221.8" y="307.0" width="131.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="224.8" y="318.0">__softirqentry_t..</text>
</g>
<g>
<title>net_rx_action (13 samples, 11.11%)</title><rect x="221.8" y="291.0" width="131.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="224.8" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (12 samples, 10.26%)</title><rect x="231.9" y="275.0" width="121.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.9" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 9.40%)</title><rect x="242.0" y="259.0" width="110.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="245.0" y="270.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 9.40%)</title><rect x="242.0" y="243.0" width="110.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.0" y="254.0">__netif_recei..</text>
</g>
<g>
<title>ip_rcv (11 samples, 9.40%)</title><rect x="242.0" y="227.0" width="110.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.0" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (11 samples, 9.40%)</title><rect x="242.0" y="211.0" width="110.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="245.0" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (11 samples, 9.40%)</title><rect x="242.0" y="195.0" width="110.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.0" y="206.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (11 samples, 9.40%)</title><rect x="242.0" y="179.0" width="110.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.0" y="190.0">ip_local_deli..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (11 samples, 9.40%)</title><rect x="242.0" y="163.0" width="110.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="245.0" y="174.0">ip_protocol_d..</text>
</g>
<g>
<title>tcp_v4_rcv (11 samples, 9.40%)</title><rect x="242.0" y="147.0" width="110.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="245.0" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 9.40%)</title><rect x="242.0" y="131.0" width="110.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.0" y="142.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 9.40%)</title><rect x="242.0" y="115.0" width="110.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="245.0" y="126.0">tcp_rcv_estab..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.85%)</title><rect x="242.0" y="99.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (8 samples, 6.84%)</title><rect x="252.1" y="99.0" width="80.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="255.1" y="110.0">tcp_data_..</text>
</g>
<g>
<title>sock_def_readable (8 samples, 6.84%)</title><rect x="252.1" y="83.0" width="80.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.1" y="94.0">sock_def_..</text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 6.84%)</title><rect x="252.1" y="67.0" width="80.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="255.1" y="78.0">__wake_up..</text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 6.84%)</title><rect x="252.1" y="51.0" width="80.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="255.1" y="62.0">__wake_up..</text>
</g>
<g>
<title>__lock_text_start (8 samples, 6.84%)</title><rect x="252.1" y="35.0" width="80.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="255.1" y="46.0">__lock_te..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.85%)</title><rect x="332.7" y="99.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="335.7" y="110.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.85%)</title><rect x="342.8" y="99.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="345.8" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.85%)</title><rect x="352.9" y="355.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.9" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.85%)</title><rect x="352.9" y="339.0" width="10.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="355.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.85%)</title><rect x="352.9" y="323.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="355.9" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.85%)</title><rect x="352.9" y="307.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="355.9" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.85%)</title><rect x="352.9" y="291.0" width="10.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="355.9" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.85%)</title><rect x="352.9" y="275.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.9" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.85%)</title><rect x="352.9" y="259.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="355.9" y="270.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.85%)</title><rect x="363.0" y="435.0" width="10.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="366.0" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 1.71%)</title><rect x="373.1" y="531.0" width="20.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.1" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.85%)</title><rect x="373.1" y="515.0" width="10.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="376.1" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.85%)</title><rect x="383.2" y="515.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="386.2" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.85%)</title><rect x="383.2" y="499.0" width="10.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.2" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.85%)</title><rect x="393.2" y="579.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.2" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.85%)</title><rect x="393.2" y="563.0" width="10.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="396.2" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.85%)</title><rect x="393.2" y="547.0" width="10.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="396.2" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.85%)</title><rect x="393.2" y="531.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.2" y="542.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.85%)</title><rect x="393.2" y="515.0" width="10.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="396.2" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.85%)</title><rect x="403.3" y="611.0" width="10.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="406.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/stasyanoi/CustomServer.put (66 samples, 56.41%)</title><rect x="413.4" y="771.0" width="665.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.4" y="782.0">ru/mail/polis/service/stasyanoi/CustomServer.put</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/DAOImpl.upsert (66 samples, 56.41%)</title><rect x="413.4" y="755.0" width="665.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.4" y="766.0">ru/mail/polis/dao/stasyanoi/DAOImpl.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (66 samples, 56.41%)</title><rect x="413.4" y="739.0" width="665.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.4" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (66 samples, 56.41%)</title><rect x="413.4" y="723.0" width="665.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.4" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (44 samples, 37.61%)</title><rect x="413.4" y="707.0" width="443.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="416.4" y="718.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>__malloc (1 samples, 0.85%)</title><rect x="423.5" y="691.0" width="10.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="426.5" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (42 samples, 35.90%)</title><rect x="433.6" y="691.0" width="423.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="436.6" y="702.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteO..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.85%)</title><rect x="433.6" y="675.0" width="10.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="436.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 34.19%)</title><rect x="443.7" y="675.0" width="403.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="446.7" y="686.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 34.19%)</title><rect x="443.7" y="659.0" width="403.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="446.7" y="670.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 32.48%)</title><rect x="443.7" y="643.0" width="383.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="446.7" y="654.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocks..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.85%)</title><rect x="443.7" y="627.0" width="10.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="446.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (36 samples, 30.77%)</title><rect x="453.8" y="627.0" width="363.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="456.8" y="638.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions cons..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.85%)</title><rect x="453.8" y="611.0" width="10.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="456.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (35 samples, 29.91%)</title><rect x="463.8" y="611.0" width="353.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="466.8" y="622.0">rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.85%)</title><rect x="473.9" y="595.0" width="10.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="476.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (6 samples, 5.13%)</title><rect x="484.0" y="595.0" width="60.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="487.0" y="606.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (6 samples, 5.13%)</title><rect x="484.0" y="579.0" width="60.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="487.0" y="590.0">rocksd..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (6 samples, 5.13%)</title><rect x="484.0" y="563.0" width="60.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="487.0" y="574.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (4 samples, 3.42%)</title><rect x="494.1" y="547.0" width="40.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="497.1" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.85%)</title><rect x="494.1" y="531.0" width="10.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="497.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 2.56%)</title><rect x="504.2" y="531.0" width="30.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.2" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.85%)</title><rect x="534.4" y="547.0" width="10.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="537.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.85%)</title><rect x="534.4" y="531.0" width="10.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="537.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (26 samples, 22.22%)</title><rect x="544.5" y="595.0" width="262.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="547.5" y="606.0">rocksdb::WriteBatchInternal::Insert..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (26 samples, 22.22%)</title><rect x="544.5" y="579.0" width="262.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="547.5" y="590.0">rocksdb::WriteBatch::Iterate(rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (25 samples, 21.37%)</title><rect x="554.6" y="563.0" width="252.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="557.6" y="574.0">rocksdb::WriteBatchInternal::Itera..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (25 samples, 21.37%)</title><rect x="554.6" y="547.0" width="252.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="557.6" y="558.0">rocksdb::MemTableInserter::PutCF(u..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.85%)</title><rect x="554.6" y="531.0" width="10.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="557.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (24 samples, 20.51%)</title><rect x="564.7" y="531.0" width="242.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="567.7" y="542.0">rocksdb::MemTableInserter::PutCF..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (22 samples, 18.80%)</title><rect x="574.8" y="515.0" width="221.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="577.8" y="526.0">rocksdb::MemTable::Add(unsign..</text>
</g>
<g>
<title>/tmp/librocksdbjni13360094960688722059.so (3 samples, 2.56%)</title><rect x="574.8" y="499.0" width="30.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="577.8" y="510.0">/t..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (19 samples, 16.24%)</title><rect x="605.0" y="499.0" width="191.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="608.0" y="510.0">bool rocksdb::InlineSkipL..</text>
</g>
<g>
<title>/tmp/librocksdbjni13360094960688722059.so (14 samples, 11.97%)</title><rect x="625.2" y="483.0" width="141.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="628.2" y="494.0">/tmp/librocksdbjni..</text>
</g>
<g>
<title>/tmp/librocksdbjni13360094960688722059.so (5 samples, 4.27%)</title><rect x="645.4" y="467.0" width="50.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="648.4" y="478.0">/tmp/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 4.27%)</title><rect x="645.4" y="451.0" width="50.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="648.4" y="462.0">rocks..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 4.27%)</title><rect x="645.4" y="435.0" width="50.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="648.4" y="446.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.85%)</title><rect x="645.4" y="419.0" width="10.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.4" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.85%)</title><rect x="645.4" y="403.0" width="10.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="648.4" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.85%)</title><rect x="645.4" y="387.0" width="10.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="648.4" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.85%)</title><rect x="645.4" y="371.0" width="10.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.4" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.85%)</title><rect x="645.4" y="355.0" width="10.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="648.4" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 2.56%)</title><rect x="655.5" y="419.0" width="30.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="658.5" y="430.0">JN..</text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 2.56%)</title><rect x="655.5" y="403.0" width="30.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="658.5" y="414.0">jn..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.85%)</title><rect x="655.5" y="387.0" width="10.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="658.5" y="398.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.85%)</title><rect x="665.6" y="387.0" width="10.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="668.6" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.85%)</title><rect x="675.6" y="387.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="678.6" y="398.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.85%)</title><rect x="685.7" y="419.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="688.7" y="430.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.85%)</title><rect x="695.8" y="467.0" width="10.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="698.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 5.13%)</title><rect x="705.9" y="467.0" width="60.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="708.9" y="478.0">rocksd..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.85%)</title><rect x="705.9" y="451.0" width="10.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="708.9" y="462.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.85%)</title><rect x="716.0" y="451.0" width="10.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="719.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 3.42%)</title><rect x="726.1" y="451.0" width="40.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="729.1" y="462.0">roc..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 1.71%)</title><rect x="726.1" y="435.0" width="20.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="729.1" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 1.71%)</title><rect x="726.1" y="419.0" width="20.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="729.1" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.85%)</title><rect x="736.2" y="403.0" width="10.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="739.2" y="414.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.85%)</title><rect x="746.2" y="435.0" width="10.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="749.2" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.85%)</title><rect x="746.2" y="419.0" width="10.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="749.2" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.85%)</title><rect x="746.2" y="403.0" width="10.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="749.2" y="414.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.85%)</title><rect x="746.2" y="387.0" width="10.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="749.2" y="398.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.85%)</title><rect x="756.3" y="435.0" width="10.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="759.3" y="446.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.85%)</title><rect x="756.3" y="419.0" width="10.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.3" y="430.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.85%)</title><rect x="766.4" y="483.0" width="10.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="769.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 1.71%)</title><rect x="776.5" y="483.0" width="20.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="779.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 1.71%)</title><rect x="776.5" y="467.0" width="20.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="779.5" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.85%)</title><rect x="776.5" y="451.0" width="10.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="779.5" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.85%)</title><rect x="776.5" y="435.0" width="10.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="779.5" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.85%)</title><rect x="776.5" y="419.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="779.5" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.85%)</title><rect x="786.6" y="451.0" width="10.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="789.6" y="462.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.85%)</title><rect x="786.6" y="435.0" width="10.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="789.6" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.85%)</title><rect x="796.7" y="515.0" width="10.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="799.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.85%)</title><rect x="806.8" y="595.0" width="10.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="809.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.85%)</title><rect x="816.8" y="627.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="819.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, unsigned int) (1 samples, 0.85%)</title><rect x="816.8" y="611.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="819.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.85%)</title><rect x="826.9" y="643.0" width="10.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="829.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.85%)</title><rect x="837.0" y="643.0" width="10.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="840.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.85%)</title><rect x="847.1" y="675.0" width="10.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="850.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 9.40%)</title><rect x="857.2" y="707.0" width="110.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="860.2" y="718.0">[unknown]</text>
</g>
<g>
<title>__GI_write (11 samples, 9.40%)</title><rect x="857.2" y="691.0" width="110.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="860.2" y="702.0">__GI_write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 9.40%)</title><rect x="857.2" y="675.0" width="110.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.2" y="686.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 9.40%)</title><rect x="857.2" y="659.0" width="110.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="860.2" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (10 samples, 8.55%)</title><rect x="867.3" y="643.0" width="100.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.3" y="654.0">__x64_sys_wr..</text>
</g>
<g>
<title>ksys_write (10 samples, 8.55%)</title><rect x="867.3" y="627.0" width="100.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="870.3" y="638.0">ksys_write</text>
</g>
<g>
<title>fput (1 samples, 0.85%)</title><rect x="867.3" y="611.0" width="10.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="870.3" y="622.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.85%)</title><rect x="867.3" y="595.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.3" y="606.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 7.69%)</title><rect x="877.4" y="611.0" width="90.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.4" y="622.0">vfs_write</text>
</g>
<g>
<title>__vfs_write (8 samples, 6.84%)</title><rect x="877.4" y="595.0" width="80.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="880.4" y="606.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (8 samples, 6.84%)</title><rect x="877.4" y="579.0" width="80.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.4" y="590.0">new_sync_..</text>
</g>
<g>
<title>ext4_file_write_iter (8 samples, 6.84%)</title><rect x="877.4" y="563.0" width="80.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="880.4" y="574.0">ext4_file..</text>
</g>
<g>
<title>__generic_file_write_iter (8 samples, 6.84%)</title><rect x="877.4" y="547.0" width="80.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="880.4" y="558.0">__generic..</text>
</g>
<g>
<title>file_update_time (1 samples, 0.85%)</title><rect x="877.4" y="531.0" width="10.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="880.4" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.85%)</title><rect x="877.4" y="515.0" width="10.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="880.4" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.85%)</title><rect x="877.4" y="499.0" width="10.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="880.4" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.85%)</title><rect x="877.4" y="483.0" width="10.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.85%)</title><rect x="877.4" y="467.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="880.4" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.85%)</title><rect x="877.4" y="451.0" width="10.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.4" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.85%)</title><rect x="877.4" y="435.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="880.4" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.85%)</title><rect x="877.4" y="419.0" width="10.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.4" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.85%)</title><rect x="877.4" y="403.0" width="10.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="880.4" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.85%)</title><rect x="877.4" y="387.0" width="10.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.4" y="398.0"></text>
</g>
<g>
<title>generic_perform_write (7 samples, 5.98%)</title><rect x="887.4" y="531.0" width="70.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="890.4" y="542.0">generic_..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.85%)</title><rect x="897.5" y="515.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="900.5" y="526.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.85%)</title><rect x="897.5" y="499.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="900.5" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (5 samples, 4.27%)</title><rect x="907.6" y="515.0" width="50.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="910.6" y="526.0">ext4_..</text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.85%)</title><rect x="907.6" y="499.0" width="10.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="910.6" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.85%)</title><rect x="907.6" y="483.0" width="10.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.6" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.85%)</title><rect x="907.6" y="467.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="910.6" y="478.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 3.42%)</title><rect x="917.7" y="499.0" width="40.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="920.7" y="510.0">gen..</text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 2.56%)</title><rect x="917.7" y="483.0" width="30.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.7" y="494.0">__..</text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 2.56%)</title><rect x="917.7" y="467.0" width="30.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="920.7" y="478.0">ex..</text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 2.56%)</title><rect x="917.7" y="451.0" width="30.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="920.7" y="462.0">ex..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 1.71%)</title><rect x="917.7" y="435.0" width="20.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.7" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 1.71%)</title><rect x="917.7" y="419.0" width="20.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="920.7" y="430.0"></text>
</g>
<g>
<title>from_kprojid (1 samples, 0.85%)</title><rect x="927.8" y="403.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.8" y="414.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.85%)</title><rect x="927.8" y="387.0" width="10.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.8" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.85%)</title><rect x="937.9" y="435.0" width="10.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="940.9" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.85%)</title><rect x="937.9" y="419.0" width="10.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.9" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.85%)</title><rect x="937.9" y="403.0" width="10.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="940.9" y="414.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.85%)</title><rect x="937.9" y="387.0" width="10.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.9" y="398.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.85%)</title><rect x="947.9" y="483.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="950.9" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.85%)</title><rect x="958.0" y="595.0" width="10.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="961.0" y="606.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.85%)</title><rect x="958.0" y="579.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="961.0" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.85%)</title><rect x="958.0" y="563.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.0" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.85%)</title><rect x="958.0" y="547.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="961.0" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.85%)</title><rect x="958.0" y="531.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (11 samples, 9.40%)</title><rect x="968.1" y="707.0" width="111.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.1" y="718.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/stasyanoi/ComparatorImpl.compare (11 samples, 9.40%)</title><rect x="968.1" y="691.0" width="111.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.1" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.85%)</title><rect x="968.1" y="675.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.85%)</title><rect x="968.1" y="659.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (10 samples, 8.55%)</title><rect x="978.2" y="675.0" width="100.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.2" y="686.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (2 samples, 1.71%)</title><rect x="978.2" y="659.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 6.84%)</title><rect x="998.4" y="659.0" width="80.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.4" y="670.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 6.84%)</title><rect x="998.4" y="643.0" width="80.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.4" y="654.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (8 samples, 6.84%)</title><rect x="998.4" y="627.0" width="80.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1001.4" y="638.0">Java_org_..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.85%)</title><rect x="998.4" y="611.0" width="10.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1001.4" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.85%)</title><rect x="998.4" y="595.0" width="10.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1001.4" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 4.27%)</title><rect x="1008.5" y="611.0" width="50.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1011.5" y="622.0">jni_N..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.85%)</title><rect x="1008.5" y="595.0" width="10.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.5" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 3.42%)</title><rect x="1018.5" y="595.0" width="40.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1021.5" y="606.0">Typ..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 1.71%)</title><rect x="1038.7" y="579.0" width="20.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1041.7" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.85%)</title><rect x="1038.7" y="563.0" width="10.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1041.7" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.85%)</title><rect x="1048.8" y="563.0" width="10.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.8" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.85%)</title><rect x="1058.9" y="611.0" width="10.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1061.9" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.85%)</title><rect x="1058.9" y="595.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.9" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.85%)</title><rect x="1069.0" y="611.0" width="10.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1072.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.85%)</title><rect x="1079.1" y="787.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.85%)</title><rect x="1079.1" y="771.0" width="10.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.85%)</title><rect x="1079.1" y="755.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1082.1" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.85%)</title><rect x="1079.1" y="739.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1082.1" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.85%)</title><rect x="1079.1" y="723.0" width="10.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1082.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.85%)</title><rect x="1089.1" y="819.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.85%)</title><rect x="1089.1" y="803.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.85%)</title><rect x="1089.1" y="787.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.85%)</title><rect x="1099.2" y="819.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.85%)</title><rect x="1099.2" y="803.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.2" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.85%)</title><rect x="1099.2" y="787.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.2" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.85%)</title><rect x="1099.2" y="771.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.85%)</title><rect x="1099.2" y="755.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.2" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.85%)</title><rect x="1099.2" y="739.0" width="10.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 6.84%)</title><rect x="1109.3" y="835.0" width="80.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.3" y="846.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 5.98%)</title><rect x="1119.4" y="819.0" width="70.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1122.4" y="830.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 1.71%)</title><rect x="1119.4" y="803.0" width="20.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1122.4" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.85%)</title><rect x="1119.4" y="787.0" width="10.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.4" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.85%)</title><rect x="1129.5" y="787.0" width="10.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1132.5" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.85%)</title><rect x="1129.5" y="771.0" width="10.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.5" y="782.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 4.27%)</title><rect x="1139.6" y="803.0" width="50.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1142.6" y="814.0">__GI_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 4.27%)</title><rect x="1139.6" y="787.0" width="50.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1142.6" y="798.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (5 samples, 4.27%)</title><rect x="1139.6" y="771.0" width="50.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.6" y="782.0">do_sy..</text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.85%)</title><rect x="1139.6" y="755.0" width="10.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1142.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 3.42%)</title><rect x="1149.7" y="755.0" width="40.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.7" y="766.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 3.42%)</title><rect x="1149.7" y="739.0" width="40.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.7" y="750.0">__s..</text>
</g>
<g>
<title>sock_recvmsg (4 samples, 3.42%)</title><rect x="1149.7" y="723.0" width="40.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1152.7" y="734.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 1.71%)</title><rect x="1149.7" y="707.0" width="20.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1152.7" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 1.71%)</title><rect x="1149.7" y="691.0" width="20.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1152.7" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 1.71%)</title><rect x="1149.7" y="675.0" width="20.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1152.7" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 1.71%)</title><rect x="1149.7" y="659.0" width="20.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.7" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 1.71%)</title><rect x="1149.7" y="643.0" width="20.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1152.7" y="654.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.85%)</title><rect x="1149.7" y="627.0" width="10.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1152.7" y="638.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.85%)</title><rect x="1159.7" y="627.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.7" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 1.71%)</title><rect x="1169.8" y="707.0" width="20.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1172.8" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 1.71%)</title><rect x="1169.8" y="691.0" width="20.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1172.8" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 1.71%)</title><rect x="1169.8" y="675.0" width="20.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1172.8" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 1.71%)</title><rect x="1169.8" y="659.0" width="20.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1172.8" y="670.0"></text>
</g>
</g>
</svg>
